{"version":3,"file":"ngx-doc-viewer.mjs","sources":["../../../../packages/ngx-doc-viewer/src/lib/document-viewer.component.ts","../../../../packages/ngx-doc-viewer/src/lib/document-viewer.component.html","../../../../packages/ngx-doc-viewer/src/lib/document-viewer.module.ts","../../../../packages/ngx-doc-viewer/src/ngx-doc-viewer.ts"],"sourcesContent":["import {\r\n  Component,\r\n  Input,\r\n  NgZone,\r\n  OnDestroy,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  Output,\r\n  ViewChildren,\r\n  QueryList,\r\n  ElementRef,\r\n  AfterViewInit,\r\n} from '@angular/core';\r\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\r\nimport { EventEmitter } from '@angular/core';\r\n// eslint-disable-next-line @nrwl/nx/enforce-module-boundaries\r\nimport {\r\n  getDocxToHtml,\r\n  getViewerDetails,\r\n  googleCheckSubscription,\r\n  iframeIsLoaded,\r\n  isLocalFile,\r\n  replaceLocalUrl,\r\n  IFrameReloader,\r\n} from 'docviewhelper';\r\n\r\n// eslint-disable-next-line @typescript-eslint/naming-convention\r\nexport type viewerType = 'google' | 'office' | 'mammoth' | 'pdf' | 'url';\r\n@Component({\r\n  // eslint-disable-next-line @angular-eslint/component-selector\r\n  selector: 'ngx-doc-viewer',\r\n  templateUrl: 'document-viewer.component.html',\r\n  styles: [\r\n    `\r\n      :host {\r\n        display: block;\r\n      }\r\n      .container {\r\n        width: 100%;\r\n        height: 100%;\r\n        position: relative;\r\n      }\r\n      .overlay-popout-google {\r\n        width: 40px;\r\n        height: 40px;\r\n        right: 26px;\r\n        top: 11.5px;\r\n        position: absolute;\r\n        z-index: 1000;\r\n      }\r\n      .overlay-popout-office {\r\n        width: 100px;\r\n        height: 20px;\r\n        right: 0;\r\n        bottom: 0;\r\n        position: absolute;\r\n        z-index: 1000;\r\n      }\r\n      .overlay-full {\r\n        width: 100%;\r\n        height: 100%;\r\n        right: 0;\r\n        top: 0;\r\n        position: absolute;\r\n        z-index: 1000;\r\n      }\r\n      iframe {\r\n        width: 100%;\r\n        height: 100%;\r\n      }\r\n    `,\r\n  ],\r\n})\r\nexport class NgxDocViewerComponent\r\n  implements OnChanges, OnDestroy, AfterViewInit\r\n{\r\n  @Output() loaded: EventEmitter<void> = new EventEmitter();\r\n  @Input() url = '';\r\n  @Input() queryParams = '';\r\n  @Input() viewerUrl = '';\r\n  @Input() googleCheckInterval = 3000;\r\n  @Input() googleMaxChecks = 5;\r\n  @Input() disableContent: 'none' | 'all' | 'popout' | 'popout-hide' = 'none';\r\n  @Input() googleCheckContentLoaded = true;\r\n  @Input() viewer: viewerType = 'google';\r\n  @Input() overrideLocalhost = '';\r\n  @ViewChildren('iframe') iframes?: QueryList<ElementRef> = undefined;\r\n\r\n  public fullUrl?: SafeResourceUrl = undefined;\r\n  public externalViewer = false;\r\n  public docHtml = '';\r\n  public configuredViewer: viewerType = 'google';\r\n  private checkIFrameSubscription?: IFrameReloader = undefined;\r\n  private shouldCheckIframe = false;\r\n\r\n  constructor(private domSanitizer: DomSanitizer, private ngZone: NgZone) {}\r\n\r\n  ngAfterViewInit(): void {\r\n    if (this.shouldCheckIframe) {\r\n      const iframe = this.iframes?.first?.nativeElement as HTMLIFrameElement;\r\n      if (iframe) {\r\n        this.shouldCheckIframe = false;\r\n        this.reloadIframe(iframe);\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.checkIFrameSubscription) {\r\n      this.checkIFrameSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  async ngOnChanges(changes: SimpleChanges): Promise<void> {\r\n    if (\r\n      changes &&\r\n      changes['viewer'] &&\r\n      (changes['viewer'].isFirstChange ||\r\n        changes['viewer'].currentValue !== changes['viewer'].previousValue)\r\n    ) {\r\n      if (\r\n        this.viewer !== 'google' &&\r\n        this.viewer !== 'office' &&\r\n        this.viewer !== 'mammoth' &&\r\n        this.viewer !== 'pdf' &&\r\n        this.viewer !== 'url'\r\n      ) {\r\n        console.error(\r\n          `Unsupported viewer: '${this.viewer}'. Supported viewers: google, office, mammoth and pdf`\r\n        );\r\n      }\r\n      this.configuredViewer = this.viewer;\r\n    }\r\n\r\n    if (\r\n      (changes['url'] &&\r\n        changes['url'].currentValue !== changes['url'].previousValue) ||\r\n      (changes['viewer'] &&\r\n        changes['viewer'].currentValue !== changes['viewer'].previousValue) ||\r\n      (changes['viewerUrl'] &&\r\n        changes['viewerUrl'].currentValue !==\r\n          changes['viewerUrl'].previousValue)\r\n    ) {\r\n      let viewerDetails = getViewerDetails(\r\n        this.url,\r\n        this.configuredViewer,\r\n        this.queryParams,\r\n        this.viewerUrl\r\n      );\r\n      this.externalViewer = viewerDetails.externalViewer;\r\n      if (\r\n        viewerDetails.externalViewer &&\r\n        this.overrideLocalhost &&\r\n        isLocalFile(this.url)\r\n      ) {\r\n        const newUrl = replaceLocalUrl(this.url, this.overrideLocalhost);\r\n        viewerDetails = getViewerDetails(\r\n          newUrl,\r\n          this.configuredViewer,\r\n          this.queryParams,\r\n          this.viewerUrl\r\n        );\r\n      }\r\n      this.docHtml = '';\r\n      if (this.checkIFrameSubscription) {\r\n        this.checkIFrameSubscription.unsubscribe();\r\n      }\r\n      if (!this.url) {\r\n        this.fullUrl = undefined;\r\n      } else if (\r\n        viewerDetails.externalViewer ||\r\n        this.configuredViewer === 'url' ||\r\n        this.configuredViewer === 'pdf'\r\n      ) {\r\n        this.fullUrl = this.domSanitizer.bypassSecurityTrustResourceUrl(\r\n          viewerDetails.url\r\n        );\r\n        // see:\r\n        // https://stackoverflow.com/questions/40414039/google-docs-viewer-returning-204-responses-no-longer-working-alternatives\r\n        // hack to reload iframe if it's not loaded.\r\n        // would maybe be better to use view.officeapps.live.com but seems not to work with sas token.\r\n        if (\r\n          this.configuredViewer === 'google' &&\r\n          this.googleCheckContentLoaded\r\n        ) {\r\n          this.ngZone.runOutsideAngular(() => {\r\n            // if it's not loaded after the googleIntervalCheck, then open load again.\r\n            const iframe = this.iframes?.first\r\n              ?.nativeElement as HTMLIFrameElement;\r\n            if (iframe) {\r\n              this.reloadIframe(iframe);\r\n            } else {\r\n              this.shouldCheckIframe = true;\r\n            }\r\n          });\r\n        }\r\n      } else if (this.configuredViewer === 'mammoth') {\r\n        this.docHtml = await getDocxToHtml(this.url);\r\n      }\r\n    }\r\n  }\r\n\r\n  private reloadIframe(iframe: HTMLIFrameElement) {\r\n    this.checkIFrameSubscription = googleCheckSubscription();\r\n    this.checkIFrameSubscription.subscribe(\r\n      iframe,\r\n      this.googleCheckInterval,\r\n      this.googleMaxChecks\r\n    );\r\n  }\r\n\r\n  iframeLoaded() {\r\n    const iframe = this.iframes?.first?.nativeElement as HTMLIFrameElement;\r\n    if (iframe && iframeIsLoaded(iframe)) {\r\n      this.loaded.emit(undefined);\r\n      if (this.checkIFrameSubscription) {\r\n        this.checkIFrameSubscription.unsubscribe();\r\n      }\r\n    }\r\n  }\r\n}\r\n","<ng-container *ngIf=\"!externalViewer\">\r\n  <div *ngIf=\"configuredViewer !== 'pdf'\" [innerHtml]=\"docHtml\"></div>\r\n  <object\r\n    *ngIf=\"fullUrl && configuredViewer === 'pdf'\"\r\n    [data]=\"fullUrl\"\r\n    type=\"application/pdf\"\r\n    width=\"100%\"\r\n    height=\"100%\"\r\n  >\r\n    <p>\r\n      Your browser does not support PDFs.\r\n      <a [href]=\"fullUrl\">Download the PDF</a>.\r\n    </p>\r\n  </object>\r\n</ng-container>\r\n<ng-container *ngIf=\"externalViewer\">\r\n  <iframe\r\n    (load)=\"iframeLoaded()\"\r\n    *ngIf=\"fullUrl && disableContent === 'none'\"\r\n    #iframe\r\n    id=\"iframe-doc-viewer\"\r\n    frameBorder=\"0\"\r\n    [src]=\"fullUrl\"\r\n  ></iframe>\r\n  <div class=\"container\" *ngIf=\"disableContent !== 'none'\">\r\n    <div\r\n      [class.overlay-full]=\"disableContent === 'all'\"\r\n      [class.overlay-popout-google]=\"\r\n        configuredViewer === 'google' &&\r\n        (disableContent === 'popout' || disableContent === 'popout-hide')\r\n      \"\r\n      [class.overlay-popout-office]=\"\r\n        configuredViewer === 'office' &&\r\n        (disableContent === 'popout' || disableContent === 'popout-hide')\r\n      \"\r\n      [style.background-color]=\"\r\n        disableContent === 'popout-hide' ? '#fff' : 'transparent'\r\n      \"\r\n    ></div>\r\n    <iframe\r\n      (load)=\"iframeLoaded()\"\r\n      *ngIf=\"fullUrl\"\r\n      #iframe\r\n      id=\"iframe\"\r\n      frameBorder=\"0\"\r\n      [src]=\"fullUrl\"\r\n    ></iframe>\r\n  </div>\r\n</ng-container>\r\n","import { NgxDocViewerComponent } from './document-viewer.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [NgxDocViewerComponent],\r\n  exports: [NgxDocViewerComponent],\r\n})\r\nexport class NgxDocViewerModule {}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}