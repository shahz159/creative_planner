/**
 * @fileoverview added by tsickle
 * Generated from: lib/config.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
import * as ɵngcc0 from '@angular/core';
export class NgSelectConfig {
    constructor() {
        this.notFoundText = 'No items found';
        this.typeToSearchText = 'Type to search';
        this.addTagText = 'Add item';
        this.loadingText = 'Loading...';
        this.clearAllText = 'Clear all';
        this.disableVirtualScroll = true;
        this.openOnEnter = true;
        this.appearance = 'underline';
    }
}
NgSelectConfig.ɵfac = function NgSelectConfig_Factory(t) { return new (t || NgSelectConfig)(); };
/** @nocollapse */ NgSelectConfig.ɵprov = i0.ɵɵdefineInjectable({ factory: function NgSelectConfig_Factory() { return new NgSelectConfig(); }, token: NgSelectConfig, providedIn: "root" });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgSelectConfig, [{
        type: Injectable,
        args: [{ providedIn: 'root' }]
    }], function () { return []; }, null); })();
if (false) {
    /** @type {?} */
    NgSelectConfig.prototype.placeholder;
    /** @type {?} */
    NgSelectConfig.prototype.notFoundText;
    /** @type {?} */
    NgSelectConfig.prototype.typeToSearchText;
    /** @type {?} */
    NgSelectConfig.prototype.addTagText;
    /** @type {?} */
    NgSelectConfig.prototype.loadingText;
    /** @type {?} */
    NgSelectConfig.prototype.clearAllText;
    /** @type {?} */
    NgSelectConfig.prototype.disableVirtualScroll;
    /** @type {?} */
    NgSelectConfig.prototype.openOnEnter;
    /** @type {?} */
    NgSelectConfig.prototype.appendTo;
    /** @type {?} */
    NgSelectConfig.prototype.bindValue;
    /** @type {?} */
    NgSelectConfig.prototype.bindLabel;
    /** @type {?} */
    NgSelectConfig.prototype.appearance;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlnLnNlcnZpY2UuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL2hvbWUvcnVubmVyL3dvcmsvbmctc2VsZWN0L25nLXNlbGVjdC9zcmMvbmctc2VsZWN0L2xpYi9jb25maWcuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0M7O0FBRUEsTUFBTSxPQUFPLGNBQWM7QUFDM0IsSUFGQTtBQUFnQixRQUdaLGlCQUFZLEdBQUcsZ0JBQWdCLENBQUM7QUFDcEMsUUFBSSxxQkFBZ0IsR0FBRyxnQkFBZ0IsQ0FBQztBQUN4QyxRQUFJLGVBQVUsR0FBRyxVQUFVLENBQUM7QUFDNUIsUUFBSSxnQkFBVyxHQUFHLFlBQVksQ0FBQztBQUMvQixRQUFJLGlCQUFZLEdBQUcsV0FBVyxDQUFDO0FBQy9CLFFBQUkseUJBQW9CLEdBQUcsSUFBSSxDQUFDO0FBQ2hDLFFBQUksZ0JBQVcsR0FBRyxJQUFJLENBQUM7QUFDdkIsUUFHSSxlQUFVLEdBQUcsV0FBVyxDQUFDO0FBQzdCLEtBQUM7QUFDRDswQ0FmQyxVQUFVLFNBQUMsRUFBRSxVQUFVLEVBQUUsTUFBTSxFQUFFLGNBQzdCO0FBQUM7Ozs7Z0RBTU47QUFBQztBQUFhO0FBQ1gsSUFOQyxxQ0FBb0I7QUFDeEI7QUFBcUIsSUFBakIsc0NBQWdDO0FBQ3BDO0FBQXFCLElBQWpCLDBDQUFvQztBQUN4QztBQUFxQixJQUFqQixvQ0FBd0I7QUFDNUI7QUFBcUIsSUFBakIscUNBQTJCO0FBQy9CO0FBQXFCLElBQWpCLHNDQUEyQjtBQUMvQjtBQUFxQixJQUFqQiw4Q0FBNEI7QUFDaEM7QUFBcUIsSUFBakIscUNBQW1CO0FBQ3ZCO0FBQXFCLElBQWpCLGtDQUFpQjtBQUNyQjtBQUFxQixJQUFqQixtQ0FBa0I7QUFDdEI7QUFBcUIsSUFBakIsbUNBQWtCO0FBQ3RCO0FBQXFCLElBQWpCLG9DQUF5Qjs7QUFmQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBR0EsQUFBQSxBQUFBLEFBQUEsQUFEQSxBQUdBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFJQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFkQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBRUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5ASW5qZWN0YWJsZSh7IHByb3ZpZGVkSW46ICdyb290JyB9KVxuZXhwb3J0IGNsYXNzIE5nU2VsZWN0Q29uZmlnIHtcbiAgICBwbGFjZWhvbGRlcjogc3RyaW5nO1xuICAgIG5vdEZvdW5kVGV4dCA9ICdObyBpdGVtcyBmb3VuZCc7XG4gICAgdHlwZVRvU2VhcmNoVGV4dCA9ICdUeXBlIHRvIHNlYXJjaCc7XG4gICAgYWRkVGFnVGV4dCA9ICdBZGQgaXRlbSc7XG4gICAgbG9hZGluZ1RleHQgPSAnTG9hZGluZy4uLic7XG4gICAgY2xlYXJBbGxUZXh0ID0gJ0NsZWFyIGFsbCc7XG4gICAgZGlzYWJsZVZpcnR1YWxTY3JvbGwgPSB0cnVlO1xuICAgIG9wZW5PbkVudGVyID0gdHJ1ZTtcbiAgICBhcHBlbmRUbzogc3RyaW5nO1xuICAgIGJpbmRWYWx1ZTogc3RyaW5nO1xuICAgIGJpbmRMYWJlbDogc3RyaW5nO1xuICAgIGFwcGVhcmFuY2UgPSAndW5kZXJsaW5lJztcbn1cbiJdfQ==