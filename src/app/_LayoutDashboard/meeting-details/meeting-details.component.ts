import { AfterViewInit, Component, ElementRef, Input, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';
import { MatAutocompleteSelectedEvent, MatAutocompleteTrigger } from '@angular/material/autocomplete';
import { ActivatedRoute } from '@angular/router';
import { AngularEditorConfig } from '@kolkov/angular-editor';
import { CalenderDTO } from 'src/app/_Models/calender-dto';
import { PortfolioDTO } from 'src/app/_Models/portfolio-dto';
import { CalenderService } from 'src/app/_Services/calender.service';
import { LinkService } from 'src/app/_Services/link.service';
import { ProjectTypeService } from 'src/app/_Services/project-type.service';
import { NotificationService } from 'src/app/_Services/notification.service';
// import ClassicEditor from '@ckeditor/ckeditor5-build-classic';
import * as  Editor from 'ckeditor5-custom-build/build/ckeditor';

@Component({
  selector: 'app-meeting-details',
  templateUrl: './meeting-details.component.html',
  styleUrls: ['./meeting-details.component.css']
})
export class MeetingDetailsComponent implements OnInit {
public Editor:any = Editor;

  allTodos:any=[];
  todosVisible:boolean=false;
  Scheduleid: any
  URL_ProjectCode: any; 
  currentAgendaView:any
  _MasterCode: string;
  Current_user_ID: string;

 _calenderDto: CalenderDTO;

  currentSidebarOpened: "Private_Notes" | "NOT_OPENED" = 'NOT_OPENED';
  notesContent: any;
  config: AngularEditorConfig = {
    editable: true,
    spellcheck: true,
    height: 'auto',
    minHeight: '5rem',
    maxHeight: 'auto',
    width: 'auto',
    minWidth: '0',
    placeholder: 'Enter text here...',
    translate: 'no',
    defaultParagraphSeparator: 'p',
    defaultFontName: 'Arial',
    toolbarHiddenButtons: [
      [
        // 'bold',
        // 'italic',
        // 'underline',
        'strikeThrough',
        'subscript',
        'superscript',
        'indent',
        'outdent',
        // 'insertUnorderedList',
        // 'insertOrderedList',
        'heading',
        // 'fontName'
      ],
      [
        // 'fontSize',
        // 'textColor',
        // 'backgroundColor',
        'customClasses',
        'link',
        'unlink',
        // 'insertImage',
        'insertVideo',
        'insertHorizontalRule',
        'removeFormat',
        'toggleEditorMode'
      ]
    ],
    customClasses: [
      {
        name: 'quote',
        class: 'quote',
      },
      {
        name: 'redText',
        class: 'redText',
      },
      {
        name: 'titleText',
        class: 'titleText',
        tag: 'h1',
      },
    ],
  };
  constructor(
    private CalenderService:CalenderService,
    private route:ActivatedRoute,
    public service: ProjectTypeService,
    public notifyService: NotificationService,
    public _LinkService: LinkService,
  ) {
    this._calenderDto=new CalenderDTO;
    this.objPortfolioDto = new PortfolioDTO();
  }

  ngOnInit(): void {
  
    this.route.paramMap.subscribe(params => {
        var scode = params.get('scheduleid');
        this.Scheduleid = scode;
      });


      this.route.paramMap.subscribe(params => {
        var pcode = params.get('scheduleid');
          this.URL_ProjectCode = pcode;
          this._MasterCode = pcode;       
      });
  
   
      this.Current_user_ID = localStorage.getItem('EmpNo');


      this.meeting_details();


    this.notesContent = 
    `<div>
    <div>
        <h3>Title</h3>
        <p>Start writing</p>
    </div>
    <div class="main-sug-opt mt-3">
        <div class="sug-opt">
            <div class="form-check">
                <input class="form-input" type="checkbox" value="" id="flexCheckDefault">
                <label class="form-check-label" for="flexCheckDefault">
                    checkbox
                </label>
            </div>
            <div class="sug-hov-opt">
                <span class="btn-group dropright">
                    <button type="button" class="opt-btn" data-toggle="dropdown" aria-expanded="false">
                        <svg clip-rule="evenodd" fill="currentColor" fill-rule="evenodd" stroke-linejoin="round"
                            stroke-miterlimit="2" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                            <path
                                d="m11 11h-7.25c-.414 0-.75.336-.75.75s.336.75.75.75h7.25v7.25c0 .414.336.75.75.75s.75-.336.75-.75v-7.25h7.25c.414 0 .75-.336.75-.75s-.336-.75-.75-.75h-7.25v-7.25c0-.414-.336-.75-.75-.75s-.75.336-.75.75z"
                                fill-rule="nonzero" />
                        </svg>
                    </button>
                    <div class="dropdown-menu">
                        <p class="heading">Content Items</p>
                        <a class="dropdown-item" href="#">
                            <div class="list-item">
                                <div class="list-icon"><svg viewBox="0 0 20 20" focusable="false" class="list-icon-svg">
                                        <path
                                            d="M6.25 10l2.5 2.5 5-5m-7.25 10h7c1.4 0 2.1 0 2.635-.273a2.5 2.5 0 001.092-1.092c.273-.535.273-1.235.273-2.635v-7c0-1.4 0-2.1-.273-2.635a2.5 2.5 0 00-1.092-1.093C15.6 2.5 14.9 2.5 13.5 2.5h-7c-1.4 0-2.1 0-2.635.272a2.5 2.5 0 00-1.093 1.093C2.5 4.4 2.5 5.1 2.5 6.5v7c0 1.4 0 2.1.272 2.635a2.5 2.5 0 001.093 1.092C4.4 17.5 5.1 17.5 6.5 17.5z"
                                            stroke="currentColor" stroke-width="1.5" stroke-linecap="round"
                                            stroke-linejoin="round"></path>
                                    </svg></div>
                                <div class="list-title">
                                    <p class="list-name">Action</p>
                                    <p class="list-sub-name">Add and assign actions</p>
                                </div>
                            </div>
                        </a>
                        <a class="dropdown-item" href="#">
                            <div class="list-item">
                                <div class="list-icon"><svg viewBox="0 0 20 20" focusable="false" class="list-icon-svg">
                                        <path
                                            d="M6.25 10l2.5 2.5 5-5m-7.25 10h7c1.4 0 2.1 0 2.635-.273a2.5 2.5 0 001.092-1.092c.273-.535.273-1.235.273-2.635v-7c0-1.4 0-2.1-.273-2.635a2.5 2.5 0 00-1.092-1.093C15.6 2.5 14.9 2.5 13.5 2.5h-7c-1.4 0-2.1 0-2.635.272a2.5 2.5 0 00-1.093 1.093C2.5 4.4 2.5 5.1 2.5 6.5v7c0 1.4 0 2.1.272 2.635a2.5 2.5 0 001.093 1.092C4.4 17.5 5.1 17.5 6.5 17.5z"
                                            stroke="currentColor" stroke-width="1.5" stroke-linecap="round"
                                            stroke-linejoin="round"></path>
                                    </svg></div>
                                <div class="list-title">
                                    <p class="list-name">Action</p>
                                    <p class="list-sub-name">Add and assign actions</p>
                                </div>
                            </div>
                        </a>
                        <a class="dropdown-item" href="#">
                            <div class="list-item">
                                <div class="list-icon"><svg viewBox="0 0 20 20" focusable="false" class="list-icon-svg">
                                        <path
                                            d="M6.25 10l2.5 2.5 5-5m-7.25 10h7c1.4 0 2.1 0 2.635-.273a2.5 2.5 0 001.092-1.092c.273-.535.273-1.235.273-2.635v-7c0-1.4 0-2.1-.273-2.635a2.5 2.5 0 00-1.092-1.093C15.6 2.5 14.9 2.5 13.5 2.5h-7c-1.4 0-2.1 0-2.635.272a2.5 2.5 0 00-1.093 1.093C2.5 4.4 2.5 5.1 2.5 6.5v7c0 1.4 0 2.1.272 2.635a2.5 2.5 0 001.093 1.092C4.4 17.5 5.1 17.5 6.5 17.5z"
                                            stroke="currentColor" stroke-width="1.5" stroke-linecap="round"
                                            stroke-linejoin="round"></path>
                                    </svg></div>
                                <div class="list-title">
                                    <p class="list-name">Action</p>
                                    <p class="list-sub-name">Add and assign actions</p>
                                </div>
                            </div>
                        </a>
                        <a class="dropdown-item" href="#">
                            <div class="list-item">
                                <div class="list-icon"><svg viewBox="0 0 20 20" focusable="false" class="list-icon-svg">
                                        <path
                                            d="M6.25 10l2.5 2.5 5-5m-7.25 10h7c1.4 0 2.1 0 2.635-.273a2.5 2.5 0 001.092-1.092c.273-.535.273-1.235.273-2.635v-7c0-1.4 0-2.1-.273-2.635a2.5 2.5 0 00-1.092-1.093C15.6 2.5 14.9 2.5 13.5 2.5h-7c-1.4 0-2.1 0-2.635.272a2.5 2.5 0 00-1.093 1.093C2.5 4.4 2.5 5.1 2.5 6.5v7c0 1.4 0 2.1.272 2.635a2.5 2.5 0 001.093 1.092C4.4 17.5 5.1 17.5 6.5 17.5z"
                                            stroke="currentColor" stroke-width="1.5" stroke-linecap="round"
                                            stroke-linejoin="round"></path>
                                    </svg></div>
                                <div class="list-title">
                                    <p class="list-name">Action</p>
                                    <p class="list-sub-name">Add and assign actions</p>
                                </div>
                            </div>
                        </a>
                        <a class="dropdown-item" href="#">
                            <div class="list-item">
                                <div class="list-icon"><svg viewBox="0 0 20 20" focusable="false" class="list-icon-svg">
                                        <path
                                            d="M6.25 10l2.5 2.5 5-5m-7.25 10h7c1.4 0 2.1 0 2.635-.273a2.5 2.5 0 001.092-1.092c.273-.535.273-1.235.273-2.635v-7c0-1.4 0-2.1-.273-2.635a2.5 2.5 0 00-1.092-1.093C15.6 2.5 14.9 2.5 13.5 2.5h-7c-1.4 0-2.1 0-2.635.272a2.5 2.5 0 00-1.093 1.093C2.5 4.4 2.5 5.1 2.5 6.5v7c0 1.4 0 2.1.272 2.635a2.5 2.5 0 001.093 1.092C4.4 17.5 5.1 17.5 6.5 17.5z"
                                            stroke="currentColor" stroke-width="1.5" stroke-linecap="round"
                                            stroke-linejoin="round"></path>
                                    </svg></div>
                                <div class="list-title">
                                    <p class="list-name">Action</p>
                                    <p class="list-sub-name">Add and assign actions</p>
                                </div>
                            </div>
                        </a>
                        <a class="dropdown-item" href="#">
                            <div class="list-item">
                                <div class="list-icon"><svg viewBox="0 0 20 20" focusable="false" class="list-icon-svg">
                                        <path
                                            d="M6.25 10l2.5 2.5 5-5m-7.25 10h7c1.4 0 2.1 0 2.635-.273a2.5 2.5 0 001.092-1.092c.273-.535.273-1.235.273-2.635v-7c0-1.4 0-2.1-.273-2.635a2.5 2.5 0 00-1.092-1.093C15.6 2.5 14.9 2.5 13.5 2.5h-7c-1.4 0-2.1 0-2.635.272a2.5 2.5 0 00-1.093 1.093C2.5 4.4 2.5 5.1 2.5 6.5v7c0 1.4 0 2.1.272 2.635a2.5 2.5 0 001.093 1.092C4.4 17.5 5.1 17.5 6.5 17.5z"
                                            stroke="currentColor" stroke-width="1.5" stroke-linecap="round"
                                            stroke-linejoin="round"></path>
                                    </svg></div>
                                <div class="list-title">
                                    <p class="list-name">Action</p>
                                    <p class="list-sub-name">Add and assign actions</p>
                                </div>
                            </div>
                        </a>

                    </div>
                </span>
                <span class="btn-group dropright">
                    <button type="button" class="opt-btn" data-toggle="dropdown" aria-expanded="false">
                        <svg clip-rule="evenodd" fill="currentColor" fill-rule="evenodd" stroke-linejoin="round"
                            stroke-miterlimit="2" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                            <path
                                d="m11 16.745c0-.414.336-.75.75-.75h9.5c.414 0 .75.336.75.75s-.336.75-.75.75h-9.5c-.414 0-.75-.336-.75-.75zm-9-5c0-.414.336-.75.75-.75h18.5c.414 0 .75.336.75.75s-.336.75-.75.75h-18.5c-.414 0-.75-.336-.75-.75zm4-5c0-.414.336-.75.75-.75h14.5c.414 0 .75.336.75.75s-.336.75-.75.75h-14.5c-.414 0-.75-.336-.75-.75z"
                                fill-rule="nonzero" />
                        </svg>
                    </button>
                    <div class="dropdown-menu">
                        <a class="dropdown-item" href="#">Action</a>
                        <a class="dropdown-item" href="#">Another action</a>
                        <a class="dropdown-item" href="#">Something else here</a>
                        <div class="dropdown-divider"></div>
                        <a class="dropdown-item" href="#">Separated link</a>
                    </div>
                </span>
            </div>
        </div>
    </div>
    <div class="suggestion-heading">SUGGESTED TEMPLATES</div>
    <div style="display: flex; flex-flow: wrap; margin-right: 70px;">
        <span class="todo sugg-img">
            <button class="suggestion-btn">
                <svg xmlns="http://www.w3.org/2000/svg" class="suggestion-svg" viewBox="0 0 1024 1024" version="1.1">
                    <path
                        d="M674.507676 598.338391 287.079856 598.338391c-14.136975 0-25.638937 11.499915-25.638937 25.63689 0 14.137998 11.501962 25.640983 25.638937 25.640983l387.42782 0c14.137998 0 25.640983-11.501962 25.640983-25.640983C700.148659 609.838306 688.646698 598.338391 674.507676 598.338391zM794.746154 384.583029c-14.137998 0-25.640983 11.501962-25.640983 25.63996l0 494.299873c0 0.130983 0 0.280386-0.001023 0.433882-0.899486 0.279363-2.665713 0.644683-5.764284 0.644683L200.047664 905.601426c-4.312212 0-7.564279-2.971681-7.564279-6.913457L192.483384 191.851493c0-4.493338 0.974188-8.28878 1.811252-9.821693l373.337917 0c14.136975 0 25.63996-11.501962 25.63996-25.63996 0-14.136975-11.501962-25.638937-25.63996-25.638937l-374.069581 0c-30.336936 0-52.357462 25.696242-52.357462 61.099566l0 706.836477c0 32.086789 26.396183 58.19133 58.84113 58.19133l563.293223 0c34.119075 0 57.042157-21.041222 57.042157-52.356438L820.382021 410.224012C820.383044 396.086014 808.883129 384.583029 794.746154 384.583029zM674.507676 745.295394 287.079856 745.295394c-14.136975 0-25.638937 11.499915-25.638937 25.63689 0 14.137998 11.501962 25.640983 25.638937 25.640983l387.42782 0c14.137998 0 25.640983-11.501962 25.640983-25.640983C700.148659 756.795309 688.646698 745.295394 674.507676 745.295394zM879.595634 157.107177c-3.77293-14.409175-12.871145-28.250414-24.964578-37.975916l-43.827181-35.240619c-12.880355-10.352789-29.27679-16.290011-44.986587-16.290011-16.876366 0-31.594579 6.747681-41.439808 18.995633l-19.624966 24.381293c-6.380314 7.968485-7.987928 17.577331-5.222955 26.916023l-114.241904 142.063553-2.486634 3.090385-22.812565 85.303828c-9.749038 30.859845 4.449335 48.075949 13.806447 55.608505 6.783497 5.450129 14.468526 8.728802 22.851451 9.754155 0.984421 0.246617 2.125407 0.488117 3.440355 0.632403 1.003863 0.110517 2.053776 0.167822 3.118014 0.167822l0.014326 0c4.588505 0 10.047844-0.9967 17.180288-3.13541l2.877537-1.065262 83.402525-41.897226 119.874181-149.07934c0.440022 0.017396 0.880043 0.032746 1.320065 0.032746 9.218966 0 17.411555-3.862981 23.077601-10.892071l19.562545-24.342408C880.924909 191.1976 884.15037 174.495196 879.595634 157.107177zM674.469813 348.564697l-56.738235 28.537963c-2.958378 0.579191-5.734608 1.684362-8.277524 3.296069-0.313132 0.198521-0.615007 0.385786-0.905626 0.562818 0.12382-0.318248 0.25378-0.639566 0.39295-0.971118 0.99977-2.437515 1.588171-5.022387 1.753947-7.702426l17.732873-66.078974 105.73209-131.488707 48.647977 39.113833L674.469813 348.564697zM831.385633 172.919305l-7.679913 9.550517-68.139913-54.779627 7.687076-9.56382c0.291642-0.132006 1.144056-0.38374 2.604314-0.38374 4.28356 0 9.735735 2.071172 13.570063 5.15644l43.832298 35.245735c3.493567 2.805906 6.421246 7.018857 7.642051 10.993378C831.497173 171.081447 831.492056 172.446537 831.385633 172.919305zM487.474932 291.067168l-200.394053 0c-14.136975 0-25.638937 11.501962-25.638937 25.63996 0 14.136975 11.501962 25.637913 25.638937 25.637913l200.394053 0c14.137998 0 25.63996-11.500938 25.63996-25.637913C513.114892 302.56913 501.611907 291.067168 487.474932 291.067168zM674.507676 438.023148 287.079856 438.023148c-14.136975 0-25.638937 11.500938-25.638937 25.638937s11.501962 25.638937 25.638937 25.638937l387.42782 0c14.137998 0 25.640983-11.501962 25.640983-25.638937S688.646698 438.023148 674.507676 438.023148z" />
                </svg>
                <span class="suggestion-name">To-do list</span>
            </button>
            <div class="iframe">
                <img src="../assets/images/todo.PNG">
            </div>
        </span>
        <span class="meeting sugg-img">
            <button class="suggestion-btn">
                <svg xmlns="http://www.w3.org/2000/svg" class="suggestion-svg" viewBox="0 0 1024 1024" version="1.1">
                    <path
                        d="M674.507676 598.338391 287.079856 598.338391c-14.136975 0-25.638937 11.499915-25.638937 25.63689 0 14.137998 11.501962 25.640983 25.638937 25.640983l387.42782 0c14.137998 0 25.640983-11.501962 25.640983-25.640983C700.148659 609.838306 688.646698 598.338391 674.507676 598.338391zM794.746154 384.583029c-14.137998 0-25.640983 11.501962-25.640983 25.63996l0 494.299873c0 0.130983 0 0.280386-0.001023 0.433882-0.899486 0.279363-2.665713 0.644683-5.764284 0.644683L200.047664 905.601426c-4.312212 0-7.564279-2.971681-7.564279-6.913457L192.483384 191.851493c0-4.493338 0.974188-8.28878 1.811252-9.821693l373.337917 0c14.136975 0 25.63996-11.501962 25.63996-25.63996 0-14.136975-11.501962-25.638937-25.63996-25.638937l-374.069581 0c-30.336936 0-52.357462 25.696242-52.357462 61.099566l0 706.836477c0 32.086789 26.396183 58.19133 58.84113 58.19133l563.293223 0c34.119075 0 57.042157-21.041222 57.042157-52.356438L820.382021 410.224012C820.383044 396.086014 808.883129 384.583029 794.746154 384.583029zM674.507676 745.295394 287.079856 745.295394c-14.136975 0-25.638937 11.499915-25.638937 25.63689 0 14.137998 11.501962 25.640983 25.638937 25.640983l387.42782 0c14.137998 0 25.640983-11.501962 25.640983-25.640983C700.148659 756.795309 688.646698 745.295394 674.507676 745.295394zM879.595634 157.107177c-3.77293-14.409175-12.871145-28.250414-24.964578-37.975916l-43.827181-35.240619c-12.880355-10.352789-29.27679-16.290011-44.986587-16.290011-16.876366 0-31.594579 6.747681-41.439808 18.995633l-19.624966 24.381293c-6.380314 7.968485-7.987928 17.577331-5.222955 26.916023l-114.241904 142.063553-2.486634 3.090385-22.812565 85.303828c-9.749038 30.859845 4.449335 48.075949 13.806447 55.608505 6.783497 5.450129 14.468526 8.728802 22.851451 9.754155 0.984421 0.246617 2.125407 0.488117 3.440355 0.632403 1.003863 0.110517 2.053776 0.167822 3.118014 0.167822l0.014326 0c4.588505 0 10.047844-0.9967 17.180288-3.13541l2.877537-1.065262 83.402525-41.897226 119.874181-149.07934c0.440022 0.017396 0.880043 0.032746 1.320065 0.032746 9.218966 0 17.411555-3.862981 23.077601-10.892071l19.562545-24.342408C880.924909 191.1976 884.15037 174.495196 879.595634 157.107177zM674.469813 348.564697l-56.738235 28.537963c-2.958378 0.579191-5.734608 1.684362-8.277524 3.296069-0.313132 0.198521-0.615007 0.385786-0.905626 0.562818 0.12382-0.318248 0.25378-0.639566 0.39295-0.971118 0.99977-2.437515 1.588171-5.022387 1.753947-7.702426l17.732873-66.078974 105.73209-131.488707 48.647977 39.113833L674.469813 348.564697zM831.385633 172.919305l-7.679913 9.550517-68.139913-54.779627 7.687076-9.56382c0.291642-0.132006 1.144056-0.38374 2.604314-0.38374 4.28356 0 9.735735 2.071172 13.570063 5.15644l43.832298 35.245735c3.493567 2.805906 6.421246 7.018857 7.642051 10.993378C831.497173 171.081447 831.492056 172.446537 831.385633 172.919305zM487.474932 291.067168l-200.394053 0c-14.136975 0-25.638937 11.501962-25.638937 25.63996 0 14.136975 11.501962 25.637913 25.638937 25.637913l200.394053 0c14.137998 0 25.63996-11.500938 25.63996-25.637913C513.114892 302.56913 501.611907 291.067168 487.474932 291.067168zM674.507676 438.023148 287.079856 438.023148c-14.136975 0-25.638937 11.500938-25.638937 25.638937s11.501962 25.638937 25.638937 25.638937l387.42782 0c14.137998 0 25.640983-11.501962 25.640983-25.638937S688.646698 438.023148 674.507676 438.023148z" />
                </svg>
                <span class="suggestion-name">Meeting note</span>
            </button>
            <div class="iframe">
                <img src="../assets/images/meeting.PNG">
            </div>
        </span>
        <span class="project sugg-img">
            <button class="suggestion-btn">
                <svg xmlns="http://www.w3.org/2000/svg" class="suggestion-svg" viewBox="0 0 1024 1024" version="1.1">
                    <path
                        d="M674.507676 598.338391 287.079856 598.338391c-14.136975 0-25.638937 11.499915-25.638937 25.63689 0 14.137998 11.501962 25.640983 25.638937 25.640983l387.42782 0c14.137998 0 25.640983-11.501962 25.640983-25.640983C700.148659 609.838306 688.646698 598.338391 674.507676 598.338391zM794.746154 384.583029c-14.137998 0-25.640983 11.501962-25.640983 25.63996l0 494.299873c0 0.130983 0 0.280386-0.001023 0.433882-0.899486 0.279363-2.665713 0.644683-5.764284 0.644683L200.047664 905.601426c-4.312212 0-7.564279-2.971681-7.564279-6.913457L192.483384 191.851493c0-4.493338 0.974188-8.28878 1.811252-9.821693l373.337917 0c14.136975 0 25.63996-11.501962 25.63996-25.63996 0-14.136975-11.501962-25.638937-25.63996-25.638937l-374.069581 0c-30.336936 0-52.357462 25.696242-52.357462 61.099566l0 706.836477c0 32.086789 26.396183 58.19133 58.84113 58.19133l563.293223 0c34.119075 0 57.042157-21.041222 57.042157-52.356438L820.382021 410.224012C820.383044 396.086014 808.883129 384.583029 794.746154 384.583029zM674.507676 745.295394 287.079856 745.295394c-14.136975 0-25.638937 11.499915-25.638937 25.63689 0 14.137998 11.501962 25.640983 25.638937 25.640983l387.42782 0c14.137998 0 25.640983-11.501962 25.640983-25.640983C700.148659 756.795309 688.646698 745.295394 674.507676 745.295394zM879.595634 157.107177c-3.77293-14.409175-12.871145-28.250414-24.964578-37.975916l-43.827181-35.240619c-12.880355-10.352789-29.27679-16.290011-44.986587-16.290011-16.876366 0-31.594579 6.747681-41.439808 18.995633l-19.624966 24.381293c-6.380314 7.968485-7.987928 17.577331-5.222955 26.916023l-114.241904 142.063553-2.486634 3.090385-22.812565 85.303828c-9.749038 30.859845 4.449335 48.075949 13.806447 55.608505 6.783497 5.450129 14.468526 8.728802 22.851451 9.754155 0.984421 0.246617 2.125407 0.488117 3.440355 0.632403 1.003863 0.110517 2.053776 0.167822 3.118014 0.167822l0.014326 0c4.588505 0 10.047844-0.9967 17.180288-3.13541l2.877537-1.065262 83.402525-41.897226 119.874181-149.07934c0.440022 0.017396 0.880043 0.032746 1.320065 0.032746 9.218966 0 17.411555-3.862981 23.077601-10.892071l19.562545-24.342408C880.924909 191.1976 884.15037 174.495196 879.595634 157.107177zM674.469813 348.564697l-56.738235 28.537963c-2.958378 0.579191-5.734608 1.684362-8.277524 3.296069-0.313132 0.198521-0.615007 0.385786-0.905626 0.562818 0.12382-0.318248 0.25378-0.639566 0.39295-0.971118 0.99977-2.437515 1.588171-5.022387 1.753947-7.702426l17.732873-66.078974 105.73209-131.488707 48.647977 39.113833L674.469813 348.564697zM831.385633 172.919305l-7.679913 9.550517-68.139913-54.779627 7.687076-9.56382c0.291642-0.132006 1.144056-0.38374 2.604314-0.38374 4.28356 0 9.735735 2.071172 13.570063 5.15644l43.832298 35.245735c3.493567 2.805906 6.421246 7.018857 7.642051 10.993378C831.497173 171.081447 831.492056 172.446537 831.385633 172.919305zM487.474932 291.067168l-200.394053 0c-14.136975 0-25.638937 11.501962-25.638937 25.63996 0 14.136975 11.501962 25.637913 25.638937 25.637913l200.394053 0c14.137998 0 25.63996-11.500938 25.63996-25.637913C513.114892 302.56913 501.611907 291.067168 487.474932 291.067168zM674.507676 438.023148 287.079856 438.023148c-14.136975 0-25.638937 11.500938-25.638937 25.638937s11.501962 25.638937 25.638937 25.638937l387.42782 0c14.137998 0 25.640983-11.501962 25.640983-25.638937S688.646698 438.023148 674.507676 438.023148z" />
                </svg>
                <span class="suggestion-name">Project plan</span>
            </button>
            <div class="iframe">
                <img src="../assets/images/project.PNG">
            </div>
        </span>
    </div>
    
    <div class="todolist" >
        <div class="todoheading mb-3">To-do list</div>
        <div class="mb-3">
            <div class="todotitle">Do now</div>   <app-todo></app-todo>
            <div class="form-check todoopt">
                <span class="todo-check">
                    <input class="form-input" type="checkbox" value="" id="flexCheckDefault1">
                    <label class="form-check-label" for="flexCheckDefault">
                        Task 1
                    </label>
                </span>
                <span class="todoopt-action">
                    <div class="todoopt-icon">
                        <svg xmlns="http://www.w3.org/2000/svg" class="todoopt-icon-svg" fill="currentColor" viewBox="0 0 1024 1024" version="1.1"><path d="M832 384l0 448L256 832 256 384 832 384M832 320 256 320C220.672 320 192 348.608 192 384l0 448c0 35.392 28.672 64 64 64l576 0c35.392 0 64-28.608 64-64L896 384C896 348.608 867.392 320 832 320L832 320zM864 192 768 192 768 160C768 142.336 753.664 128 736 128S704 142.336 704 160L704 192 384 192 384 160C384 142.336 369.664 128 352 128S320 142.336 320 160L320 192 224 192C206.336 192 192 206.336 192 224S206.336 256 224 256l640 0C881.664 256 896 241.664 896 224S881.664 192 864 192zM384 448 320 448l0 64 64 0L384 448zM512 448 448 448l0 64 64 0L512 448zM640 448 576 448l0 64 64 0L640 448zM768 448l-64 0 0 64 64 0L768 448zM384 576 320 576l0 64 64 0L384 576zM512 576 448 576l0 64 64 0L512 576zM640 576 576 576l0 64 64 0L640 576zM768 576l-64 0 0 64 64 0L768 576zM384 704 320 704l0 64 64 0L384 704zM512 704 448 704l0 64 64 0L512 704zM640 704 576 704l0 64 64 0L640 704zM768 704l-64 0 0 64 64 0L768 704z"/></svg>
                    </div>
                    <div class="todoopt-icon">
                        <svg clip-rule="evenodd" class="todoopt-icon-svg" fill="currentColor" fill-rule="evenodd" stroke-linejoin="round" stroke-miterlimit="2" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="m3.508 6.726c1.765-2.836 4.911-4.726 8.495-4.726 5.518 0 9.997 4.48 9.997 9.997 0 5.519-4.479 9.999-9.997 9.999-5.245 0-9.553-4.048-9.966-9.188-.024-.302.189-.811.749-.811.391 0 .715.3.747.69.351 4.369 4.012 7.809 8.47 7.809 4.69 0 8.497-3.808 8.497-8.499 0-4.689-3.807-8.497-8.497-8.497-3.037 0-5.704 1.597-7.206 3.995l1.991.005c.414 0 .75.336.75.75s-.336.75-.75.75h-4.033c-.414 0-.75-.336-.75-.75v-4.049c0-.414.336-.75.75-.75s.75.335.75.75z" fill-rule="nonzero"/></svg>
                    </div>
                    <div class="todoopt-icon">
                        <svg xmlns="http://www.w3.org/2000/svg" class="todoopt-icon-svg" fill="currentColor" viewBox="0 0 1024 1024" version="1.1"><path d="M128 384c-70.4 0-128 57.6-128 128s57.6 128 128 128 128-57.6 128-128-57.6-128-128-128z m768 0c-70.4 0-128 57.6-128 128s57.6 128 128 128 128-57.6 128-128-57.6-128-128-128z m-384 0c-70.4 0-128 57.6-128 128s57.6 128 128 128 128-57.6 128-128-57.6-128-128-128z"/></svg>
                    </div>
                    <div class="todoopt-icon">
                        <svg xmlns="http://www.w3.org/2000/svg" class="todoopt-icon-svg" fill="currentColor" viewBox="0 0 1024 1024" version="1.1"><path d="M584.817778 701.44c-10.524444 0-18.962963-6.068148-18.962963-19.531852L565.854815 414.90963c0-13.463704 8.438519-21.428148 18.962963-21.428148 10.524444 0 18.962963 7.964444 18.962963 21.428148l0 266.998519c0 13.463704-8.438519 20.48-18.962963 20.48L584.817778 701.44z"/><path d="M439.182222 703.336296c-10.524444 0-18.962963-7.964444-18.962963-21.428148L420.219259 414.90963c0-13.463704 8.438519-20.48 18.962963-20.48 10.524444 0 18.962963 7.016296 18.962963 20.48l0 266.998519C458.145185 695.371852 449.706667 703.336296 439.182222 703.336296L439.182222 703.336296z"/><path d="M827.543704 293.546667l-121.362963 0 0-48.545185c0-40.106667-32.426667-72.817778-72.248889-72.817778L390.637037 172.183704c-40.106667 0-72.817778 32.711111-72.817778 72.817778l0 48.545185-121.362963 0c-13.463704 0-24.272593 6.068148-24.272593 19.531852s10.808889 19.531852 24.272593 19.531852l631.087407 0c13.463704 0 24.272593-6.068148 24.272593-19.531852S841.007407 293.546667 827.543704 293.546667L827.543704 293.546667zM356.882963 235.52c0-13.368889 10.903704-24.272593 24.272593-24.272593l262.257778 0c13.274074 0 23.703704 10.619259 23.703704 24.272593l0 58.026667L356.882963 293.546667 356.882963 235.52 356.882963 235.52z"/><path d="M682.002963 842.334815 342.281481 842.334815c-54.044444 0-72.912593-20.29037-72.912593-72.912593l0-354.228148c0-14.317037 6.068148-25.884444 20.385185-24.841481 12.61037 0.948148 18.678519 11.377778 18.678519 24.177778l0 364.468148c0 13.368889 10.903704 24.272593 24.272593 24.272593l358.684444 0c13.463704 0 24.367407-10.903704 24.367407-24.367407L715.757037 415.573333c0-13.368889 6.068148-24.272593 19.531852-24.272593 13.463704 0 19.531852 10.903704 19.531852 24.272593l0 353.943704C754.820741 825.837037 737.28 842.334815 682.002963 842.334815L682.002963 842.334815z"/></svg>
                    </div>
                </span>
            </div>
        </div>
        <div class="mb-3">
            <div class="todotitle">Do soon</div>
            <div class="form-check todoopt">
                <span class="todo-check">
                    <input class="form-input" type="checkbox" value="" id="flexCheckDefault2">
                    <label class="form-check-label" for="flexCheckDefault">
                        Task 2
                    </label>
                </span>
                <span class="todoopt-action">
                    <div class="todoopt-icon">
                        <svg xmlns="http://www.w3.org/2000/svg" class="todoopt-icon-svg" fill="currentColor" viewBox="0 0 1024 1024" version="1.1"><path d="M832 384l0 448L256 832 256 384 832 384M832 320 256 320C220.672 320 192 348.608 192 384l0 448c0 35.392 28.672 64 64 64l576 0c35.392 0 64-28.608 64-64L896 384C896 348.608 867.392 320 832 320L832 320zM864 192 768 192 768 160C768 142.336 753.664 128 736 128S704 142.336 704 160L704 192 384 192 384 160C384 142.336 369.664 128 352 128S320 142.336 320 160L320 192 224 192C206.336 192 192 206.336 192 224S206.336 256 224 256l640 0C881.664 256 896 241.664 896 224S881.664 192 864 192zM384 448 320 448l0 64 64 0L384 448zM512 448 448 448l0 64 64 0L512 448zM640 448 576 448l0 64 64 0L640 448zM768 448l-64 0 0 64 64 0L768 448zM384 576 320 576l0 64 64 0L384 576zM512 576 448 576l0 64 64 0L512 576zM640 576 576 576l0 64 64 0L640 576zM768 576l-64 0 0 64 64 0L768 576zM384 704 320 704l0 64 64 0L384 704zM512 704 448 704l0 64 64 0L512 704zM640 704 576 704l0 64 64 0L640 704zM768 704l-64 0 0 64 64 0L768 704z"/></svg>
                    </div>
                    <div class="todoopt-icon">
                        <svg clip-rule="evenodd" class="todoopt-icon-svg" fill="currentColor" fill-rule="evenodd" stroke-linejoin="round" stroke-miterlimit="2" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="m3.508 6.726c1.765-2.836 4.911-4.726 8.495-4.726 5.518 0 9.997 4.48 9.997 9.997 0 5.519-4.479 9.999-9.997 9.999-5.245 0-9.553-4.048-9.966-9.188-.024-.302.189-.811.749-.811.391 0 .715.3.747.69.351 4.369 4.012 7.809 8.47 7.809 4.69 0 8.497-3.808 8.497-8.499 0-4.689-3.807-8.497-8.497-8.497-3.037 0-5.704 1.597-7.206 3.995l1.991.005c.414 0 .75.336.75.75s-.336.75-.75.75h-4.033c-.414 0-.75-.336-.75-.75v-4.049c0-.414.336-.75.75-.75s.75.335.75.75z" fill-rule="nonzero"/></svg>
                    </div>
                    <div class="todoopt-icon">
                        <svg xmlns="http://www.w3.org/2000/svg" class="todoopt-icon-svg" fill="currentColor" viewBox="0 0 1024 1024" version="1.1"><path d="M128 384c-70.4 0-128 57.6-128 128s57.6 128 128 128 128-57.6 128-128-57.6-128-128-128z m768 0c-70.4 0-128 57.6-128 128s57.6 128 128 128 128-57.6 128-128-57.6-128-128-128z m-384 0c-70.4 0-128 57.6-128 128s57.6 128 128 128 128-57.6 128-128-57.6-128-128-128z"/></svg>
                    </div>
                    <div class="todoopt-icon">
                        <svg xmlns="http://www.w3.org/2000/svg" class="todoopt-icon-svg" fill="currentColor" viewBox="0 0 1024 1024" version="1.1"><path d="M584.817778 701.44c-10.524444 0-18.962963-6.068148-18.962963-19.531852L565.854815 414.90963c0-13.463704 8.438519-21.428148 18.962963-21.428148 10.524444 0 18.962963 7.964444 18.962963 21.428148l0 266.998519c0 13.463704-8.438519 20.48-18.962963 20.48L584.817778 701.44z"/><path d="M439.182222 703.336296c-10.524444 0-18.962963-7.964444-18.962963-21.428148L420.219259 414.90963c0-13.463704 8.438519-20.48 18.962963-20.48 10.524444 0 18.962963 7.016296 18.962963 20.48l0 266.998519C458.145185 695.371852 449.706667 703.336296 439.182222 703.336296L439.182222 703.336296z"/><path d="M827.543704 293.546667l-121.362963 0 0-48.545185c0-40.106667-32.426667-72.817778-72.248889-72.817778L390.637037 172.183704c-40.106667 0-72.817778 32.711111-72.817778 72.817778l0 48.545185-121.362963 0c-13.463704 0-24.272593 6.068148-24.272593 19.531852s10.808889 19.531852 24.272593 19.531852l631.087407 0c13.463704 0 24.272593-6.068148 24.272593-19.531852S841.007407 293.546667 827.543704 293.546667L827.543704 293.546667zM356.882963 235.52c0-13.368889 10.903704-24.272593 24.272593-24.272593l262.257778 0c13.274074 0 23.703704 10.619259 23.703704 24.272593l0 58.026667L356.882963 293.546667 356.882963 235.52 356.882963 235.52z"/><path d="M682.002963 842.334815 342.281481 842.334815c-54.044444 0-72.912593-20.29037-72.912593-72.912593l0-354.228148c0-14.317037 6.068148-25.884444 20.385185-24.841481 12.61037 0.948148 18.678519 11.377778 18.678519 24.177778l0 364.468148c0 13.368889 10.903704 24.272593 24.272593 24.272593l358.684444 0c13.463704 0 24.367407-10.903704 24.367407-24.367407L715.757037 415.573333c0-13.368889 6.068148-24.272593 19.531852-24.272593 13.463704 0 19.531852 10.903704 19.531852 24.272593l0 353.943704C754.820741 825.837037 737.28 842.334815 682.002963 842.334815L682.002963 842.334815z"/></svg>
                    </div>
                </span>
            </div>
        </div>
        <div class="mb-3">
            <div class="todotitle">For the future</div>
            <div class="form-check todoopt">
                <span class="todo-check">
                    <input class="form-input" type="checkbox" value="" id="flexCheckDefault3">
                    <label class="form-check-label" for="flexCheckDefault">
                        Task 3
                    </label>
                </span>
                <span class="todoopt-action">
                    <div class="todoopt-icon">
                        <svg xmlns="http://www.w3.org/2000/svg" class="todoopt-icon-svg" fill="currentColor" viewBox="0 0 1024 1024" version="1.1"><path d="M832 384l0 448L256 832 256 384 832 384M832 320 256 320C220.672 320 192 348.608 192 384l0 448c0 35.392 28.672 64 64 64l576 0c35.392 0 64-28.608 64-64L896 384C896 348.608 867.392 320 832 320L832 320zM864 192 768 192 768 160C768 142.336 753.664 128 736 128S704 142.336 704 160L704 192 384 192 384 160C384 142.336 369.664 128 352 128S320 142.336 320 160L320 192 224 192C206.336 192 192 206.336 192 224S206.336 256 224 256l640 0C881.664 256 896 241.664 896 224S881.664 192 864 192zM384 448 320 448l0 64 64 0L384 448zM512 448 448 448l0 64 64 0L512 448zM640 448 576 448l0 64 64 0L640 448zM768 448l-64 0 0 64 64 0L768 448zM384 576 320 576l0 64 64 0L384 576zM512 576 448 576l0 64 64 0L512 576zM640 576 576 576l0 64 64 0L640 576zM768 576l-64 0 0 64 64 0L768 576zM384 704 320 704l0 64 64 0L384 704zM512 704 448 704l0 64 64 0L512 704zM640 704 576 704l0 64 64 0L640 704zM768 704l-64 0 0 64 64 0L768 704z"/></svg>
                    </div>
                    <div class="todoopt-icon">
                        <svg clip-rule="evenodd" class="todoopt-icon-svg" fill="currentColor" fill-rule="evenodd" stroke-linejoin="round" stroke-miterlimit="2" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="m3.508 6.726c1.765-2.836 4.911-4.726 8.495-4.726 5.518 0 9.997 4.48 9.997 9.997 0 5.519-4.479 9.999-9.997 9.999-5.245 0-9.553-4.048-9.966-9.188-.024-.302.189-.811.749-.811.391 0 .715.3.747.69.351 4.369 4.012 7.809 8.47 7.809 4.69 0 8.497-3.808 8.497-8.499 0-4.689-3.807-8.497-8.497-8.497-3.037 0-5.704 1.597-7.206 3.995l1.991.005c.414 0 .75.336.75.75s-.336.75-.75.75h-4.033c-.414 0-.75-.336-.75-.75v-4.049c0-.414.336-.75.75-.75s.75.335.75.75z" fill-rule="nonzero"/></svg>
                    </div>
                    <div class="todoopt-icon">
                        <svg xmlns="http://www.w3.org/2000/svg" class="todoopt-icon-svg" fill="currentColor" viewBox="0 0 1024 1024" version="1.1"><path d="M128 384c-70.4 0-128 57.6-128 128s57.6 128 128 128 128-57.6 128-128-57.6-128-128-128z m768 0c-70.4 0-128 57.6-128 128s57.6 128 128 128 128-57.6 128-128-57.6-128-128-128z m-384 0c-70.4 0-128 57.6-128 128s57.6 128 128 128 128-57.6 128-128-57.6-128-128-128z"/></svg>
                    </div>
                    <div class="todoopt-icon">
                        <svg xmlns="http://www.w3.org/2000/svg" class="todoopt-icon-svg" fill="currentColor" viewBox="0 0 1024 1024" version="1.1"><path d="M584.817778 701.44c-10.524444 0-18.962963-6.068148-18.962963-19.531852L565.854815 414.90963c0-13.463704 8.438519-21.428148 18.962963-21.428148 10.524444 0 18.962963 7.964444 18.962963 21.428148l0 266.998519c0 13.463704-8.438519 20.48-18.962963 20.48L584.817778 701.44z"/><path d="M439.182222 703.336296c-10.524444 0-18.962963-7.964444-18.962963-21.428148L420.219259 414.90963c0-13.463704 8.438519-20.48 18.962963-20.48 10.524444 0 18.962963 7.016296 18.962963 20.48l0 266.998519C458.145185 695.371852 449.706667 703.336296 439.182222 703.336296L439.182222 703.336296z"/><path d="M827.543704 293.546667l-121.362963 0 0-48.545185c0-40.106667-32.426667-72.817778-72.248889-72.817778L390.637037 172.183704c-40.106667 0-72.817778 32.711111-72.817778 72.817778l0 48.545185-121.362963 0c-13.463704 0-24.272593 6.068148-24.272593 19.531852s10.808889 19.531852 24.272593 19.531852l631.087407 0c13.463704 0 24.272593-6.068148 24.272593-19.531852S841.007407 293.546667 827.543704 293.546667L827.543704 293.546667zM356.882963 235.52c0-13.368889 10.903704-24.272593 24.272593-24.272593l262.257778 0c13.274074 0 23.703704 10.619259 23.703704 24.272593l0 58.026667L356.882963 293.546667 356.882963 235.52 356.882963 235.52z"/><path d="M682.002963 842.334815 342.281481 842.334815c-54.044444 0-72.912593-20.29037-72.912593-72.912593l0-354.228148c0-14.317037 6.068148-25.884444 20.385185-24.841481 12.61037 0.948148 18.678519 11.377778 18.678519 24.177778l0 364.468148c0 13.368889 10.903704 24.272593 24.272593 24.272593l358.684444 0c13.463704 0 24.367407-10.903704 24.367407-24.367407L715.757037 415.573333c0-13.368889 6.068148-24.272593 19.531852-24.272593 13.463704 0 19.531852 10.903704 19.531852 24.272593l0 353.943704C754.820741 825.837037 737.28 842.334815 682.002963 842.334815L682.002963 842.334815z"/></svg>
                    </div>
                </span>
            </div>
        </div>
    </div>

    <div class="meeting-note">
        <div class="meeting-note-heading mb-3">Meeting Notes</div>
        <div class="meeting-note-table mb-3">
            <table>
                <tr>
                  <th class="col-h">Date & Time</th>
                  <td> </td>
                </tr>
                <tr>
                  <th class="col-h">Goal</th>
                  <td> </td>
                </tr>
                <tr>
                  <th class="col-h">Attendees</th>
                  <td> </td>
                </tr>
              </table>
        </div>
        <div class="mb-3">
            <div class="meeting-note-title">Agenda</div>
            <ul>
                <li>list 1</li>
                <li>list 2</li>
                <li></li>
            </ul>
        </div>
        <div class="mb-3">
            <div class="meeting-note-title">Notes</div>
            <ul>
                <li>list 1</li>
                <li>list 2</li>
                <li></li>
            </ul>
        </div>
        <div class="meeting-note-table mb-3">
            <table style="width:100%">
                <tr>
                  <th>Action Items</th>
                  <th>Assignee</th>
                  <th>Status</th>
                </tr>
                <tr>
                  <td>
                    <div>
                        <ul>
                            <li>Clean up meeting notes</li>
                            <li>Send out meeting notes and action items</li>
                        </ul>
                    </div>
                  </td>
                  <td> </td>
                  <td> </td>
                </tr>
              </table>
        </div>
    </div>

    <div class="project-plan">
        <div class="project-plan-heading mb-3">Project Plan</div>
        <div class="mb-3">
            <div class="project-plan-title">Summary</div>
            <ul>
                <li></li>
            </ul>
        </div>
        <div class="mb-3">
            <div class="project-plan-title">Major Milestones</div>
            <ul>
                <li></li>
            </ul>
        </div>
        <div class="project-plan-table mb-3">
            <table>
                <tr>
                  <td></td>
                  <th>Monday</th>
                  <th>Tuesday</th>
                  <th>Wednesday</th>
                  <th>Thursday</th>
                  <th>Friday</th>
                </tr>
                <tr>
                  <th>Task 1</th>
                  <td> </td>
                  <td> </td>
                  <td> </td>
                  <td> </td>
                  <td> </td>
                </tr>
                <tr>
                  <th>Task 2</th>
                  <td> </td>
                  <td> </td>
                  <td> </td>
                  <td> </td>
                  <td> </td>
                </tr>
              </table>
        </div>
    </div>
</div>`

  }

  @ViewChild(MatAutocompleteTrigger) customTrigger!: MatAutocompleteTrigger;
  @ViewChildren(MatAutocompleteTrigger) autocompletes:QueryList<MatAutocompleteTrigger>;
  @ViewChild('fruitInput') fruitInput: ElementRef;
  @ViewChild('fruitInputpro')fruitInputpro:ElementRef;
  @ViewChild('fruitInputportfolio')fruitInputportfolio:ElementRef;
  @ViewChild('fruitInputs') fruitInputs: ElementRef;


  View_Attendees_Notes() {
    document.getElementById("Attendees_Notes").classList.add("kt-quick-active--on");
    document.getElementById("rightbar-overlay").style.display = "block";
  }
  close_attendeesnotes_sideBar() {
    document.getElementById("Attendees_Notes").classList.remove("kt-quick-active--on");
  }
  View_Private_Notes() {
    document.getElementById("Private_Notes").classList.add("kt-quick-active--on");
    document.getElementById("rightbar-overlay").style.display = "block";
  }
  close_privatenote_sideBar() {
    document.getElementById("Private_Notes").classList.remove("kt-quick-active--on");
  }
  View_Meeting_Attendees() {
    document.getElementById("Meeting_Attendees").classList.add("kt-quick-active--on");
    this.GetProjectAndsubtashDrpforCalender();
    document.getElementById("kt-bodyc").classList.add("overflow-hidden");
    // document.getElementById("rightbar-overlay").style.display = "block";
  }

  close_meetingattendees_sideBar() {
    this.selectedEmployees=[];
    document.getElementById("Meeting_Attendees").classList.remove("kt-quick-active--on");
    document.getElementById("kt-bodyc").classList.remove("overflow-hidden");
    this.fruitInput.nativeElement.value = '';
  }





  totaldms: number;
  DMS_Scheduledjson: any = [];
  dmsIdjson: any = [];
  EventScheduledjson: any = [];
  Schedule_ID: any;
  User_Scheduledjson: any = [];
  portfolio_Scheduledjson:any=[]
  Project_code:any
  Employeelist:any=[]
  Agendas_List:any=[]

meeting_details(){
    this.Schedule_ID=this.Scheduleid;
    this._calenderDto.Schedule_ID=this.Schedule_ID;
    this.CalenderService.NewClickEventJSON(this._calenderDto).subscribe((data)=>{
      
    this.EventScheduledjson = JSON.parse(data['ClickEventJSON']);
    this.Agendas_List=this.EventScheduledjson[0].Agendas
 
    this.User_Scheduledjson= JSON.parse(this.EventScheduledjson[0].Add_guests)
    this.portfolio_Scheduledjson=JSON.parse(this.EventScheduledjson[0].Portfolio_Name)
    
    this.DMS_Scheduledjson = this.EventScheduledjson[0].DMS_Name;
    this.Project_code=JSON.parse(this.EventScheduledjson[0].Project_code)
    console.log(this.portfolio_Scheduledjson,'portfolio_Scheduledjson')
    this.DMS_Scheduledjson = this.DMS_Scheduledjson.split(',');
    this.totaldms = this.DMS_Scheduledjson.length;
    this.dmsIdjson = [];
    if (this.DMS_Scheduledjson.length > 0) {

      this.DMS_Scheduledjson.forEach(element => {
        var jsonData = {};
        var columnName = "MailId";
        jsonData[columnName] = element;
        this.dmsIdjson.push(jsonData);
      });
      this.dmsIdjson = JSON.stringify(this.dmsIdjson);
    }
   })
}
 







  startTime: Date;
  meetingInProgress: boolean = false;
  meetingPaused: boolean = false;
  play:boolean=false;
  pause:boolean=false;
  meetingStopped: boolean = false;
  elapsedTime: number = 0;
  timer: any;
  duration: number = 60 * 60 * 1000; // 60 minutes * 60 seconds * 1000 milliseconds

  startMeeting() {
    this.play=true;
    this.startTime = new Date();
    this.meetingInProgress = true;
    this.timer = setInterval(() => {
      this.elapsedTime = new Date().getTime() - this.startTime.getTime();
      if (this.elapsedTime >= this.duration) {
        this.stopMeeting();
      }
    }, 1000);
    console.log(this.startTime,'ijfbviabfvbsvskjvbzsib')
  }

  pauseMeeting() {
    this.play=false;
    this.pause=true;
    clearInterval(this.timer);
    this.meetingPaused = true;
  }

  resumeMeeting() {
    this.play=true;
    this.pause=false;
    this.startTime = new Date(new Date().getTime() - this.elapsedTime);
    this.meetingPaused = false;
    this.timer = setInterval(() => {
      this.elapsedTime = new Date().getTime() - this.startTime.getTime();
      if (this.elapsedTime >= this.duration) {
        this.stopMeeting();
      }
    }, 1000);
  }

  stopMeeting() {
    clearInterval(this.timer);
    this.meetingInProgress = false;
    this.meetingStopped = true;
  }

  leaveMeeting() {
    this.play=false;
    this.pause=false;
    clearInterval(this.timer);
    this.meetingInProgress = false;
    this.meetingStopped = true;
  
    this.resetMeeting(); // Call the resetMeeting function to reset the meeting state
  }

  resetMeeting() {
    this.startTime = null;
    this.elapsedTime = 0;
    this.meetingPaused = false;
    this.meetingStopped = false;
  }

  formatTime(ms: number): string {
    const hours = Math.floor(ms / (1000 * 60 * 60));
    const minutes = Math.floor((ms % (1000 * 60 * 60)) / (1000 * 60));
    const seconds = Math.floor((ms % (1000 * 60)) / 1000);

    return `${this.pad(hours)}:${this.pad(minutes)}:${this.pad(seconds)}`;
  }

  private pad(value: number): string {
    return value < 10 ? `0${value}` : `${value}`;
  }


/////////////////////////////////////////// DMS Side-Bar Start /////////////////////////////////////////////////////////


selectedEmpId: any = [];
 isDMSDrpDwnOpen: boolean = false;
 Memos_List: any;
 _linkedMemos: number = 0;
 selectedMemos: { MailId: number, Subject: string }[] = new Array();
 originalDMSList:any[];
 _MemosSubjectList: any;
 checkeddms: any = [];
 dmscount: number;
 selectedEmploy_DMS: any = [];



addNewDMS() {
    document.getElementById("LinkSideBar").classList.add("kt-quick-panel--on");
    document.getElementById("meetingdetails").classList.add("position-fixed");
    this.GetMemosByEmployeeId();
    this.GetDMSList();
  }


  GetMemosByEmployeeId() {
    this._LinkService.GetMemosByEmployeeCode(this.Current_user_ID).
      subscribe((data) => {
        this.Memos_List = JSON.parse(data['JsonData']);
        this.originalDMSList=this.Memos_List
        this._linkedMemos= this.Memos_List.length
        console.log(this.Memos_List, "DMS");
      });
  }



    GetDMSList(){
        this._LinkService._GetMemosSubject(this.dmsIdjson).subscribe((data) => {
         if(data!=''&& data!=undefined){
          this._MemosSubjectList = JSON.parse(data['JsonData']);
          this._MemosSubjectList.forEach(element => {
           this.checkeddms.push(element.MailId);
           element.isChecked = true;
         });
         }          
          this.checkeddms = this.checkeddms.map((num) => num.toString());
          this.dmscount = this.checkeddms.length;

          console.log('hudc dhus ahj ahbh',this._MemosSubjectList)
        });
    }

    selectedChip_DMS(event: MatAutocompleteSelectedEvent): void {
     console.log(this.selectedEmploy_DMS,'jhjdbvsjdbvadkjkvbajbadjj d akjkd zkj')
      console.log('a')
      this._keeppanelopenDMs();
      const selectedEmployee = this.Memos_List.find((fruit) => fruit.MailId === event.option.value);
      if (selectedEmployee) {
        const index = this.selectedEmploy_DMS.findIndex((emp) => emp.MailId === selectedEmployee.MailId);
    
        if (index === -1) {
          // Employee not found in the selected array, add it
          this.selectedEmploy_DMS.push(selectedEmployee);
          this.selectedEmpId.push(selectedEmployee.MailId);
        } else {
          // Employee found in the selected array, remove it
          this.selectedEmploy_DMS.splice(index, 1);
          this.selectedEmpId.splice(index, 1);
        }
      }
      this.Memos_List = this.Memos_List;
    }

    _keeppanelopenDMs(){
      console.log('b')
      this._EmployeeListForDropdown = this._EmployeeListForDropdown;
      this.isSelection=true;
      this.openAutocompleteDrpDwn('supportDrpDwnDMS');// open the panel
    }



    RemoveDMS(employee: any): void {
      const index = this.selectedEmploy_DMS.findIndex((emp) => emp.Emp_No === employee.Emp_No);
      this.isSelection = false;
      if (index !== -1) {
        this.selectedEmploy_DMS.splice(index, 1);
        this.selectedEmpId.splice(index, 1);
    
        console.log(this.selectedEmpId, "selected supprem")
      }
      employee.checked = false;
      this.openAutocompleteDrpDwn_DMS('supportDrpDwnDMS'); 
    }


    filterEmployeesDMs(input: string): void {
      this.isSelection = true;
     if(input.trim() === ''){
        this.Memos_List=[...this.originalDMSList]
     }else{
        this.Memos_List=this.originalDMSList.filter(item=>{
         return item.Subject.toLocaleLowerCase().includes(input.toLocaleLowerCase())
        })
     }

    }
  
    closeAutocompleteDrpDwn_DMS(Acomp:string){
      const autoCompleteDrpDwn=this.autocompletes.find((item)=>item.autocomplete.ariaLabel===Acomp);
      requestAnimationFrame(()=>autoCompleteDrpDwn.closePanel());
    }
    
    
    openAutocompleteDrpDwn_DMS(Acomp:string){
      const autoCompleteDrpDwn=this.autocompletes.find((item)=>item.autocomplete.ariaLabel===Acomp);
      requestAnimationFrame(()=>autoCompleteDrpDwn.openPanel());
    }




    AddDMS_meetingreport() {
      debugger
      this.Schedule_ID = this.Scheduleid;
      this._calenderDto.Schedule_ID = this.Schedule_ID;
      this._calenderDto.Emp_No = this.Current_user_ID;
     
      this._calenderDto.Dms =this.selectedEmploy_DMS.map(item=>item.MailId).toString()
     
      this.CalenderService.NewinsertDMS_meetingreport(this._calenderDto).subscribe
        (data => {
          this.GetDMSList();
        });
      this.notifyService.showSuccess("DMS added successfully", "Success");
      this.selectedEmploy_DMS=[];
    }

   
/////////////////////////////////////////// DMS Side-Bar End /////////////////////////////////////////////////////////


/////////////////////////////////////////// Link Portfolios  Template  Start /////////////////////////////////////////////////////////
ProjectListArray:any
PortfolioLists:any
isPortDrpDwnOpen: any
ngDropdwonPort: any = [];
Empty_portDropdown: any;
_SelectedPorts: any;
selectedportID: any;
objPortfolioDto: PortfolioDTO;
_Message: string;
_EmployeeListForDropdown:any
originalProjectList: any[];
originalPortfolio_list: any[];
originalparticipants:any[]




AddPortfolio(){
    document.getElementById("LinkSideBar1").classList.add("kt-quick-panel--on");
    document.getElementById("meetingdetails").classList.add("position-fixed");
    document.getElementById("kt-bodyc").classList.add("overflow-hidden");
    this.GetProjectAndsubtashDrpforCalender();
}

closeLinkSideBar(){
  this.ngDropdwonPort=[];
  this.selectedEmploy_Projects=[];
  this.selectedEmploy_DMS=[];
    document.getElementById("LinkSideBar1").classList.remove("kt-quick-panel--on");
    document.getElementById("LinkSideBar2").classList.remove("kt-quick-panel--on");
    this.fruitInputpro.nativeElement.value = '';
    document.getElementById("meetingdetails").classList.remove("position-fixed");
    document.getElementById("kt-bodyc").classList.remove("overflow-hidden");
    document.getElementById("LinkSideBar").classList.remove("kt-quick-panel--on");
    this.fruitInputportfolio.nativeElement.value = '';
    this.fruitInputs.nativeElement.value='';
}

AddProjects(){
  document.getElementById("LinkSideBar2").classList.add("kt-quick-panel--on");
  document.getElementById("meetingdetails").classList.add("position-fixed");
  document.getElementById("kt-bodyc").classList.add("overflow-hidden");
  this.GetProjectAndsubtashDrpforCalender()
}



GetProjectAndsubtashDrpforCalender() {
    this.CalenderService.GetCalenderProjectandsubList(this._calenderDto).subscribe
    ((data) => {
        this.ProjectListArray=JSON.parse(data['Projectlist'])
        this.originalProjectList=this.ProjectListArray
          
        this.PortfolioLists=JSON.parse(data['Portfolio_drp'])
        this.originalPortfolio_list=this.PortfolioLists
        this._EmployeeListForDropdown = JSON.parse(data['Employeelist']);
        this.originalparticipants =this._EmployeeListForDropdown;
       
        console.log(this._EmployeeListForDropdown, "_EmployeeListForDropdown");
    });
  }

 

  closePortDrpDwn() {
    this.isPortDrpDwnOpen = false;
    requestAnimationFrame(() => this.customTrigger.closePanel())
  }

  openPortDrpDwn() {
    this.isPortDrpDwnOpen = true;
    requestAnimationFrame(() => this.customTrigger.openPanel())
  }



  onPrtClicked(e: any) {
    const prtChoosed = this.PortfolioLists.find((p) => p.portfolio_id === e.option.value)
    if (prtChoosed) {
      const index = this.ngDropdwonPort.indexOf(prtChoosed)
      if (index === -1) {
        this.ngDropdwonPort.push(prtChoosed)
      } else {
        this.ngDropdwonPort.splice(index, 1);
      }
    }
    requestAnimationFrame(() => this.customTrigger.openPanel());
  }


  closeAutocompleteDrpDwn(Acomp:string){
    const autoCompleteDrpDwn=this.autocompletes.find((item)=>item.autocomplete.ariaLabel===Acomp);
    requestAnimationFrame(()=>autoCompleteDrpDwn.closePanel());
  }

  openAutocompleteDrpDwn(Acomp:string){
    const autoCompleteDrpDwn=this.autocompletes.find((item)=>item.autocomplete.ariaLabel===Acomp);
    requestAnimationFrame(()=>autoCompleteDrpDwn.openPanel());
  }


  Portfolio_Select(selecteditems) {
    let arr = [];
    this.Empty_portDropdown = selecteditems;
    this.Empty_portDropdown.forEach(element => {
      arr.push({ Port_Id: element.Portfolio_ID })
      this._SelectedPorts = arr;
    });
    this.openAutocompleteDrpDwn('PORTFOLIOdrpdwn')
  }


  Portfolio_Deselect(selecteditems) {
    const index = this.ngDropdwonPort.indexOf(selecteditems);
    if (index !== -1) {
      this.ngDropdwonPort.splice(index, 1);
    }

    let arr = [];

    this.Empty_portDropdown = this.ngDropdwonPort;
    if (this.Empty_portDropdown != '') {
      this.Empty_portDropdown.forEach(element => {
        arr.push({ Port_Id: element.Portfolio_ID })
        this._SelectedPorts = arr;
      });
    }
    else {
      this._SelectedPorts = [];
    }
    // console.log("Deselect Memos--->", this._SelectedPorts, this.Empty_portDropdown);
  }


  
  addProjectToPortfolio() {

    this.selectedportID = JSON.stringify(this._SelectedPorts);
    // console.log(this.selectedportID,"portids");
    if (this.selectedportID != null) {
      this.objPortfolioDto.SelectedPortIdsJson = this.selectedportID;
      this.objPortfolioDto.Project_Code = this.URL_ProjectCode;
      this.objPortfolioDto.Emp_No = this.Current_user_ID;
    //   this.service.InsertPortfolioIdsByProjectCode(this.objPortfolioDto).
    //     subscribe((data) => {
    //       this._Message = (data['message']);
    //       if (this._Message == 'Updated Successfully') {
    //         // this.getPortfoliosDetails();
    //         this.notifyService.showSuccess("Project successfully added to selected Portfolio(s)", this._Message);
    //       } else {
    //         this.notifyService.showInfo("Please select atleast one portfolio and try again", "");
    //       }
    //     });

    }
  }


  filterPortfolio(input:string){
   if(input.trim()===''){
     this.PortfolioLists=[...this.originalPortfolio_list];
   } else{
    this.PortfolioLists=this.originalPortfolio_list.filter(item=>{
       return `${item.Portfolio_Name}-${item.DisplayName}`.toLocaleLowerCase().includes(input.toLocaleLowerCase())
    })
   }
  }


  OnCardClick(P_id: any) {
    sessionStorage.setItem('portfolioId', P_id);
    let name: string = 'portfolioprojects';
    var url = document.baseURI + name;
    var myurl = `${url}/${P_id}`;
    var myWindow = window.open(myurl, P_id);
    myWindow.focus();
  }


  Addportfolios_meetingreport() {
    this.Schedule_ID = this.Scheduleid;
    this._calenderDto.Schedule_ID = this.Schedule_ID;
    this._calenderDto.Emp_No = this.Current_user_ID;
    this._calenderDto.Portfolio = this.ngDropdwonPort.map(item=>item.portfolio_id).toString()
    this.CalenderService.Newinsertportfolio_meetingreport(this._calenderDto).subscribe
      (data => {
        this.meeting_details();
      });
    this.notifyService.showSuccess("Portfolio added successfully", "Success");
    this.ngDropdwonPort=[];
  }


////////////////////////////////////Link Portfolios  Template  End/////////////////////////////////////////////////////


/////////////////////////////////////////// Meeting Attendees Side-Bar start /////////////////////////////////////////////////////////


selectedEmployees: any = [];
isSupportDrpDwnOpen:boolean=false;
selectedEmpIds: any = [];
isSelection: boolean =false;



selectedChip(event: MatAutocompleteSelectedEvent): void {
  this._keeppanelopen();
  const selectedEmployee = this._EmployeeListForDropdown.find((fruit) => fruit.Emp_No === event.option.value);
  if (selectedEmployee) {
    const index = this.selectedEmployees.findIndex((emp) => emp.Emp_No === selectedEmployee.Emp_No);

    if (index === -1) {
      // Employee not found in the selected array, add it
      this.selectedEmployees.push(selectedEmployee);
      this.selectedEmpIds.push(selectedEmployee.Emp_No);
    } else {
      // Employee found in the selected array, remove it
      this.selectedEmployees.splice(index, 1);
      this.selectedEmpIds.splice(index, 1);
    }
  }

  this.fruitInput.nativeElement.value = '';
  this._EmployeeListForDropdown = this._EmployeeListForDropdown;
  console.log(this.selectedEmpIds, "selected")
}

_keeppanelopen(){
  this._EmployeeListForDropdown = this._EmployeeListForDropdown;
  this.isSelection=true;
  this.openAutocompleteDrpDwn('supportDrpDwn');// open the panel
}


remove(employee: any): void {
  
  const index = this.selectedEmployees.findIndex((emp) => emp.Emp_No === employee.Emp_No);
  this.isSelection = false;
  if (index !== -1) {
    // Remove the employee from the selectedEmployees array
    this.selectedEmployees.splice(index, 1);
    this.selectedEmpIds.splice(index, 1);

    console.log(this.selectedEmpIds, "selected supprem")
  }
  employee.checked = false;
  this.closeAutocompleteDrpDwn('supportDrpDwn'); 
}

   filterEmployees(input: string): void {
    this.isSelection = true;
    if(input.trim()===''){
      this._EmployeeListForDropdown=[...this.originalparticipants]
    }else{
      this._EmployeeListForDropdown=this.originalparticipants.filter(item=>{
       return item.DisplayName.toLocaleLowerCase().includes(input.toLocaleLowerCase())
      })
    }
  
  }



closeAutocompleteDrpDwn_part(Acomp:string){
  const autoCompleteDrpDwn=this.autocompletes.find((item)=>item.autocomplete.ariaLabel===Acomp);
  requestAnimationFrame(()=>autoCompleteDrpDwn.closePanel());
}


openAutocompleteDrpDwn_part(Acomp:string){
  const autoCompleteDrpDwn=this.autocompletes.find((item)=>item.autocomplete.ariaLabel===Acomp);
  requestAnimationFrame(()=>autoCompleteDrpDwn.openPanel());
}




Adduser_meetingreport() {
  this.Schedule_ID = this.Scheduleid;
  this._calenderDto.Schedule_ID = this.Schedule_ID;
  this._calenderDto.Emp_No = this.Current_user_ID;
  const x=this.User_Scheduledjson.map(item=>item.stringval).concat(this.selectedEmployees.map(item=>item.Emp_No));
  this._calenderDto.User_list = x;
  this.CalenderService.Newinsertuser_meetingreport(this._calenderDto).subscribe
    (data => {
      this.meeting_details();
    });
  this.notifyService.showSuccess("Participant added successfully", "Success");
  this.selectedEmployees=[];
  this.GetProjectAndsubtashDrpforCalender()
}



/////////////////////////////////////////// Meeting Attendees Side-Bar End /////////////////////////////////////////////////////////


/////////////////////////////////////////// Projects Side-Bar start /////////////////////////////////////////////////////////



selectedEmploy_Projects: any = [];
selectedProjectcodes: any = [];
isSupportDrpDwnProjects:boolean=false;
isSelectionOfProjects: boolean =false;


selectedChip_project(event: MatAutocompleteSelectedEvent): void {
  this._keeppanelopenProjects();
  const selectedEmployee = this.ProjectListArray.find((fruit) => fruit.Project_Code === event.option.value);
  if (selectedEmployee) {
    const index = this.selectedEmploy_Projects.findIndex((emp) => emp.Project_Code === selectedEmployee.Project_Code);

    if (index === -1) {
      // Employee not found in the selected array, add it
      this.selectedEmploy_Projects.push(selectedEmployee);
      this.selectedProjectcodes.push(selectedEmployee.Project_Code);
    } else {
      // Employee found in the selected array, remove it
      this.selectedEmploy_Projects.splice(index, 1);
      this.selectedProjectcodes.splice(index, 1);
    }
  }

  this.fruitInput.nativeElement.value = '';
  this.ProjectListArray = this.ProjectListArray;
  console.log(this.selectedProjectcodes, "selected")
}


_keeppanelopenProjects(){
  this._EmployeeListForDropdown = this._EmployeeListForDropdown;
  this.isSelectionOfProjects=true;
  this.openAutocompleteDrpDwn('supportDrpDwnpro');// open the panel
}


removeProjects(employee: any): void {
  const index = this.selectedEmploy_Projects.findIndex((emp) => emp.Project_Code === employee.Project_Code);
  this.isSelectionOfProjects = false;
  if (index !== -1) {
    // Remove the employee from the selectedEmployees array
    this.selectedEmploy_Projects.splice(index, 1);
    this.selectedProjectcodes.splice(index, 1);

    console.log(this.selectedProjectcodes, "selected supprem")
  }
  employee.checked = false;
  this.openAutocompleteDrpDwn_Project('supportDrpDwnpro'); 
}


filterProjects(input: string): void {
  this.isSelectionOfProjects = true;
  if (input.trim() === '') {
    this.ProjectListArray = [...this.originalProjectList];
  } else {
    this.ProjectListArray = this.originalProjectList.filter((employee) =>
      employee.BlockNameProject.toLowerCase().includes(input.toLowerCase())
    );
  }
}


closeAutocompleteDrpDwn_Project(Acomp:string){
  const autoCompleteDrpDwn=this.autocompletes.find((item)=>item.autocomplete.ariaLabel===Acomp);
  requestAnimationFrame(()=>autoCompleteDrpDwn.closePanel());
}


openAutocompleteDrpDwn_Project(Acomp:string){
  const autoCompleteDrpDwn=this.autocompletes.find((item)=>item.autocomplete.ariaLabel===Acomp);
  requestAnimationFrame(()=>autoCompleteDrpDwn.openPanel());
}



Addproject_meetingreport() {
  this.Schedule_ID = this.Scheduleid;
  this._calenderDto.Schedule_ID = this.Schedule_ID;
  this._calenderDto.Emp_No = this.Current_user_ID;
  this._calenderDto.Project_Code = this.selectedEmploy_Projects.map(item=>item.Project_Code)

  this.CalenderService.Newinsertproject_meetingreport(this._calenderDto).subscribe
    (data => {
      this.meeting_details();
    });

  this.notifyService.showSuccess("Project added successfully", "Success");
  this.selectedEmploy_Projects=[]
}


/////////////////////////////////////////// Project Side-Bar End /////////////////////////////////////////////////////////
/////////////////////////////////////////// Agenda Start /////////////////////////////////////////////////////////

list:any[]=[]

add_Agenda(item:string){
  if (item && item.trim() !== '') {
    this.list.push({ id: this.list.length, name: item });
}
}

Removetask(id:number){
    const index = this.list.findIndex(item => item.id === id);
    if (index !== -1) {
      this.list.splice(index, 1);
    }
}

clearList(){
  this.list=[]
}

// editMode: boolean = false;
// editingIndex: number = -1;

// editTask(index: number) {
//     if (this.editMode && this.editingIndex === index) {
//         this.editMode = false;
//         this.editingIndex = -1;
//     } else {
//         this.editMode = true;
//         this.editingIndex = index;
//     }
// }




showAgendaDetails(item,index){
  this.currentAgendaView=index
}


currentAgendaProject(){
  this.currentAgendaView=undefined;
}
/////////////////////////////////////////// Agenda End /////////////////////////////////////////////////////////

}