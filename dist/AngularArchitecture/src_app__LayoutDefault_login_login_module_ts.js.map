{"version":3,"file":"src_app__LayoutDefault_login_login_module_ts.js","mappings":"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","sources":["./src/app/_LayoutDefault/login/login-routing.module.ts","./src/app/_LayoutDefault/login/login.component.ts","./src/app/_LayoutDefault/login/login.component.html","./src/app/_LayoutDefault/login/login.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginComponent } from './login.component';\n\nconst routes: Routes = [{ path: '', component: LoginComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LoginRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { LoginDTO } from 'src/app/_Models/login-dto';\nimport { UserDetailsDTO } from 'src/app/_Models/user-details-dto';\nimport { NotificationService } from 'src/app/_Services/notification.service';\nimport { Login } from 'src/app/_Interface/login';\nimport { AuthService } from 'src/app/_Services/auth.service'\nimport { ProjectTypeService } from 'src/app/_Services/project-type.service';\nimport { ChangeDetectorRef } from '@angular/core';\nimport { LoadingBarService } from '@ngx-loading-bar/core';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  _LoginForm: FormGroup;\n  submitted = false;\n  Obj_ILoginDTO: Login;\n  DB_username: string;\n  DB_password: string;\n  UserDetails_List: UserDetailsDTO[];\n  isLoading = false;\n  InValidPassword = false;\n  InValidUserName = false;\n\n\n  //private ObjHomeComp: HomeComponent\n  EmpNo: string; EmpCompNo: string; SystemRole: string;\n  constructor(private formBuilder: FormBuilder,\n    private router: Router,\n    private notifyService: NotificationService,\n    private cd: ChangeDetectorRef,\n    private authService: AuthService,\n    private service: ProjectTypeService,\n    private loadingBar: LoadingBarService) {\n\n    this.Obj_ILoginDTO = new LoginDTO;\n    this.loginForm = this.formBuilder.group({\n      userid: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n  //Login Form Variables\n  // model: Login = { UserName: '', Password: '' }\n\n  loginForm: FormGroup;\n  message: string;\n  dashboardUrl: string = 'backend/dashboard';\n  policyUrl: string = 'userpolicy';\n  User_FullName: string;\n  //---end---\n  ngOnInit() {\n    this.authService.logout();\n  }\n  get f() { return this.loginForm.controls; }\n\n  OnKeyPress() {\n    this.InValidPassword = false;\n    this.InValidUserName = false;\n    this.message = '';\n  }\n\n  cosnt_Loadingbar = this.loadingBar.useRef('http');\n  OrganizationId: any;\n  IsPolicy: number;\n  login() {\n\n    this.submitted = true;\n    if (this.loginForm.invalid) {\n      return;\n    }\n    else {\n      // this.Sendlogin_Credentials();\n      // debugger\n      this.Obj_ILoginDTO.UserName = this.f.userid.value;\n      this.Obj_ILoginDTO.Password = this.f.password.value;\n      //alert(\"One\");\n      this.service.LoginCredentials(this.Obj_ILoginDTO)\n        .subscribe(\n          (data) => {\n            this.UserDetails_List = data as UserDetailsDTO[];\n           // console.log(\"Data---->\", this.UserDetails_List);\n            this.message = this.UserDetails_List[0]['Message'];\n            this.DB_username = this.UserDetails_List[0]['UserName'].toLowerCase();\n            this.DB_password = this.UserDetails_List[0]['Password'];\n            this.User_FullName = this.UserDetails_List[0]['TM_DisplayName']\n            this.IsPolicy = this.UserDetails_List[0]['IsPolicy'];\n            // console.log(\"Policy Test---->\",this.IsPolicy);\n            if (this.f.userid.value.toLowerCase() == this.DB_username && this.f.password.value == this.DB_password) {\n              //console.log(\"Login successful\");\n              // alert(\"successful Login\");\n              localStorage.setItem('isLoggedIn', \"true\");\n              this.InValidPassword = false;\n              this.cd.detectChanges();\n              this.EmpNo = data[0]['Emp_No'];\n              localStorage.setItem('EmpNo', this.EmpNo);\n              this.EmpCompNo = data[0]['Emp_Comp_No'].replace(/\\s/g, \"\");\n              this.SystemRole = data[0]['Emp_SystemRole'];\n              this.OrganizationId = data[0]['OrganizationId'];\n              sessionStorage.setItem('Emp_Email', data[0]['Emp_Email']);\n\n              sessionStorage.setItem('Session_EmpNo', this.EmpNo);\n              sessionStorage.setItem('EmpCompNo', this.EmpCompNo);\n              // sessionStorage.setItem('SystemRole', this.SystemRole);\n              localStorage.setItem(\"UserfullName\", this.User_FullName);\n              localStorage.setItem('_Currentuser', this.DB_username);\n              localStorage.setItem('OrganizationId', this.OrganizationId);\n\n              //debugger\n              if (this.IsPolicy == 1) {\n                this.router.navigate([this.dashboardUrl]);\n                this.notifyService.showInfo(this.User_FullName + ' ' + ' ', 'Login By :');\n                this.notifyService.showSuccess(\"Successfully\", \"Logged In\");\n                this.InValidPassword = false;\n                this.cd.detectChanges();\n              }\n              else if (this.IsPolicy == 0) {\n                this.router.navigate([this.policyUrl]);\n                this.InValidPassword = false;\n                this.cd.detectChanges();\n              }\n\n              //this.router.navigate([this.policyUrl]);\n              // alert(this.returnUrl);\n              // this.notifyService.showInfo(this.User_FullName + ' ' + ' ', 'Login By :');\n              // this.notifyService.showSuccess(\"Successfully\", \"Logged In\");\n            }\n            else {\n              this.InValidPassword = true;\n              console.log(\"Invalid Login\");\n              this.authService.logout();\n              localStorage.removeItem('EmpNo');\n              this.cd.detectChanges();\n              // alert(\"Invalid\");\n              // this.message = \"Please check your UserName and Password\";\n            }\n          });\n    }\n  }\n}\n\n\n//Testing Code\n// AddArray() {\n//   let array1: any = [{ MailId: 1 },{ MailId: 2 },{ MailId: 3 }];\n//   let array2: any = [{ MailId: 4 }, { MailId: 5 }, { MailId: 6 }]\n\n//     let addAll : any=[];\n\n//     console.log(\"Final Result--->\",JSON.stringify(array2.concat(array1)));\n// }","<div class=\"kt-grid kt-grid--ver kt-grid--root kt-page\">\n    <div class=\"kt-grid kt-grid--hor kt-grid--root  kt-login kt-login--v6 kt-login--signin h-100\" id=\"kt_login\">\n      <div\n        class=\"kt-grid__item kt-grid__item--fluid kt-grid kt-grid--desktop kt-grid--ver-desktop kt-grid--hor-tablet-and-mobile\">\n        <div class=\"kt-grid__item kt-grid__item--fluid kt-grid__item--center kt-grid kt-grid--ver kt-login__content\"\n          style=\"background-image: url(assets/images/login-banner.jpg);\">\n          <div class=\"kt-login__section\">\n            <div class=\"kt-login__block\">\n              <!-- <h3 class=\"kt-login__title\">Join Our Community</h3> -->\n              <div class=\"kt-login__desc\">\n                <!-- Execution Process... -->\n                <br>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"kt-grid__item  kt-grid__item--order-tablet-and-mobile-2  kt-grid kt-grid--hor kt-login__aside p-0\">\n          <div class=\"kt-login__wrapper\">\n            <div class=\"kt-login__container\">\n              <div class=\"kt-login__body\" style=\"padding:25px 30px; border-radius: 5px;\">\n                <div class=\"kt-login__logo mb-4\">\n                  <a href=\"#\">\n                    <!-- <img src=\"assets/images/logo.png\" width=\"60\"> -->\n                  </a>\n                </div>\n                <div class=\"kt-login__signin\">\n                  <div class=\"kt-login__head\">\n                    <h2 style=\"font-size: 2rem;\n                    color: #67666e;\">Sign In </h2>\n                  </div>\n                  <div class=\"kt-login__form\">\n  \n                    <form class=\"kt-form\" action=\"\" [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\n                      <div class=\"form-group mb-4\" [ngClass]=\"{ 'has-error': submitted && f.userid.errors }\">\n                        <input class=\"form-control\" type=\"text\" placeholder=\"UserName\" autocomplete=\"off\"\n                          formControlName=\"userid\">\n                        <div *ngIf=\"submitted && f.userid.errors\" class=\"help-block\">\n                          <div *ngIf=\"f.userid.errors.required\" class=\"text-info\"><b>UserName is required !</b></div>\n                        </div>\n                        <p *ngIf=\"InValidUserName\" class=\"text-danger\"><strong>In Correct UserName</strong></p>\n                      </div>\n                      <div class=\"form-group\" [ngClass]=\"{ 'has-error': submitted && f.password.errors }\">\n                        <input class=\"form-control\" type=\"password\" placeholder=\"Password\" formControlName=\"password\"\n                          (keypress)=\"OnKeyPress()\">\n  \n  \n                        <div *ngIf=\"submitted && f.password.errors\" class=\"help-block\">\n                          <div *ngIf=\"f.password.errors.required\" class=\"text-info\"><b>Password is required !</b></div>\n                        </div>\n                      </div>\n                      <p *ngIf=\"message\" class=\"text-center error\" class=\"text-danger\"><strong>{{message}}</strong></p>\n                      <!-- <div class=\"kt-login__extra\">\n                        <label class=\"kt-checkbox\">\n                          <input type=\"checkbox\" name=\"remember\"> Remember me\n                          <span></span>\n                        </label>\n                      </div> -->\n                      <div class=\"kt-login__actions\">\n                        <button id=\"kt_login_signin_submit\" class=\"btn btn-primary kt-btn px-5\" style=\"height: 38px;\"\n                          type=\"submit\">Sign In</button>\n\n                          <!-- <button id=\"kt_login_signin_submit\" class=\"btn btn-success kt-btn px-5\" style=\"height: 38px;\"\n                          (click)=\"AddArray()\">AddArray</button> -->\n                          \n  \n                        <!-- <button id=\"kt_login_signin_submit\" class=\"btn btn-brand btn-pill btn-elevate\"\n                          style=\"background-color: #22b9ff;color: #ffffff;\" type=\"submit\">\n                          [disabled]=\"isLoading\" \n                         <img  style=\"width: 30px;\" src=\"assets/Spinners/spinner4.gif\" />\n                          Sign In\n                        </button> -->\n                        <!-- *ngIf=\"isLoading\" -->\n                      </div>\n                    </form>\n                  </div>\n                </div>\n                <div class=\"kt-login__forgot\">\n                  <div class=\"kt-login__head\">\n                    <h3 class=\"kt-login__title\">Forgotten Password ?</h3>\n                    <div class=\"kt-login__desc\">Enter your email to reset your password:</div>\n                  </div>\n                  <div class=\"kt-login__form\">\n                    <form class=\"kt-form\" action=\"\">\n                      <div class=\"form-group\">\n                        <input class=\"form-control\" type=\"text\" placeholder=\"Email\" name=\"email\" id=\"kt_email\"\n                          autocomplete=\"off\">\n                      </div>\n                      <div class=\"kt-login__actions\">\n                        <button id=\"kt_login_forgot_submit\" class=\"btn btn-brand btn-pill btn-elevate\">Request</button>\n                        <button id=\"kt_login_forgot_cancel\" class=\"btn btn-outline-brand btn-pill\">Cancel</button>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <!-- <div class=\"kt-login__account\">\n              <span class=\"kt-login__account-msg\">\n                Don't have an account yet ?\n              </span>&nbsp;&nbsp;\n              <a href=\"javascript:;\" id=\"kt_login_signup\" class=\"kt-login__account-link\">Sign Up!</a>\n            </div> -->\n          </div>\n        </div>\n  \n      </div>\n    </div>\n  </div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { LoginRoutingModule } from './login-routing.module';\nimport { LoginComponent } from './login.component';\n\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    LoginRoutingModule\n  ]\n})\nexport class LoginModule { }\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}