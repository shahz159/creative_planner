{"version":3,"sources":["./node_modules/@amcharts/amcharts4/.internal/themes/animated.js","./node_modules/@amcharts/amcharts4/themes/animated.js","./node_modules/@amcharts/amcharts5/.internal/charts/funnel/FunnelSeries.js","./node_modules/@amcharts/amcharts5/.internal/charts/funnel/FunnelSlice.js","./node_modules/@amcharts/amcharts5/.internal/charts/funnel/PictorialStackedSeries.js","./node_modules/@amcharts/amcharts5/.internal/charts/funnel/PyramidSeries.js","./node_modules/@amcharts/amcharts5/.internal/charts/funnel/SlicedChart.js","./node_modules/@amcharts/amcharts5/.internal/charts/percent/PercentChart.js","./node_modules/@amcharts/amcharts5/.internal/charts/percent/PercentDefaultTheme.js","./node_modules/@amcharts/amcharts5/.internal/charts/percent/PercentSeries.js","./node_modules/@amcharts/amcharts5/.internal/charts/pie/PieChart.js","./node_modules/@amcharts/amcharts5/.internal/charts/pie/PieSeries.js","./node_modules/@amcharts/amcharts5/.internal/charts/xy/XYChart.js","./node_modules/@amcharts/amcharts5/.internal/charts/xy/XYChartDefaultTheme.js","./node_modules/@amcharts/amcharts5/.internal/charts/xy/XYChartScrollbar.js","./node_modules/@amcharts/amcharts5/.internal/charts/xy/XYCursor.js","./node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/Axis.js","./node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/AxisBullet.js","./node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/AxisLabel.js","./node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/AxisLabelRadial.js","./node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/AxisRenderer.js","./node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/AxisRendererX.js","./node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/AxisRendererY.js","./node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/AxisTick.js","./node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/CategoryAxis.js","./node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/CategoryDateAxis.js","./node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/DateAxis.js","./node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/DurationAxis.js","./node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/GaplessDateAxis.js","./node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/Grid.js","./node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/ValueAxis.js","./node_modules/@amcharts/amcharts5/.internal/charts/xy/series/BaseColumnSeries.js","./node_modules/@amcharts/amcharts5/.internal/charts/xy/series/Candlestick.js","./node_modules/@amcharts/amcharts5/.internal/charts/xy/series/CandlestickSeries.js","./node_modules/@amcharts/amcharts5/.internal/charts/xy/series/ColumnSeries.js","./node_modules/@amcharts/amcharts5/.internal/charts/xy/series/LineSeries.js","./node_modules/@amcharts/amcharts5/.internal/charts/xy/series/OHLC.js","./node_modules/@amcharts/amcharts5/.internal/charts/xy/series/OHLCSeries.js","./node_modules/@amcharts/amcharts5/.internal/charts/xy/series/SmoothedXLineSeries.js","./node_modules/@amcharts/amcharts5/.internal/charts/xy/series/SmoothedXYLineSeries.js","./node_modules/@amcharts/amcharts5/.internal/charts/xy/series/SmoothedYLineSeries.js","./node_modules/@amcharts/amcharts5/.internal/charts/xy/series/StepLineSeries.js","./node_modules/@amcharts/amcharts5/.internal/charts/xy/series/XYSeries.js","./node_modules/@amcharts/amcharts5/.internal/core/Registry.js","./node_modules/@amcharts/amcharts5/.internal/core/Root.js","./node_modules/@amcharts/amcharts5/.internal/core/Theme.js","./node_modules/@amcharts/amcharts5/.internal/core/render/Bullet.js","./node_modules/@amcharts/amcharts5/.internal/core/render/Button.js","./node_modules/@amcharts/amcharts5/.internal/core/render/Chart.js","./node_modules/@amcharts/amcharts5/.internal/core/render/Circle.js","./node_modules/@amcharts/amcharts5/.internal/core/render/Component.js","./node_modules/@amcharts/amcharts5/.internal/core/render/Container.js","./node_modules/@amcharts/amcharts5/.internal/core/render/Ellipse.js","./node_modules/@amcharts/amcharts5/.internal/core/render/Graphics.js","./node_modules/@amcharts/amcharts5/.internal/core/render/GridLayout.js","./node_modules/@amcharts/amcharts5/.internal/core/render/HeatLegend.js","./node_modules/@amcharts/amcharts5/.internal/core/render/HorizontalLayout.js","./node_modules/@amcharts/amcharts5/.internal/core/render/Label.js","./node_modules/@amcharts/amcharts5/.internal/core/render/Layout.js","./node_modules/@amcharts/amcharts5/.internal/core/render/Legend.js","./node_modules/@amcharts/amcharts5/.internal/core/render/Line.js","./node_modules/@amcharts/amcharts5/.internal/core/render/MonotoneXTension.js","./node_modules/@amcharts/amcharts5/.internal/core/render/MonotoneYTension.js","./node_modules/@amcharts/amcharts5/.internal/core/render/Picture.js","./node_modules/@amcharts/amcharts5/.internal/core/render/PointedRectangle.js","./node_modules/@amcharts/amcharts5/.internal/core/render/RadialLabel.js","./node_modules/@amcharts/amcharts5/.internal/core/render/RadialText.js","./node_modules/@amcharts/amcharts5/.internal/core/render/Rectangle.js","./node_modules/@amcharts/amcharts5/.internal/core/render/RoundedRectangle.js","./node_modules/@amcharts/amcharts5/.internal/core/render/Scrollbar.js","./node_modules/@amcharts/amcharts5/.internal/core/render/SerialChart.js","./node_modules/@amcharts/amcharts5/.internal/core/render/Series.js","./node_modules/@amcharts/amcharts5/.internal/core/render/Slice.js","./node_modules/@amcharts/amcharts5/.internal/core/render/Slider.js","./node_modules/@amcharts/amcharts5/.internal/core/render/Sprite.js","./node_modules/@amcharts/amcharts5/.internal/core/render/SpriteResizer.js","./node_modules/@amcharts/amcharts5/.internal/core/render/Star.js","./node_modules/@amcharts/amcharts5/.internal/core/render/Text.js","./node_modules/@amcharts/amcharts5/.internal/core/render/Tick.js","./node_modules/@amcharts/amcharts5/.internal/core/render/Tooltip.js","./node_modules/@amcharts/amcharts5/.internal/core/render/Triangle.js","./node_modules/@amcharts/amcharts5/.internal/core/render/VerticalLayout.js","./node_modules/@amcharts/amcharts5/.internal/core/render/backend/CanvasRenderer.js","./node_modules/@amcharts/amcharts5/.internal/core/render/backend/Renderer.js","./node_modules/@amcharts/amcharts5/.internal/core/render/gradients/Gradient.js","./node_modules/@amcharts/amcharts5/.internal/core/render/gradients/LinearGradient.js","./node_modules/@amcharts/amcharts5/.internal/core/render/gradients/RadialGradient.js","./node_modules/@amcharts/amcharts5/.internal/core/render/patterns/CirclePattern.js","./node_modules/@amcharts/amcharts5/.internal/core/render/patterns/LinePattern.js","./node_modules/@amcharts/amcharts5/.internal/core/render/patterns/Pattern.js","./node_modules/@amcharts/amcharts5/.internal/core/render/patterns/PicturePattern.js","./node_modules/@amcharts/amcharts5/.internal/core/render/patterns/RectanglePattern.js","./node_modules/@amcharts/amcharts5/.internal/core/util/Animation.js","./node_modules/@amcharts/amcharts5/.internal/core/util/Array.js","./node_modules/@amcharts/amcharts5/.internal/core/util/Children.js","./node_modules/@amcharts/amcharts5/.internal/core/util/Color.js","./node_modules/@amcharts/amcharts5/.internal/core/util/ColorSet.js","./node_modules/@amcharts/amcharts5/.internal/core/util/Data.js","./node_modules/@amcharts/amcharts5/.internal/core/util/DataParser.js","./node_modules/@amcharts/amcharts5/.internal/core/util/DataProcessor.js","./node_modules/@amcharts/amcharts5/.internal/core/util/DateFormatter.js","./node_modules/@amcharts/amcharts5/.internal/core/util/Disposer.js","./node_modules/@amcharts/amcharts5/.internal/core/util/Draw.js","./node_modules/@amcharts/amcharts5/.internal/core/util/DurationFormatter.js","./node_modules/@amcharts/amcharts5/.internal/core/util/Ease.js","./node_modules/@amcharts/amcharts5/.internal/core/util/Entity.js","./node_modules/@amcharts/amcharts5/.internal/core/util/EventDispatcher.js","./node_modules/@amcharts/amcharts5/.internal/core/util/InterfaceColors.js","./node_modules/@amcharts/amcharts5/.internal/core/util/Language.js","./node_modules/@amcharts/amcharts5/.internal/core/util/List.js","./node_modules/@amcharts/amcharts5/.internal/core/util/Math.js","./node_modules/@amcharts/amcharts5/.internal/core/util/Matrix.js","./node_modules/@amcharts/amcharts5/.internal/core/util/Modal.js","./node_modules/@amcharts/amcharts5/.internal/core/util/Net.js","./node_modules/@amcharts/amcharts5/.internal/core/util/NumberFormatter.js","./node_modules/@amcharts/amcharts5/.internal/core/util/Object.js","./node_modules/@amcharts/amcharts5/.internal/core/util/Order.js","./node_modules/@amcharts/amcharts5/.internal/core/util/Percent.js","./node_modules/@amcharts/amcharts5/.internal/core/util/PopulateString.js","./node_modules/@amcharts/amcharts5/.internal/core/util/ResizeSensor.js","./node_modules/@amcharts/amcharts5/.internal/core/util/States.js","./node_modules/@amcharts/amcharts5/.internal/core/util/Template.js","./node_modules/@amcharts/amcharts5/.internal/core/util/TextFormatter.js","./node_modules/@amcharts/amcharts5/.internal/core/util/Time.js","./node_modules/@amcharts/amcharts5/.internal/core/util/Timezone.js","./node_modules/@amcharts/amcharts5/.internal/core/util/Type.js","./node_modules/@amcharts/amcharts5/.internal/core/util/Utils.js","./node_modules/@amcharts/amcharts5/.internal/themes/DefaultTheme.js","./node_modules/@amcharts/amcharts5/index.js","./node_modules/@amcharts/amcharts5/locales/en.js","./node_modules/@amcharts/amcharts5/percent.js","./node_modules/@amcharts/amcharts5/xy.js","./node_modules/d3-path/src/index.js","./node_modules/d3-path/src/path.js","./node_modules/d3-shape/src/arc.js","./node_modules/d3-shape/src/area.js","./node_modules/d3-shape/src/areaRadial.js","./node_modules/d3-shape/src/array.js","./node_modules/d3-shape/src/constant.js","./node_modules/d3-shape/src/curve/basis.js","./node_modules/d3-shape/src/curve/basisClosed.js","./node_modules/d3-shape/src/curve/basisOpen.js","./node_modules/d3-shape/src/curve/bump.js","./node_modules/d3-shape/src/curve/bundle.js","./node_modules/d3-shape/src/curve/cardinal.js","./node_modules/d3-shape/src/curve/cardinalClosed.js","./node_modules/d3-shape/src/curve/cardinalOpen.js","./node_modules/d3-shape/src/curve/catmullRom.js","./node_modules/d3-shape/src/curve/catmullRomClosed.js","./node_modules/d3-shape/src/curve/catmullRomOpen.js","./node_modules/d3-shape/src/curve/linear.js","./node_modules/d3-shape/src/curve/linearClosed.js","./node_modules/d3-shape/src/curve/monotone.js","./node_modules/d3-shape/src/curve/natural.js","./node_modules/d3-shape/src/curve/radial.js","./node_modules/d3-shape/src/curve/step.js","./node_modules/d3-shape/src/descending.js","./node_modules/d3-shape/src/identity.js","./node_modules/d3-shape/src/index.js","./node_modules/d3-shape/src/line.js","./node_modules/d3-shape/src/lineRadial.js","./node_modules/d3-shape/src/link.js","./node_modules/d3-shape/src/math.js","./node_modules/d3-shape/src/noop.js","./node_modules/d3-shape/src/offset/diverging.js","./node_modules/d3-shape/src/offset/expand.js","./node_modules/d3-shape/src/offset/none.js","./node_modules/d3-shape/src/offset/silhouette.js","./node_modules/d3-shape/src/offset/wiggle.js","./node_modules/d3-shape/src/order/appearance.js","./node_modules/d3-shape/src/order/ascending.js","./node_modules/d3-shape/src/order/descending.js","./node_modules/d3-shape/src/order/insideOut.js","./node_modules/d3-shape/src/order/none.js","./node_modules/d3-shape/src/order/reverse.js","./node_modules/d3-shape/src/pie.js","./node_modules/d3-shape/src/point.js","./node_modules/d3-shape/src/pointRadial.js","./node_modules/d3-shape/src/stack.js","./node_modules/d3-shape/src/symbol.js","./node_modules/d3-shape/src/symbol/asterisk.js","./node_modules/d3-shape/src/symbol/circle.js","./node_modules/d3-shape/src/symbol/cross.js","./node_modules/d3-shape/src/symbol/diamond.js","./node_modules/d3-shape/src/symbol/diamond2.js","./node_modules/d3-shape/src/symbol/plus.js","./node_modules/d3-shape/src/symbol/square.js","./node_modules/d3-shape/src/symbol/square2.js","./node_modules/d3-shape/src/symbol/star.js","./node_modules/d3-shape/src/symbol/triangle.js","./node_modules/d3-shape/src/symbol/triangle2.js","./node_modules/d3-shape/src/symbol/wye.js","./node_modules/d3-shape/src/symbol/x.js","./node_modules/ng2-search-filter/__ivy_ngcc__/ng2-search-filter.js","./node_modules/svg-arc-to-cubic-bezier/modules/index.js","./node_modules/sweetalert2/dist/sweetalert2.all.js","./src/app/_LayoutDashboard/more-details/more-details.component.ts","./src/app/_LayoutDashboard/more-details/more-details.component.html","./src/app/_LayoutDashboard/to-do-projects/to-do-projects.component.ts","./src/app/_LayoutDashboard/to-do-projects/to-do-projects.component.html","./src/app/_Models/approval-dto.ts","./src/app/_Services/approvals.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAsC;AACtC;AACA,QAAQ,yDAAE;AACV;AACA;AACA,QAAQ,yDAAE;AACV;AACA;AACA;AACA,YAAY,yDAAE;AACd;AACA;AACA,YAAY,yDAAE;AACd;AACA;AACA;AACA,QAAQ,yDAAE;AACV;AACA;AACA;AACA,QAAQ,yDAAE;AACV;AACA;AACA;AACA;AACA,QAAQ,yDAAE;AACV;AACA;AACA,QAAQ,yDAAE;AACV;AACA;AACA;AACA;AACA;AACA,QAAQ,yDAAE;AACV;AACA;AACA,QAAQ,yDAAE;AACV;AACA;AACA,QAAQ,yDAAE;AACV;AACA;AACA;AACA;AACA,QAAQ,yDAAE;AACV;AACA;AACA;AACA;AACA,QAAQ,yDAAE;AACV;AACA;AACA,QAAQ,yDAAE;AACV;AACA;AACA;AACA;AACA,QAAQ,yDAAE;AACV;AACA;AACA;AACe,oEAAK,EAAC;AACrB,oC;;;;;;;;;;;;AC/DA;AAAA;AAAA;AAAA;AAAuD;AACvD,oC;;;;;;;;;;;;ACDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACD;AACL;AACA;AACR;AACE;AACE;AACa;AACb;AACF;AACE;AAChD;AACA;AACA;AACA,SAAS,yFAAyF;AAClG;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iBAAiB,qGAAqG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4DAAY,CAAC,4DAAQ,OAAO,gBAAgB,QAAQ,wDAAW;AACtF,2BAA2B,2DAAgB;AAC3C,aAAa,2BAA2B,EAAE;AAC1C;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4DAAY,CAAC,4DAAQ,OAAO,gBAAgB,QAAQ,wDAAK;AAChF,2BAA2B,2DAAgB;AAC3C,aAAa,2BAA2B,EAAE;AAC1C;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4DAAY,CAAC,4DAAQ,OAAO,gBAAgB,QAAQ,sDAAI;AAC/E,2BAA2B,2DAAgB;AAC3C,aAAa,0BAA0B,EAAE;AACzC;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4DAAY,CAAC,4DAAQ,OAAO,gBAAgB,QAAQ,wDAAW;AACtF,2BAA2B,2DAAgB;AAC3C,aAAa,0BAA0B,EAAE;AACzC;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,gDAAgD,kEAAO,eAAe,kEAAO,OAAO;AACxH;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,qDAAW;AACvB;AACA,oBAAoB,wDAAc;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,qDAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,wDAAc;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,mBAAmB;AAC3D;AACA;AACA,2CAA2C,UAAU,uDAAI,KAAK,uDAAI,EAAE;AACpE;AACA;AACA;AACA,2CAA2C,mBAAmB;AAC9D;AACA;AACA;AACA,wCAAwC,0CAA0C;AAClF;AACA,4CAA4C,IAAI,sDAAG,EAAE;AACrD,2CAA2C,UAAU,sDAAG,QAAQ;AAChE;AACA;AACA,4CAA4C,IAAI,sDAAG,EAAE;AACrD,2CAA2C,UAAU,sDAAG,QAAQ;AAChE;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,2BAA2B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,yEAAyE;AACnG,yBAAyB,kIAAkI;AAC3J;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,kCAAkC;AAChE;AACA;AACA;AACA,6BAA6B,mDAAmD;AAChF;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,iCAAiC;AAC/D;AACA;AACA;AACA,6BAA6B,oDAAoD;AACjF;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uDAAS;AAC5B,uBAAuB,yDAAW;AAClC;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uDAAS;AAC5B,uBAAuB,yDAAW;AAClC;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B,8BAA8B;AAC9B,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,gFAAgF;AACnH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,oEAAa;AAC5B,KAAK;AACL;AACA,CAAC,CAAC,oEAAa;AACS;AACxB,wC;;;;;;;;;;;;ACljBA;AAAA;AAAA;AAAA;AAAkC;AACoB;AACtD;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACbaAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,8DAAQ;AACvB,KAAK;AACL;AACA,CAAC,CAAC,8DAAQ;AACa;AACvB,uC;;;;;;;;;;;;ACjMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkC;AACc;AACM;AACF;AACpD;AACA;AACA;AACA,SAAS,oGAAoG;AAC7G;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,8DAAQ,mBAAmB,0BAA0B,sDAAG,KAAK,sDAAG,WAAW,sDAAG,WAAW,sDAAG,EAAE;AACjH,SAAS;AACT;AACA;AACA;AACA;AACA,uDAAuD,8DAAQ,mBAAmB,kEAAkE,sDAAG,KAAK,sDAAG,WAAW,sDAAG,WAAW,sDAAG,EAAE;AAC7L,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,uDAAI;AACrC,oCAAoC,uDAAI;AACxC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,4DAAa;AAC5B,KAAK;AACL;AACA,CAAC,CAAC,4DAAa;AACmB;AAClC,kD;;;;;;;;;;;;AC9GA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;AACI;AACC;AACC;AACF;AAC9C;AACA;AACA;AACA,SAAS,0FAA0F;AACnG;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,uDAAI;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,oDAAM;AAC3B,qBAAqB,oDAAM;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,gEAAsB;AACjD,iBAAiB,wDAAc;AAC/B;AACA;AACA,8BAA8B,gEAAsB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,8BAA8B;AACtE;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,8BAA8B;AACtE;AACA,qBAAqB,oDAAM;AAC3B,qBAAqB,oDAAM;AAC3B;AACA;AACA,0BAA0B,yGAAyG;AACnI,yBAAyB,0GAA0G;AACnI;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,0DAAY;AAC3B,KAAK;AACL;AACA,CAAC,CAAC,0DAAY;AACW;AACzB,yC;;;;;;;;;;;;ACvJA;AAAA;AAAA;AAAA;AAAkC;AACqB;AACvD;AACA;AACA;AACA,SAAS,wEAAwE;AACjF;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,wDAAwD;AACjG;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,kEAAY;AAC3B,KAAK;AACL;AACA,CAAC,CAAC,kEAAY;AACS;AACvB,uC;;;;;;;;;;;;ACrCA;AAAA;AAAA;AAAA;AAAA;AAAkC;AAC0B;AACA;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,wEAAmB;AACxD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,oEAAW;AAC1B,KAAK;AACL;AACA,CAAC,CAAC,oEAAW;AACW;AACxB,wC;;;;;;;;;;;;AClDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkC;AACO;AACoB;AACT;AACC;AACrD;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,SAAS;AAC5C,mCAAmC,wCAAwC;AAC3E,wBAAwB,4DAAQ,mBAAmB;AACnD,uBAAuB,uDAAI;AAC3B,wBAAwB,uDAAI;AAC5B,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,kEAAO;AAC/B;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb,oDAAoD,4BAA4B;AAChF;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,SAAS,GAAG,wCAAwC;AACnF;AACA;AACA;AACA;AACA,aAAa;AACb,yDAAyD,kBAAkB;AAC3E,8DAA8D,WAAW;AACzE,wDAAwD,cAAc;AACtE;AACA;AACA;AACA,wBAAwB,SAAS,GAAG,wCAAwC;AAC5E;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iCAAiC,SAAS,GAAG,wCAAwC;AACrF,aAAa;AACb,qDAAqD,uBAAuB;AAC5E;AACA;AACA,wBAAwB,SAAS,GAAG,wCAAwC;AAC5E,yBAAyB,sDAAG;AAC5B,aAAa;AACb;AACA;AACA,yBAAyB,sDAAG;AAC5B;AACA,aAAa;AACb;AACA;AACA,yBAAyB,sDAAG;AAC5B;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb,kEAAkE,uBAAuB;AACzF;AACA;AACA,wBAAwB,SAAS,GAAG,wCAAwC;AAC5E,yBAAyB,sDAAG;AAC5B,aAAa;AACb;AACA;AACA,yBAAyB,sDAAG;AAC5B;AACA,aAAa;AACb;AACA,yBAAyB,sDAAG;AAC5B;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,SAAS,GAAG,wCAAwC;AACnF,aAAa;AACb;AACA;AACA,wBAAwB,SAAS,GAAG,wCAAwC;AAC5E,yBAAyB,sDAAG;AAC5B,aAAa;AACb;AACA;AACA,yBAAyB,sDAAG;AAC5B;AACA,aAAa;AACb;AACA,yBAAyB,sDAAG;AAC5B;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB,gBAAgB,qEAAQ;AACxB;AACA;AACA,KAAK;AACL;AACA,CAAC,CAAC,iDAAK;AACwB;AAC/B,+C;;;;;;;;;;;;ACxNA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACR;AACM;AACI;AACZ;AACF;AAC9C;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,gEAAS,mBAAmB,0CAA0C;AAC7G,SAAS;AACT;AACA;AACA;AACA;AACA,uCAAuC,gEAAS,mBAAmB,0CAA0C;AAC7G,SAAS;AACT;AACA;AACA;AACA;AACA,uCAAuC,gEAAS,mBAAmB,0CAA0C;AAC7G,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,qDAAW;AAC3B;AACA;AACA;AACA,iBAAiB;AACjB,gBAAgB,qDAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uDAAS;AAC5B;AACA,uBAAuB,yDAAW;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uDAAS;AAC5B;AACA,uBAAuB,yDAAW;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,qDAAW;AAC3B;AACA,iBAAiB;AACjB;AACA;AACA,gBAAgB,qDAAW;AAC3B;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,qDAAW;AACvB;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uDAAS;AAC5B;AACA,uBAAuB,yDAAW;AAClC;AACA;AACA;AACA,iCAAiC,wDAAc;AAC/C;AACA;AACA;AACA;AACA,0DAA0D,qEAAqE;AAC/H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uDAAS;AAC5B;AACA,uBAAuB,yDAAW;AAClC;AACA;AACA;AACA,yEAAyE;AACzE,iCAAiC,wDAAc;AAC/C;AACA;AACA;AACA,0DAA0D,iEAAiE;AAC3H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,qDAAW,CAAC,oEAAc;AAC9C;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,gBAAgB,qDAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,gBAAgB,qDAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,gBAAgB,qDAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,gBAAgB,qDAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,0DAAM;AACrB,KAAK;AACL;AACA,CAAC,CAAC,0DAAM;AACiB;AACzB,yC;;;;;;;;;;;;ACrrBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkC;AACgB;AACK;AACT;AACE;AACF;AAC9C;AACA;AACA;AACA,SAAS,wEAAwE;AACjF;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,IAAI,sDAAG,KAAK,sDAAG,EAAE;AAC1D;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,4DAAkB;AAC3C;AACA;AACA,+BAA+B;AAC/B,uCAAuC,0DAAO;AAC9C;AACA;AACA;AACA,8BAA8B,4DAAkB;AAChD;AACA;AACA,qBAAqB,2DAAiB;AACtC;AACA;AACA,yBAAyB,gEAAsB;AAC/C;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,gEAAsB;AAC/C,8BAA8B,gEAAsB;AACpD;AACA;AACA;AACA;AACA;AACA,yCAAyC,gEAAsB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,gEAAsB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,gEAAsB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,kEAAY;AAC3B,KAAK;AACL;AACA,CAAC,CAAC,kEAAY;AACM;AACpB,oC;;;;;;;;;;;;ACzJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkC;AACuB;AACL;AACJ;AACF;AACc;AACR;AACL;AACC;AACF;AACE;AAChD;AACA;AACA;AACA,SAAS,wEAAwE;AACjF;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4DAAY,CAAC,4DAAQ,OAAO,gBAAgB,QAAQ,wDAAK;AAChF,2BAA2B,2DAAgB;AAC3C,aAAa,2BAA2B,EAAE;AAC1C;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4DAAY,CAAC,4DAAQ,OAAO,gBAAgB,QAAQ,oEAAW;AACtF,2BAA2B,2DAAgB;AAC3C,aAAa,2BAA2B,EAAE;AAC1C;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4DAAY,CAAC,4DAAQ,OAAO,gBAAgB,QAAQ,sDAAI;AAC/E,2BAA2B,2DAAgB;AAC3C,aAAa,0BAA0B,EAAE;AACzC;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,qDAAW;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,8DAAoB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,mDAAS;AAC5D;AACA;AACA,6DAA6D,qBAAqB;AAClF;AACA;AACA;AACA,yDAAyD,uDAAI;AAC7D;AACA;AACA;AACA;AACA,6DAA6D,qBAAqB;AAClF;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,mDAAS;AACnE;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,mDAAS;AACnC,0BAA0B,mDAAS;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,mDAAS;AAC/C,sCAAsC,mDAAS;AAC/C;AACA;AACA;AACA;AACA;AACA,qCAAqC,2DAA2D,GAAG,kBAAkB,GAAG,aAAa;AACrI;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,IAAI,mDAAS,gBAAgB,mDAAS,aAAa;AACtF;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,oEAAa;AAC5B,KAAK;AACL;AACA,CAAC,CAAC,oEAAa;AACM;AACrB,qC;;;;;;;;;;;;ACxQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;AACkB;AACJ;AACA;AACI;AACL;AACR;AACD;AACI;AACI;AACJ;AACF;AACF;AACE;AACE;AACF;AAChD;AACA;AACA;AACA,SAAS,wDAAwD;AACjE;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,+DAAe;AACtC,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,+DAAe;AACtC,SAAS;AACT;AACA;AACA;AACA;AACA,iBAAiB,4EAA4E;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,gEAAS,mBAAmB,QAAQ,uDAAI,sCAAsC;AACpI,SAAS;AACT;AACA;AACA;AACA;AACA,iBAAiB,4EAA4E;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,gEAAS,mBAAmB,QAAQ,uDAAI,UAAU,uDAAI,wCAAwC;AACpJ,SAAS;AACT;AACA;AACA;AACA;AACA,iBAAiB,4EAA4E;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,gEAAS,mBAAmB,QAAQ,uDAAI,sCAAsC;AACpI,SAAS;AACT;AACA;AACA;AACA;AACA,iBAAiB,4EAA4E;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,gEAAS,mBAAmB,SAAS,uDAAI,wCAAwC;AAC9I,SAAS;AACT;AACA;AACA;AACA,iBAAiB,4EAA4E;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,gEAAS,mBAAmB,QAAQ,uDAAI,UAAU,uDAAI,sBAAsB;AACzI,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,4EAA4E;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,gEAAS,mBAAmB,QAAQ,uDAAI,UAAU,uDAAI,EAAE;AAC9G,SAAS;AACT;AACA;AACA;AACA;AACA,iBAAiB,4EAA4E;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,gEAAS,mBAAmB,QAAQ,uDAAI,UAAU,uDAAI,EAAE;AAC9G,SAAS;AACT;AACA;AACA;AACA,iBAAiB,4EAA4E;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,gEAAS,mBAAmB,QAAQ,uDAAI,UAAU,uDAAI,qBAAqB;AAChI,SAAS;AACT;AACA;AACA;AACA,iBAAiB,4EAA4E;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gEAAS,mBAAmB,QAAQ,uDAAI,UAAU,uDAAI,qBAAqB;AAC9F,SAAS;AACT;AACA;AACA;AACA;AACA,iBAAiB,4EAA4E;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,gEAAS,mBAAmB,SAAS,uDAAI,wCAAwC;AAC9I,SAAS;AACT;AACA;AACA;AACA,iBAAiB,0EAA0E;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,gEAAS,oBAAoB;AAClF,SAAS;AACT;AACA;AACA;AACA,iBAAiB,qFAAqF;AACtG;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,0DAAM;AAC9D;AACA,sBAAsB,8DAAQ;AAC9B;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,oBAAoB;AACpB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,wEAAmB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,gEAAS;AACrD;AACA,sBAAsB,sDAAK;AAC3B;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,wDAAa;AAC7B;AACA;AACA;AACA;AACA,gBAAgB,wDAAa;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,wDAAa;AACjC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,8DAAmB;AACnC;AACA;AACA;AACA;AACA;AACA,kFAAkF,+CAA+C;AACjI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E,qCAAqC;AACnH;AACA;AACA;AACA;AACA,wBAAwB,uDAAY;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,yDAAyD,sDAAsD;AAC/G;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,gCAAgC;AACjF;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2FAA2F,qCAAqC;AAChI;AACA;AACA;AACA,+DAA+D,wDAAwD;AACvH;AACA;AACA;AACA;AACA,yDAAyD,sDAAsD;AAC/G;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kFAAkF,qCAAqC;AACvH,wBAAwB,uDAAY;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oFAAoF,qCAAqC;AACzH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,uDAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,oDAAM;AAC3C,qCAAqC,oDAAM;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,oDAAM;AAC3C,qCAAqC,oDAAM;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,sDAAW;AAC/B;AACA;AACA;AACA;AACA,wDAAwD,cAAc;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,oBAAoB,sDAAW;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,oBAAoB,sDAAW;AAC/B;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,sDAAW;AAC/B;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,oDAAM;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,QAAQ;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,aAAa;AACtE,yDAAyD,aAAa;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,yDAAc;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,QAAQ,+DAAoB,yCAAyC,EAAE;AAC1H;AACA,oBAAoB,sDAAW;AAC/B;AACA;AACA,+CAA+C,0DAAO;AACtD;AACA;AACA;AACA,+CAA+C,+DAA+D;AAC9G,0DAA0D,+DAA+D;AACzH;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,wBAAwB,sDAAW;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,qEAAqE;AAC5H;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,mDAAmD,QAAQ,+DAAoB,yCAAyC,EAAE;AAC1H;AACA,oBAAoB,sDAAW;AAC/B;AACA;AACA,+CAA+C,0DAAO;AACtD;AACA;AACA;AACA,+CAA+C,gGAAgG;AAC/I;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,wBAAwB,sDAAW;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,qEAAqE;AAC5H;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,oEAAW;AAC1B,KAAK;AACL;AACA,CAAC,CAAC,oEAAW;AACM;AACnB,mC;;;;;;;;;;;;AC/8CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkC;AACO;AACoB;AACT;AACC;AACP;AACA;AACA;AACI;AACF;AAChD;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,4DAAQ,mBAAmB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,mCAAmC,KAAK;AACxC,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,4DAAQ;AAChC;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB,gBAAgB,qEAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,wFAAwF,mBAAmB;AAC3G;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,yBAAyB,uDAAI;AAC7B;AACA;AACA;AACA,aAAa;AACb;AACA,wBAAwB,SAAS;AACjC;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,yBAAyB,uDAAI;AAC7B,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,yBAAyB,uDAAI;AAC7B,aAAa;AACb;AACA,yBAAyB,uDAAI;AAC7B,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,yBAAyB,uDAAI;AAC7B,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,gBAAgB,qEAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,gBAAgB,qEAAQ;AACxB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,gBAAgB,qEAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,yBAAyB,sDAAG;AAC5B,yBAAyB,sDAAG;AAC5B;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB,gBAAgB,qEAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,uDAAI;AAC3B,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uDAAI;AAC5B,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB,gBAAgB,qEAAQ;AACxB,6CAA6C,mBAAmB;AAChE;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,gBAAgB,qEAAQ;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,gBAAgB,qEAAQ;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,gBAAgB,qEAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,wDAAc;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,iBAAiB,oCAAoC;AACrD,iBAAiB,oCAAoC;AACrD,iBAAiB,qCAAqC;AACtD,iBAAiB,qCAAqC;AACtD,iBAAiB,sCAAsC;AACvD,iBAAiB,sCAAsC;AACvD,iBAAiB,+BAA+B;AAChD,iBAAiB,+BAA+B;AAChD,iBAAiB,gCAAgC;AACjD,iBAAiB,gCAAgC;AACjD,iBAAiB,+BAA+B;AAChD,iBAAiB,+BAA+B;AAChD,iBAAiB,gCAAgC;AACjD,iBAAiB,gCAAgC;AACjD,iBAAiB,gCAAgC;AACjD,iBAAiB,6BAA6B;AAC9C,iBAAiB,6BAA6B;AAC9C,iBAAiB,6BAA6B;AAC9C,iBAAiB,8BAA8B;AAC/C,iBAAiB,4BAA4B;AAC7C,iBAAiB,4BAA4B;AAC7C,iBAAiB,4BAA4B;AAC7C,iBAAiB,4BAA4B;AAC7C,iBAAiB,4BAA4B;AAC7C,iBAAiB,6BAA6B;AAC9C,iBAAiB,8BAA8B;AAC/C,iBAAiB,8BAA8B;AAC/C,iBAAiB,8BAA8B;AAC/C,iBAAiB,8BAA8B;AAC/C,iBAAiB,6BAA6B;AAC9C,iBAAiB,6BAA6B;AAC9C,iBAAiB,6BAA6B;AAC9C,iBAAiB,8BAA8B;AAC/C,iBAAiB,8BAA8B;AAC/C,iBAAiB,+BAA+B;AAChD,iBAAiB,+BAA+B;AAChD,iBAAiB,+BAA+B;AAChD,iBAAiB,gCAAgC;AACjD,iBAAiB,gCAAgC;AACjD,iBAAiB,gCAAgC;AACjD,iBAAiB,iCAAiC;AAClD,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,qDAAW;AAC1C,6BAA6B,sDAAY;AACzC,yCAAyC,sDAAY;AACrD,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,qDAAW;AAC1C,6BAA6B,sDAAY;AACzC,yCAAyC,sDAAY;AACrD;AACA;AACA,qBAAqB,oCAAoC;AACzD,qBAAqB,qCAAqC;AAC1D,qBAAqB,sCAAsC;AAC3D,qBAAqB,+BAA+B;AACpD,qBAAqB,gCAAgC;AACrD,qBAAqB,+BAA+B;AACpD,qBAAqB,gCAAgC;AACrD,qBAAqB,6BAA6B;AAClD,qBAAqB,4BAA4B;AACjD,qBAAqB,6BAA6B;AAClD,qBAAqB,8BAA8B;AACnD,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,qDAAW;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,wDAAc;AAC3C;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,wDAAc,WAAW,wDAAc;AACnE,gCAAgC,qDAAW;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,uBAAuB,kEAAO;AAC9B,wBAAwB,kEAAO;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,uHAAuH;AACvH,gBAAgB,qEAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,qHAAqH;AACrH,gBAAgB,qEAAQ;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,uBAAuB,kEAAO;AAC9B,wBAAwB,kEAAO;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,uBAAuB,kEAAO;AAC9B,wBAAwB,kEAAO;AAC/B,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,mGAAmG;AACnG,gBAAgB,qEAAQ;AACxB,gBAAgB,qEAAQ;AACxB;AACA;AACA,mGAAmG;AACnG,gBAAgB,qEAAQ;AACxB,gBAAgB,qEAAQ;AACxB;AACA;AACA,0FAA0F,iBAAiB;AAC3G,0FAA0F,iBAAiB;AAC3G;AACA,8GAA8G;AAC9G,gBAAgB,qEAAQ;AACxB,gBAAgB,qEAAQ;AACxB;AACA;AACA,8GAA8G;AAC9G,gBAAgB,qEAAQ;AACxB,gBAAgB,qEAAQ;AACxB;AACA;AACA,KAAK;AACL;AACA,CAAC,CAAC,iDAAK;AACwB;AAC/B,+C;;;;;;;;;;;;ACxoBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;AACc;AACpB;AACkB;AACN;AAChD;AACA;AACA;AACA,SAAS,gGAAgG;AACzG;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,gDAAO;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,8DAAQ;AAC/C;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,0DAAgB;AACvD;AACA;AACA;AACA;AACA;AACA,+CAA+C,eAAe;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,oDAAM;AAC/B;AACA;AACA,yBAAyB,oDAAM;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,gEAAS;AACxB,KAAK;AACL;AACA,CAAC,CAAC,gEAAS;AACiB;AAC5B,4C;;;;;;;;;;;;ACrIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkC;AACsB;AACT;AACO;AACnB;AACnC,UAAU,aAAa;AACuB;AACE;AACF;AACE;AACE;AAClD;AACA;AACA;AACA,SAAS,+DAA+D;AACxE;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,+CAAI;AAC3C;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,+CAAI;AAC3C;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,8DAAQ;AAC/C;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,oBAAoB;AACpB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,0DAAgB;AACvD;AACA,yBAAyB,UAAU,uDAAI,UAAU,uDAAI,0CAA0C;AAC/F,0CAA0C,4BAA4B;AACtE;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,yDAAyD,0CAA0C,EAAE;AACrG,wDAAwD,yCAAyC,EAAE;AACnG,yDAAyD,0CAA0C,EAAE;AACrG,wDAAwD,yCAAyC,EAAE;AACnG,gBAAgB,yDAAe;AAC/B,qCAAqC,iEAAuB;AAC5D;AACA,iBAAiB;AACjaAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,qDAAW;AAC/B;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,oBAAoB,qDAAW,+CAA+C,aAAa;AAC3F;AACA,oCAAoC,yGAAyG;AAC7I;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,oBAAoB,qDAAW,+CAA+C,aAAa;AAC3F;AACA,oCAAoC,yGAAyG;AAC7I;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,gBAAgB,yDAAe;AAC/B;AACA,wBAAwB,6DAAmB;AAC3C;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,wBAAwB,sDAAY;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,4DAA4D,qCAAqC;AACjG;AACA;AACA,oDAAoD,EAAE;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,2BAA2B;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,qCAAqC;AACzG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,2BAA2B;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,sDAAY;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,qCAAqC;AACrG;AACA;AACA;AACA;AACA;AACA,iCAAiC,iCAAiC;AAClE;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,EAAE;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,wDAAc;AAClC;AACA;AACA;AACA;AACA,oBAAoB,wDAAc;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,oDAAoD,2BAA2B;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,2BAA2B;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,gEAAS;AACxB,KAAK;AACL;AACA,CAAC,CAAC,gEAAS;AACS;AACpB,oC;;;;;;;;;;;;ACjvBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;AACgB;AACC;AACA;AACT;AACH;AACY;AACR;AACF;AACE;AACnD;AACA;AACA;AACA,SAAS,oEAAoE;AAC7E;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,gEAAS,oBAAoB;AACpE,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gEAAS,mBAAmB,QAAQ,uDAAI,UAAU,uDAAI,EAAE;AAC3E,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gEAAS,mBAAmB,QAAQ,uDAAI,UAAU,uDAAI,EAAE;AAC3E,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,gEAAS,mBAAmB,2BAA2B,uDAAI,UAAU,uDAAI,wBAAwB;AACxI,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,iBAAiB,yEAAyE;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,oDAAI;AAC3B,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,iBAAiB,oFAAoF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,iBAAiB,0EAA0E;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,gEAAS;AAChD;AACA;AACA,4BAA4B,gEAAS;AACrC;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,qDAAW;AAC/B;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,+DAAQ,oBAAoB;AACjF;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,oDAAM;AAC/B;AACA,qBAAqB,wDAAc;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,wDAAc;AAClC;AACA;AACA;AACA,oBAAoB,wDAAc;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,8DAA8D;AACnH;AACA;AACA,qDAAqD,0DAA0D;AAC/G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,6CAA6C;AAC7C,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,YAAY,qDAAW;AACvB;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,0DAAgB;AACjE;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,qDAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,wDAAc;AAC9B,gBAAgB,qDAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,yBAAyB,qDAAW;AACpaAAa,yEAAyE;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,gEAAS;AACxB,KAAK;AACL;AACA,CAAC,CAAC,gEAAS;AACK;AAChB,gC;;;;;;;;;;;;AC5+BA;AAAA;AAAA;AAAA;AAAkC;AACiB;AACnD;AACA;AACA;AACA,SAAS,0EAA0E;AACnF;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,uCAAuC;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,wDAAM;AACrB,KAAK;AACL;AACA,CAAC,CAAC,wDAAM;AACc;AACtB,sC;;;;;;;;;;;;AC1DA;AAAA;AAAA;AAAA;AAAkC;AACiB;AACnD;AACA;AACA;AACA,SAAS,oEAAoE;AAC7E;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,wDAAK;AACpB,KAAK;AACL;AACA,CAAC,CAAC,wDAAK;AACc;AACrB,qC;;;;;;;;;;;;ACnCA;AAAA;AAAA;AAAA;AAAkC;AAC6B;AAC/D;AACA;AACA;AACA,SAAS,oEAAoE;AAC7E;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,oEAAW;AAC1B,KAAK;AACL;AACA,CAAC,CAAC,oEAAW;AACc;AAC3B,2C;;;;;;;;;;;;AClCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkC;AACuB;AACF;AACA;AACjB;AACR;AACU;AACW;AACnD;AACA;AACA;AACA;AACA;AACA,SAAS,sEAAsE;AAC/E;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4DAAY,CAAC,4DAAQ,OAAO,gBAAgB,QAAQ,kDAAQ;AACnF,2BAA2B,0DAAgB;AAC3C,aAAa,0BAA0B,EAAE;AACzC,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4DAAY,CAAC,4DAAQ,OAAO,gBAAgB,QAAQ,0CAAI;AAC/E,2BAA2B,0DAAgB;AAC3C,aAAa,yBAAyB,EAAE;AACxC,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4DAAY,CAAC,4DAAQ,OAAO,gBAAgB,QAAQ,8DAAQ;AACnF,2BAA2B,0DAAgB;AAC3C,aAAa,8BAA8B,EAAE;AAC7C,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4DAAY,CAAC,4DAAQ,OAAO,gBAAgB,QAAQ,oDAAS;AACpF,2BAA2B,0DAAgB;AAC3C,aAAa,2BAA2B,EAAE;AAC1C,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,0DAAgB;AAClD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,0DAAgB;AAClD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,0DAAgB;AACtD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,0DAAgB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,gFAAgF,qCAAqC;AACrH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE,qCAAqC;AAC9G;AACA;AACA;AACA,kCAAkC,iDAAiD;AACnF;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,8DAAQ;AACvB,KAAK;AACL;AACA,CAAC,CAAC,8DAAQ;AACc;AACxB,wC;;;;;;;;;;;;AC3dA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;AACI;AACI;AACD;AACE;AACQ;AAC3D;AACA;AACA;AACA,SAAS,sEAAsE;AAC/E;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gEAAS,mBAAmB,QAAQ,uDAAI,wDAAwD;AACnH,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,0DAAgB;AACvD;AACA;AACA;AACA,uCAAuC,uDAAI;AAC3C;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,gEAAsB;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,kDAAkD;AACrF;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,uDAAI;AAClC;AACA;AACA,8CAA8C,uDAAI;AAClD,oCAAoC,yBAAyB;AAC7D;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,wDAAc;AACnC;AACA;AACA;AACA,oBAAoB,wDAAc;AAClC;AACA;AACA;AACA;AACA;AACA,oBAAoB,wDAAc;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,uDAAI;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,wDAAc;AAClC;AACA;AACA;AACA;AACA;AACA,qBAAqB,wDAAc;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,uDAAI;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,wDAAc;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,wDAAc;AACnC;AACA;AACA;AACA,oBAAoB,wDAAc;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,wDAAc;AACvC;AACA;AACA;AACA,wBAAwB,wDAAc;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,wDAAc;AACnC;AACA;AACA,qBAAqB,wDAAc;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,oDAAM;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,+CAA+C;AAC3F;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,aAAa;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA,iBAAiB,2DAAiB;AAClC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,0DAAY;AAC3B,KAAK;AACL;AACA,CAAC,CAAC,0DAAY;AACW;AACzB,yC;;;;;;;;;;;;ACveA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;AACI;AACI;AACD;AACE;AACQ;AAC3D;AACA;AACA;AACA,SAAS,sEAAsE;AAC/E;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,mBAAmB,gEAAS,mBAAmB,SAAS,uDAAI,wDAAwD;AACpH,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,0DAAgB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,uDAAI;AAC1C;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,uDAAI;AACvC;AACA;AACA;AACA,+CAA+C,uDAAI;AACnD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,gEAAsB;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,gEAAgE;AACnG;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,wDAAc;AACnC;AACA;AACA;AACA,oBAAoB,wDAAc;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,wDAAc;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,wDAAc;AACnC;AACA;AACA;AACA,oBAAoB,wDAAc;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,wDAAc;AACnC;AACA;AACA;AACA,oBAAoB,wDAAc;AAClC;AACA;AACA;AACA;AACA;AACA,oBAAoB,wDAAc;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,wDAAc;AACvC;AACA;AACA;AACA,wBAAwB,wDAAc;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,wDAAc;AACnC;AACA;AACA,qBAAqB,wDAAc;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,oDAAM;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,+CAA+C;AAC3F;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,aAAa;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA,iBAAiB,2DAAiB;AAClC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,0DAAY;AAC3B,KAAK;AACL;AACA,CAAC,CAAC,0DAAY;AACW;AACzB,yC;;;;;;;;;;;;ACrhBA;AAAA;AAAA;AAAA;AAAkC;AACe;AACjD;AACA;AACA;AACA,SAAS,mEAAmE;AAC5E;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,sDAAI;AACnB,KAAK;AACL;AACA,CAAC,CAAC,sDAAI;AACc;AACpB,oC;;;;;;;;;;;;ACnCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkC;AACJ;AACqB;AACF;AACA;AACE;AACgB;AACnE;AACA;AACA;AACA,SAAS,2EAA2E;AACpF;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,0DAAgB;AACvD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,qDAAW;AAC3B;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,qDAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,SAAS;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,QAAQ;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,qDAAW;AAC3C;AACA;AACA;AACA;AACA,iCAAiC;AACjC,gCAAgC,qDAAW;AAC3C;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA,oDAAoD,cAAc;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,SAAS;AACpC;AACA;AACA;AACA,oCAAoC,cAAc;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,wDAAc;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,wDAAc;AACniBAAiB,wDAAc;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,0DAAgB,yCAAyC;AAC5E;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,gFAAc;AACzC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,SAAS;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,0CAAI;AACnB,KAAK;AACL;AACA,CAAC,CAAC,0CAAI;AACkB;AACxB,wC;;;;;;;;;;;;AC3lBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4C;AACE;AACG;AACA;AACE;AACA;AACnD;AACA;AACA;AACA,SAAS,gFAAgF;AACzF;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,0DAAgB;AACvD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,SAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,8DAAoB;AACnD,+BAA+B,2DAAiB;AAChD;AACA,gBAAgB,mEAAyB;AACzC,+BAA+B,sDAAQ,GAAG;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,cAAc;AAClD;AACA;AACA;AACA;AACA;AACA,gCAAgC,4DAAkB;AAClD;AACA;AACA;AACA,sEAAsE,wDAAc;AACpF,4BAA4B,2DAAiB;AAC7C;AACA;AACA;AACA;AACA,gDAAgD,qCAAqC;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,qCAAqC;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,qDAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mEAAyB;AAC5C;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,0DAAY;AAC3B,KAAK;AACL;AACA,CAAC,CAAC,0DAAY;AACc;AAC5B,4C;;;;;;;;;;;;ACrNA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4C;AACc;AAClB;AACS;AACE;AACA;AACE;AACF;AACF;AACjD;AACA;AACA;AACA,SAAS,uEAAuE;AAChF;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,0DAAgB;AACvD;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,mEAAyB;AAC1D;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,wDAAc,SAAS,wDAAc;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,qDAAW;AACvC;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,4BAA4B,qDAAW;AACvC;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC,gBAAgB,qDAAW;AAC3B,2CAA2C,mEAAyB;AACpE;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,qDAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,qDAAW;AAC/B;AACA;AACA;AACA;AACA,qBAAqB;AACrB,2CAA2C,2DAAiB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,qDAAW;AAC/B;AACA,0CAA0C,qDAAW;AACrD;AACA;AACA,0CAA0C,sDAAY;AACtD,8CAA8C,+DAAQ;AACtD;AACA;AACA,4BAA4B,qDAAW;AACvC;AACA,oCAAoC,wDAAc;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,qDAAW;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,sDAAY;AACpE;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,8DAAoB;AACpD,gBAAgB,mEAAyB,kBAAkB,mEAAyB;AACpF,gCAAgC,sDAAQ,GAAG;AAC3C;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,wDAAc,kBAAkB,wDAAc;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,qDAAW;AACvC;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA,gBAAgB,qDAAW;AAC3B;AACA;AACA,oCAAoC,+DAAqB;AACzD,mCAAmC,wDAAc;AACjD,yBAAyB;AACzB;AACA;AACA;AACA;AACA,kCAAkC,+DAAqB;AACvD,mCAAmC,wDAAc;AACjD,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,wDAAc,SAAS,wDAAc;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,8DAAoB;AACvD,oBAAoB,mEAAyB;AAC7C,mCAAmC,sDAAQ,GAAG;AAC9C;AACA,uCAAuC,mEAAyB;AAChE;AACA,mCAAmC,2DAAiB;AACpD,wBAAwB,qDAAW;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,+DAAQ,oBAAoB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,2DAAiB;AAC5D,+BAA+B,qDAAW;AAC1C;AACA;AACA;AACA,sEAAsE,wDAAc;AACpF;AACA,gCAAgC,2DAAiB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,2BAA2B;AAC1D;AACA;AACA,gBAAgB,qDAAW;AAC3B;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,qDAAW;AACvC,sCAAsC,2DAAiB;AACvD,sBAAsB,qDAAW;AACjC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,qDAAW;AACvC,sCAAsC,2DAAiB;AACvD,sBAAsB,qDAAW;AACjC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mEAAyB;AAC5C;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,qDAAW;AACvB;AACA,oBAAoB,wDAAc;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,qDAAW;AAC/C,8CAA8C,2DAAiB;AAC/D,kCAAkC,qDAAW;AAC7C;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,qDAAW;AAC5B;AACA;AACA,wBAAwB,qDAAW;AACnC,+BAA+B,uEAA6B;AAC5D;AACA,4BAA4B,qDAAW;AACvC;AACA,+BAA+B,uEAA6B;AAC5D;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,uEAA6B;AAC5D;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,+DAAqB;AAC9C;AACA;AACA;AACA;AACA,uBAAuB,wDAAc;AACrC,aAAa;AACbgBAAgB,wDAAc,SAAS,wDAAc;AACrD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,oDAAS;AACxB,KAAK;AACL;AACA,CAAC,CAAC,oDAAS;AACS;AACpB,oC;;;;;;;;;;;;ACv7BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4C;AACJ;AACW;AACF;AACjD;AACA;AACA;AACA,SAAS,2EAA2E;AACpF;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,0DAAgB;AACvD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,sDAAQ,6CAA6C,oBAAoB;AACnH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,QAAQ,gBAAgB;AACvD;AACA;AACA;AACA;AACA,6BAA6B,0BAA0B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,uDAAa;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,qDAAW;AACnC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,oDAAS;AACxB,KAAK;AACL;AACA,CAAC,CAAC,oDAAS;AACa;AACxB,wC;;;;;;;;;;;;ACpKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4C;AACN;AACoB;AACP;AACA;AACF;AACA;AACjD;AACA;AACA;AACA;AACA,SAAS,+EAA+E;AACxF;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,+DAAqB,sBAAsB,QAAQ,wDAAc,UAAU,EAAE;AACtG;AACA,gBAAgB,4DAAkB;AAClC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,qDAAW;AACvB;AACA;AACA;AACA;AACA,gBAAgB,qDAAW;AAC3B;AACA,wBAAwB,wDAAc;AACtC;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,+DAAqB,sBAAsB,QAAQ,wDAAc,WAAW,EAAE;AACvG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,+DAAqB,sBAAsB,QAAQ,wDAAc,WAAW,EAAE;AACvG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,wDAAc,eAAe,wDAAc;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,cAAc;AAC/E;AACA;AACA;AACA;AACA,qCAAqC,8DAAoB;AACzD;AACA,yCAAyC,mEAAyB;AAClE;AACA,qCAAqC,sDAAQ,GAAG;AAChD,yCAAyC,mEAAyB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,qDAAW;AAC3C,4BAA4B,mDAAS;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,WAAW;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,qDAAW;AACnC;AACA;AACA;AACA,6BAA6B,2DAAiB;AAC9C,4BAA4B,qDAAW;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,2DAAiB;AAC1D,oBAAoB,qDAAW;AAC/B;AACA;AACA,2CAA2C,+DAAQ,qBAAqB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iFAAiF,wDAAc;AAC/F;AACA,wCAAwC,2DAAiB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,gBAAgB,qDAAW;AAC3B;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,kDAAQ;AACvB,KAAK;AACL;AACA,CAAC,CAAC,kDAAQ;AACiB;AAC3B,2C;;;;;;;;;;;;AC9TA;AAAA;AAAA;AAAA;AAAkC;AACuB;AACzD;AACA;AACA;AACA,SAAS,kEAAkE;AAC3E;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,8DAAQ;AACvB,KAAK;AACL;AACA,CAAC,CAAC,8DAAQ;AACM;AAChB,gC;;;;;;;;;;;;ACvCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;AACgB;AAC5B;AAC8B;AACX;AACE;AACF;AACE;AACnD;AACA;AACA;AACA,SAAS,wEAAwE;AACjF;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,uCAAuC,0DAAgB;AACvD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,iEAAa;AACpD;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,wDAAc,SAAS,wDAAc;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,+DAAQ,oBAAoB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,qDAAW;AAC3C;AACA;AACA;AACA;AACA,+BAA+B,2BAA2B;AAC1D;AACA;AACA,gBAAgB,qDAAW;AAC3B;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,wDAAc;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,8DAAoB;AACxD;AACA,2BAA2B,qDAAW;AACtC,2BAA2B,qDAAW;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,wDAAc;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,wDAAc;AACtgCAAgC,qDAAW;AAC3C;AACA;AACA;AACA;AACA,iDAAiD,qDAAW;AAC5D;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,gCAAgC,qDAAW;AAC3C;AACA;AACA;AACA;AACA,iDAAiD,qDAAW;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA,oDAAoD,cAAc;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,wDAAc,SAAS,wDAAc;AACrD;AACA;AACA,gBAAgB,qDAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,wDAAc;AAC9C;AACA;AACA,gCAAgC,wDAAc;AAC9C;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,yBAAyB,oDAAM;AAC/B;AACA,oBAAoB,wDAAc;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,wDAAc;AACtC;AACA;AACA;AACA,oBAAoB,wDAAc;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,wDAAc;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,0DAAgB;AACjD,iCAAiC,0DAAgB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,wDAAc;AACtC;AACA;AACA,wBAAwB,wDAAc;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,qDAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,wDAAc,eAAe,wDAAc;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,oBAAoB,wDAAc;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,wDAAc;AAC9B;AACA;AACA,gBAAgB,wDAAc;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,wDAAc;AAC9B;AACA;AACA,gBAAgB,wDAAc;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,wDAAc;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,wDAAc;AAClC;AACA;AACA;AACA;AACA;AACA,oBAAoB,wDAAc;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,wDAAc;AAC9B;AACA;AACA,gBAAgB,wDAAc;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,qDAAW;AAC7B,kBAAkB,qDAAW;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,wDAAc,SAAS,wDAAc;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,0DAA0D;AACnG,yCAAyC,0DAA0D;AACnG;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,wDAAc;AAC9B,iCAAiC,oDAAU;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,qDAAW;AAClC;AACA;AACA;AACA,kBAAkB,qDAAW;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,qDAAW;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,qDAAW;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,qDAAW;AACvB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,wDAAc,WAAW,wDAAc;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,WAAW;AACtC,oBAAoB,qDAAW;AAC/B;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,0CAAI;AACnB,KAAK;AACL;AACA,CAAC,CAAC,0CAAI;AACe;AACrB,qC;;;;;;;;;;;;ACrxCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACpB;AACe;AACU;AACZ;AACF;AACjD;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,eAAe;AACvD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,qDAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,kBAAkB;AACvD;AACA;AACA;AACA,8CAA8C,iBAAiB;AAC/D;AACA;AACA;AACA;AACA,qDAAqD,QAAQ;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,iBAAiB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,WAAW;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,6DAA6D;AAC7G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,0DAAO;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,0DAAO;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,qDAAqD;AACnG;AACA;AACA;AACA;AACA,yCAAyC,0DAAO;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,mCAAmC;AACjF;AACA;AACA;AACA;AACA;AACA,0CAA0C,0DAAO;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,mCAAmC;AACjF;AACA;AACA,oJAAoJ,qDAAW,SAAS,qDAAW;AACnL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,qDAAW;AAC/B;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,wDAAc;AAC9B;AACA;AACA;AACA;AACA,gBAAgB,wDAAc;AAC9B;AACA;AACA;AACA;AACA,gBAAgB,wDAAc;AAC9B;AACA;AACA;AACA;AACA,gBAAgB,wDAAc;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,qDAAW;AACvB;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,wDAAc,YAAY,wDAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,wDAAc;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,qDAAW;AAC3B;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uDAAS;AAC5B;AACA,uBAAuB,yDAAW;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,qDAAW;AAC3C;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,qDAAW;AAC3B;AACA,iBAAiB;AACjB;AACA;AACA;AACA,gBAAgB,qDAAW;AAC3B;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uDAAS;AAC5B;AACA,uBAAuB,yDAAW;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,qDAAW;AAC3C;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,qDAAW,CAAC,oEAAc;AAClD;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,kDAAQ;AACvB,KAAK;AACL;AACA,CAAC,CAAC,kDAAQ;AACkB;AAC5B,4C;;;;;;;;;;;;ACzqBA;AAAA;AAAA;AAAA;AAAkC;AACuC;AACzE;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,8EAAgB;AAC/B,KAAK;AACL;AACA,CAAC,CAAC,8EAAgB;AACK;AACvB,uC;;;;;;;;;;;;ACjDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkC;AACY;AACF;AACW;AACA;AACJ;AACA;AACnD;AACA;AACA;AACA,SAAS,kFAAkF;AAC3F;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4DAAY,CAAC,4DAAQ;AAC5C;AACA,aAAa,gBAAgB,QAAQ,wDAAW;AAChD,2BAA2B,0DAAgB;AAC3C,aAAa,4BAA4B,EAAE;AAC3C,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,qDAAW;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,4DAAY,CAAC,4DAAQ,OAAO,gBAAgB,QAAQ,wDAAW;AACnG,2BAA2B,0DAAgB;AAC3C,aAAa,wDAAwD,EAAE;AACvE;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,0DAAY;AAC3B,KAAK;AACL;AACA,CAAC,CAAC,0DAAY;AACe;AAC7B,6C;;;;;;;;;;;;AC7KA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkC;AACoB;AACC;AACA;AACkB;AACtB;AACnD;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4DAAY,CAAC,4DAAQ,OAAO,gBAAgB,QAAQ,8EAAgB;AAC3F;AACA,2BAA2B,0DAAgB;AAC3C,aAAa,4BAA4B,EAAE;AAC3C,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,4DAAY,CAAC,4DAAQ,OAAO,gBAAgB,QAAQ,8EAAgB;AACxG;AACA,2BAA2B,0DAAgB;AAC3C,aAAa,wDAAwD,EAAE;AACvE;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,kEAAgB;AAC/B,KAAK;AACL;AACA,CAAC,CAAC,kEAAgB;AACM;AACxB,wC;;;;;;;;;;;;ACrEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkC;AACI;AACmB;AACnB;AACiB;AACA;AACN;AACS;AACC;AACV;AACE;AACA;AACnD;AACA;AACA;AACA,SAAS,2EAA2E;AACpF;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,mBAAmB,qDAAI;AACvB,SAAS;AACT;AACA;AACA;AACA;AACA,mBAAmB,qDAAI;AACvB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4DAAY,CAAC,4DAAQ,OAAO,gBAAgB,QAAQ,8DAAQ;AACnF,2BAA2B,2DAAgB;AAC3C,aAAa,4BAA4B,EAAE;AAC3C,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4DAAY,CAAC,4DAAQ,OAAO,gBAAgB,QAAQ,8DAAQ;AACnF,2BAA2B,2DAAgB;AAC3C,aAAa,0BAA0B,EAAE;AACzC,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,sDAAW;AACnC,iCAAiC,wDAAc;AAC/C;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,QAAQ;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,sDAAW;AACvC,qCAAqC,wDAAc;AACnD;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,SAAS;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,qBAAqB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,4DAAQ;AAClE,+CAA+C,4DAAQ;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,4DAAQ;AAChE,6CAA6C,4DAAQ;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,qDAAW;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,qDAAW;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,sDAAW;AAC/B;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,sDAAW;AAC/B;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,4DAAY,CAAC,4DAAQ,OAAO,gBAAgB,QAAQ,8DAAQ;AAC9F,2BAA2B,2DAAgB;AAC3C,aAAa,oDAAoD,EAAE;AACnE,oCAAoC,4DAAY,CAAC,4DAAQ,OAAO,gBAAgB,QAAQ,8DAAQ;AAChG,2BAA2B,2DAAgB;AAC3C,aAAa,wDAAwD,EAAE;AACvE;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,gEAAS,oBAAoB,uBAAuB,8DAAK,YAAY;AAC9G,wDAAwD,8DAAQ;AAChE;AACA,iBAAiB;AACjB;AACA,sDAAsD,8DAAQ;AAC9D;AACA,iBAAiB;AACjB;AACA;AACA,wDAAwD,6CAA6C;AACrG,sDAAsD,6CAA6C;AACnG;AACA;AACA;AACA,4EAA4E,+DAAQ,SAAS,IAAI;AACjG;AACA;AACA,kDAAkD,8DAAQ;AAC1D,kEAAkE,6CAA6C;AAC/G;AACA;AACA;AACA;AACA;AACA,+CAA+C,gDAAgD;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,kDAAQ;AACvB,KAAK;AACL;AACA,CAAC,CAAC,kDAAQ;AACY;AACtB,sC;;;;;;;;;;;;ACrsBA;AAAA;AAAA;AAAA;AAAkC;AACU;AAC5C;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,wDAAW;AAC1B,KAAK;AACL;AACA,CAAC,CAAC,wDAAW;AACG;AAChB,gC;;;;;;;;;;;;AClDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkC;AACsB;AAC1B;AACyB;AACA;AACJ;AACnD;AACA;AACA;AACA,SAAS,kFAAkF;AAC3F;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4DAAY,CAAC,4DAAQ;AAC5C;AACA,aAAa,gBAAgB,QAAQ,0CAAI;AACzC,2BAA2B,0DAAgB;AAC3C,aAAa,4BAA4B,EAAE;AAC3C,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,4DAAY,CAAC,4DAAQ,OAAO,gBAAgB,QAAQ,0CAAI;AAC5F,2BAA2B,0DAAgB;AAC3C,aAAa,wDAAwD,EAAE;AACvE;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,oEAAiB;AAChC,KAAK;AACL;AACA,CAAC,CAAC,oEAAiB;AACG;AACtB,sC;;;;;;;;;;;;AC5EA;AAAA;AAAA;AAAA;AAAA;AAAkC;AACQ;AACoC;AAC9E;AACA;AACA;AACA,SAAS,+EAA+E;AACxF;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,2FAAqB;AAClE;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,2FAAqB;AAC9D;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,sDAAU;AACzB,KAAK;AACL;AACA,CAAC,CAAC,sDAAU;AACmB;AAC/B,+C;;;;;;;;;;;;ACjDA;AAAA;AAAA;AAAA;AAAA;AAAkC;AACQ;AACD;AACzC;AACA;AACA;AACA,SAAS,+EAA+E;AACxF;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,sDAAa;AAC1D;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,sDAAa;AACtD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,sDAAU;AACzB,KAAK;AACL;AACA,CAAC,CAAC,sDAAU;AACoB;AAChC,gD;;;;;;;;;;;;ACjDA;AAAA;AAAA;AAAA;AAAA;AAAkC;AACQ;AACoC;AAC9E;AACA;AACA;AACA,SAAS,+EAA+E;AACxF;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,2FAAqB;AAClE;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,2FAAqB;AAC9D;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,sDAAU;AACzB,KAAK;AACL;AACA,CAAC,CAAC,sDAAU;AACmB;AAC/B,+C;;;;;;;;;;;;ACjDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkC;AACQ;AACQ;AACR;AAC1C;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,uDAAc;AAC3D;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,uDAAI;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,yFAAyF;AAChI;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,sDAAU;AACzB,KAAK;AACL;AACA,CAAC,CAAC,sDAAU;AACc;AAC1B,0C;;;;;;;;;;;;ACnJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACA;AACL;AACN;AACY;AACF;AACR;AACI;AACF;AACA;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,+DAA+D;AACxE;AACA;AACA,IAAI,uDAAS;AACbuCAAuC,gEAAS,oBAAoB;AACpE,SAAS;AACT;AACA;AACA;AACA,iBAAiB,yEAAyE;AAC1F;AACA;AACA;AACA;AACA;AACA,uBAAuB,ouBAAuB,+DAAQ,qBAAqB;AACpD,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,qDAAW;AAC/B;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,6BAA6B;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,4BAA4B,gEAAS,mBAAmB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,uDAAa;AACzB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,qDAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,gBAAgB,qDAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,4DAAkB;AAC9B,YAAY,4DAAkB;AAC9B;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,gEAAsB;AACjD;AACA,2BAA2B,gEAAsB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E,KAA8B,IAAI,KAA8B,IAAI,KAA6B,IAAI,KAA6B,IAAI,KAA8B,IAAI,KAA8B;AACjR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,gEAAsB;AAC5D,sCAAsC,gEAAsB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,qDAAW;AAC3B,oBAAoB,qDAAW;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,oBAAoB,qDAAW;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,cAAc;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,cAAc;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,8DAAQ,mBAAmB;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,QAAQ;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,sDAAY;AACxB;AACA,aAAa;AACb;AACA,YAAY,qDAAW;AACvB;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,qDAAW;AACvB,+BAA+B,SAAS;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,wDAAc;AAC9C,oCAAoC,wDAAc;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,wDAAc,WAAW,wDAAc;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,qDAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,qDAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACbgDAAgD,mCAAmC;AACnF;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,qDAAW;AAC3B;AACA;AACA,wBAAwB,qDAAW;AACnC;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB;AACA,6CAA6C;AAC7C;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uDAAS;AAC5B;AACA;AACA,uBAAuB,yDAAW;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uDAAS;AAC5B;AACA;AACA,uBAAuB,yDAAW;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uDAAS;AAC5B;AACA,uBAAuB,yDAAW;AAClC;AACA;AACA;AACA,iCAAiC,wDAAc;AAC/C;AACA;AACA;AACA,4BAA4B,qDAAW;AACvC,gEAAgE,kFAAkF;AAClJ,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uDAAS;AAC5B;AACA,uBAAuB,yDAAW;AAClC;AACA;AACA;AACA,yEAAyE;AACzE,iCAAiC,wDAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,qDAAW;AAC3C;AACA;AACA,wCAAwC,wDAAc;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,0EAA0E;AAClJ;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA,oCAAoC,wDAAc;AAClD;AACA;AACA;AACA;AACA;AACA,gCAAgC,qDAAW;AAC3C;AACA;AACA,wEAAwE,4EAA4E;AACpJ;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,sDAAY;AAC5B;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,qDAAW;AACnC;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,+EAA+E,yBAAyB;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,uBAAuB,KAAK;AAC5B;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,aAAa,yEAAyE;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,0DAAM;AACrB,KAAK;AACL;AACA,CAAC,CAAC,0DAAM;AACY;AACpB,oC;;;;;;;;;;;;AC3mDA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACmB;AACpB;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,oC;;;;;;;;;;;;ACnEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACV;AACwB;AACJ;AACR;AACN;AACQ;AACM;AACZ;AACE;AACJ;AACc;AACJ;AACQ;AAClB;AACc;AACH;AACW;AAClB;AACV;AACkB;AACjB;AACC;AACA;AACE;AACF;AACF;AACH;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,qEAAqE;AAC9E;AACA;AACA;AACA,kCAAkC,eAAe;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,iBAAiB,wDAAwD;AACzE;AACA;AACA;AACA;AACA;AACA,uBAAuB,sEAAe;AACtC,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,wDAAQ,aAAa;AACxC,SAAS;AACT;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,mBAAmB,oDAAE;AACrB,SAAS;AACT;AACA;AACA;AACA;AACA,iBAAiB,gGAAgG;AACjH;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,+EAA+E;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iBAAiB,iFAAiF;AAClG;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,iBAAiB,+EAA+E;AAChG;AACA;AACA;AACA;AACA;AACA,mBAAmB,sEAAe,aAAa;AAC/C,SAAS;AACT;AACA;AACA;AACA,iBAAiB,6EAA6E;AAC9F;AACA;AACA;AACA;AACA;AACA,mBAAmB,kEAAa,aAAa;AAC7C,SAAS;AACT;AACA;AACA;AACA,iBAAiB,6EAA6E;AAC9F;AACA;AACA;AACA;AACA;AACA,mBAAmB,0EAAiB,aAAa;AACjD,SAAS;AACT;AACA;AACA;AACA;AACA,iBAAiB,+DAA+D;AAChF;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,iBAAiB,gGAAgG;AACjH;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,qEAAc,aAAa;AAC9C,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,yEAAgB,aAAa;AAChD,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,6DAAU,aAAa;AAC1C,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,8DAAwB;AACjD;AACA,6BAA6B,8EAAc;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,iDAAW,CAAC,mDAAQ;AAC5B;AACA;AACA;AACA,SAAS;AACT,+BAA+B,qEAAe,aAAa;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,2DAAqB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA,sDAAsD,gEAAgE;AACtH;AACA;AACA;AACA,QAAQ,mDAAQ;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,2DAAS;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,8DAAO;AAC9B,6BAA6B,mDAAI;AACjC;AACA,8BAA8B,mDAAI;AAClC;AACA,gCAAgC,2DAAS;AACzC,8BAA8B,0DAAK;AACnC;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA,8BAA8B,wDAAO;AACrC;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB,8CAA8C;AAC9C,2CAA2C,yDAAQ;AACnD,4BAA4B,0DAAK;AACjC;AACA;AACA,iBAAiB;AACjB,0CAA0C,SAAS,0DAAK,YAAY;AACpE,2CAA2C,yDAAQ;AACnD,4BAA4B,0DAAK;AACjC;AACA;AACA,iBAAiB;AACjB,0CAA0C,SAAS,0DAAK,YAAY;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,2DAAS,YAAY,8CAA8C;AACnG;AACA,oDAAoD,kEAAY;AAChE,wDAAwD,2DAAS,YAAY,uBAAuB,mDAAI,UAAU,mDAAI,EAAE;AACxH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,2DAAqB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,qDAAe;AAC/B,qCAAqC,6DAAuB;AAC5D;AACA;AACA;AACA,iBAAiB;AACjB,qCAAqC,6DAAuB;AAC5D;AACA;AACA;AACA,iBAAiB;AACjB,qCAAqC,6DAAuB;AAC5D;AACA;AACA;AACA;AACA,4BAA4B,iDAAW;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA,iBAAiB;AACjB,qCAAqC,6DAAuB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0FAA0F,8CAA8C,EAAE;AAC1I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,kDAAY;AAChD;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,+DAAY;AACzD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,YAAY,iDAAW;AACvB;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,YAAY,mDAAa;AACzB;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,kDAAY;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,YAAY,kDAAY;AACxB;AACA,aAAa;AACb;AACA;AACA,YAAY,kDAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,YAAY,kDAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,uBAAuB,oDAAc;AACrC,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,YAAY,kDAAY;AACxB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvaAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,uDAAQ;AAC/B,gBAAgB,wDAAkB;AAClC,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,2DAAS;AAC9C;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,iDAAW;AAC3B;AACA,iBAAiB;AACjB;AACA,oBAAoB,0DAAoB;AACxC;AACA;AACA;AACA;AACA;AACA,gBAAgB,mDAAa,CAAC,mDAAQ;AACtC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,aAAa,+DAA+D;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,sDAAgB;AACjE;AACA,KAAK;AACL;AACA;AACA;AACA,aAAa,wDAAwD;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE,2DAAS,YAAY,iDAAiD,mDAAI,UAAU,mDAAI,aAAa;AAC9K;AACA;AACA;AACA;AACA;AACA,8BAA8B,wDAAO,oBAAoB;AACzD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,oDAAc;AAC9B;AACA;AACA,gBAAgB,mDAAa;AAC7B;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,YAAY,mDAAa;AACzB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,YAAY,iDAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,4EAAc;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,2DAAqB;AACjC;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,2BAA2B,6DAAuB;AAClD;AACA,aAAa;AACb,2BAA2B,6DAAuB;AAClD;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,YAAY,mDAAa;AACzB;AACA;AACA;AACA;AACA,gBAAgB,iDAAW;AAC3B;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,sDAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,2DAAqB;AACjkDAAY;AACxB,oBAAoB,oDAAc;AAClC;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,2DAAS;AAC3C;AACA;AACA,iBAAiB;AACjB;AACA,uCAAuC,iDAAI;AAC3C;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,KAAK,mDAAQ,iBAAiB;AACzD,oBAAoB,mDAAQ,2BAA2B,GAAG;AAC1D;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,iBAAiB,2FAA2F;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iBAAiB,2FAA2F;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,2DAAqB;AACjC;AACA;AACA,qCAAqC,6DAAuB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA,YAAY,oDAAc;AAC1B;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,iDAAW;AACvB;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,iDAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,mDAAa;AACzB;AACA,KAAK;AACL;AACA,CAAC;AACe;AAChB,gC;;;;;;;;;;;;ACjhEA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACJ;AACA;AACvC;AACA;AACA;AACA,SAAS,wDAAwD;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,2EAA2E;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,KAAK;AACL;AACA;AACA;AACA,aAAa,+CAA+C;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,+CAA+C;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,gBAAgB;AACvD;AACA;AACA;AACA;AACA,2BAA2B,mDAAc;AACzC,qBAAqB,0DAAqB;AAC1C,4BAA4B,mDAAc;AAC1C;AACA,2BAA2B,wDAAmB,oBAAoB,mDAAc;AAChF;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,+BAA+B,uDAAQ,OAAO;AAC9C;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,aAAa,+CAA+C;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,gBAAgB;AACvD;AACA;AACA,KAAK;AACL;AACA,CAAC;AACgB;AACjB,iC;;;;;;;;;;;;ACpIA;AAAA;AAAA;AAAA;AAAkC;AACc;AAChD;AACA;AACA;AACA,SAAS,yEAAyE;AAClF;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,uCAAuC;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,wDAAM;AACrB,KAAK;AACL;AACA,CAAC,CAAC,wDAAM;AACU;AAClB,kC;;;;;;;;;;;;ACzEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkC;AAC4B;AACtB;AACQ;AAChD;AACA;AACA;AACA,SAAS,yEAAyE;AAClF;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,0DAAgB;AACvD;AACA;AACA,uCAAuC,yEAAgB;AACvD,+BAA+B,0DAAgB;AAC/C,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,oDAAS;AACxB,KAAK;AACL;AACA,CAAC,CAAC,oDAAS;AACO;AAClB,kC;;;;;;;;;;;;AChFA;AAAA;AAAA;AAAA;AAAA;AAAkC;AACsB;AACT;AAC/C;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,gEAAS,mBAAmB,QAAQ,uDAAI,UAAU,uDAAI,8BAA8B;AAC3H,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gEAAS,mBAAmB,6EAA6E,uDAAI,UAAU,uDAAI,EAAE;AAChJ,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,gEAAS;AACxB,KAAK;AACL;AACA,CAAC,CAAC,gEAAS;AACM;AACjB,iC;;;;;;;;;;;;ACjDA;AAAA;AAAA;AAAA;AAAkC;AACI;AACtC;AACA;AACA;AACA,SAAS,0EAA0E;AACnF;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,kDAAQ;AACvB,KAAK;AACL;AACA,CAAC,CAAC,kDAAQ;AACQ;AAClB,kC;;;;;;;;;;;;AClDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AAChB;AACF;AACA;AACA;AACE;AAC1C;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC,CAAC,qDAAQ;AACU;AACpB;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,miBAAiB,sDAAsD;AACvE;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,gDAAW;AAC/B;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,iDAAY;AAChC;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,gDAAW;AAC3B;AACA;AACA;AACA,oDAAoD;AACpD;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,gBAAgB,gDAAW;AAC3B;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,qCAAqC;AACrC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA,gBAAgB,gDAAW;AAC3B;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,gBAAgB,gDAAW;AAC3B;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uDAAS;AAC5B,uBAAuB,yDAAW;AAClC;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uDAAS;AAC5B,uBAAuB,yDAAW;AAClC;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,2BAA2B;AAC3E;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,oDAAS;AACxB,KAAK;AACL;AACA,CAAC,CAAC,oDAAS;AACU;AACrB,qC;;;;;;;;;;;;AC7iBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkC;AACU;AACF;AACR;AACM;AACc;AACJ;AACR;AACc;AAChB;AACF;AACE;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,4EAA4E;AACrF;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,uDAAQ;AAC/B,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,YAAY,uDAAkB;AAC9B;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,oDAAS;AAC/C;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gDAAW;AACvB;AACA,aAAa;AACb,YAAY,gDAAW;AACvB;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,kCAAkC;AACzE;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,+BAA+B;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,mDAAmD;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,kEAAgB,sBAAsB,sDAAU;AAClF;AACA;AACA,kCAAkC,8DAAc;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,oDAAc;AAC9B;AACA;AACA;AACA,gBAAgB,oDAAc;AAC9B;AACA;AACA;AACA,gBAAgB,oDAAc;AAC9B;AACA;AACA;AACA,gBAAgB,oDAAc;AAC9B;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,kEAAgB,sBAAsB,sDAAU;AAC1F;AACA;AACA,0CAA0C,8DAAc;AACxD;AACA;AACA;AACA,gBAAgB,gDAAW;AAC3B;AACA;AACA,6CAA6C,qDAAO;AACpD;AACA;AACA;AACA;AACA;AACA,8CAA8C,qDAAO;AACrD;AACA;AACA;AACA,iBAAiB;AACjB,gBAAgB,gDAAW;AAC3B;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,2EAAc;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,oDAAS;AACrE;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,4BAA4B,yDAAmB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,8CAAM;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,2EAAc;AAC/D;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,8CAAM;AACrB,KAAK;AACL;AACA,CAAC,CAAC,8CAAM;AACa;AACrB,qC;;;;;;;;;;;;ACxrBA;AAAA;AAAA;AAAA;AAAkC;AACI;AACtC;AACA;AACA;AACA,SAAS,0EAA0E;AACnF;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,kDAAQ;AACvB,KAAK;AACL;AACA,CAAC,CAAC,kDAAQ;AACS;AACnB,mC;;;;;;;;;;;;AClDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkC;AACiC;AACjC;AACa;AACT;AACE;AACjC;AACP;AACA;AACA;AACA,SAAS,0EAA0E;AACnF;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mDAAc;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,2DAAS;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,8EAAc;AACjE;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,gDAAW;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,8EAAc;AACvE;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,gDAAW;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,8CAAM;AACrB,KAAK;AACL;AACA,CAAC,CAAC,8CAAM;AACY;AACpB,oC;;;;;;;;;;;;ACtQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkC;AACc;AACR;AACF;AACtC;AACA;AACA;AACA,SAAS,mFAAmF;AAC5F;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,4DAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,2BAA2B,qDAAgB;AAC3C,2BAA2B,qDAAgB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,4DAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,4DAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,YAAY,gDAAW;AACvB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,8CAAM;AACrB,KAAK;AACL;AACA,CAAC,CAAC,8CAAM;AACc;AACtB,sC;;;;;;;;;;;;ACrJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkC;AACM;AACQ;AACD;AACuB;AAClB;AACA;AACN;AACM;AACwB;AAC5B;AACF;AAC9C;AACA;AACA;AACA,SAAS,oEAAoE;AAC7E;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,oDAAS,oBAAoB;AACpE,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,oDAAS,oBAAoB;AACpE,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,wDAAK,mBAAmB,uBAAuB;AACrG,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,wDAAK,mBAAmB,qBAAqB;AACnG,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4DAAY,CAAC,4DAAQ,OAAO,gBAAgB,QAAQ,8EAAgB;AAC3F,2BAA2B,2DAAgB;AAC3C,aAAa,4BAA4B,EAAE;AAC3C,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,2DAAgB;AACvD;AACA,gCAAgC,4DAAO;AACvC;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,yDAAc;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,sDAAK;AACjC;AACA;AACA;AACA;AACA,uDAAuD,wCAAwC;AAC/F;AACA;AACA,uDAAuD,iCAAiC;AACxF;AACA;AACA;AACA,2CAA2C,sDAAK;AAChD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,4CAA4C,uDAAI,EAAE;AACnG;AACA,uCAAuC,IAAI,uDAAI,yBAAyB,uDAAI,WAAW,uDAAI,EAAE;AAC7F,qCAAqC,0CAA0C,uDAAI,EAAE;AACrF,2CAA2C,SAAS,uDAAI,oBAAoB;AAC5E;AACA;AACA;AACA;AACA;AACA,iDAAiD,6CAA6C,uDAAI,EAAE;AACpG;AACA,uCAAuC,6CAA6C;AACpF,qCAAqC,IAAI,uDAAI,yBAAyB,uDAAI,cAAc;AACxF,2CAA2C,QAAQ,uDAAI,qBAAqB;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,eAAe;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,sDAAK;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,oFAAc,kBAAkB,UAAU,oBAAoB,GAAG,kBAAkB,GAAG;AACzH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,oDAAS;AACxB,KAAK;AACL;AACA,CAAC,CAAC,oDAAS;AACW;AACtB,sC;;;;;;;;;;;;ACnPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkC;AACc;AACV;AACI;AAC1C;AACA;AACA;AACA,SAAS,mFAAmF;AAC5F;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,4DAAY;AACxB;AACA;AACA;AACA,kDAAkD,qDAAO;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,mDAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,YAAY,4DAAY;AACxB;AACA;AACA;AACA,kDAAkD,qDAAO;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,YAAY,4DAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,8CAAM;AACrB,KAAK;AACL;AACA,CAAC,CAAC,8CAAM;AACoB;AAC5B,4C;;;;;;;;;;;;AChHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkC;AACI;AACM;AACJ;AACQ;AACF;AAC9C;AACA;AACA;AACA,SAAS,wEAAwE;AACjF;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,qDAAW;AACvB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,4CAA4C,iDAAI,mBAAmB;AACnE;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,qDAAW;AACvB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,kDAAI;AAChC;AACA;AACA,4BAA4B,iDAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,wDAAc;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,wDAAc;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,oDAAS;AACxB,KAAK;AACL;AACA,CAAC,CAAC,oDAAS;AACM;AACjB,iC;;;;;;;;;;;;AC9NA;AAAA;AAAA;AAAA;AAAA;AAAkC;AACM;AACjC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,mDAAM;AACrB,KAAK;AACL;AACA,CAAC,CAAC,mDAAM;AACU;AAClB,kC;;;;;;;;;;;;ACjCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkC;AACA;AACsB;AACR;AACsB;AAClB;AACA;AACJ;AAChD;AACA;AACA;AACA;AACA,SAAS,wDAAwD;AACjE;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4DAAY,CAAC,4DAAQ,OAAO,gBAAgB,QAAQ,gEAAS;AACpF,2BAA2B,0DAAgB;AAC3C,+BAA+B,0DAAgB;AAC/C,4BAA4B,8EAAgB;AAC5C,+BAA+B,0DAAgB;AAC/C,mCAAmC,0DAAgB;AACnD,iBAAiB;AACjB,aAAa,mCAAmC,EAAE;AAClD,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4DAAY,CAAC,4DAAQ,OAAO,gBAAgB,QAAQ,gEAAS;AACpF,2BAA2B,0DAAgB;AAC3C,aAAa,4BAA4B,EAAE;AAC3C,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4DAAY,CAAC,4DAAQ,OAAO,gBAAgB,QAAQ,wDAAK;AAChF,2BAA2B,0DAAgB;AAC3C,aAAa,2BAA2B,EAAE;AAC1C,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4DAAY,CAAC,4DAAQ,OAAO,gBAAgB,QAAQ,wDAAK;AAChF,2BAA2B,0DAAgB;AAC3C,aAAa,gCAAgC,EAAE;AAC/C,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4DAAY,CAAC,4DAAQ,OAAO,gBAAgB,QAAQ,8EAAgB;AAC3F,2BAA2B,0DAAgB;AAC3C,aAAa,qCAAqC,EAAE;AACpD,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,0DAAgB;AACvD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,8CAA8C,6BAA6B;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mFAAmF;AACnF,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,8CAAM;AACrB,KAAK;AACL;AACA,CAAC,CAAC,8CAAM;AACU;AAClB,kC;;;;;;;;;;;;ACtXA;AAAA;AAAA;AAAA;AAAA;AAAkC;AACI;AACA;AACtC;AACA;AACA;AACA,SAAS,0EAA0E;AACnF;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,wDAAmB;AACvC;AACA;AACA,oBAAoB,wDAAmB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,kDAAQ;AACvB,KAAK;AACL;AACA,CAAC,CAAC,kDAAQ;AACM;AAChB,gC;;;;;;;;;;;;AClEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AAC2B;AAC5B;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4C;;;;;;;;;;;;ACpLA;AAAA;AAAA;AAAA;AAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,oDAAM;AACvB;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AAC2B;AAC5B;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4C;;;;;;;;;;;;AC1LA;AAAA;AAAA;AAAA;AAAA;AAAkC;AACA;AACI;AACtC;AACA;AACA;AACA,SAAS,wEAAwE;AACjF;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,mDAAc;AACpD;AACA;AACA;AACA,uCAAuC,mDAAc;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mDAAc,OAAO,mDAAc;AACvD;AACA;AACA;AACA,yBAAyB,mDAAc;AACvC;AACA;AACA,yBAAyB,mDAAc;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mDAAc;AAClC;AACA;AACA,oBAAoB,mDAAc;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,8CAAM;AACrB,KAAK;AACL;AACA,CAAC,CAAC,8CAAM;AACW;AACnB,mC;;;;;;;;;;;;ACrIA;AAAA;AAAA;AAAA;AAAA;AAAkC;AACI;AACA;AACtC;AACA;AACA;AACA,SAAS,0EAA0E;AACnF;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,qDAAgB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,qDAAgB;AAC/D,4BAA4B,qDAAgB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,qDAAgB;AAC/D,4BAA4B,qDAAgB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,qDAAgB;AAC/D,4BAA4B,qDAAgB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,qDAAgB;AAC/D,4BAA4B,qDAAgB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,kDAAQ;AACvB,KAAK;AACL;AACA,CAAC,CAAC,kDAAQ;AACkB;AAC5B,4C;;;;;;;;;;;;AC1HA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkC;AAClC;AAC+C;AACf;AACU;AACJ;AACE;AACxC;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,4CAA4C,sDAAU,mBAAmB;AACzE;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,2DAAsB;AAC9D;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,yDAAoB;AACrD;AACA;AACA,0BAA0B,8CAAS;AACnC,0BAA0B,8CAAS;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,iDAAG;AAClD,+CAA+C,iDAAG;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,qDAAO;AAClD;AACA;AACA,6BAA6B,8CAAS;AACtC,6BAA6B,8CAAS;AACtC;AACA;AACA;AACA,6BAA6B,8CAAS;AACtC,6BAA6B,8CAAS;AACtC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,4CAAK;AACpB,KAAK;AACL;AACA,CAAC,CAAC,4CAAK;AACgB;AACvB,uC;;;;;;;;;;;;AC7LA;AAAA;AAAA;AAAA;AAAA;AAAkC;AACJ;AACQ;AACtC;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E,kDAAa;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,0CAAI;AACnB,KAAK;AACL;AACA,CAAC,CAAC,0CAAI;AACgB;AACtB,sC;;;;;;;;;;;;AC1EA;AAAA;AAAA;AAAA;AAAkC;AACI;AACtC;AACA;AACA;AACA,SAAS,0EAA0E;AACnF;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,kDAAQ;AACvB,KAAK;AACL;AACA,CAAC,CAAC,kDAAQ;AACW;AACrB,qC;;;;;;;;;;;;ACnEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkC;AACI;AACA;AACE;AACA;AACxC;AACA;AACA;AACA,SAAS,0EAA0E;AACnF;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,mDAAc,OAAO,mDAAc;AACnD;AACA,2BAA2B,2DAAsB;AACjD,2BAA2B,2DAAsB;AACjD,2BAA2B,2DAAsB;AACjD,2BAA2B,2DAAsB;AACjD;AACA,uBAAuB,qDAAgB;AACvC,uBAAuB,qDAAgB;AACvC,uBAAuB,qDAAgB;AACvC,uBAAuB,qDAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,oDAAS;AACxB,KAAK;AACL;AACA,CAAC,CAAC,oDAAS;AACiB;AAC5B,4C;;;;;;;;;;;;ACpFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkC;AAC4B;AACtB;AACF;AACJ;AACI;AACE;AACxC;AACA;AACA;AACA;AACA,SAAS,mEAAmE;AAC5E;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,qDAAgB;AACvD;AACA,4CAA4C,yEAAgB;AAC5D,+BAA+B,qDAAgB;AAC/C,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,sCAAsC,8CAAM;AAC5C,gFAAgF,kDAAQ;AACxF;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,sCAAsC,yEAAgB;AACtD;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,wFAAwF;AAC5J;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB;AACA;AACA,qBAAqB,wDAAmB;AACxC;AACA;AACA;AACA;AACA,+BAA+B,0DAA0D;AACzF,+BAA+B,wDAAwD;AACvF,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,4GAA4G;AACjK;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mDAAc,QAAQ,mDAAc;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mDAAc,QAAQ,mDAAc;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,oDAAS;AACxB,KAAK;AACL;AACA,CAAC,CAAC,oDAAS;AACU;AACrB,qC;;;;;;;;;;;;AC1bA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkC;AACF;AACwB;AACD;AACR;AACC;AAChD;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gEAAS,mBAAmB,QAAQ,uDAAI,UAAU,uDAAI,qBAAqB;AAC9F,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,+DAAe;AACtC,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,qDAAW;AAC/B;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,4CAAK;AACpB,KAAK;AACL;AACA,CAAC,CAAC,4CAAK;AACgB;AACvB,uC;;;;;;;;;;;;AClHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACF;AACZ;AACE;AACiB;AACb;AACF;AACF;AACA;AACC;AACS;AACR;AAChD;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,iBAAiB,yEAAyE;AAC1F;AACA;AACA;AACA;AACA;AACA,uBAAuB,oDAAI;AAC3B,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gEAAS,mBAAmB,QAAQ,uDAAI,UAAU,uDAAI,wBAAwB;AACjG,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,YAAY,qDAAW;AACvB;AACA;AACA,oBAAoB,qDAAW;AAC/B;AACA,qBAAqB;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,qDAAW;AAC9B;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,gBAAgB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,qDAAW;AACvB;AACA;AACA;AACA,aAAa;AACb,YAAY,qDAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,cAAc;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,YAAY,qDAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,gBAAgB,qDAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,qDAAW;AAC3B;AACA;AACA,oBAAoB,qDAAW;AAC/B;AACA,6BAA6B,wDAAc;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,wDAAc,aAAa,wDAAc;AACrE;AACA;AACA;AACA;AACA,4BAA4B,wDAAc;AAC1C;AACA;AACA,qDAAqD,sDAAK;AAC1D,4CAA4C,sDAAK;AACjD;AACA,qDAAqD,0DAAO;AAC5D,4CAA4C,+EAAkB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,gBAAgB;AAC/C;AACA;AACA,wCAAwC,cAAc;AACtD;AACA;AACA,sCAAsC,WAAW;AACjD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,qDAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,gEAAS;AACvD;AACA;AACA;AACA,qDAAqD,yDAAK;AAC1D;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,0CAA0C,yDAAK;AAC/C;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,qDAAW;AAC3B;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA,gBAAgB,qDAAW;AAC3B;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uDAAS;AAC5B;AACA,uBAAuB,yDAAW;AAClC;AACA;AACA;AACA;AACA;AACA,gCAAgC,qDAAW;AAC3C;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uDAAS;AAC5B;AACA,uBAAuB,yDAAW;AAClC;AACA;AACA;AACA;AACA;AACA,gCAAgC,qDAAW;AAC3C;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,mBAAmB,uDAAS;AAC5B;AACA;AACA,uBAAuB,yDAAW;AAClC;AACA;AACA;AACA,iCAAiC,wDAAc;AAC/C;AACA;AACA;AACA;AACA;AACA,6DAA6D,oDAAU,yCAAyC,QAAQ,uDAAS;AACjI;AACA,2CAA2C,yDAAW;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,qDAAW;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC,iCAAiC,EAAE,EAAE;AACrC;AACA;AACA;AACA,iEAAiE,oDAAU;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,gEAAS;AACxB,KAAK;AACL;AACA,CAAC,CAAC,gEAAS;AACO;AAClB,kC;;;;;;;;;;;;ACnyBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkC;AACI;AACA;AACI;AACX;AACO;AACtC;AACA;AACA;AACA,SAAS,0EAA0E;AACnF;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,mBAAmB,oDAAG;AACtB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,mDAAc;AAC9B;AACA;AACA,gBAAgB,mDAAc;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,qDAAO;AAC3C;AACA;AACA,oCAAoC,qDAAO;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,gFAAgF,kDAAa,wCAAwC,kDAAa,EAAE;AAC/K;AACA,0BAA0B,8CAAS;AACnC,0BAA0B,8CAAS;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,kDAAQ;AACvB,KAAK;AACL;AACA,CAAC,CAAC,kDAAQ;AACO;AACjB,iC;;;;;;;;;;;;AChJA;AAAA;AAAA;AAAA;AAAkC;AACM;AACxC;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,qCAAqC;AACtE;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,oDAAS;AACxB,KAAK;AACL;AACA,CAAC,CAAC,oDAAS;AACO;AAClB,kC;;;;;;;;;;;;ACnDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AAClB;AACI;AACF;AACgB;AACQ;AACZ;AACd;AACA;AACF;AACI;AACJ;AACtC,UAAU,iBAAiB;AAC3B;AACA;AACA;AACA,SAAS,wDAAwD;AACjE;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,4DAA4D,8DAAe;AAC3E;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,4DAAa;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACA,CAAC,CAAC,qEAAe;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,SAAS;AACT;AACA;AACA;AACA;AACA,oBAAoB;AACpkDAAkD,uDAAQ;AAC1D,uCAAuC,uDAAQ;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,qDAAO,kCAAkC,qDAAO;AACjG,oBAAoB,mDAAc;AAClC;AACA;AACA,oBAAoB,uDAAkB;AACtC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,qDAAO,6BAA6B,qDAAO;AACxF,oBAAoB,mDAAc;AAClC;AACA;AACA,oBAAoB,uDAAkB;AACtC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,2DAAsB;AAChF;AACA;AACA;AACA,yDAAyD,2DAAsB;AAC/E;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,4DAAa;AAC9D;AACA;AACA;AACA,6BAA6B;AAC7B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,4DAAa;AACpD;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,4DAAa;AAC3D;AACA,8DAA8D,4BAA4B,EAAE;AAC5F,6BAA6B;AAC7B,4BAA4B,4DAAuB;AACnD;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,4DAAa;AAC3D;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+EAA+E,qDAAO,8DAA8D,qDAAO;AAC3J;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,4DAAa;AACrD;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,4DAAa;AACrD;AACA,gCAAgC,wDAAmB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC,qCAAqC;AACrC;AACA;AACA,yBAAyB;AACzB;AACA,gCAAgC,wDAAmB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,wDAAmB;AACnD;AACA,oBAAoB,kDAAY;AAChC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,wDAAmB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,mBAAmB,kDAAY;AAC/B;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,wDAAmB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,oDAAoD,+CAAS,cAAc,+CAAS;AACpF,oDAAoD,+CAAS,cAAc,+CAAS;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+FAA+F;AAC/F;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,gCAAgC;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,mDAAc;AAC9B;AACA;AACA;AACA;AACA,gBAAgB,mDAAc;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,mDAAc;AAC9B;AACA;AACA,gBAAgB,mDAAc;AAC9B;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,uDAAkB;AAClC,gBAAgB,uDAAkB;AAClwBAAwB,2DAAsB;AAC9C,wBAAwB,2DAAsB;AAC9C;AACA;AACA,sCAAsC,2DAAsB;AAC5D,qCAAqC,2DAAsB;AAC3D;AACA,wBAAwB;AACxB;AACA,oBAAoB;AACpB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,qDAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,mDAAc;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,qDAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,mDAAc;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,gCAAgC;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,qDAAO;AACxC,2BAA2B,2DAAsB;AACjD;AACA;AACA,yBAAyB,mDAAc;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,qDAAO;AACxC,2BAA2B,2DAAsB;AACjD;AACA;AACA,yBAAyB,mDAAc;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,gCAAgC;AACpE,oCAAoC,iCAAiC;AACrE,oCAAoC,oCAAoC;AACxE,oCAAoC,mCAAmC;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uDAAS;AAC5B;AACA,uBAAuB,yDAAW;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uDAAS;AAC5B;AACA,uBAAuB,yDAAW;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,yEAAiB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uDAAS;AAC5B;AACA,uBAAuB,yDAAW;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA,iDAAiD,yEAAiB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACbgBAAgB,mDAAc;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,qDAAO;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,mDAAc;AAC3C;AACA;AACA;AACA;AACA,gBAAgB,mDAAc;AAC9B;AACA;AACA,gBAAgB,mDAAc;AAC9B;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,mDAAc;AAC9B;AACA;AACA;AACA;AACA,oBAAoB,mDAAc;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,mDAAc;AAC9B;AACA;AACA;AACA;AACA,oBAAoB,mDAAc;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,mDAAc;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,qDAAO;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,mDAAc;AAC3C;AACA;AACA;AACA;AACA,gBAAgB,mDAAc;AAC9B;AACA;AACA,gBAAgB,mDAAc;AAC9B;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,4CAA4C,wBAAwB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,aAAa,kEAAkE;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,aAAa,kEAAkE;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,aAAa,kEAAkE;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,yDAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,mDAAM;AACrB,KAAK;AACL;AACA,CAAC,CAAC,mDAAM;AACU;AAClB,kC;;;;;;;;;;;;AC/yEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkC;AACM;AACO;AACO;AACd;AACF;AACA;AACtC;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,oDAAS,mBAAmB,iDAAiD,yDAAK,YAAY;AACrI,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,mDAAc,EAAE,2BAA2B;AACxF;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,+CAA+C,oDAAS;AACxD;AACA;AACA;AACA,aAAa;AACb,oCAAoC,kEAAgB;AACpD;AACA,yBAAyB,iDAAG;AAC5B,yBAAyB,iDAAG;AAC5B,aAAa;AACb,oCAAoC,kEAAgB;AACpD,yBAAyB,iDAAG;AAC5B,yBAAyB,iDAAG;AAC5B,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,iDAAG;AAClD,+CAA+C,iDAAG;AAClD;AACA,kCAAkC,qDAAO;AACzC;AACA;AACA;AACA,kCAAkC,qDAAO;AACzC;AACA;AACA,kCAAkC,gDAAgD;AAClF,6BAA6B,mCAAmC,8CAAS,wBAAwB,8CAAS,uCAAuC,8CAAS,wBAAwB,8CAAS,uCAAuC;AAClO,mCAAmC,kCAAkC;AACrE,mCAAmC,uCAAuC;AAC1E,mCAAmC,kCAAkC;AACrE,mCAAmC,uCAAuC;AAC1E,uCAAuC,sBAAsB;AAC7D;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,oDAAS;AACxB,KAAK;AACL;AACA,CAAC,CAAC,oDAAS;AACc;AACzB,yC;;;;;;;;;;;;AC/PA;AAAA;AAAA;AAAA;AAAA;AAAkC;AACI;AACU;AAChD;AACA;AACA;AACA,SAAS,0EAA0E;AACnF;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,gEAAsB;AAC/C;AACA;AACA;AACA;AACA,+BAA+B,YAAY;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,kDAAQ;AACvB,KAAK;AACL;AACA,CAAC,CAAC,kDAAQ;AACM;AAChB,gC;;;;;;;;;;;;AChEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkC;AACA;AACsB;AAChB;AACxC;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACbgDAAW;AACvB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,2EAAc;AAC5D;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,8CAAM;AACrB,KAAK;AACL;AACA,CAAC,CAAC,8CAAM;AACQ;AAChB,gC;;;;;;;;;;;;AC7MA;AAAA;AAAA;AAAA;AAAkC;AACJ;AAC9B;AACA;AACA;AACA,SAAS,0EAA0E;AACnF;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,0CAAI;AACnB,KAAK;AACL;AACA,CAAC,CAAC,0CAAI;AACU;AAChB,gC;;;;;;;;;;;;AC3BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkC;AACe;AACT;AACsB;AACtB;AACE;AACJ;AACA;AACE;AACA;AACxC;AACA;AACA;AACA,SAAS,0EAA0E;AACnF;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA,mCAAmC,gBAAgB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,qDAAgB;AACvD;AACA,mCAAmC,yEAAgB;AACnD;AACA,aAAa;AACb,6CAA6C,mDAAK,mBAAmB;AACrE;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kDAAa;AACzB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,4DAAa;AACzD;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,iDAAK;AACzC,2CAA2C,iDAAK;AAChD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,qDAAO;AAC9C;AACA;AACA;AACA,uCAAuC,qDAAO;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,iEAAiE;AAClH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,iCAAiC;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,yEAAgB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,qDAAgB;AACpC,oBAAoB,qDAAgB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,wEAAwE;AAC1G,kCAAkC,wEAAwE;AAC1G;AACA;AACA;AACA;AACA;AACA,0CAA0C,yEAAgB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,oDAAS;AACxB,KAAK;AACL;AACA,CAAC,CAAC,oDAAS;AACQ;AACnB,mC;;;;;;;;;;;;AC7aA;AAAA;AAAA;AAAA;AAAkC;AACI;AACtC;AACA;AACA;AACA,SAAS,0EAA0E;AACnF;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,kDAAQ;AACvB,KAAK;AACL;AACA,CAAC,CAAC,kDAAQ;AACU;AACpB,oC;;;;;;;;;;;;ACzEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkC;AACc;AACV;AACI;AAC1C;AACA;AACA;AACA,SAAS,mFAAmF;AAC5F;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,4DAAY;AACxB;AACA;AACA;AACA,mDAAmD,qDAAO;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,mDAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,YAAY,4DAAY;AACxB;AACA;AACA;AACA,mDAAmD,qDAAO;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,YAAY,4DAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,8CAAM;AACrB,KAAK;AACL;AACA,CAAC,CAAC,8CAAM;AACkB;AAC1B,0C;;;;;;;;;;;;AChHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACkC;AACK;AACE;AACE;AACW;AACtD,UAAU,YAAY;AACuF;AACpD;AACd;AACA;AACE;AACJ;AACA;AACS;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4DAAuB,UAAU,4DAAuB;AACnE;AACA;AACA;AACA;AACA;AACA,cAAc,gDAAW;AACzB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,2BAA2B;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,CAAC;AACsB;AACvB;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACbuBAAuB,mDAAM;AAC7B,SAAS;AACT;AACA;AACA;AACA;AACA,uBAAuB,mDAAM;AAC7B,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,uBAAuB,mDAAM;AAC7B,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,qCAAqC,gBAAgB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,mCAAmC;AACnC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,gCAAgC;AACnE,mCAAmC,iCAAiC;AACpE,mCAAmC,oCAAoC;AACvE,mCAAmC,mCAAmC;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,uDAAQ,cAAc,EAAE;AACnD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,gDAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,gDAAW;AAC3B;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,0BAA0B,EAAE;AAC3F;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC,CAAC,4DAAa;AACgB;AAC/B;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,uDAAkB;AAC9B;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gDAAW;AACvB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,mDAAc;AAC1B;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,kCAAkC,cAAc;AAChD;AACA;AACA,gBAAgB,gDAAW,sCAAsC,2BAA2B,EAAE;AAC9F;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,gDAAW;AAC3B;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA,CAAC;AAC0B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD,KAAK;AACL;AACA;AACA;AACA;AACA,oCAAoC;AACpC,KAAK;AACL;AACA;AACA;AACA;AACA,mCAAmC;AACnC,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,aAAa;AAC3C,8BAA8B,aAAa;AAC3C,8BAA8B,aAAa;AAC3C,8BAA8B,aAAa;AAC3C;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,mDAAmD;AACjF,8BAA8B,mDAAmD;AACjF;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,qDAAqD;AACnF,8BAA8B,qDAAqD;AACnF;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,4BAA4B,wDAAkB,qCAAqC,mDAAa,kBAAkB,mDAAa;AAC/H,8BAA8B,sCAAsC;AACpE,8BAA8B,0CAA0C;AACxE;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,8BAA8B,uBAAuB;AACrD;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,8BAA8B,uBAAuB;AACrD;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,2BAA2B;AACzD,8BAA8B,6BAA6B;AAC3D,8BAA8B,2BAA2B;AACzD;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,2BAA2B;AACzD,8BAA8B,2BAA2B;AACzD;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,uBAAuB;AACrD,8BAA8B,gCAAgC;AAC9D;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,mBAAmB,mDAAS;AAC5B,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,mCAAmC,WAAW;AAC9C;AACA;AACA,qCAAqC,iDAAK;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,mCAAmC,WAAW;AAC9C,mCAAmC,WAAW;AAC9C;AACA;AACA,qCAAqC,iDAAK;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,wCAAwC,gBAAgB;AACxD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,2CAA2C,uBAAuB;AAClE;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,kCAAkC,UAAU;AAC5C,qCAAqC,aAAa;AAClD,qCAAqC,aAAa;AAClD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,iBAAiB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,iBAAiB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,iBAAiB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,iBAAiB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,iBAAiB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,iBAAiB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,iBAAiB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,iBAAiB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,iBAAiB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,iBAAiB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,iBAAiB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,iBAAiB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,iBAAiB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,iBAAiB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,iBAAiB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,iBAAiB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,iBAAiB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,wEAAW;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,4BAA4B,gDAAW;AACvC;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gDAAW;AACvB;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,gDAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,gDAAW;AAC3B;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,gDAAW;AAC3B;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA,CAAC;AACyB;AAC1B;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,yCAAyC,qBAAqB;AAC9D,8CAA8C,0BAA0B;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,iDAAK;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,8CAA8C,0BAA0B;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,oDAAc;AAClC;AACA;AACA;AACA;AACA;AACA,oBAAoB,oDAAc;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,gDAAW;AAC3B,oBAAoB,gDAAW;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,iEAAa;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qFAAqF,iDAAK;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,sBAAsB;AACxD,kCAAkC,0BAA0B;AAC5D;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,oDAAc;AACzC,uBAAuB,oDAAc;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gDAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,6BAA6B,iEAAa;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,wDAAmB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,iEAAa;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,oDAAc;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,gDAAW,aAAa,gDAAW;AAC3E;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA,iDAAiD,gDAAW;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,0DAA0D,qDAAO;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,YAAY,gDAAW;AACvB;AACA,gBAAgB,gDAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,oDAAc;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,oDAAc,WAAW,oDAAc;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,wCAAwC,oBAAoB;AAC5D,gDAAgD,2BAA2B;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,cAAc;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACqB;AACtmBAAmB,6DAAO;AAC1B,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AAC0B;AAC3B;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACbgBAAgB,gDAAW;AAC3B;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,+DAA+D,mDAAa;AAC5E;AACA;AACA,+DAA+D,mDAAa;AAC5E;AACA;AACA,4CAA4C,mDAAa;AACzD;AACA,2BAA2B,0DAAoB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gDAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,gDAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gDAAW;AACvB;AACA,6BAA6B,iEAAa;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,gDAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,iEAAa;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,oDAAc;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,kBAAkB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,sDAAsD,qDAAO;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,YAAY,gDAAW;AACvB,gBAAgB,gDAAW;AAC3B;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AAC2B;AAC5B;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACsB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,YAAY,oDAAe;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAC8B;AAC/B;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACbkCAAkC,uDAAQ;AAC1C,YAAY,iDAAY;AACxB;AACA,aAAa;AACb,YAAY,gDAAW;AACvB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA,iEAAiE,yCAAyC;AAC1G;AACA;AACA;AACA;AACA,8BAA8B,4DAAuB;AACrD;AACA;AACA;AACA,SAAS;AACT;AACA,8BAA8B,kDAAa;AAC3C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,YAAY,oDAAe;AAC3B;AACA;AACA,oBAAoB,wDAAmB;AACvC;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,4DAAuB,kCAAkC,iBAAiB;AAC5G,kCAAkC,4DAAuB,sCAAsC,iBAAiB;AAChH,kCAAkC,4DAAuB;AACzD;AACA;AACA;AACA;AACA,aAAa,GAAG,gBAAgB;AAChC,kCAAkC,4DAAuB;AACzD;AACA,aAAa,GAAG,gBAAgB;AAChC,kCAAkC,4DAAuB;AACzD;AACA;AACA;AACA,iBAAiB;AACjB,aAAa,GAAG,gBAAgB;AAChC;AACA;AACA,YAAY,oDAAe;AAC3B,kCAAkC,4DAAuB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa,GAAG,iBAAiB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gDAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,gDAAgD,4BAA4B;AAC5E;AACA,iDAAiD,yCAAyC;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,YAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,qCAAqC,gBAAgB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,6BAA6B,mDAAc;AAC3C;AACA,wCAAwC,YAAY;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gDAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gDAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,YAAY,gDAAW;AACvB;AACA;AACA,aAAa;AACb,eAAe;AACf;AACA;AACA;AACA,gBAAgB,gDAAW;AAC3B;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,iDAAK;AAC7B;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,oBAAoB;AAC7D;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,iDAAK;AACnC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,kDAAa;AACrC;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,gDAAW;AAC3B;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,gDAAW;AAC3B;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,oDAAe;AAC3C;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,2DAA2D,oDAAe;AAC1E,gCAAgC,oDAAe;AAC/C;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA,wBAAwB,oDAAe;AACvC;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,8DAAe;AAC1D;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4DAAa;AACpC,oBAAoB,uDAAQ;AAC5B;AACA;AACA;AACA;AACA,iBAAiB;AACjB,gBAAgB,4DAAuB,YAAY,4DAAuB;AAC1E;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D,4BAA4B,gDAAW;AACvC;AACA,6BAA6B;AAC7B;AACA,mCAAmC,4DAAa;AAChD;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,4BAA4B,gDAAW;AACvC;AACA,6BAA6B;AAC7B,2DAA2D;AAC3D,yBAAyB;AACzB;AACA,4BAA4B,gDAAW;AACvC;AACA,6BAA6B;AAC7B,2DAA2D;AAC3D,yBAAyB;AACzB,mCAAmC,uDAAQ;AAC3C;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,gDAAW;AACvC;AACA,6BAA6B;AAC7B,yBAAyB;AACzB;AACA;AACA;AACA,4BAA4B,gDAAW;AACvC;AACA,6BAA6B;AAC7B,+BAA+B;AAC/B,yBAAyB;AACzB;AACA,4BAA4B,gDAAW;AACvC;AACA,6BAA6B;AAC7B,yBAAyB;AACzB;AACA,4BAA4B,gDAAW;AACvC;AACA,6BAA6B;AAC7B,yBAAyB;AACzB,mCAAmC,uDAAQ;AAC3C;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA;AACA,4BAA4B,gDAAW;AACvC;AACA,6BAA6B;AAC7B,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA,+BAA+B,4DAAuB,SAAS,4DAAuB;AACtF;AACA,yBAAyB,GAAG,iBAAiB;AAC7C,qBAAqB;AACrB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA,uBAAuB,uDAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA,oBAAoB,uDAAkB;AACtC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gDAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,YAAY,gDAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,YAAY,gDAAW;AACvB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA,CAAC,CAAC,4DAAa;AACW;AAC1B,0C;;;;;;;;;;;;ACj6JA;AAAA;AAAA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8BAA8B;AAC/B,oC;;;;;;;;;;;;AC3BA;AAAA;AAAA;AAAA;AAAkC;AACS;AAC3C;AACA;AACA;AACA,SAAS,yFAAyF;AAClG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,gCAAgC;AACzE,yCAAyC,iCAAiC;AAC1E,yCAAyC,oCAAoC;AAC7E,yCAAyC,mCAAmC;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,mDAAM;AACrB,KAAK;AACL;AACA,CAAC,CAAC,mDAAM;AACY;AACpB,oC;;;;;;;;;;;;ACtFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkC;AACI;AACG;AACE;AACF;AACA;AACzC;AACA;AACA;AACA,SAAS,yFAAyF;AAClG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,8CAAS;AAC/B,sBAAsB,8CAAS;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,gDAAW;AAC3B;AACA,yBAAyB,mDAAc;AACvC;AACA;AACA;AACA,yBAAyB,mDAAc;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,iDAAK;AACzC;AACA;AACA;AACA,oCAAoC,iDAAK;AACzC;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,kDAAQ;AACvB,KAAK;AACL;AACA,CAAC,CAAC,kDAAQ;AACgB;AAC1B,0C;;;;;;;;;;;;ACjFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkC;AACI;AACG;AACE;AACF;AACE;AAC3C;AACA;AACA;AACA,SAAS,yFAAyF;AAClG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,mDAAc;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,2DAAsB;AAC1C;AACA;AACA,oBAAoB,2DAAsB;AAC1C;AACA;AACA;AACA;AACA;AACA,gBAAgB,gDAAW;AAC3B;AACA,yBAAyB,mDAAc;AACvC;AACA;AACA;AACA,yBAAyB,mDAAc;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,iDAAK;AACzC;AACA;AACA;AACA,oCAAoC,iDAAK;AACzC;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,kDAAQ;AACvB,KAAK;AACL;AACA,CAAC,CAAC,kDAAQ;AACgB;AAC1B,0C;;;;;;;;;;;;ACjGA;AAAA;AAAA;AAAA;AAAA;AAAkC;AACE;AACK;AACzC;AACA;AACA;AACA,SAAS,wFAAwF;AACjG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,8CAAS;AACnD,0CAA0C,8CAAS;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,cAAc;AACrE,2DAA2D,cAAc;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,gDAAO;AACtB,KAAK;AACL;AACA,CAAC,CAAC,gDAAO;AACgB;AACzB,yC;;;;;;;;;;;;AC9FA;AAAA;AAAA;AAAA;AAAA;AAAkC;AACE;AACM;AAC1C;AACA;AACA;AACA,SAAS,wFAAwF;AACjG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,eAAe;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,mDAAc;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,gDAAO;AACtB,KAAK;AACL;AACA,CAAC,CAAC,gDAAO;AACc;AACvB,uC;;;;;;;;;;;;AChFA;AAAA;AAAA;AAAA;AAAkC;AACS;AAC3C;AACA;AACA;AACA,SAAS,wFAAwF;AACjG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,mDAAM;AACrB,KAAK;AACL;AACA,CAAC,CAAC,mDAAM;AACW;AACnB,mC;;;;;;;;;;;;AC/GA;AAAA;AAAA;AAAA;AAAkC;AACE;AACpC;AACA;AACA;AACA;AACA;AACA,SAAS,wFAAwF;AACjG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,gCAAgC;AACzF;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,gDAAO;AACtB,KAAK;AACL;AACA,CAAC,CAAC,gDAAO;AACiB;AAC1B,0C;;;;;;;;;;;;AC7GA;AAAA;AAAA;AAAA;AAAA;AAAkC;AACE;AACK;AACzC;AACA;AACA;AACA,SAAS,wFAAwF;AACjG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,8CAAS;AACvD,+CAA+C,8CAAS;AACxD;AACA,uDAAuD,cAAc;AACrE,2DAA2D,cAAc;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,gDAAO;AACtB,KAAK;AACL;AACA,CAAC,CAAC,gDAAO;AACmB;AAC5B,4C;;;;;;;;;;;;AC/FA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACX;AACJ;AACoB;AAChB;AACpC;AACA;AACA;AACO;AACP,WAAW,uDAAS;AACpB;AACA,eAAe,yDAAW;AAC1B;AACA;AACA;AACA;AACA,oBAAoB,4CAAY;AAChC;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,eAAe,gDAAO;AACtB;AACA;AACA;AACA;AACO;AACP,WAAW,4CAAK;AAChB;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,wBAAwB,gDAAO,kBAAkB,gDAAO;AACxD;AACA;AACA,wBAAwB,4CAAK,kBAAkB,4CAAK;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,uBAAuB,gEAAe;AACtC,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,2BAA2B;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,2BAA2B;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,2CAA2C;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,2BAA2B;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACwB;AACzB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;AChVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,uBAAuB,YAAY;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,SAAS,8CAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,8CAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,yBAAyB,oBAAoB;AAC7C;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,mBAAmiC;;;;;;;;;;;;ACxjBA;AAAA;AAAA;AAAA;AAAA;AAAkC;AACJ;AACI;AAClC;AACA;AACA;AACA,SAAS,4EAA4E;AACrF;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB,2CAAW;AAC3B;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,2CAAW;AAC3B;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA,CAAC,CAAC,0CAAI;AACc;AACpB,oC;;;;;;;;;;;;ACpHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoC;AACF;AACF;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,+EAA+E;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,WAAW;AAC9C;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,gDAAgB,2BAA2B,gDAAgB,2BAA2B,gDAAgB;AAC/H;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,WAAW;AAC9C,mBAAmB,+CAAe;AAClC;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,+CAAe;AACrC;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,8CAAc;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,8CAAc;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,uDAAuB,EAAE,qCAAqC,sBAAsB,sEAAsE,iCAAiC,mEAAmE;AACpR;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,cAAc;AAChD;AACA;AACA;AACA,qCAAqC,wDAAK,4BAA4B,wDAAK,4BAA4B,wDAAK;AAC5G;AACA;AACA,qCAAqC,wDAAK,sBAAsB,wDAAK,sBAAsB,wDAAK;AAChG;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,8CAAc,EAAE,qCAAqC;AAC3E;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,+CAAe,EAAE,qCAAqC;AAC5E;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,+CAAe,EAAE,qCAAqC;AAC5E;AACA;AACA,KAAK;AACL;AACA,CAAC;AACgB;AACjB,iC;;;;;;;;;;;;ACvZA;AAAA;AAAA;AAAA;AAAA;AAAkC;AACA;AACF;AAChC;AACA;AACA;AACA,SAAS,0FAA0F;AACnG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,4CAAK;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,SAAS;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,4CAAK;AACrC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,4CAAK;AAC7C;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,8CAAM;AACrB,KAAK;AACL;AACA,CAAC,CAAC,8CAAM;AACY;AACpB,oC;;;;;;;;;;;;AC/IA;AAAA;AAAA;AAAA;AAAA;AAAkC;AACJ;AAC9B;AACA;AACA;AACA,SAAS,sDAAsD;AAC/D;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB,0EAA0E;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC,CAAC,0CAAI;AACc;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,KAAK;AACL;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,KAAK;AACL;AACA,CAAC;AACmB;AACpB,gC;;;;;;;;;;;;AClHA;AAAA;AAAA;AAAA;AAAA;AAAgC;AACI;AACpC;AACA;AACA;AACA,SAAS,8DAA8D;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,8CAAc;AAClC;AACA,2CAA2C,6CAAa;AACxD;AACA;AACA;AACA;AACA,yBAAyB,6CAAa,WAAW,8CAAc;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,4CAAY;AACxB;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA,CAAC;AACqB;AACtB;AACA;AACA;AACA,SAAS,8DAA8D;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,iBAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,gBAAgB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,4CAAY;AACxB;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA,CAAC;AACoB;AACrB,sC;;;;;;;;;;;;AC7NA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkC;AACA;AACF;AACA;AACI;AACF;AAClC;AACA;AACA;AACA,SAAS,0EAA0E;AACnF;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,+BAA+B,EAAE;AAChF,+CAA+C,+BAA+B,EAAE;AAChF,kDAAkD,+BAA+B,EAAE;AACnF,gDAAgD,+BAA+B,EAAE;AACjF,4CAA4C,+BAA+B,EAAE;AAC7E;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,2CAAW;AACvB,gBAAgB,2CAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,6CAAa;AAC7B,gBAAgB,2CAAW;AAC3B;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,aAAa;AACjD,YAAY,4CAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wGAAwG,8CAAc;AACtH;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,8CAAc;AACrC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4CAAK;AAC5B;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC,CAAC,8CAAM;AACiB;AACzB,yC;;;;;;;;;;;;ACzMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkC;AACA;AACc;AACV;AACN;AACE;AAClC;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,8CAAc;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,8CAAc;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,EAAE;AACpD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,SAAS;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,8CAAc;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,gDAAgB;AAChD;AACA;AACA;AACA;AACA;AACA,gCAAgC,gDAAgB,CAAC,8CAAc;AAC/D;AACA;AACA,gCAAgC,8CAAc;AAC9C;AACA;AACA,gCAAgC,mDAAmB;AACnD;AACA;AACA,gCAAgC,gDAAgB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,gDAAgB,CAAC,iDAAiB;AAClE;AACA;AACA,gCAAgC,iDAAiB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,gDAAgB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,gDAAgB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,iDAAiB;AACjD;AACA;AACA,gCAAgC,gDAAgB,CAAC,iDAAiB;AAClE;AACA;AACA;AACA;AACA;AACA,gCAAgC,gDAAgB;AAChD;AACA;AACA,gCAAgC,iDAAiB;AACjD;AACA;AACA,gCAAgC,gDAAgB,CAAC,iDAAiB;AAClE;AACA;AACA;AACA;AACA;AACA,gCAAgC,gDAAgB;AAChD;AACA;AACA;AACA;AACA;AACA,gCAAgC,gDAAgB;AAChD;AACA;AACA;AACA;AACA;AACA,gCAAgC,gDAAgB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,gDAAgB;AAChD;AACA;AACA,gCAAgC,kDAAkB;AAClD;AACA;AACA,gCAAgC,kDAAkB;AAClD;AACA;AACA,gCAAgC,kDAAkB;AAClD;AACA;AACA,gCAAgC,kDAAkB;AAClD;AACA;AACA;AACA;AACA,gDAAgD,kDAAQ;AACxD;AACA;AACA,gDAAgD,wDAAwB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,gDAAgB,iBAAiB,gDAAgB;AACtF;AACA;AACA;AACA,qCAAqC,gDAAgB,WAAW,gDAAgB;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,iDAAiB;AACnD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,4DAAa;AACtC,2BAA2B,mBAAmB;AAC9C;AACA;AACA;AACA;AACA;AACA,6BAA6B,8CAAc;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,oBAAoB;AAC3D;AACA,wEAAwE,iDAAiB;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,8CAAc;AAC9B;AACA;AACA;AACA,iBAAiB,8CAAc;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,kDAAkB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,uBAAuB;AAClD;AACA;AACA;AACA;AACA;AACA,uCAAuC,EAAE;AACzC;AACA;AACA;AACA;AACA,uCAAuC,EAAE;AACzC;AACA;AACA;AACA;AACA,uCAAuC,EAAE;AACzC;AACA;AACA;AACA;AACA,uCAAuC,EAAE;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,EAAE,OAAO,EAAE;AAClD;AACA;AACA;AACA;AACA,uCAAuC,EAAE,OAAO,EAAE;AAClD;AACA;AACA;AACA;AACA,uCAAuC,EAAE,OAAO,EAAE;AAClD;AACA;AACA;AACA;AACA;AACA,uCAAuC,EAAE,OAAO,EAAE,OAAO,EAAE;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,EAAE,OAAO,EAAE;AAClD;AACA;AACA;AACA;AACA,uCAAuC,EAAE,OAAO,EAAE;AAClD;AACA;AACA;AACA;AACA,uCAAuC,EAAE,OAAO,EAAE;AAClD;AACA;AACA;AACA;AACA,uCAAuC,EAAE,OAAO,EAAE;AAClD;AACA;AACA;AACA;AACA,uCAAuC,EAAE,OAAO,EAAE;AAClD;AACA;AACA;AACA;AACA,uCAAuC,EAAE,OAAO,EAAE;AAClD;AACA;AACA;AACA;AACA;AACA,uCAAuC,EAAE,OAAO,EAAE,OAAO,EAAE;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,EAAE,OAAO,EAAE,OAAO,EAAE;AAC3D;AACA;AACA;AACA,uCAAuC,GAAG;AAC1C;AACA;AACA;AACA,+CAA+C,EAAE,OAAO,EAAE;AAC1D;AACA;AACA;AACA,8CAA8C,EAAE,MAAM,EAAE;AACxD;AACA;AACA;AACA,uCAAuC,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,YAAY,IAAI,mBAAmB,EAAE,QAAQ,EAAE;AACpJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,qDAAqB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,8CAAc;AACnD,sCAAsC,8CAAc;AACpD,oCAAoC,8CAAc;AAClD,qCAAqC,8CAAc;AACnD,uCAAuC,8CAAc;AACrD,uCAAuC,8CAAc;AACrD,4CAA4C,8CAAc;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,mDAAmD,EAAE,UAAU,EAAE;AACjE;AACA,uDAAuD,EAAE,UAAU,EAAE;AACriBAAiB;AAC5C;AACA;AACA,6BAA6B,oDAAoB;AACjD;AACA;AACA,6BAA6B,oDAAoB;AACjD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC,CAAC,8CAAM;AACiB;AACzB,yC;;;;;;;;;;;;AC19BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACwB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACmB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,2CAAW;AACvB;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA,CAAC;AACwB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,2CAAW;AACvB;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA,CAAC;AACwB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AAC+B;AAChC;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA,CAAC;AAC0B;AAC3B,oC;;;;;;;;;;;;AC9TA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACgC;AAChC;AACA;AACA;AACO;AACP,0CAA0C,SAAS;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,WAAW;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,wCAAwC,SAAS;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP,0CAA0C,SAAS;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,WAAW;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,mCAAmC,OAAO;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,2CAAW,gBAAgB,2CAAW,YAAY,2CAAW,aAAa,2CAAW;AAC7F;AACA;AACA;AACA;AACA,4CAA4C,SAAS;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,2DAA2B;AACvD,4BAA4B,2DAA2B;AACvD;AACA;AACA;AACA;AACA,gC;;;;;;;;;;;;ACnHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkC;AACA;AACc;AACZ;AACF;AACF;AAChC;AACA;AACA;AACA,SAAS,iFAAiF;AAC1F;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,8CAAc;AAC1D;AACA;AACA;AACA,qBAAqB,kDAAkB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,kDAAkB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,4CAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,4DAAa;AAC1C,+BAA+B,mBAAmB;AAClD;AACA;AACA,oDAAoD,kDAAkB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,oBAAoB;AAC/D;AACA;AACA;AACA;AACA;AACA,4EAA4E,iDAAiB;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,SAAS;AAChE;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,iDAAiB,EAAE,gDAAgB;AACroDAAoB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC,CAAC,8CAAM;AACqB;AAC7B,6C;;;;;;;;;;;;ACxgBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,+BAA+B;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACO;AACP,4BAA4B,4CAAY;AACxC;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,gC;;;;;;;;;;;;AC5JA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;AACnB;AACc;AACP;AACX;AACK;AACH;AACJ;AACE;AACA;AAClC;AACA;AACA;AACA,SAAS,mEAAmE;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa,mEAAmE;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kDAAQ;AAC/B,oBAAoB,kDAAkB;AACtC;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,SAAS;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACmB;AACpB;AACA;AACA;AACA,SAAS,4DAA4D;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,uBAAuB,gEAAe;AACtC,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,iEAAc;AAC1C;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACoB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,0DAA0D;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,4CAAY;AACxB;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,4CAAY;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,gBAAgB,4CAAY;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa,8EAA8E;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kDAAQ;AAC/B,gBAAgB,kDAAkB;AAClC;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa,8EAA8E;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kDAAQ;AAC/B,gBAAgB,kDAAkB;AAClC;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,2CAAW;AAC3B;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,2CAAW;AAC3B;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,aAAa,0DAA0D;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,aAAa,0DAA0D;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,aAAa,0DAA0D;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,2CAAW,CAAC,4CAAY;AACpC;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA,aAAa,2EAA2E;AACxaAAa,0DAA0D;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,4CAAY;AACxB;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA,aAAa,+EAA+E;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,4CAAY;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,4CAAY;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACmB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA,aAAa,2EAA2E;AACxF;AACA;AACA;AACA,mCAAmC,gBAAgB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS,EAAE;AACX;AACA;AACA;AACA;AACA,uBAAuB,8CAAM;AAC7B,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,2EAA2E;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,uCAAuC,gBAAgB;AACvD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,2CAAW;AACvB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,2CAAW;AACvB;AACA,aAAa;AACb,4CAA4C;AAC5C;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,uBAAuB,gEAAe;AACtC;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,4CAAY;AACxB;AACA,aAAa;AACb,YAAY,4CAAY;AACxB;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,2CAAW;AAC3B;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,iCAAiC;AACjC,KAAK;AACL;AACA;AACA;AACA;AACA,4CAA4C;AAC5C,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,aAAa,0DAA0D;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,aAAa,0DAA0D;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,aAAa,0DAA0D;AACvmDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,YAAY,4CAAY;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,4CAAY;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb,YAAY,4CAAY;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,YAAY,kDAAkB;AAC9B;AACA,YAAY,2CAAW;AACvB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,eAAe;AACnD;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,mCAAmC;AACnC,0BAA0B;AAC1B;AACA;AACA;AACA,aAAa;AACb;AACA,gBAAgB,4CAAY;AAC5B;AACA;AACA;AACA,iBAAiB;AACjB,gBAAgB,4CAAY;AAC5B;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,kDAAkB;AAChD;AACA;AACA,2BAA2B,2CAAW;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,YAAY,2CAAW;AACvB;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,2CAAW;AACvB;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,2CAAW;AAC3B;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,2CAAW;AAC/B;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA,gBAAgB,kDAAkB;AAClC;AACA,oBAAoB,2CAAW;AAC/B,wBAAwB,2CAAW;AACnC;AACA;AACA,gCAAgC,kDAAkB;AAClD;AACA;AACA,qCAAqC;AACrC;AACA,qDAAqD,0DAA0B;AAC/E,wDAAwD,8CAAc;AACtE;AACA,uDAAuD,mDAAmB,oBAAoB,8CAAc;AAC5G;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA,iCAAiC;AACjC;AACA,yBAAyB;AACzB,qBAAqB;AACrB,oBAAoB,2CAAW;AAC/B;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kDAAQ;AACnC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,gBAAgB,kDAAQ,qBAAqB,kDAAQ;AACrD;AACA;AACA,YAAY,kDAAQ;AACpB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,2CAAW;AACvB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,YAAY,4CAAY;AACxB,gBAAgB,2CAAW;AAC3B;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,uBAAuB,kDAAQ;AAC/B;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,+BAA+B,kDAAQ;AACvC;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,8CAAc;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,8CAAc;AACjC;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,6CAAa;AAC7B;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA,kEAAkE,2DAAa,iBAAiB,oDAAM;AACtG;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACiB;AAClB,kC;;;;;;;;;;;;ACt/DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACqD;AACnB;AACF;AAChC;AACA;AACA;AACA,SAAS,wDAAwD;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,2CAAW;AAC/B;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,0CAAU,gCAAgC,0DAA0D,EAAE;AACzH;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,mBAAmB;AACvD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,gDAAgB;AACxC;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,8CAAc;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,2CAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,2CAAW;AAC/B;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,kDAAQ;AACtC;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,oBAAoB;AAC7D,kGAAkG,sCAAsC,EAAE;AAC1I;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,oBAAoB;AAC7D,kGAAkG,sCAAsC,EAAE;AAC1I;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,oBAAoB;AAC7D;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,2CAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,uBAAuB,uDAAa;AACpC;AACA,KAAK;AACL;AACA,CAAC;AAC0B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,2CAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,uBAAuB,uDAAa;AACpC;AACA,KAAK;AACL;AACA,CAAC;AACkC;AACnC,2C;;;;;;;;;;;;ACjpBA;AAAA;AAAA;AAAA;AAAkC;AACA;AAClC;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,8CAAM;AACrB,KAAK;AACL;AACA,CAAC,CAAC,8CAAM;AACmB;AAC3B,2C;;;;;;;;;;;;ACzBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;AACvB;AACA;AACG;AACrC;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,mDAAE;AAC/C;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,2DAAa,6CAA6C,oDAAM;AAClH;AACA;AACA;AACA,kDAAkD,SAAS;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA,8CAA8C,2DAAa,mBAAmB,oDAAM;AACpF;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA,yDAAyD,2DAAa,mBAAmB,oDAAM;AAC/F;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,0CAAU,qBAAqB,mCAAmC,EAAE;AAC3F;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC,CAAC,8CAAM;AACY;AACpB,oC;;;;;;;;;;;;AC9IA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACK;AAClB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,uBAAuB,gEAAe;AACtC,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,8CAAc;AACjC;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kDAAkB;AAC9B;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kDAAkB;AAC9B;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,kDAAkB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kDAAkB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,kDAAkB;AAClC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,2CAAW;AACvB;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,2CAAW;AACvB;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,yDAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,2CAAW;AACvB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kDAAkB;AAC9B;AACA,KAAK;AACL;AACA,CAAC;AACe;AAChB;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,2CAAW;AAC3B;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,2CAAW;AAC/B;AACA,qBAAqB;AACrB;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AAC0B;AAC3B;AACA;AACA;AACA;AACA,SAAS,yEAAyE;AAClF;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,CAAC;AACuB;AACxB,gC;;;;;;;;;;;;ACrpBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACO;AACA;AACA;AACA;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,SAAS,sDAAQ;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,SAAS,sDAAQ;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,kBAAkB;AACjD;AACA;AACA;AACA;AACA,mBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,uEAAuE;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACO;AACP,aAAa,6CAA6C;AAC1D;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,SAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,YAAY;AACZ;AACO;AACP,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,KAAK;AACL;AACO;AACP;AACA;AACA,gC;;;;;;;;;;;;ACjRA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,OAAO;AAClC,2BAA2B,OAAO;AAClC,2BAA2B,OAAO;AAClC,2BAA2B,OAAO;AAClC,4BAA4B,QAAQ;AACpC,4BAA4B,QAAQ;AACpC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmiB;AAClB,kC;;;;;;;;;;;;AC3LA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkC;AACA;AACE;AACsC;AACxC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,iEAAa;AAC1C,gBAAgB,gDAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,gBAAgB,gDAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,gBAAgB,gDAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,gBAAgB,gDAAS;AACzB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,gBAAgB,gDAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,gBAAgB,gDAAS;AACzB;AACA;AACA,aAAa;AACb,gBAAgB,gDAAS;AACzB;AACA;AACA,aAAa;AACb,gBAAgB,gDAAS;AACzB;AACA,aAAa;AACb,gBAAgB,gDAAS;AACzB;AACA;AACA,aAAa;AACb,gBAAgB,gDAAS;AACzB;AACA;AACA,aAAa;AACb,gBAAgB,gDAAS;AACzB;AACA,aAAa;AACb,gBAAgB,gDAAS;AACzB;AACA;AACA;AACA;AACA,aAAa;AACb,gBAAgB,gDAAS;AACzB;AACA,aAAa;AACb,gBAAgB,gDAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,gBAAgB,gDAAS;AACzB;AACA,aAAa;AACb,gBAAgB,gDAAS;AACzB;AACA;AACA;AACA,aAAa;AACb,gBAAgB,gDAAS;AACzB;AACA,aAAa;AACb;AACA,oBAAoB,mEAAe;AACnC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,8EAA8E;AACvF;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,oDAAoB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,uDAAuB;AACnC;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,+CAAe;AAC/B,qCAAqC,uDAAuB;AAC5D;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,8CAAM;AACrB,KAAK;AACL;AACA,CAAC,CAAC,8CAAM;AACS;AACjB,iC;;;;;;;;;;;;AC3SA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,SAAS,uEAAuE;AAChF;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,mCAAmC;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,+B;;;;;;;;;;;;AClIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkC;AACA;AACc;AACZ;AACF;AACF;AAChC;AACA;AACA;AACA,SAAS,+EAA+E;AACxF;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,+CAA+C;AAChE,iBAAiB,+CAA+C;AAChE,iBAAiB,+CAA+C;AAChE,iBAAiB,iDAAiD;AAClE,iBAAiB,iDAAiD;AAClE,iBAAiB,iDAAiD;AAClE,iBAAiB,iDAAiD;AAClE,iBAAiB;AACjB;AACA;AACA,iBAAiB,iDAAiD;AAClE,iBAAiB,iDAAiD;AAClE,iBAAiB,iDAAiD;AAClE,iBAAiB,iDAAiD;AAClE,iBAAiB,iDAAiD;AAClE,iBAAiB,+CAA+C;AAChE,iBAAiB,+CAA+C;AAChE,iBAAiB;AACjB;AACA;AACA,iBAAiB,yCAAyC;AAC1D,iBAAiB,6CAA6C;AAC9D,iBAAiB,gDAAgD;AACjE,iBAAiB,mDAAmD;AACpE,iBAAiB,sDAAsD;AACvE,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,8CAAc;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,8CAAc;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,kDAAkB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4CAAY;AAC1C;AACA;AACA;AACA,mDAAmD,iDAAiB;AACpE;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,kDAAkB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,4CAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,4DAAa;AAC1C,+BAA+B,mBAAmB;AAClD;AACA;AACA,oDAAoD,kDAAkB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E,EAAE,gBAAgB,EAAE;AACjG;AACA;AACA,4EAA4E,EAAE,gBAAgB,EAAE;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mFAAmF,iDAAiB;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,oDAAoB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,UAAU;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,mCAAmC,eAAe;AAClD;AACA;AACA;AACA;AACA;AACA,kDAAkD,SAAS;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,kDAAkB;AACxD;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,kDAAkB;AAClD;AACA,KAAK;AACL;AACA,CAAC,CAAC,8CAAM;AACmB;AAC3B,2C;;;;;;;;;;;;AC/gBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkC;AAC3B;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACO;AACP,2BAA2B;AAC3B;AACO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,IAAI,2CAAW;AACf;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,kC;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;;;;;;ACzDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACkB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,mC;;;;;;;;;;;;ACrKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACgC;AACE;AACQ;AACM;AAChD;AACA;AACA;AACO;AACP;AACA;AACA,iBAAiB,4DAAa;AAC9B,mCAAmC,IAAI,KAAK;AAC5C;AACA;AACA,uBAAuB,iBAAiB;AACxC,6CAA6C,IAAI,KAAK;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,4DAAa;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,2CAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,8CAAc,UAAU;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,8CAAc;AACtB;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,uCAAuC,SAAS;AAChD;AACA;AACA;AACA,mCAAmC,qDAAM;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,8CAAc;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,4CAAY;AAChD,yBAAyB,4CAAY,eAAe,2CAAW;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,8CAAc;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,gBAAgB,8CAAc;AAC9B;AACA;AACA;AACA,qBAAqB,4CAAY;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,gDAAgB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0C;;;;;;;;;;;;ACnQA;AAAA;AAAA;AAAA;AAAA;AACkC;AACA;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,YAAY,2CAAW;AACvB,gBAAgB,2CAAW;AAC3B;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,oBAAoB;AAChE,gCAAgC,qCAAqC;AACrE;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,6CAAa;AACzB;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,2CAAW;AACnC;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB,gCAAgC,iDAAiD;AACjF;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,YAAY,6CAAa;AACzB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,yBAAyB,6CAAa;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,CAAC;AACuB;AACxB,wC;;;;;;;;;;;;ACpNA;AAAA;AAAA;AAAA;AAAA;AAAoC;AACJ;AAChC;AACA;AACA;AACA,SAAS,iEAAiE;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,aAAa,0DAA0D;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,aAAa,0DAA0D;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,4CAAY;AACxB;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,YAAY,4CAAY;AACxB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mGAAmG,2CAAW;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA,CAAC;AACgB;AACjB;AACA;AACA;AACA,SAAS,iEAAiE;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACiB;AAClB,kC;;;;;;;;;;;;AC3TA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoD;AACC;AACnB;AACE;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,4CAAY;AACxB;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,YAAY,4CAAY;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA,CAAC;AACwB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,YAAY,4CAAY;AACxB;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA,CAAC;AACyB;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kDAAQ;AAC/B,gBAAgB,kDAAkB;AAClC;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,4CAAY;AACxB,gBAAgB,2CAAW;AAC3B;AACA,iBAAiB;AACjB,aAAa;AACb,uBAAuB,uDAAa;AACpC;AACA,KAAK;AACL;AACA,CAAC;AAC2B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,uBAAuB,gEAAe;AACtC,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,2EAA2E;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,4CAAY;AACxB;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,4CAAY;AACxB;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kDAAQ;AAC/B,gBAAgB,kDAAkB;AAClC;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kDAAQ;AAC/B,gBAAgB,kDAAkB;AAClC;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,4CAAY;AACxB,gBAAgB,2CAAW;AAC3B;AACA,iBAAiB;AACjB,aAAa;AACb,YAAY,4CAAY;AACxB,gBAAgB,2CAAW;AAC3B;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA,uBAAuB,uDAAa;AACpC;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,YAAY,6CAAa;AACzB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA,CAAC;AACmB;AACpB,oC;;;;;;;;;;;;AC5fA;AAAA;AAAA;AAAA;AAAgC;AACA;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,EAAE;AACpC;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D,+DAA+D;AAC/D;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE,MAAM;AACnC,2BAA2B,EAAE,MAAM;AACnC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,sBAAsB;AAChE,0CAA0C,sBAAsB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,mBAAmB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,iDAAiB;AAC1E;AACA;AACA,oCAAoC,qBAAqB;AACzD;AACA;AACA,uCAAuC,iDAAiB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,qBAAqB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,cAAc;AAC7C;AACA;AACA;AACA;AACA,kDAAkD,gBAAgB,IAAI;AACtE;AACA;AACA;AACA;AACA;AACA,2BAA2B,cAAc;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,4CAAK;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACwB;AACzB,yC;;;;;;;;;;;;ACxPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACgC;AACE;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,oCAAoC;AACpgCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,8CAAc;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,8CAAc;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,eAAe,sDAAQ,GAAG;AAC1B;AACA;AACA;AACA,eAAe,sDAAQ,GAAG;AAC1B;AACA;AACA,eAAe,sDAAQ,GAAG;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sDAAQ,GAAG;AAC9B;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,8CAAc;AACjC;AACA;AACA,gC;;;;;;;;;;;;ACtiBA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa,2EAA2E;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACmB;AACpB,oC;;;;;;;;;;;;ACxKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,cAAc;AACdgC;;;;;;;;;;;;AClNA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;AACzB;AACE;AACE;AACiB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,eAAe,kDAAQ;AACvB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,YAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,YAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,YAAY;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,QAAQ,4CAAY;AACpB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,8CAAc;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC,CAAC,uDAAa;AACM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,YAAY;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC,CAAC,uDAAa;AACO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,QAAQ,2CAAW;AACnB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACO;AACP,QAAQ,8CAAc;AACtB;AACA;AACA,gCAAgC,8CAAc,mBAAmB,8CAAc;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,yBAAyB,SAAS;AAClC,0BAA0B,YAAY;AACtC;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,yBAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,0BAA0B,cAAc;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,yBAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,6BAA6B,aAAa;AAC1C,yBAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,0BAA0B,cAAc;AACxC,6BAA6B,iBAAiB;AAC9C,yBAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA,0CAA0C,wCAAwC;AAClF;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,yDAAyD,kBAAkB;AAC3E,wDAAwD,qBAAqB;AAC7E;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,sCAAsC,qBAAqB,0BAA0B;AACrF,qCAAqC,oBAAoB,0BAA0B;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,WAAW,2DAAa,CAAC,2DAAa,KAAK,oDAAM,iBAAiB,oDAAM;AACxE;AACA,KAAK;AACL;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;;;;;;AC7nCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkC;AACI;AACW;AACN;AACY;AACZ;AAC3C;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,sDAAK;AAC7B,sBAAsB,sDAAK;AAC3B,+BAA+B,sDAAK;AACpC,oCAAoC,sDAAK;AACzC,mCAAmC,sDAAK;AACxC,qCAAqC,sDAAK;AAC1C,mCAAmC,sDAAK;AACxC,qCAAqC,sDAAK;AAC1C,iCAAiC,sDAAK;AACtC,sCAAsC,sDAAK;AAC3C,qCAAqC,sDAAK;AAC1C,uCAAuC,sDAAK;AAC5C,qCAAqC,sDAAK;AAC1C,uCAAuC,sDAAK;AAC5C,sBAAsB,sDAAK;AAC3B,4BAA4B,sDAAK;AACjC,uCAAuC,sDAAK;AAC5C,sBAAsB,sDAAK;AAC3B,iCAAiC,sDAAK;AACtC,0BAA0B,sDAAK;AAC/B,0BAA0B,sDAAK;AAC/B,0BAA0B,sDAAK;AAC/B,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,wBAAwB,sDAAK;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,sCAAsC,mDAAS,CAAC,qDAAW;AAC3D,aAAa;AACb;AACA;AACA,qCAAqC,mDAAS,CAAC,qDAAW;AAC1D,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,sDAAG;AAC7B,0BAA0B,sDAAG;AAC7B;AACA;AACA,aAAa;AACb,kDAAkD,8BAA8B;AAChF;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,uBAAuB,uDAAI;AAC3B,wBAAwB,uDAAI;AAC5B;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,sDAAG;AAC5B,mBAAmB,sDAAG;AACtB,aAAa;AACb;AACA,yBAAyB,sDAAG;AAC5B,mBAAmB,sDAAG;AACtB,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,kEAAU,mBAAmB;AACrD;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,yBAAyB,sDAAG;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,uBAAuB,uDAAI;AAC3B,wBAAwB,uDAAI;AAC5B;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,gHAAgH;AAChH;AACA;AACA;AACA;AACA,yBAAyB,sDAAG;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,uFAAuF;AACvF;AACA;AACA;AACA,yBAAyB,sDAAG;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,uDAAI;AAC7B;AACA,aAAa;AACb;AACA,gGAAgG;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,wBAAwB,uDAAI;AAC5B;AACA,aAAa;AACb;AACA,uBAAuB,uDAAI;AAC3B;AACA,aAAa;AACb;AACA,wBAAwB,uDAAI;AAC5B,aAAa;AACb;AACA,uBAAuB,uDAAI;AAC3B,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,yBAAyB,sDAAG;AAC5B,yBAAyB,sDAAG;AAC5B;AACA;AACA,4BAA4B,uDAAI;AAChC;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,sDAAG;AAC5B,yBAAyB,sDAAG;AAC5B,iCAAiC,mDAAS,CAAC,qDAAW;AACtD;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,sDAAK;AACjC,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,iDAAiD;AACjD,+CAA+C,4BAA4B;AAC3E,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,oGAAoG;AACpG;AACA;AACA;AACA,kGAAkG,4BAA4B;AAC9H;AACA;AACA;AACA,qGAAqG;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uDAAI;AACvB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,4GAA4G;AAC5G;AACA;AACA;AACA,0GAA0G,4BAA4B;AACtI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,sDAAG;AAC5B,yBAAyB,sDAAG;AAC5B;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,8GAA8G;AAC9G;AACA;AACA;AACA,4GAA4G,4BAA4B;AACxI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,mDAAS,CAAC,qDAAW;AACtD,aAAa;AACb;AACA;AACA;AACA;AACA,wBAAwB,uDAAI;AAC5B,aAAa;AACb;AACA;AACA;AACA;AACA,uBAAuB,uDAAI;AAC3B,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,kGAAkG;AAClG;AACA;AACA;AACA,gGAAgG,4BAA4B;AAC5H;AACA;AACA;AACA,mBAAmB,sDAAG;AACtB,uBAAuB,uDAAI;AAC3B,yBAAyB,sDAAG;AAC5B;AACA,aAAa;AACb;AACA,mBAAmB,sDAAG;AACtB,yBAAyB,sDAAG;AAC5B,wBAAwB,uDAAI;AAC5B;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,6BAA6B,SAAS;AACtC,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC,CAAC,iDAAK;AACiB;AACxB,wrC;AACA;AACE;AACyE;AACvE;AACA;AACA;AACE;AACN;AACoB;AACV;AACF;AACI;AACA;AACY;AACtB;AACE;AACA;AACJ;AACM;AACkB;AACV;AACF;AACF;AACF;AACgB;AACd;AACN;AACF;AACE;AACA;AACF;AACY;AACd;AACA;AACM;AACc;AACd;AACY;AACY;AACA;AACH;AACJ;AACR;AACc;AACI;AAC1B;AACD;AACM;AACS;AACL;AACA;AACQ;AACJ;AACxE,UAAU,8BAA8B;AACxC,UAAU,sBAAsB;AACwC;AACQ;AACtB;AACU;AACE;AACjB;AACpC;AACkC;AACnC;AACmC;AACnC;AACiC;AAClC;AACwC;AACrC;AACiC;AACnC;AACmC;AACnC;AACqC;AACpC;AACjB,iC;;;;;;;;;;;;AChFA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe;AACftYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuE;AACE;AACd;AACE;AACS;AACF;AACsB;AAClB;AACJ;AACiB;AACtC;AAC/C,mC;;;;;;;;;;;;ACXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwD;AACkB;AAChB;AACuB;AAC1B;AACgB;AACQ;AAChB;AACc;AACN;AACN;AACE;AACF;AACY;AACd;AACR;AACgB;AACE;AACA;AACR;AACM;AACY;AAC1B;AACY;AACI;AACJ;AACkB;AACA;AACE;AACZ;AACG;AACjC;AAC/C,8B;;;;;;;;;;;;AChCA;AAAA;AAAA;AAAA;AAA0C;;;;;;;;;;;;;ACA1C;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA,6BAA6B;AAC7B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEe,mEAAI,EAAC;;;;;;;;;;;;;ACjIpB;AAAA;AAAA;AAAA;AAA6B;AACQ;AACgE;;AAErG;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,yBAAyB;AACzB;;AAEA;AACA;AACA;AACA;AACA,cAAc,gDAAO;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,6BAA6B,qDAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,qDAAI,CAAC,oDAAG;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA;AACA,qBAAqB,4DAAQ;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iDAAiD,+CAAM;AACvD,+CAA+C,+CAAM;AACrD,aAAa,oDAAG;AAChB;;AA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AA;AAAiC;;AAEjC;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,8BAA8B;AAC9B,8BAA8B;AAC9B,8BAA8B,oFAAoF,0EAA0E;AAC5L,8BAA8B;AAC9B,eAAe,uDAAK,aAAa;AACjC;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA,CAAC;;;;;;;;;;;;;ACtCD;AAAA;AAAA;AAAA;AAAA;AAA4C;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,iBAAiB,+DAAW;AAC5B,iBAAiB,+DAAW;AAC5B,iBAAiB,+DAAW;AAC5B,iBAAiB,+DAAW;AAC5B;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;;;;;;;;;;;;ACzEA;AAAA;AAAiC;;AAEjC;AACA,oBAAoB,+CAAK;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEe;;AAEf;AACA,4BAA4B,+CAAK;AACjC;;AAEA;AACA;AACA;;AAEA;AACA,CAAC,OAAO,EAAC;;;;;;;;;;;;;ACvDT;AAAA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,uDAAuD;AACvD,8CAA8C;AAC9C;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,8BAA8B,sEAAsE;AACpG,8BAA8B,4BAA4B;AAC1D,8BAA8B;AAC9B,iCAAiC;AACjC;AACA;AACA;AACA;AACA;;AAEe;;AAEf;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC,IAAI,EAAC;;;;;;;;;;;;;AC5DN;AAAA;AAAA;AAAA;AAA8B;AACM;;AAE7B;AACP;AACA;AACA;;AAEA;AACA,aAAa,gDAAI;AACjB,WAAW,gDAAI;AACf;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,8BAA8B,4BAA4B;AAC1D,8BAA8B,kDAAkD;AAChF,8BAA8B,4BAA4B;AAC1D,eAAe,0DAAK,aAAa;AACjC;AACA;AACA;AACA;AACA;;AAEe;;AAEf;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC,IAAI,EAAC;;;;;;;;;;;;;AC5DN;AAAA;AAAA;AAAoC;;AAE7B;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,8BAA8B;AAC9B,8BAA8B;AAC9B,8BAA8B,kGAAkG;AAChI,8BAA8B;AAC9B,eAAe,0DAAK,aAAa;AACjC;AACA;AACA;AACA;AACA;;AAEe;;AAEf;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC,IAAI,EAAC;;;;;;;;;;;;;AChDN;AAAA;AAAA;AAAA;AAAmC;AACI;;AAEhC;AACP;AACA;AACA;AACA;;AAEA,oBAAoB,gDAAO;AAC3B;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,gDAAO;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,uDAAuD;AACvD,6CAA6C;AAC7C;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,8BAA8B,sEAAsE;AACpG,8BAA8B;AAC9B,8BAA8B;AAC9B,iCAAiC;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEe;;AAEf;AACA,wDAAwD,qDAAQ;AAChE;;AAEA;AACA;AACA;;AAEA;AACA,CAAC,MAAM,EAAC;;;;;;;;;;;;;ACvFR;AAAA;AAAA;AAAA;AAAmD;AACrB;AACQ;;AAEtC;AACA;AACA;AACA;;AAEA;AACA,aAAa,gDAAI;AACjB,WAAW,gDAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,8BAA8B,4BAA4B;AAC1D,8BAA8B,kDAAkD;AAChF,8BAA8B,4BAA4B;AAC1D,eAAe,4DAAK,aAAa;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEe;;AAEf;AACA,8DAA8D,iEAAc;AAC5E;;AAEA;AACA;AACA;;AAEA;AACA,CAAC,MAAM,EAAC;;;;;;;;;;;;;ACzER;AAAA;AAAA;AAA+C;AACT;;AAEtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,8BAA8B;AAC9B,8BAA8B;AAC9B,8BAA8B,kGAAkG;AAChI,8BAA8B;AAC9B,eAAe,4DAAK,aAAa;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEe;;AAEf;AACA,4DAA4D,6DAAY;AACxE;;AAEA;AACA;AACA;;AAEA;AACA,CAAC,MAAM,EAAC;;;;;;;;;;;;;AC7DR;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,8BAA8B,sEAAsE;AACpG,8BAA8B;AAC9B,0CAA0C;AAC1C;AACA;AACA;;AAEe;AACf;AACA,CAAC;;;;;;;;;;;;;AC9BD;AAAA;AAA8B;;AAE9B;AACA;AACA;;AAEA;AACA,aAAa,gDAAI;AACjB,WAAW,gDAAI;AACf;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA,CAAC;;;;;;;;;;;;;ACxBD;AAAA;AAAA;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,uDAAuD;AACvD,4DAA4D;AAC5D;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA,iDAAiD;AACjD;AACA,8BAA8B,sEAAsE;AACpG,8BAA8B;AAC9B,8BAA8B,wDAAwD;AACtF,8DAA8D;AAC9D;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,0BAA0B,4BAA4B,EAAE;AACxD,yBAAyB,2BAA2B,EAAE;AACtD,0BAA0B,4BAA4B,EAAE;AACxD,iDAAiD,mDAAmD;AACpG;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;;;;;;;;;;;;ACvGA;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,gCAAgC,QAAQ;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,WAAW;AACxB;AACA,aAAa,OAAO;AACpB;AACA,iBAAiB,QAAQ;AACzB;AACA,aAAa,WAAW;AACxB;AACA;;AAEe;AACf;AACA,CAAC;;;;;;;;;;;;;AChED;AAAA;AAAA;AAAA;AAAsC;;AAE/B,oCAAoC,kDAAW;;AAEtD;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEe;;AAEf;AACA;AACA;;AAEA;;AAEA;AACA;;;;;;;;;;;;;ACnCA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,8BAA8B,sEAAsE;AACpG,8BAA8B;AAC9B;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA,CAAC;;AAEM;AACP;AACA;;AAEO;AACP;AACA;;;;;;;;;;;;;ACpDA;AAAe;AACf;AACA,CAAC;;;;;;;;;;;;;ACFD;AAAe;AACfwC;AACE;AACA;AACF;AACqC;AACA;AACrB;AACiB;;AAEyB;AACnC;AACJ;AACF;AACI;AACE;AACR;AACI;AACE;AACN;AACQ;AACE;AACZ;AACJ;;AAEkB;AACJ;AACR;AACkB;AAChB;AACgB;AACJ;AACR;AACgB;AACJ;AACR;AACI;AACZ;AACoC;AAClC;AACsD;;AAErE;AACoB;AACM;AACV;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AAU,kBAAkB,EAAE,EAAE,aAAa,EAAE,2BAA2B,0BAA0B,YAAY,EAAE,2CAA2C,8BAA8B,EAAE,OAAO,6EAA6E,EAAE,GAAG,EAAE;;AAErpB;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,iBAAiB,cAAc;AAC/B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,YAAY;AACZ,GAAG;AACH;;AAEe,0EAAW,E;;;;;;;;;;;ACtL1B;AACA;AACA;AACA;AACA;AACA,EAAE,KAA4D;AAC9D,EAAE,SACyD;AAC3D,CAAC,oBAAoB;;AAErB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe;AACf;;AAEA;AACA;AACA,aAAa,wDAAwD;AACrE,eAAe;AACf;;AAEA;AACA;AACA;AACA,aAAa,eAAe;AAC5B;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa,SAAS;AACtB,eAAe;AACf;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,eAAe;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe;AACf;;AAEA;AACA;AACA;AACA;AACA,eAAe;AACf;;;AAGA;AACA;AACA,eAAe;AACf;;AAEA;AACA;AACA,eAAe;AACf;;AAEA;AACA;AACA,eAAe;AACf;;AAEA;AACA;AACA,eAAe;AACf;;AAEA;AACA;AACA,eAAe;AACf;;AAEA;AACA;AACA,eAAe;AACf;;AAEA;AACA;AACA,eAAe;AACf;;AAEA;AACA;AACA,eAAe;AACf;;AAEA;AACA;AACA,eAAe;AACf;;AAEA;AACA;AACA,eAAe;AACf;;AAEA;AACA;AACA,eAAe;AACf;;AAEA;AACA;AACA,eAAe;AACf;;AAEA;AACA;AACA,eAAe;AACf;;AAEA;AACA;AACA,eAAe;AACf;;AAEA;AACA;AACA,eAAe;AACf;;AAEA,iEAAiE;;AAEjE;AACA;AACA,eAAe;AACf;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe;AACf;;AAEA;AACA;AACA;AACA;AACA,eAAe;AACf;;AAEA;AACA;AACA;AACA;AACA,eAAe;AACf;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,YAAY;AACzB,aAAa,OAAO;AACpB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,aAAa,YAAY;AACzB,aAAa,OAAO;AACpB,eAAe;AACf;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,YAAY;AACzB,aAAa,kBAAkB;AAC/B;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,aAAa,YAAY;AACzB,aAAa,kBAAkB;AAC/B,aAAa,OAAO;AACpB;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,YAAY;AACzB,aAAa,6CAA6C;AAC1D,eAAe;AACf;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,2DAA2D;AACxE;;AAEA;AACA,kBAAkB;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,mCAAmC;AAChD,aAAa,sCAAsC;AACnD,aAAa,QAAQ;AACrB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA,aAAa,mCAAmC;AAChD,aAAa,sCAAsC;AACnD;;AAEA;AACA;AACA;AACA;AACA,aAAa,mCAAmC;AAChD,aAAa,sCAAsC;AACnD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,YAAY;AACzB,aAAa,OAAO;AACpB,eAAe;AACf;;AAEA;AACA;;AAEA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,YAAY;AACzB,aAAa,OAAO;AACpB,aAAa,EAAE;AACf;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa,YAAY;AACzB,aAAa,OAAO;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,YAAY;AACzB;;AAEA;AACA;AACA;AACA;AACA,aAAa,YAAY;AACzB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;;AAEA;AACA,eAAe,YAAY;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,YAAY;AACzB,aAAa,IAAI;AACjB,aAAa,OAAO;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,YAAY;AACzB,eAAe;AACf;;AAEA;AACA;AACA,eAAe;AACf;;AAEA;AACA;AACA,eAAe;AACf;;AAEA;AACA;AACA;AACA;AACA,aAAa,YAAY;AACzB,eAAe;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;;AAEA;;AAEA,aAAa,YAAY;;AAEzB;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,eAAe;AACf;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,yBAAyB;;AAEhC;AACA,KAAK;AACL;;AAEA;AACA;AACA,eAAe;AACf;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,iBAAiB;;AAEhC;AACA,eAAe,kBAAkB;;AAEjC;AACA;AACA,eAAe,iBAAiB;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,qBAAqB;AAClC,eAAe;AACf;;;AAGA;AACA;AACA,aAAa,kBAAkB;AAC/B;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,YAAY;AACzB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,kBAAkB;AAC/B;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,8BAA8B;AAC3C,aAAa,YAAY;AACzB;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,YAAY;AACzB;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,aAAa,YAAY;AACzB,aAAa,YAAY;AACzB;;;AAGA;AACA;;AAEA;AACA,qBAAqB,aAAa;AAClC;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,eAAe;AACf;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,eAAe;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,YAAY;AACzB,aAAa,kBAAkB;AAC/B;;AAEA;AACA;AACA,+BAA+B;;AAE/B;AACA;AACA,KAAK;AACL;AACA,KAAK;;;AAGL,iDAAiD;;AAEjD,2CAA2C;;AAE3C;AACA;AACA;AACA;AACA,aAAa,YAAY;AACzB,aAAa,YAAY;AACzB,aAAa,kBAAkB;AAC/B;;AAEA;AACA;AACA;AACA,2CAA2C;;AAE3C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,YAAY;AACzB,aAAa,YAAY;AACzB,aAAa,YAAY;AACzB,aAAa,kBAAkB;AAC/B;;;AAGA;AACA;AACA;AACA;;AAEA,4EAA4E;;AAE5E;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,YAAY;AACzB,aAAa,8BAA8B;AAC3C,aAAa,kBAAkB;AAC/B;;;AAGA;AACA;AACA,sEAAsE;;AAEtE,wFAAwF;AACxF;;AAEA;AACA;AACA;AACA;;AAEA;AACA,aAAa,YAAY;AACzB,aAAa,kBAAkB;AAC/B;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C;AACA;AACA;AACA,aAAa,YAAY;AACzB,aAAa,8BAA8B;AAC3C;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa,YAAY;AACzB,aAAa,8BAA8B;AAC3C;;;AAGA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,aAAa,YAAY;AACzB,aAAa,0BAA0B;AACvC;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,aAAa;;AAE1B;AACA;AACA,aAAa,YAAY;AACzB,aAAa,kBAAkB;AAC/B;;AAEA;AACA;AACA;AACA;AACA;AACA,mFAAmF;;AAEnF,wDAAwD;;AAExD;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,OAAO;;;AAGP;AACA;AACA;AACA;AACA,aAAa,kBAAkB;AAC/B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,yBAAyB;;AAEzB;AACA;AACA,KAAK;AACL;AACA;AACA,aAAa,iBAAiB;AAC9B;;;AAGA;AACA,mBAAmB,6BAA6B;AAChD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,WAAW;AACxB,aAAa,qCAAqC;AAClD;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,kBAAkB;AAC/B;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,uCAAuC;AACpD,aAAa,kBAAkB;AAC/B;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB,aAAa,MAAM;AACnB,aAAa,kBAAkB;AAC/B;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,2BAA2B;AACxC,eAAe;AACf;;;AAGA;AACA;AACA;AACA;AACA,aAAa,2DAA2D;AACxE,aAAa,gCAAgC;AAC7C;;;AAGA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;;AAGA;AACA;AACA,aAAa,iBAAiB;AAC9B,aAAa,kBAAkB;AAC/B,eAAe;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B,aAAa,kBAAkB;AAC/B,eAAe;AACf;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B,aAAa,kBAAkB;AAC/B,eAAe;AACf;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,kBAAkB;AAC/B,aAAa,kBAAkB;AAC/B,eAAe;AACf;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B,eAAe;AACf;;;AAGA;AACA;AACA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B,aAAa,kBAAkB;AAC/B,eAAe;AACf;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,oBAAoB;AACjC,aAAa,kBAAkB;AAC/B,eAAe;AACf;;;AAGA;AACA;AACA;AACA;AACA;AACA,eAAe,YAAY;AAC3B,iBAAiB;AACjB;;AAEA,iIAAiI;;;AAGjI;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;;AAEA;AACA,aAAa,YAAY;AACzB,aAAa,kBAAkB;AAC/B;;AAEA;AACA;AACA,6DAA6D;;AAE7D;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA,aAAa,YAAY;AACzB,aAAa,kBAAkB;AAC/B;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;;AAGL;AACA;;AAEA;AACA,aAAa,YAAY;AACzB,aAAa,kBAAkB;AAC/B;;AAEA;AACA;AACA,sDAAsD;;AAEtD;AACA;AACA;AACA;;AAEA;AACA,aAAa,YAAY;AACzB,aAAa,kBAAkB;AAC/B;;AAEA;AACA;AACA,2BAA2B;;AAE3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,eAAe;;AAEf;AACA,8BAA8B;;AAE9B;AACA;AACA;AACA,aAAa,YAAY;AACzB,aAAa,kBAAkB;AAC/B;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,2CAA2C;;AAE3C,2BAA2B;;AAE3B,uCAAuC;;AAEvC;AACA,IAAI;;;AAGJ;AACA;AACA;AACA,eAAe,wBAAwB;;AAEvC;;AAEA,mBAAmB,6BAA6B;AAChD;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,YAAY;AACzB,aAAa,kBAAkB;AAC/B;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,2DAA2D;AAC3D,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,YAAY;AACzB,aAAa,kBAAkB;AAC/B;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe;AACf;;;AAGA;;AAEA;AACA,aAAa,YAAY;AACzB,aAAa,kBAAkB;AAC/B;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAoB;;AAEpB;AACA,+CAA+C;;AAE/C;AACA,6DAA6D;;AAE7D;AACA;AACA;;AAEA;AACA,aAAa,YAAY;AACzB,aAAa,kBAAkB;AAC/B;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,aAAa,OAAO;AACpB,eAAe;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,kBAAkB;AAC/B,eAAe;AACf;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,aAAa,YAAY;AACzB,aAAa,kBAAkB;AAC/B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;;AAGL;AACA;;AAEA;AACA,aAAa,YAAY;AACzB,aAAa,kBAAkB;AAC/B;;AAEA;AACA;AACA,6BAA6B;AAC7B;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;;;AAGL,0DAA0D;;AAE1D;AACA;AACA,KAAK;;;AAGL;AACA;AACA;;AAEA,iCAAiC;;AAEjC;AACA;AACA;AACA,aAAa,YAAY;AACzB,aAAa,kBAAkB;AAC/B;;AAEA;AACA,6DAA6D;AAC7D;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;;;AAGL;;AAEA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;;AAEA;AACA,aAAa,YAAY;AACzB,aAAa,kBAAkB;AAC/B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,iBAAiB;;;AAGhC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B;;;AAGA;AACA;AACA,eAAe,YAAY;;AAE3B;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B;;;AAGA;AACA;AACA,eAAe,YAAY;;AAE3B;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B;;;AAGA;AACA;AACA,eAAe,YAAY;;AAE3B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B,aAAa,SAAS;AACtB;;;AAGA;AACA;;AAEA;AACA;AACA,iBAAiB,YAAY;;AAE7B;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,aAAa,YAAY;AACzB,aAAa,SAAS;AACtB;;;AAGA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB;AACjB;AACA;AACA,6DAA6D,KAAK;AAClE,KAAK;;AAEL;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB;AACjB;AACA;AACA;AACA,wDAAwD,MAAM,QAAQ,KAAK;AAC3E;AACA;;AAEA;AACA,aAAa,kBAAkB;AAC/B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,aAAa,kBAAkB;AAC/B;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,kBAAkB;AAC/B;;;AAGA;AACA,sCAAsC;;AAEtC;AACA;AACA;;AAEA,wCAAwC;;AAExC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,EAAE;AACf,eAAe;AACf;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,WAAW;AACxB,eAAe;AACf;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,2CAA2C;;AAE3C;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;;;AAGL;AACA;AACA,KAAK;AACL;;AAEA;AACA,mDAAmD;;AAEnD;AACA;AACA;AACA;AACA,8CAA8C;;AAE9C;AACA,KAAK,sBAAsB;;AAE3B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iBAAiB;AACjB;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oCAAoC;;AAEpC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,eAAe;AACf;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,aAAa,YAAY;AACzB;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,aAAa,YAAY;AACzB,aAAa,YAAY;AACzB,aAAa,kBAAkB;AAC/B,aAAa,EAAE;AACf;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,aAAa,kBAAkB;AAC/B,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;;AAEA;AACA,qDAAqD;;AAErD;AACA,gCAAgC;;AAEhC;AACA,kBAAkB;AAClB,OAAO;AACP;AACA;;AAEA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA,aAAa,YAAY;AACzB,aAAa,cAAc;AAC3B,aAAa,SAAS;AACtB;;AAEA;AACA;;AAEA;AACA,aAAa;AACb,KAAK;AACL;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;;AAGL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,aAAa,YAAY;AACzB,aAAa,cAAc;AAC3B,aAAa,kBAAkB;AAC/B;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,cAAc;AAC3B,aAAa,kBAAkB;AAC/B;;;AAGA;AACA;AACA;AACA;;AAEA,mBAAmB,8BAA8B;AACjD;AACA;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,mBAAmB,kCAAkC;AACrD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,cAAc;AAC3B,aAAa,kBAAkB;AAC/B,aAAa,SAAS;AACtB;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA,gFAAgF;AAChF;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;;AAEpD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,qCAAqC;;AAErC;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,mBAAmB;AACxC;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA,4BAA4B;;AAE5B,aAAa;AACb,KAAK;;;AAGL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,YAAY;AACzB;;AAEA;AACA,8BAA8B;AAC9B;;AAEA,2BAA2B;;AAE3B;AACA,qCAAqC;;AAErC;AACA;AACA;AACA,aAAa,YAAY;AACzB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,YAAY;AACzB;;;AAGA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,aAAa,YAAY;AACzB;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa,YAAY;AACzB;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa,YAAY;AACzB,aAAa,SAAS;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,YAAY;AACzB,aAAa,mBAAmB;AAChC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa,YAAY;AACzB,aAAa,OAAO;AACpB,aAAa,mBAAmB;AAChC;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA,aAAa,YAAY;AACzB,aAAa,IAAI;AACjB;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,oEAAoE;;AAEpE;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,WAAW;AACX;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,aAAa,YAAY;AACzB,aAAa,IAAI;AACjB;;;AAGA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,aAAa,YAAY;AACzB,aAAa,OAAO;AACpB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,YAAY;AACzB,aAAa,IAAI;AACjB;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,oEAAoE;;AAEpE;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,qCAAqC;;AAErC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,EAAE;AACf,eAAe;AACf;;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,iDAAiD;AACjD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6CAA6C;;AAE7C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA,sBAAsB;;AAEtB,uEAAuE,aAAa;AACpF;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC,YAAY,iBAAiB,oBAAoB,0DAA0D;AAC3G,YAAY,gBAAgB,oBAAoB,yDAAyD;AACzG;AACA;AACA,oCAAoC,wCAAwC;AAC5E,YAAY,iBAAiB;AAC7B,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,+BAA+B,uBAAuB;AACtD;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,6BAA6B;;AAE7B,yEAAyE,aAAa;AACtF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,EAAE;;AAET;;AAEA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iCAAiC;;AAEjC;AACA;AACA;AACA,OAAO;;;AAGP;AACA;AACA;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,uCAAuC;;AAEvC;AACA;AACA,OAAO;AACP,KAAK;AA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","file":"default~_LayoutDashboard-more-details-more-details-module~_LayoutDashboard-project-unplanned-task-pr~24c8fd7a.js","sourcesContent":["import { is } from \"../core/Registry\";\r\nvar theme = function (object) {\r\n    if (is(object, \"SpriteState\")) {\r\n        object.transitionDuration = 400;\r\n    }\r\n    if (is(object, \"Component\")) {\r\n        object.rangeChangeDuration = 500;\r\n        object.interpolationDuration = 500;\r\n        object.sequencedInterpolation = false;\r\n        if (is(object, \"SankeyDiagram\")) {\r\n            object.sequencedInterpolation = true;\r\n        }\r\n        if (is(object, \"FunnelSeries\")) {\r\n            object.sequencedInterpolation = true;\r\n        }\r\n    }\r\n    if (is(object, \"Chart\")) {\r\n        object.defaultState.transitionDuration = 2000;\r\n        object.hiddenState.transitionDuration = 1000;\r\n    }\r\n    if (is(object, \"Tooltip\")) {\r\n        object.animationDuration = 400;\r\n        object.defaultState.transitionDuration = 400;\r\n        object.hiddenState.transitionDuration = 400;\r\n    }\r\n    if (is(object, \"Scrollbar\")) {\r\n        object.animationDuration = 500;\r\n    }\r\n    if (is(object, \"Series\")) {\r\n        object.defaultState.transitionDuration = 1000;\r\n        object.hiddenState.transitionDuration = 700;\r\n        object.hiddenState.properties.opacity = 1;\r\n        object.showOnInit = true;\r\n    }\r\n    if (is(object, \"MapSeries\")) {\r\n        object.hiddenState.properties.opacity = 0;\r\n    }\r\n    if (is(object, \"PercentSeries\")) {\r\n        object.hiddenState.properties.opacity = 0;\r\n    }\r\n    if (is(object, \"FunnelSlice\")) {\r\n        object.defaultState.transitionDuration = 800;\r\n        object.hiddenState.transitionDuration = 1000;\r\n        object.hiddenState.properties.opacity = 1;\r\n    }\r\n    if (is(object, \"Slice\")) {\r\n        object.defaultState.transitionDuration = 700;\r\n        object.hiddenState.transitionDuration = 1000;\r\n        object.hiddenState.properties.opacity = 1;\r\n    }\r\n    if (is(object, \"Preloader\")) {\r\n        object.hiddenState.transitionDuration = 2000;\r\n    }\r\n    if (is(object, \"Column\")) {\r\n        object.defaultState.transitionDuration = 700;\r\n        object.hiddenState.transitionDuration = 1000;\r\n        object.hiddenState.properties.opacity = 1;\r\n    }\r\n    if (is(object, \"Column3D\")) {\r\n        object.hiddenState.properties.opacity = 0;\r\n    }\r\n};\r\nexport default theme;\r\n//# sourceMappingURL=animated.js.map","export { default } from \"../.internal/themes/animated\";\r\n//# sourceMappingURL=animated.js.map","import { __awaiter, __extends, __generator } from \"tslib\";\r\nimport { PercentSeries } from \"../percent/PercentSeries\";\r\nimport { Template } from \"../../core/util/Template\";\r\nimport { ListTemplate } from \"../../core/util/List\";\r\nimport { FunnelSlice } from \"./FunnelSlice\";\r\nimport { Tick } from \"../../core/render/Tick\";\r\nimport { Label } from \"../../core/render/Label\";\r\nimport { percent, p50, p100 } from \"../../core/util/Percent\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\n/**\r\n * Creates a funnel series for use in a [[SlicedChart]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/percent-charts/sliced-chart/funnel-series/} for more info\r\n * @important\r\n */\r\nvar FunnelSeries = /** @class */ (function (_super) {\r\n    __extends(FunnelSeries, _super);\r\n    function FunnelSeries() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        Object.defineProperty(_this, \"_tag\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"funnel\"\r\n        });\r\n        /**\r\n         * A [[ListTemplate]] of all slice links in series.\r\n         *\r\n         * `links.template` can also be used to configure slice links.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/percent-charts/sliced-chart/funnel-series/#Slice_links} for more info\r\n         */\r\n        Object.defineProperty(_this, \"links\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: _this._makeLinks()\r\n        });\r\n        Object.defineProperty(_this, \"_total\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(_this, \"_count\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(_this, \"_nextCoord\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(_this, \"_opposite\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(FunnelSeries.prototype, \"_makeSlices\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            return new ListTemplate(Template.new({}), function () { return FunnelSlice._new(_this._root, {\r\n                themeTags: $utils.mergeTags(_this.slices.template.get(\"themeTags\", []), [_this._tag, \"series\", \"slice\", _this.get(\"orientation\")])\r\n            }, [_this.slices.template]); });\r\n        }\r\n    });\r\n    Object.defineProperty(FunnelSeries.prototype, \"_makeLabels\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            return new ListTemplate(Template.new({}), function () { return Label._new(_this._root, {\r\n                themeTags: $utils.mergeTags(_this.labels.template.get(\"themeTags\", []), [_this._tag, \"series\", \"label\", _this.get(\"orientation\")])\r\n            }, [_this.labels.template]); });\r\n        }\r\n    });\r\n    Object.defineProperty(FunnelSeries.prototype, \"_makeTicks\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            return new ListTemplate(Template.new({}), function () { return Tick._new(_this._root, {\r\n                themeTags: $utils.mergeTags(_this.ticks.template.get(\"themeTags\", []), [_this._tag, \"series\", \"tick\", _this.get(\"orientation\")])\r\n            }, [_this.ticks.template]); });\r\n        }\r\n    });\r\n    Object.defineProperty(FunnelSeries.prototype, \"_makeLinks\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            return new ListTemplate(Template.new({}), function () { return FunnelSlice._new(_this._root, {\r\n                themeTags: $utils.mergeTags(_this.links.template.get(\"themeTags\", []), [_this._tag, \"series\", \"link\", _this.get(\"orientation\")])\r\n            }, [_this.links.template]); });\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(FunnelSeries.prototype, \"makeLink\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem) {\r\n            var link = this.slicesContainer.children.push(this.links.make());\r\n            link._setDataItem(dataItem);\r\n            dataItem.set(\"link\", link);\r\n            this.links.push(link);\r\n            return link;\r\n        }\r\n    });\r\n    Object.defineProperty(FunnelSeries.prototype, \"_afterNew\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            _super.prototype._afterNew.call(this);\r\n            var slicesContainer = this.slicesContainer;\r\n            slicesContainer.setAll({ isMeasured: true, position: \"relative\", width: percent(100), height: percent(100) });\r\n            slicesContainer.onPrivate(\"width\", function () {\r\n                _this.markDirtySize();\r\n            });\r\n            slicesContainer.onPrivate(\"height\", function () {\r\n                _this.markDirtySize();\r\n            });\r\n            if (this.get(\"orientation\") == \"vertical\") {\r\n                this.set(\"layout\", this._root.horizontalLayout);\r\n            }\r\n            else {\r\n                this.set(\"layout\", this._root.verticalLayout);\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(FunnelSeries.prototype, \"processDataItem\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem) {\r\n            var _this = this;\r\n            _super.prototype.processDataItem.call(this, dataItem);\r\n            var slice = this.makeSlice(dataItem);\r\n            slice._setDataItem(dataItem);\r\n            dataItem.set(\"slice\", slice);\r\n            this.makeLink(dataItem);\r\n            var label = this.makeLabel(dataItem);\r\n            label.on(\"x\", function () {\r\n                _this._updateTick(dataItem);\r\n            });\r\n            label.on(\"y\", function () {\r\n                _this._updateTick(dataItem);\r\n            });\r\n            this.makeTick(dataItem);\r\n            slice.events.on(\"positionchanged\", function () {\r\n                label.markDirty();\r\n            });\r\n            slice.events.on(\"boundschanged\", function () {\r\n                var dataItem = slice.dataItem;\r\n                if (dataItem) {\r\n                    _this._updateTick(dataItem);\r\n                }\r\n            });\r\n        }\r\n    });\r\n    Object.defineProperty(FunnelSeries.prototype, \"_updateChildren\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            this._opposite = false;\r\n            if (this.children.indexOf(this.labelsContainer) == 0) {\r\n                this._opposite = true;\r\n            }\r\n            var total = 0;\r\n            var count = 0;\r\n            $array.each(this.dataItems, function (dataItem) {\r\n                var value = dataItem.get(\"value\");\r\n                if ($type.isNumber(value)) {\r\n                    count++;\r\n                    if (value > 0) {\r\n                        total += Math.abs(dataItem.get(\"valueWorking\", value) / value);\r\n                    }\r\n                    else {\r\n                        if (_this.get(\"ignoreZeroValues\", false)) {\r\n                            count--;\r\n                        }\r\n                        else {\r\n                            if (dataItem.isHidden()) {\r\n                                count--;\r\n                            }\r\n                            else {\r\n                                total += 1;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            this._total = 1 / count * total;\r\n            this._count = count;\r\n            if (this.isDirty(\"alignLabels\")) {\r\n                this._fixLayout();\r\n            }\r\n            if (this._total > 0 && (this._valuesDirty || this._sizeDirty)) {\r\n                var slicesContainer = this.slicesContainer;\r\n                var h = void 0;\r\n                if (this.get(\"orientation\") == \"vertical\") {\r\n                    h = slicesContainer.innerHeight();\r\n                }\r\n                else {\r\n                    h = slicesContainer.innerWidth();\r\n                }\r\n                this._nextCoord = this.get(\"startLocation\", 0) * h;\r\n                this.markDirtyBounds();\r\n                var i_1 = 0;\r\n                $array.each(this._dataItems, function (dataItem) {\r\n                    _this.updateLegendValue(dataItem);\r\n                    dataItem.set(\"index\", i_1);\r\n                    i_1++;\r\n                    var slice = dataItem.get(\"slice\");\r\n                    var tick = dataItem.get(\"tick\");\r\n                    var label = dataItem.get(\"label\");\r\n                    var link = dataItem.get(\"link\");\r\n                    var color = dataItem.get(\"fill\");\r\n                    slice._setDefault(\"fill\", color);\r\n                    slice._setDefault(\"stroke\", color);\r\n                    link._setDefault(\"fill\", color);\r\n                    link._setDefault(\"stroke\", color);\r\n                    var value = dataItem.get(\"value\");\r\n                    if ($type.isNumber(value)) {\r\n                        if (value == 0 && _this.get(\"ignoreZeroValues\")) {\r\n                            slice.setPrivate(\"visible\", false);\r\n                            tick.setPrivate(\"visible\", false);\r\n                            label.setPrivate(\"visible\", false);\r\n                        }\r\n                        else {\r\n                            slice.setPrivate(\"visible\", true);\r\n                            tick.setPrivate(\"visible\", true);\r\n                            label.setPrivate(\"visible\", true);\r\n                            _this.decorateSlice(dataItem);\r\n                            if (_this.isLast(dataItem)) {\r\n                                link.setPrivate(\"visible\", false);\r\n                            }\r\n                            else if (!dataItem.isHidden()) {\r\n                                link.setPrivate(\"visible\", true);\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            _super.prototype._updateChildren.call(this);\r\n        }\r\n    });\r\n    Object.defineProperty(FunnelSeries.prototype, \"_fixLayout\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var orientation = this.get(\"orientation\");\r\n            var labelsContainer = this.labelsContainer;\r\n            var labelsTemplate = this.labels.template;\r\n            if (this.get(\"alignLabels\")) {\r\n                labelsContainer.set(\"position\", \"relative\");\r\n                labelsContainer.setAll({ isMeasured: true });\r\n                if (orientation == \"vertical\") {\r\n                    this.set(\"layout\", this._root.horizontalLayout);\r\n                    labelsTemplate.setAll({ centerX: p100, x: p100 });\r\n                }\r\n                else {\r\n                    this.set(\"layout\", this._root.verticalLayout);\r\n                    labelsTemplate.setAll({ centerX: 0, x: 0 });\r\n                }\r\n            }\r\n            else {\r\n                labelsContainer.setAll({ isMeasured: false, position: \"absolute\" });\r\n                if (orientation == \"vertical\") {\r\n                    labelsContainer.setAll({ x: p50 });\r\n                    labelsTemplate.setAll({ centerX: p50, x: 0 });\r\n                }\r\n                else {\r\n                    labelsContainer.setAll({ y: p50 });\r\n                    labelsTemplate.setAll({ centerX: p50, y: 0 });\r\n                }\r\n            }\r\n            this.markDirtySize();\r\n        }\r\n    });\r\n    Object.defineProperty(FunnelSeries.prototype, \"getNextValue\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem) {\r\n            var index = dataItem.get(\"index\");\r\n            var nextValue = dataItem.get(\"valueWorking\", 0);\r\n            if (index < this.dataItems.length - 1) {\r\n                var nextItem = this.dataItems[index + 1];\r\n                nextValue = nextItem.get(\"valueWorking\", 0);\r\n                if (nextItem.isHidden() || (nextItem.get(\"value\") == 0 && this.get(\"ignoreZeroValues\"))) {\r\n                    return this.getNextValue(nextItem);\r\n                }\r\n            }\r\n            return nextValue;\r\n        }\r\n    });\r\n    Object.defineProperty(FunnelSeries.prototype, \"isLast\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem) {\r\n            var index = dataItem.get(\"index\");\r\n            if (index == this.dataItems.length - 1) {\r\n                return true;\r\n            }\r\n            else {\r\n                for (var i = index + 1; i < this.dataItems.length; i++) {\r\n                    if (!this.dataItems[i].isHidden()) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n    });\r\n    Object.defineProperty(FunnelSeries.prototype, \"decorateSlice\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem) {\r\n            var orientation = this.get(\"orientation\");\r\n            var slice = dataItem.get(\"slice\");\r\n            var label = dataItem.get(\"label\");\r\n            var link = dataItem.get(\"link\");\r\n            var slicesContainer = this.slicesContainer;\r\n            var maxWidth = slicesContainer.innerWidth();\r\n            var maxHeight = slicesContainer.innerHeight();\r\n            var maxSize = maxWidth;\r\n            if (orientation == \"horizontal\") {\r\n                maxSize = maxHeight;\r\n            }\r\n            var nextValue = this.getNextValue(dataItem);\r\n            var value = dataItem.get(\"value\", 0);\r\n            var workingValue = Math.abs(dataItem.get(\"valueWorking\", value));\r\n            var bottomRatio = this.get(\"bottomRatio\", 0);\r\n            var valueHigh = this.getPrivate(\"valueHigh\", 0);\r\n            var d = 1;\r\n            if (value != 0) {\r\n                d = workingValue / Math.abs(value);\r\n            }\r\n            else {\r\n                if (dataItem.isHidden()) {\r\n                    d = 0.000001;\r\n                }\r\n            }\r\n            if (this._nextCoord == Infinity) {\r\n                this._nextCoord = 0;\r\n            }\r\n            var topWidth = workingValue / valueHigh * maxSize;\r\n            var bottomWidth = (workingValue - (workingValue - nextValue) * bottomRatio) / valueHigh * maxSize;\r\n            slice.setAll({ topWidth: topWidth, bottomWidth: bottomWidth, orientation: orientation });\r\n            link.setAll({ topWidth: bottomWidth, bottomWidth: (workingValue - (workingValue - nextValue)) / valueHigh * maxSize, orientation: orientation });\r\n            var startLocation = this.get(\"startLocation\", 0);\r\n            var endLocation = this.get(\"endLocation\", 1);\r\n            if (orientation == \"vertical\") {\r\n                var linkHeight = link.height() * d;\r\n                maxHeight = maxHeight * (endLocation - startLocation) + linkHeight;\r\n                slice.set(\"y\", this._nextCoord);\r\n                var height = Math.min(100000, Math.max(0, maxHeight / this._count * d / this._total - linkHeight));\r\n                slice.setAll({ height: height, x: maxWidth / 2 });\r\n                var labelY = this._nextCoord + height / 2;\r\n                label.set(\"y\", labelY);\r\n                this._nextCoord += height + linkHeight;\r\n                link.setAll({ y: this._nextCoord - linkHeight, x: maxWidth / 2 });\r\n            }\r\n            else {\r\n                var linkHeight = link.width() * d;\r\n                maxWidth = maxWidth * (endLocation - startLocation) + linkHeight;\r\n                slice.set(\"x\", this._nextCoord);\r\n                var width = Math.min(100000, Math.max(0, maxWidth / this._count * d / this._total - linkHeight));\r\n                slice.setAll({ width: width, y: maxHeight / 2 });\r\n                var labelX = this._nextCoord + width / 2;\r\n                label.set(\"x\", labelX);\r\n                this._nextCoord += width + linkHeight;\r\n                link.setAll({ x: this._nextCoord - linkHeight, y: maxHeight / 2 });\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * Hides series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    Object.defineProperty(FunnelSeries.prototype, \"hideDataItem\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem, duration) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    dataItem.get(\"link\").hide(duration);\r\n                    return [2 /*return*/, _super.prototype.hideDataItem.call(this, dataItem, duration)];\r\n                });\r\n            });\r\n        }\r\n    });\r\n    /**\r\n     * Shows series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    Object.defineProperty(FunnelSeries.prototype, \"showDataItem\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem, duration) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    dataItem.get(\"link\").show(duration);\r\n                    return [2 /*return*/, _super.prototype.showDataItem.call(this, dataItem, duration)];\r\n                });\r\n            });\r\n        }\r\n    });\r\n    Object.defineProperty(FunnelSeries.prototype, \"_updateTick\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem) {\r\n            if (this.get(\"alignLabels\")) {\r\n                var tick = dataItem.get(\"tick\");\r\n                var label = dataItem.get(\"label\");\r\n                var slice = dataItem.get(\"slice\");\r\n                if (tick && slice && label) {\r\n                    var labelsContainer = this.labelsContainer;\r\n                    var slicesContainer = this.slicesContainer;\r\n                    var tickLocation = tick.get(\"location\", 0.5);\r\n                    var lcw = labelsContainer.width();\r\n                    var lch = labelsContainer.height();\r\n                    var pl = labelsContainer.get(\"paddingLeft\", 0);\r\n                    var pr = labelsContainer.get(\"paddingRight\", 0);\r\n                    var pt = labelsContainer.get(\"paddingTop\", 0);\r\n                    var pb = labelsContainer.get(\"paddingBottom\", 0);\r\n                    var p0 = { x: 0, y: 0 };\r\n                    var p1 = { x: 0, y: 0 };\r\n                    var p2 = { x: 0, y: 0 };\r\n                    if (this._opposite) {\r\n                        tickLocation = 1 - tickLocation;\r\n                    }\r\n                    if (this.get(\"orientation\") == \"vertical\") {\r\n                        p0 = slice.getPoint(tickLocation, 0.5);\r\n                        p0.x += slice.x() + slicesContainer.x();\r\n                        p0.y += slice.y() + slicesContainer.y();\r\n                        if (this._opposite) {\r\n                            p1.x = lcw;\r\n                            p1.y = label.y();\r\n                            p2.x = lcw - pl;\r\n                            p2.y = p1.y;\r\n                        }\r\n                        else {\r\n                            p1.x = slicesContainer.x() + slicesContainer.width();\r\n                            p1.y = label.y();\r\n                            p2.x = p1.x + lcw - label.width() - pr;\r\n                            p2.y = p1.y;\r\n                        }\r\n                    }\r\n                    else {\r\n                        p0 = slice.getPoint(0.5, tickLocation);\r\n                        p0.x += slice.x() + slicesContainer.x();\r\n                        p0.y += slice.y() + slicesContainer.y();\r\n                        if (this._opposite) {\r\n                            p1.y = lch;\r\n                            p1.x = label.x();\r\n                            p2.y = lch - pt;\r\n                            p2.x = p1.x;\r\n                        }\r\n                        else {\r\n                            p1.y = slicesContainer.y() + slicesContainer.height();\r\n                            p1.x = label.x();\r\n                            p2.y = p1.y + lch - label.height() - pb;\r\n                            p2.x = p1.x;\r\n                        }\r\n                    }\r\n                    tick.set(\"points\", [p0, p1, p2]);\r\n                }\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(FunnelSeries.prototype, \"disposeDataItem\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem) {\r\n            _super.prototype.disposeDataItem.call(this, dataItem);\r\n            var link = dataItem.get(\"link\");\r\n            if (link) {\r\n                this.links.removeValue(link);\r\n                link.dispose();\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(FunnelSeries.prototype, \"_positionBullet\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (bullet) {\r\n            var sprite = bullet.get(\"sprite\");\r\n            if (sprite) {\r\n                var dataItem = sprite.dataItem;\r\n                var slice = dataItem.get(\"slice\");\r\n                if (slice) {\r\n                    var width = slice.width();\r\n                    var height = slice.height();\r\n                    var locationX = bullet.get(\"locationX\", 0.5);\r\n                    var locationY = bullet.get(\"locationY\", 0.5);\r\n                    var dx = 0;\r\n                    var dy = 0;\r\n                    if (this.get(\"orientation\") == \"horizontal\") {\r\n                        dy = height / 2;\r\n                    }\r\n                    else {\r\n                        dx = width / 2;\r\n                    }\r\n                    sprite.setAll({ x: slice.x() + width * locationX - dx, y: slice.y() - dy + height * locationY });\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(FunnelSeries, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"FunnelSeries\"\r\n    });\r\n    Object.defineProperty(FunnelSeries, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: PercentSeries.classNames.concat([FunnelSeries.className])\r\n    });\r\n    return FunnelSeries;\r\n}(PercentSeries));\r\nexport { FunnelSeries };\r\n//# sourceMappingURL=FunnelSeries.js.map","import { __extends } from \"tslib\";\r\nimport { Graphics } from \"../../core/render/Graphics\";\r\n/**\r\n * Draws a slice for [[FunnelSeries]].\r\n */\r\nvar FunnelSlice = /** @class */ (function (_super) {\r\n    __extends(FunnelSlice, _super);\r\n    function FunnelSlice() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        Object.defineProperty(_this, \"_projectionDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(_this, \"_tlx\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(_this, \"_tly\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(_this, \"_trx\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(_this, \"_try\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(_this, \"_blx\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(_this, \"_bly\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(_this, \"_brx\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(_this, \"_bry\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(_this, \"_cprx\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(_this, \"_cplx\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(_this, \"_cpry\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(_this, \"_cply\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(FunnelSlice.prototype, \"_afterNew\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            _super.prototype._afterNew.call(this);\r\n            this.set(\"draw\", function (display) {\r\n                display.moveTo(_this._tlx, _this._tly);\r\n                display.lineTo(_this._trx, _this._try);\r\n                display.quadraticCurveTo(_this._cprx, _this._cpry, _this._brx, _this._bry);\r\n                display.lineTo(_this._blx, _this._bly);\r\n                display.quadraticCurveTo(_this._cplx, _this._cply, _this._tlx, _this._tly);\r\n            });\r\n        }\r\n    });\r\n    Object.defineProperty(FunnelSlice.prototype, \"getPoint\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (locationX, locationY) {\r\n            var w = this.width();\r\n            var h = this.height();\r\n            var tw = this.get(\"topWidth\", 0);\r\n            var bw = this.get(\"bottomWidth\", 0);\r\n            if (this.get(\"orientation\") == \"vertical\") {\r\n                var tlx = -tw / 2;\r\n                var trx = tw / 2;\r\n                var brx = bw / 2;\r\n                var blx = -bw / 2;\r\n                var mlx = tlx + (blx - tlx) * locationY;\r\n                var mrx = trx + (brx - trx) * locationY;\r\n                return { x: mlx + (mrx - mlx) * locationX, y: h * locationY };\r\n            }\r\n            else {\r\n                var tlx = -tw / 2;\r\n                var trx = tw / 2;\r\n                var brx = bw / 2;\r\n                var blx = -bw / 2;\r\n                var mlx = tlx + (blx - tlx) * locationX;\r\n                var mrx = trx + (brx - trx) * locationX;\r\n                return { x: w * locationX, y: mlx + (mrx - mlx) * locationY };\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(FunnelSlice.prototype, \"_changed\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            if (this.isDirty(\"topWidth\") || this.isDirty(\"bottomWidth\") || this.isDirty(\"expandDistance\") || this.isDirty(\"orientation\") || this.isDirty(\"width\") || this.isDirty(\"height\")) {\r\n                var w = this.width();\r\n                var h = this.height();\r\n                var tw = this.get(\"topWidth\", 0);\r\n                var bw = this.get(\"bottomWidth\", 0);\r\n                this._clear = true;\r\n                var ed = this.get(\"expandDistance\", 0);\r\n                if (this.get(\"orientation\") == \"vertical\") {\r\n                    this._tlx = -tw / 2;\r\n                    this._tly = 0;\r\n                    this._trx = tw / 2;\r\n                    this._try = 0;\r\n                    this._brx = bw / 2;\r\n                    this._bry = h;\r\n                    this._blx = -bw / 2;\r\n                    this._bly = h;\r\n                    this._cprx = this._trx + (this._brx - this._trx) / 2 + ed * h,\r\n                        this._cpry = this._try + 0.5 * h;\r\n                    this._cplx = this._tlx + (this._blx - this._tlx) / 2 - ed * h;\r\n                    this._cply = this._tly + 0.5 * h;\r\n                }\r\n                else {\r\n                    this._tly = -tw / 2;\r\n                    this._tlx = 0;\r\n                    this._try = tw / 2;\r\n                    this._trx = 0;\r\n                    this._bry = bw / 2;\r\n                    this._brx = w;\r\n                    this._bly = -bw / 2;\r\n                    this._blx = w;\r\n                    this._cpry = this._try + (this._bry - this._try) / 2 + ed * w,\r\n                        this._cprx = this._trx + 0.5 * w;\r\n                    this._cply = this._tly + (this._bly - this._tly) / 2 - ed * w;\r\n                    this._cplx = this._tlx + 0.5 * w;\r\n                }\r\n            }\r\n            _super.prototype._changed.call(this);\r\n        }\r\n    });\r\n    Object.defineProperty(FunnelSlice, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"FunnelSlice\"\r\n    });\r\n    Object.defineProperty(FunnelSlice, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: Graphics.classNames.concat([FunnelSlice.className])\r\n    });\r\n    return FunnelSlice;\r\n}(Graphics));\r\nexport { FunnelSlice };\r\n//# sourceMappingURL=FunnelSlice.js.map","import { __extends } from \"tslib\";\r\nimport { PyramidSeries } from \"./PyramidSeries\";\r\nimport { Graphics } from \"../../core/render/Graphics\";\r\nimport { p100, p50 } from \"../../core/util/Percent\";\r\n/**\r\n * Creates a pictorial series for use in a [[SlicedChart]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/percent-charts/sliced-chart/pictorial-stacked-series/} for more info\r\n * @important\r\n */\r\nvar PictorialStackedSeries = /** @class */ (function (_super) {\r\n    __extends(PictorialStackedSeries, _super);\r\n    function PictorialStackedSeries() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        Object.defineProperty(_this, \"_tag\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"pictorial\"\r\n        });\r\n        /**\r\n         * A [[Graphics]] element to used as a mask (shape) for the series.\r\n         *\r\n         * This element is read-only. To modify the mask/shape, use the `svgPath` setting.\r\n         */\r\n        Object.defineProperty(_this, \"seriesMask\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Graphics.new(_this._root, { position: \"absolute\", x: p50, y: p50, centerX: p50, centerY: p50 })\r\n        });\r\n        Object.defineProperty(_this, \"seriesGraphics\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: _this.slicesContainer.children.push(Graphics.new(_this._root, { themeTags: [\"pictorial\", \"background\"], position: \"absolute\", x: p50, y: p50, centerX: p50, centerY: p50 }))\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(PictorialStackedSeries.prototype, \"_afterNew\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._afterNew.call(this);\r\n            this.set(\"topWidth\", p100);\r\n            this.set(\"bottomWidth\", p100);\r\n            this.set(\"valueIs\", \"height\");\r\n            this.slicesContainer.set(\"mask\", this.seriesMask);\r\n        }\r\n    });\r\n    Object.defineProperty(PictorialStackedSeries.prototype, \"_updateScale\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var slicesContainer = this.slicesContainer;\r\n            var w = slicesContainer.innerWidth();\r\n            var h = slicesContainer.innerHeight();\r\n            var seriesMask = this.seriesMask;\r\n            var seriesGraphics = this.seriesGraphics;\r\n            var scale = seriesMask.get(\"scale\", 1);\r\n            var bounds = seriesMask.localBounds();\r\n            var mw = bounds.right - bounds.left;\r\n            var mh = bounds.bottom - bounds.top;\r\n            if (this.get(\"orientation\") == \"horizontal\") {\r\n                scale = w / mw;\r\n            }\r\n            else {\r\n                scale = h / mh;\r\n            }\r\n            if (scale != Infinity && scale != NaN) {\r\n                seriesMask.set(\"scale\", scale);\r\n                seriesMask.set(\"x\", w / 2);\r\n                seriesMask.set(\"y\", h / 2);\r\n                seriesGraphics.set(\"scale\", scale);\r\n                seriesGraphics.set(\"x\", w / 2);\r\n                seriesGraphics.set(\"y\", h / 2);\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(PictorialStackedSeries.prototype, \"_prepareChildren\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._prepareChildren.call(this);\r\n            if (this.isDirty(\"svgPath\")) {\r\n                var svgPath = this.get(\"svgPath\");\r\n                this.seriesMask.set(\"svgPath\", svgPath);\r\n                this.seriesGraphics.set(\"svgPath\", svgPath);\r\n            }\r\n            this._updateScale();\r\n        }\r\n    });\r\n    Object.defineProperty(PictorialStackedSeries, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"PictorialStackedSeries\"\r\n    });\r\n    Object.defineProperty(PictorialStackedSeries, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: PyramidSeries.classNames.concat([PictorialStackedSeries.className])\r\n    });\r\n    return PictorialStackedSeries;\r\n}(PyramidSeries));\r\nexport { PictorialStackedSeries };\r\n//# sourceMappingURL=PictorialStackedSeries.js.map","import { __extends, __read } from \"tslib\";\r\nimport { FunnelSeries } from \"./FunnelSeries\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\nimport * as $type from \"../../core/util/Type\";\r\n/**\r\n * Creates a pyramid series for use in a [[SlicedChart]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/percent-charts/sliced-chart/pyramid-series/} for more info\r\n * @important\r\n */\r\nvar PyramidSeries = /** @class */ (function (_super) {\r\n    __extends(PyramidSeries, _super);\r\n    function PyramidSeries() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        Object.defineProperty(_this, \"_tag\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"pyramid\"\r\n        });\r\n        Object.defineProperty(_this, \"_nextSize\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(PyramidSeries.prototype, \"_prepareChildren\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._prepareChildren.call(this);\r\n            this._nextSize = undefined;\r\n        }\r\n    });\r\n    Object.defineProperty(PyramidSeries.prototype, \"decorateSlice\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem) {\r\n            var _a, _b, _c, _d;\r\n            var orientation = this.get(\"orientation\");\r\n            var slicesContainer = this.slicesContainer;\r\n            var slice = dataItem.get(\"slice\");\r\n            var label = dataItem.get(\"label\");\r\n            var link = dataItem.get(\"link\");\r\n            var valueIs = this.get(\"valueIs\", \"area\");\r\n            var sum = this.getPrivate(\"valueAbsoluteSum\", 0);\r\n            if (sum == 0) {\r\n                return;\r\n            }\r\n            var startLocation = this.get(\"startLocation\", 0);\r\n            var endLocation = this.get(\"endLocation\", 1);\r\n            var tw = this.get(\"topWidth\", 0);\r\n            var bw = this.get(\"bottomWidth\", p100);\r\n            var workingValue = Math.abs(dataItem.get(\"valueWorking\", 0));\r\n            var value = dataItem.get(\"value\", 0);\r\n            var sliceHeight;\r\n            var sliceBottomWidth;\r\n            var pyramidHeight = slicesContainer.innerHeight();\r\n            var pyramidWidth = slicesContainer.innerWidth();\r\n            var linkWidth = link.width();\r\n            var linkHeight = link.height();\r\n            if (orientation == \"horizontal\") {\r\n                _a = __read([pyramidHeight, pyramidWidth], 2), pyramidWidth = _a[0], pyramidHeight = _a[1];\r\n                _b = __read([linkHeight, linkWidth], 2), linkWidth = _b[0], linkHeight = _b[1];\r\n            }\r\n            var center = pyramidWidth / 2;\r\n            var d = 1;\r\n            if (value != 0) {\r\n                d = workingValue / Math.abs(value);\r\n            }\r\n            else {\r\n                if (dataItem.isHidden()) {\r\n                    d = 0.000001;\r\n                }\r\n            }\r\n            linkHeight *= d;\r\n            pyramidHeight = pyramidHeight * (endLocation - startLocation) - linkHeight * (this._count * this._total - 1);\r\n            var topWidth = $utils.relativeToValue(tw, pyramidWidth);\r\n            if (!$type.isNumber(this._nextSize)) {\r\n                this._nextSize = topWidth;\r\n            }\r\n            var bottomWidth = $utils.relativeToValue(bw, pyramidWidth);\r\n            var sliceTopWidth = this._nextSize;\r\n            var angle = Math.atan2(pyramidHeight, topWidth - bottomWidth);\r\n            var c = Math.tan(Math.PI / 2 - angle);\r\n            if (c == 0) {\r\n                c = 0.00000001;\r\n            }\r\n            if (valueIs == \"area\") {\r\n                var totalSquare = (topWidth + bottomWidth) / 2 * pyramidHeight;\r\n                var square = totalSquare * workingValue / sum;\r\n                var s = Math.abs(sliceTopWidth * sliceTopWidth - 2 * square * c);\r\n                sliceHeight = (sliceTopWidth - Math.sqrt(s)) / c;\r\n                if (sliceHeight > 0) {\r\n                    sliceBottomWidth = (2 * square - sliceHeight * sliceTopWidth) / sliceHeight;\r\n                }\r\n                else {\r\n                    sliceBottomWidth = sliceTopWidth;\r\n                }\r\n            }\r\n            else {\r\n                sliceHeight = pyramidHeight * workingValue / sum;\r\n                sliceBottomWidth = sliceTopWidth - sliceHeight * c;\r\n            }\r\n            var labelCoord = this._nextCoord + sliceHeight / 2;\r\n            var sliceX = center;\r\n            var sliceY = this._nextCoord;\r\n            var linkX = center;\r\n            var linkY = sliceY + sliceHeight;\r\n            if (orientation == \"vertical\") {\r\n                label.set(\"y\", labelCoord);\r\n                if (label.get(\"opacity\") > 0) {\r\n                    this._rLabels.push({ label: label, y: labelCoord });\r\n                }\r\n                slice.set(\"height\", sliceHeight);\r\n            }\r\n            else {\r\n                label.set(\"x\", labelCoord);\r\n                if (label.get(\"opacity\") > 0) {\r\n                    this._hLabels.push({ label: label, y: labelCoord });\r\n                }\r\n                _c = __read([sliceY, sliceX], 2), sliceX = _c[0], sliceY = _c[1];\r\n                _d = __read([linkY, linkX], 2), linkX = _d[0], linkY = _d[1];\r\n                slice.set(\"width\", sliceHeight);\r\n            }\r\n            slice.setAll({ orientation: orientation, bottomWidth: sliceBottomWidth, topWidth: sliceTopWidth, x: sliceX, y: sliceY });\r\n            link.setAll({ orientation: orientation, x: linkX, y: linkY, topWidth: sliceBottomWidth, bottomWidth: sliceBottomWidth });\r\n            this._nextSize = sliceBottomWidth;\r\n            this._nextCoord += sliceHeight + linkHeight;\r\n        }\r\n    });\r\n    Object.defineProperty(PyramidSeries, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"PyramidSeries\"\r\n    });\r\n    Object.defineProperty(PyramidSeries, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: FunnelSeries.classNames.concat([PyramidSeries.className])\r\n    });\r\n    return PyramidSeries;\r\n}(FunnelSeries));\r\nexport { PyramidSeries };\r\n//# sourceMappingURL=PyramidSeries.js.map","import { __extends } from \"tslib\";\r\nimport { PercentChart } from \"../percent/PercentChart\";\r\n/**\r\n * Creates a sliced chart for use with [[FunnelSeries]], [[PyramidSeries]], or [[PictorialStackedSeries]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/} for more info\r\n * @important\r\n */\r\nvar SlicedChart = /** @class */ (function (_super) {\r\n    __extends(SlicedChart, _super);\r\n    function SlicedChart() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(SlicedChart.prototype, \"_afterNew\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._afterNew.call(this);\r\n            this.seriesContainer.setAll({ isMeasured: true, layout: this._root.horizontalLayout });\r\n        }\r\n    });\r\n    Object.defineProperty(SlicedChart, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"SlicedChart\"\r\n    });\r\n    Object.defineProperty(SlicedChart, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: PercentChart.classNames.concat([SlicedChart.className])\r\n    });\r\n    return SlicedChart;\r\n}(PercentChart));\r\nexport { SlicedChart };\r\n//# sourceMappingURL=SlicedChart.js.map","import { __extends } from \"tslib\";\r\nimport { SerialChart } from \"../../core/render/SerialChart\";\r\nimport { PercentDefaultTheme } from \"./PercentDefaultTheme\";\r\n/**\r\n * Base class for [[PieChart]].\r\n *\r\n * Also used for percent-based series, like [[FunnelSeries]], [[PyramidSeries]], etc.\r\n *\r\n * @important\r\n */\r\nvar PercentChart = /** @class */ (function (_super) {\r\n    __extends(PercentChart, _super);\r\n    function PercentChart() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(PercentChart.prototype, \"_afterNew\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this._defaultThemes.push(PercentDefaultTheme.new(this._root));\r\n            _super.prototype._afterNew.call(this);\r\n            this.chartContainer.children.push(this.seriesContainer);\r\n            this.seriesContainer.children.push(this.bulletsContainer);\r\n        }\r\n    });\r\n    Object.defineProperty(PercentChart.prototype, \"_processSeries\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (series) {\r\n            _super.prototype._processSeries.call(this, series);\r\n            this.seriesContainer.children.moveValue(this.bulletsContainer, this.seriesContainer.children.length - 1);\r\n        }\r\n    });\r\n    Object.defineProperty(PercentChart, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"PercentChart\"\r\n    });\r\n    Object.defineProperty(PercentChart, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: SerialChart.classNames.concat([PercentChart.className])\r\n    });\r\n    return PercentChart;\r\n}(SerialChart));\r\nexport { PercentChart };\r\n//# sourceMappingURL=PercentChart.js.map","import { __extends } from \"tslib\";\r\nimport { Theme } from \"../../core/Theme\";\r\nimport { percent, p50, p100 } from \"../../core/util/Percent\";\r\nimport { ColorSet } from \"../../core/util/ColorSet\";\r\nimport { setColor } from \"../../themes/DefaultTheme\";\r\n/**\r\n * @ignore\r\n */\r\nvar PercentDefaultTheme = /** @class */ (function (_super) {\r\n    __extends(PercentDefaultTheme, _super);\r\n    function PercentDefaultTheme() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(PercentDefaultTheme.prototype, \"setupDefaultRules\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype.setupDefaultRules.call(this);\r\n            var ic = this._root.interfaceColors;\r\n            var r = this.rule.bind(this);\r\n            /**\r\n             * ========================================================================\r\n             * charts/percent\r\n             * ========================================================================\r\n             */\r\n            r(\"PercentSeries\").setAll({\r\n                legendLabelText: \"{category}\",\r\n                legendValueText: \"{valuePercentTotal.formatNumber('0.00p')}\",\r\n                colors: ColorSet.new(this._root, {}),\r\n                width: p100,\r\n                height: p100\r\n            });\r\n            /**\r\n             * ========================================================================\r\n             * charts/pie\r\n             * ========================================================================\r\n             */\r\n            r(\"PieChart\").setAll({\r\n                radius: percent(80),\r\n                startAngle: -90,\r\n                endAngle: 270\r\n            });\r\n            r(\"PieSeries\").setAll({\r\n                alignLabels: true,\r\n                startAngle: -90,\r\n                endAngle: 270\r\n            });\r\n            r(\"PieSeries\").states.create(\"hidden\", { endAngle: -90, opacity: 0 });\r\n            r(\"Slice\", [\"pie\"]).setAll({\r\n                position: \"absolute\",\r\n                isMeasured: false,\r\n                x: 0,\r\n                y: 0,\r\n                toggleKey: \"active\",\r\n                tooltipText: \"{category}: {valuePercentTotal.formatNumber('0.00p')}\",\r\n                strokeWidth: 1,\r\n                strokeOpacity: 1,\r\n                role: \"figure\",\r\n                lineJoin: \"round\"\r\n            });\r\n            r(\"Slice\", [\"pie\"]).states.create(\"active\", { shiftRadius: 20 });\r\n            r(\"Slice\", [\"pie\"]).states.create(\"hoverActive\", { scale: 1 });\r\n            r(\"Slice\", [\"pie\"]).states.create(\"hover\", { scale: 1.04 });\r\n            r(\"RadialLabel\", [\"pie\"]).setAll({\r\n                textType: \"aligned\",\r\n                radius: 10,\r\n                text: \"{category}: {valuePercentTotal.formatNumber('0.00p')}\",\r\n                paddingTop: 5,\r\n                paddingBottom: 5,\r\n                populateText: true\r\n            });\r\n            r(\"Tick\", [\"pie\"]).setAll({\r\n                location: 1\r\n            });\r\n            /**\r\n             * ========================================================================\r\n             * charts/funnel\r\n             * ========================================================================\r\n             */\r\n            r(\"SlicedChart\").setAll({\r\n                paddingLeft: 10,\r\n                paddingRight: 10,\r\n                paddingTop: 10,\r\n                paddingBottom: 10\r\n            });\r\n            /**\r\n             * ------------------------------------------------------------------------\r\n             * charts/funnel: Funnel\r\n             * ------------------------------------------------------------------------\r\n             */\r\n            r(\"FunnelSeries\").setAll({\r\n                startLocation: 0,\r\n                endLocation: 1,\r\n                orientation: \"vertical\",\r\n                alignLabels: true,\r\n                sequencedInterpolation: true\r\n            });\r\n            r(\"FunnelSlice\").setAll({\r\n                interactive: true,\r\n                expandDistance: 0,\r\n                //tooltipText: \"{category}: {valuePercentTotal.formatNumber('0.00p')}\"\r\n            });\r\n            r(\"FunnelSlice\").states.create(\"hover\", { expandDistance: 0.15 });\r\n            r(\"Label\", [\"funnel\"]).setAll({\r\n                populateText: true,\r\n                text: \"{category}: {valuePercentTotal.formatNumber('0.00p')}\",\r\n                centerY: p50\r\n            });\r\n            r(\"Label\", [\"funnel\", \"horizontal\"]).setAll({\r\n                centerX: 0,\r\n                centerY: p50,\r\n                rotation: -90\r\n            });\r\n            // Class: Label\r\n            r(\"Label\", [\"funnel\", \"vertical\"]).setAll({\r\n                centerY: p50,\r\n                centerX: 0\r\n            });\r\n            r(\"Tick\", [\"funnel\"]).setAll({\r\n                location: 1\r\n            });\r\n            r(\"FunnelSlice\", [\"funnel\", \"link\"]).setAll({\r\n                fillOpacity: 0.5,\r\n                strokeOpacity: 0,\r\n                expandDistance: -0.1\r\n            });\r\n            r(\"FunnelSlice\", [\"funnel\", \"link\", \"vertical\"]).setAll({\r\n                height: 10,\r\n            });\r\n            r(\"FunnelSlice\", [\"funnel\", \"link\", \"horizontal\"]).setAll({\r\n                width: 10\r\n            });\r\n            /**\r\n             * ------------------------------------------------------------------------\r\n             * charts/funnel: Pyramid\r\n             * ------------------------------------------------------------------------\r\n             */\r\n            r(\"PyramidSeries\").setAll({\r\n                valueIs: \"area\"\r\n            });\r\n            r(\"FunnelSlice\", [\"pyramid\", \"link\"]).setAll({\r\n                fillOpacity: 0.5\r\n            });\r\n            r(\"FunnelSlice\", [\"pyramid\", \"link\", \"vertical\"]).setAll({\r\n                height: 0\r\n            });\r\n            r(\"FunnelSlice\", [\"pyramid\", \"link\", \"horizontal\"]).setAll({\r\n                width: 0\r\n            });\r\n            r(\"FunnelSlice\", [\"pyramid\"]).setAll({\r\n                interactive: true,\r\n                expandDistance: 0\r\n            });\r\n            r(\"FunnelSlice\", [\"pyramid\"]).states.create(\"hover\", { expandDistance: 0.15 });\r\n            r(\"Label\", [\"pyramid\"]).setAll({\r\n                populateText: true,\r\n                text: \"{category}: {valuePercentTotal.formatNumber('0.00p')}\",\r\n                centerY: p50\r\n            });\r\n            r(\"Label\", [\"pyramid\", \"horizontal\"]).setAll({\r\n                centerX: 0,\r\n                centerY: p50,\r\n                rotation: -90\r\n            });\r\n            r(\"Label\", [\"pyramid\", \"vertical\"]).setAll({\r\n                centerY: p50,\r\n                centerX: 0\r\n            });\r\n            r(\"Tick\", [\"pyramid\"]).setAll({\r\n                location: 1\r\n            });\r\n            /**\r\n             * ------------------------------------------------------------------------\r\n             * charts/funnel: Pictorial\r\n             * ------------------------------------------------------------------------\r\n             */\r\n            // Class: FunnelSlice\r\n            r(\"FunnelSlice\", [\"pictorial\"]).setAll({\r\n                interactive: true,\r\n                tooltipText: \"{category}: {valuePercentTotal.formatNumber('0.00p')}\"\r\n            });\r\n            r(\"Label\", [\"pictorial\"]).setAll({\r\n                populateText: true,\r\n                text: \"{category}: {valuePercentTotal.formatNumber('0.00p')}\",\r\n                centerY: p50\r\n            });\r\n            r(\"Label\", [\"pictorial\", \"horizontal\"]).setAll({\r\n                centerX: 0,\r\n                centerY: p50,\r\n                rotation: -90\r\n            });\r\n            r(\"Label\", [\"pictorial\", \"vertical\"]).setAll({\r\n                centerY: p50,\r\n                centerX: 0\r\n            });\r\n            r(\"FunnelSlice\", [\"pictorial\", \"link\"]).setAll({\r\n                fillOpacity: 0.5,\r\n                width: 0,\r\n                height: 0\r\n            });\r\n            r(\"Tick\", [\"pictorial\"]).setAll({\r\n                location: 0.5\r\n            });\r\n            {\r\n                var rule = r(\"Graphics\", [\"pictorial\", \"background\"]);\r\n                rule.setAll({\r\n                    fillOpacity: 0.2\r\n                });\r\n                setColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n            }\r\n        }\r\n    });\r\n    return PercentDefaultTheme;\r\n}(Theme));\r\nexport { PercentDefaultTheme };\r\n//# sourceMappingURL=PercentDefaultTheme.js.map","import { __awaiter, __extends, __generator } from \"tslib\";\r\nimport { Series } from \"../../core/render/Series\";\r\nimport { Container } from \"../../core/render/Container\";\r\nimport { visualSettings } from \"../../core/render/Graphics\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $type from \"../../core/util/Type\";\r\n/**\r\n * A base class for any percent chart series.\r\n */\r\nvar PercentSeries = /** @class */ (function (_super) {\r\n    __extends(PercentSeries, _super);\r\n    function PercentSeries() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        Object.defineProperty(_this, \"slicesContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: _this.children.push(Container.new(_this._root, { position: \"absolute\", isMeasured: false }))\r\n        });\r\n        Object.defineProperty(_this, \"labelsContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: _this.children.push(Container.new(_this._root, { position: \"absolute\", isMeasured: false }))\r\n        });\r\n        Object.defineProperty(_this, \"ticksContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: _this.children.push(Container.new(_this._root, { position: \"absolute\", isMeasured: false }))\r\n        });\r\n        Object.defineProperty(_this, \"_lLabels\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(_this, \"_rLabels\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(_this, \"_hLabels\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        /**\r\n         * A [[ListTemplate]] of all slices in series.\r\n         *\r\n         * `slices.template` can also be used to configure slices.\r\n         */\r\n        Object.defineProperty(_this, \"slices\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: _this._makeSlices()\r\n        });\r\n        /**\r\n         * A [[ListTemplate]] of all slice labels in series.\r\n         *\r\n         * `labels.template` can also be used to configure slice labels.\r\n         */\r\n        Object.defineProperty(_this, \"labels\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: _this._makeLabels()\r\n        });\r\n        /**\r\n         * A [[ListTemplate]] of all slice ticks in series.\r\n         *\r\n         * `ticks.template` can also be used to configure slice ticks.\r\n         */\r\n        Object.defineProperty(_this, \"ticks\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: _this._makeTicks()\r\n        });\r\n        return _this;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(PercentSeries.prototype, \"makeSlice\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem) {\r\n            var _this = this;\r\n            var slice = this.slicesContainer.children.push(this.slices.make());\r\n            slice.on(\"fill\", function () {\r\n                _this.updateLegendMarker(dataItem);\r\n            });\r\n            slice.on(\"stroke\", function () {\r\n                _this.updateLegendMarker(dataItem);\r\n            });\r\n            slice._setDataItem(dataItem);\r\n            dataItem.set(\"slice\", slice);\r\n            this.slices.push(slice);\r\n            return slice;\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(PercentSeries.prototype, \"makeLabel\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem) {\r\n            var label = this.labelsContainer.children.push(this.labels.make());\r\n            label._setDataItem(dataItem);\r\n            dataItem.set(\"label\", label);\r\n            this.labels.push(label);\r\n            return label;\r\n        }\r\n    });\r\n    Object.defineProperty(PercentSeries.prototype, \"_shouldMakeBullet\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem) {\r\n            if (dataItem.get(\"value\") != null) {\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(PercentSeries.prototype, \"makeTick\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem) {\r\n            var tick = this.ticksContainer.children.push(this.ticks.make());\r\n            tick._setDataItem(dataItem);\r\n            dataItem.set(\"tick\", tick);\r\n            this.ticks.push(tick);\r\n            return tick;\r\n        }\r\n    });\r\n    Object.defineProperty(PercentSeries.prototype, \"_afterNew\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this.fields.push(\"category\", \"fill\");\r\n            _super.prototype._afterNew.call(this);\r\n        }\r\n    });\r\n    Object.defineProperty(PercentSeries.prototype, \"_onDataClear\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var colors = this.get(\"colors\");\r\n            if (colors) {\r\n                colors.reset();\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(PercentSeries.prototype, \"_prepareChildren\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._prepareChildren.call(this);\r\n            this._lLabels = [];\r\n            this._rLabels = [];\r\n            this._hLabels = [];\r\n            if (this._valuesDirty) {\r\n                var sum_1 = 0;\r\n                var absSum_1 = 0;\r\n                var valueHigh_1 = 0;\r\n                var valueLow_1 = Infinity;\r\n                var count_1 = 0;\r\n                $array.each(this._dataItems, function (dataItem) {\r\n                    var valueWorking = dataItem.get(\"valueWorking\", 0);\r\n                    sum_1 += valueWorking;\r\n                    absSum_1 += Math.abs(valueWorking);\r\n                });\r\n                $array.each(this._dataItems, function (dataItem) {\r\n                    var value = dataItem.get(\"valueWorking\", 0);\r\n                    if (value >= absSum_1) {\r\n                        sum_1 = dataItem.get(\"value\", 0);\r\n                    }\r\n                    if (value > valueHigh_1) {\r\n                        valueHigh_1 = value;\r\n                    }\r\n                    if (value < valueLow_1) {\r\n                        valueLow_1 = value;\r\n                    }\r\n                    count_1++;\r\n                    var percentTotal = value / absSum_1;\r\n                    if (absSum_1 == 0) {\r\n                        percentTotal = 0;\r\n                    }\r\n                    dataItem.setRaw(\"valuePercentTotal\", percentTotal * 100);\r\n                });\r\n                this.setPrivateRaw(\"valueLow\", valueLow_1);\r\n                this.setPrivateRaw(\"valueHigh\", valueHigh_1);\r\n                this.setPrivateRaw(\"valueSum\", sum_1);\r\n                this.setPrivateRaw(\"valueAverage\", sum_1 / count_1);\r\n                this.setPrivateRaw(\"valueAbsoluteSum\", absSum_1);\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * Shows hidden series.\r\n     *\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Animation promise\r\n     */\r\n    Object.defineProperty(PercentSeries.prototype, \"show\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (duration) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var promises;\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0:\r\n                            promises = [];\r\n                            promises.push(_super.prototype.show.call(this, duration));\r\n                            promises.push(this._sequencedShowHide(true, duration));\r\n                            return [4 /*yield*/, Promise.all(promises)];\r\n                        case 1:\r\n                            _a.sent();\r\n                            return [2 /*return*/];\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    });\r\n    /**\r\n     * Hide whole series.\r\n     *\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Animation promise\r\n     */\r\n    Object.defineProperty(PercentSeries.prototype, \"hide\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (duration) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var promises;\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0:\r\n                            promises = [];\r\n                            promises.push(_super.prototype.hide.call(this, duration));\r\n                            promises.push(this._sequencedShowHide(false, duration));\r\n                            return [4 /*yield*/, Promise.all(promises)];\r\n                        case 1:\r\n                            _a.sent();\r\n                            return [2 /*return*/];\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(PercentSeries.prototype, \"_updateChildren\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            _super.prototype._updateChildren.call(this);\r\n            if (this._valuesDirty) {\r\n                $array.each(this._dataItems, function (dataItem) {\r\n                    dataItem.get(\"label\").text.markDirtyText();\r\n                });\r\n            }\r\n            if (this.isDirty(\"legendLabelText\") || this.isDirty(\"legendValueText\")) {\r\n                $array.each(this._dataItems, function (dataItem) {\r\n                    _this.updateLegendValue(dataItem);\r\n                });\r\n            }\r\n            this._arrange();\r\n        }\r\n    });\r\n    Object.defineProperty(PercentSeries.prototype, \"_arrange\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            this._arrangeDown(this._lLabels);\r\n            this._arrangeUp(this._lLabels);\r\n            this._arrangeDown(this._rLabels);\r\n            this._arrangeUp(this._rLabels);\r\n            this._arrangeLeft(this._hLabels);\r\n            this._arrangeRight(this._hLabels);\r\n            $array.each(this.dataItems, function (dataItem) {\r\n                _this._updateTick(dataItem);\r\n            });\r\n        }\r\n    });\r\n    Object.defineProperty(PercentSeries.prototype, \"_afterChanged\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._afterChanged.call(this);\r\n            this._arrange();\r\n        }\r\n    });\r\n    Object.defineProperty(PercentSeries.prototype, \"processDataItem\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem) {\r\n            _super.prototype.processDataItem.call(this, dataItem);\r\n            if (dataItem.get(\"fill\") == null) {\r\n                var colors = this.get(\"colors\");\r\n                if (colors) {\r\n                    dataItem.setRaw(\"fill\", colors.next());\r\n                }\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * Shows series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    Object.defineProperty(PercentSeries.prototype, \"showDataItem\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem, duration) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var promises, easing, value, animation, tick, label, slice;\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0:\r\n                            promises = [_super.prototype.showDataItem.call(this, dataItem, duration)];\r\n                            if (!$type.isNumber(duration)) {\r\n                                duration = this.get(\"stateAnimationDuration\", 0);\r\n                            }\r\n                            easing = this.get(\"stateAnimationEasing\");\r\n                            value = dataItem.get(\"value\");\r\n                            animation = dataItem.animate({ key: \"valueWorking\", to: value, duration: duration, easing: easing });\r\n                            if (animation) {\r\n                                promises.push(animation.waitForStop());\r\n                            }\r\n                            tick = dataItem.get(\"tick\");\r\n                            if (tick) {\r\n                                promises.push(tick.show(duration));\r\n                            }\r\n                            label = dataItem.get(\"label\");\r\n                            if (label) {\r\n                                promises.push(label.show(duration));\r\n                            }\r\n                            slice = dataItem.get(\"slice\");\r\n                            if (slice) {\r\n                                promises.push(slice.show(duration));\r\n                            }\r\n                            if (slice.get(\"active\")) {\r\n                                slice.states.applyAnimate(\"active\");\r\n                            }\r\n                            return [4 /*yield*/, Promise.all(promises)];\r\n                        case 1:\r\n                            _a.sent();\r\n                            return [2 /*return*/];\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    });\r\n    /**\r\n     * Hides series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    Object.defineProperty(PercentSeries.prototype, \"hideDataItem\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem, duration) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var promises, hiddenState, easing, animation, tick, label, slice;\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0:\r\n                            promises = [_super.prototype.hideDataItem.call(this, dataItem, duration)];\r\n                            hiddenState = this.states.create(\"hidden\", {});\r\n                            if (!$type.isNumber(duration)) {\r\n                                duration = hiddenState.get(\"stateAnimationDuration\", this.get(\"stateAnimationDuration\", 0));\r\n                            }\r\n                            easing = hiddenState.get(\"stateAnimationEasing\", this.get(\"stateAnimationEasing\"));\r\n                            animation = dataItem.animate({ key: \"valueWorking\", to: 0, duration: duration, easing: easing });\r\n                            if (animation) {\r\n                                promises.push(animation.waitForStop());\r\n                            }\r\n                            tick = dataItem.get(\"tick\");\r\n                            if (tick) {\r\n                                promises.push(tick.hide(duration));\r\n                            }\r\n                            label = dataItem.get(\"label\");\r\n                            if (label) {\r\n                                promises.push(label.hide(duration));\r\n                            }\r\n                            slice = dataItem.get(\"slice\");\r\n                            slice.hideTooltip();\r\n                            if (slice) {\r\n                                promises.push(slice.hide(duration));\r\n                            }\r\n                            return [4 /*yield*/, Promise.all(promises)];\r\n                        case 1:\r\n                            _a.sent();\r\n                            return [2 /*return*/];\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(PercentSeries.prototype, \"disposeDataItem\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem) {\r\n            _super.prototype.disposeDataItem.call(this, dataItem);\r\n            var label = dataItem.get(\"label\");\r\n            if (label) {\r\n                this.labels.removeValue(label);\r\n                label.dispose();\r\n            }\r\n            var tick = dataItem.get(\"tick\");\r\n            if (tick) {\r\n                this.ticks.removeValue(tick);\r\n                tick.dispose();\r\n            }\r\n            var slice = dataItem.get(\"slice\");\r\n            if (slice) {\r\n                this.slices.removeValue(slice);\r\n                slice.dispose();\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * Triggers hover on a series data item.\r\n     *\r\n     * @since 5.0.7\r\n     * @param  dataItem  Target data item\r\n     */\r\n    Object.defineProperty(PercentSeries.prototype, \"hoverDataItem\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem) {\r\n            var slice = dataItem.get(\"slice\");\r\n            if (slice && !slice.isHidden()) {\r\n                slice.hover();\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * Triggers un-hover on a series data item.\r\n     *\r\n     * @since 5.0.7\r\n     * @param  dataItem  Target data item\r\n     */\r\n    Object.defineProperty(PercentSeries.prototype, \"unhoverDataItem\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem) {\r\n            var slice = dataItem.get(\"slice\");\r\n            if (slice) {\r\n                slice.unhover();\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(PercentSeries.prototype, \"updateLegendMarker\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem) {\r\n            var slice = dataItem.get(\"slice\");\r\n            if (slice) {\r\n                var legendDataItem = dataItem.get(\"legendDataItem\");\r\n                if (legendDataItem) {\r\n                    var markerRectangle_1 = legendDataItem.get(\"markerRectangle\");\r\n                    $array.each(visualSettings, function (setting) {\r\n                        if (slice.get(setting) != null) {\r\n                            markerRectangle_1.set(setting, slice.get(setting));\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(PercentSeries.prototype, \"_arrangeDown\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (labels) {\r\n            if (labels) {\r\n                var next_1 = this._getNextDown();\r\n                labels.sort(function (a, b) {\r\n                    if (a.y > b.y) {\r\n                        return 1;\r\n                    }\r\n                    else if (a.y < b.y) {\r\n                        return -1;\r\n                    }\r\n                    else {\r\n                        return 0;\r\n                    }\r\n                });\r\n                $array.each(labels, function (l) {\r\n                    var bounds = l.label.adjustedLocalBounds();\r\n                    var labelTop = bounds.top;\r\n                    if (l.y + labelTop < next_1) {\r\n                        l.y = next_1 - labelTop;\r\n                    }\r\n                    l.label.set(\"y\", l.y);\r\n                    next_1 = l.y + bounds.bottom;\r\n                });\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(PercentSeries.prototype, \"_getNextUp\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            return this.labelsContainer.maxHeight();\r\n        }\r\n    });\r\n    Object.defineProperty(PercentSeries.prototype, \"_getNextDown\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            return 0;\r\n        }\r\n    });\r\n    Object.defineProperty(PercentSeries.prototype, \"_arrangeUp\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (labels) {\r\n            if (labels) {\r\n                var next_2 = this._getNextUp();\r\n                labels.sort(function (a, b) {\r\n                    if (a.y < b.y) {\r\n                        return 1;\r\n                    }\r\n                    else if (a.y > b.y) {\r\n                        return -1;\r\n                    }\r\n                    else {\r\n                        return 0;\r\n                    }\r\n                });\r\n                $array.each(labels, function (l) {\r\n                    var bounds = l.label.adjustedLocalBounds();\r\n                    var labelBottom = bounds.bottom;\r\n                    if (l.y + labelBottom > next_2) {\r\n                        l.y = next_2 - labelBottom;\r\n                    }\r\n                    l.label.set(\"y\", l.y);\r\n                    next_2 = l.y + bounds.top;\r\n                });\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(PercentSeries.prototype, \"_arrangeRight\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (labels) {\r\n            if (labels) {\r\n                var next_3 = 0;\r\n                labels.sort(function (a, b) {\r\n                    if (a.y > b.y) {\r\n                        return 1;\r\n                    }\r\n                    else if (a.y < b.y) {\r\n                        return -1;\r\n                    }\r\n                    else {\r\n                        return 0;\r\n                    }\r\n                });\r\n                $array.each(labels, function (l) {\r\n                    var bounds = l.label.adjustedLocalBounds();\r\n                    var labelLeft = bounds.left;\r\n                    if (l.y + labelLeft < next_3) {\r\n                        l.y = next_3 - labelLeft;\r\n                    }\r\n                    l.label.set(\"x\", l.y);\r\n                    next_3 = l.y + bounds.right;\r\n                });\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(PercentSeries.prototype, \"_arrangeLeft\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (labels) {\r\n            if (labels) {\r\n                var next_4 = this.labelsContainer.maxWidth();\r\n                labels.sort(function (a, b) {\r\n                    if (a.y < b.y) {\r\n                        return 1;\r\n                    }\r\n                    else if (a.y > b.y) {\r\n                        return -1;\r\n                    }\r\n                    else {\r\n                        return 0;\r\n                    }\r\n                });\r\n                $array.each(labels, function (l) {\r\n                    var bounds = l.label.adjustedLocalBounds();\r\n                    var labelRight = bounds.right;\r\n                    if (l.y + labelRight > next_4) {\r\n                        l.y = next_4 - labelRight;\r\n                    }\r\n                    l.label.set(\"x\", l.y);\r\n                    next_4 = l.y + bounds.left;\r\n                });\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(PercentSeries.prototype, \"_updateSize\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._updateSize.call(this);\r\n            this.markDirty();\r\n        }\r\n    });\r\n    Object.defineProperty(PercentSeries.prototype, \"_updateTick\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (_dataItem) {\r\n        }\r\n    });\r\n    Object.defineProperty(PercentSeries.prototype, \"_dispose\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._dispose.call(this);\r\n            var chart = this.chart;\r\n            if (chart) {\r\n                chart.series.removeValue(this);\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(PercentSeries, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"PercentSeries\"\r\n    });\r\n    Object.defineProperty(PercentSeries, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: Series.classNames.concat([PercentSeries.className])\r\n    });\r\n    return PercentSeries;\r\n}(Series));\r\nexport { PercentSeries };\r\n//# sourceMappingURL=PercentSeries.js.map","import { __extends } from \"tslib\";\r\nimport { Percent } from \"../../core/util/Percent\";\r\nimport { PercentChart } from \"../percent/PercentChart\";\r\nimport { p50 } from \"../../core/util/Percent\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\nimport * as $math from \"../../core/util/Math\";\r\n/**\r\n * Creates a pie chart.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/} for more info\r\n * @important\r\n */\r\nvar PieChart = /** @class */ (function (_super) {\r\n    __extends(PieChart, _super);\r\n    function PieChart() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        Object.defineProperty(_this, \"_maxRadius\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(PieChart.prototype, \"_afterNew\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._afterNew.call(this);\r\n            this.seriesContainer.setAll({ x: p50, y: p50 });\r\n        }\r\n    });\r\n    Object.defineProperty(PieChart.prototype, \"_prepareChildren\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._prepareChildren.call(this);\r\n            var chartContainer = this.chartContainer;\r\n            var w = chartContainer.innerWidth();\r\n            var h = chartContainer.innerHeight();\r\n            var startAngle = this.get(\"startAngle\", 0);\r\n            var endAngle = this.get(\"endAngle\", 0);\r\n            var innerRadius = this.get(\"innerRadius\");\r\n            var bounds = $math.getArcBounds(0, 0, startAngle, endAngle, 1);\r\n            var wr = w / (bounds.right - bounds.left);\r\n            var hr = h / (bounds.bottom - bounds.top);\r\n            var innerBounds = { left: 0, right: 0, top: 0, bottom: 0 };\r\n            if (innerRadius instanceof Percent) {\r\n                var value = innerRadius.value;\r\n                var mr = Math.min(wr, hr);\r\n                value = Math.max(mr * value, mr - Math.min(h, w)) / mr;\r\n                innerBounds = $math.getArcBounds(0, 0, startAngle, endAngle, value);\r\n                this.setPrivateRaw(\"irModifyer\", value / innerRadius.value);\r\n            }\r\n            bounds = $math.mergeBounds([bounds, innerBounds]);\r\n            var prevRadius = this._maxRadius;\r\n            this._maxRadius = Math.min(wr, hr);\r\n            var radius = $utils.relativeToValue(this.get(\"radius\", 0), this._maxRadius);\r\n            this.seriesContainer.setAll({\r\n                dy: -radius * (bounds.bottom + bounds.top) / 2, dx: -radius * (bounds.right + bounds.left) / 2\r\n            });\r\n            if (this.isDirty(\"startAngle\") || this.isDirty(\"endAngle\") || prevRadius != this._maxRadius) {\r\n                this.series.each(function (series) {\r\n                    series._markDirtyKey(\"startAngle\");\r\n                });\r\n            }\r\n            if (this.isDirty(\"innerRadius\") || this.isDirty(\"radius\")) {\r\n                this.series.each(function (series) {\r\n                    series._markDirtyKey(\"innerRadius\");\r\n                });\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * Returns outer radius in pixels.\r\n     *\r\n     * If optional series parameter is passed in, it will return outer radius\r\n     * of that particular series.\r\n     *\r\n     * @param   series  Series\r\n     * @return          Radius in pixels\r\n     */\r\n    Object.defineProperty(PieChart.prototype, \"radius\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (series) {\r\n            var radius = $utils.relativeToValue(this.get(\"radius\", 0), this._maxRadius);\r\n            var innerRadius = $utils.relativeToValue(this.get(\"innerRadius\", 0), radius);\r\n            if (series) {\r\n                var index = this.series.indexOf(series);\r\n                var length_1 = this.series.length;\r\n                var seriesRadius = series.get(\"radius\");\r\n                if (seriesRadius != null) {\r\n                    return innerRadius + $utils.relativeToValue(seriesRadius, radius - innerRadius);\r\n                }\r\n                else {\r\n                    return innerRadius + (radius - innerRadius) / length_1 * (index + 1);\r\n                }\r\n            }\r\n            return radius;\r\n        }\r\n    });\r\n    /**\r\n     * Returns inner radius in pixels.\r\n     *\r\n     * If optional series parameter is passed in, it will return inner radius\r\n     * of that particular series.\r\n     *\r\n     * @param   series  Series\r\n     * @return          Radius in pixels\r\n     */\r\n    Object.defineProperty(PieChart.prototype, \"innerRadius\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (series) {\r\n            var radius = this.radius();\r\n            var innerRadius = $utils.relativeToValue(this.get(\"innerRadius\", 0), radius);\r\n            if (innerRadius < 0) {\r\n                innerRadius = radius + innerRadius;\r\n            }\r\n            if (series) {\r\n                var index = this.series.indexOf(series);\r\n                var length_2 = this.series.length;\r\n                var seriesInnerRadius = series.get(\"innerRadius\");\r\n                if (seriesInnerRadius != null) {\r\n                    return innerRadius + $utils.relativeToValue(seriesInnerRadius, radius - innerRadius);\r\n                }\r\n                else {\r\n                    return innerRadius + (radius - innerRadius) / length_2 * index;\r\n                }\r\n            }\r\n            return innerRadius;\r\n        }\r\n    });\r\n    Object.defineProperty(PieChart, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"PieChart\"\r\n    });\r\n    Object.defineProperty(PieChart, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: PercentChart.classNames.concat([PieChart.className])\r\n    });\r\n    return PieChart;\r\n}(PercentChart));\r\nexport { PieChart };\r\n//# sourceMappingURL=PieChart.js.map","import { __extends } from \"tslib\";\r\nimport { PercentSeries } from \"../percent/PercentSeries\";\r\nimport { Template } from \"../../core/util/Template\";\r\nimport { Slice } from \"../../core/render/Slice\";\r\nimport { Tick } from \"../../core/render/Tick\";\r\nimport { RadialLabel } from \"../../core/render/RadialLabel\";\r\nimport { ListTemplate } from \"../../core/util/List\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $math from \"../../core/util/Math\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\n/**\r\n * Creates a series for a [[PieChart]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/} for more info\r\n * @important\r\n */\r\nvar PieSeries = /** @class */ (function (_super) {\r\n    __extends(PieSeries, _super);\r\n    function PieSeries() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(PieSeries.prototype, \"_makeSlices\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            return new ListTemplate(Template.new({}), function () { return Slice._new(_this._root, {\r\n                themeTags: $utils.mergeTags(_this.slices.template.get(\"themeTags\", []), [\"pie\", \"series\"])\r\n            }, [_this.slices.template]); });\r\n        }\r\n    });\r\n    Object.defineProperty(PieSeries.prototype, \"_makeLabels\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            return new ListTemplate(Template.new({}), function () { return RadialLabel._new(_this._root, {\r\n                themeTags: $utils.mergeTags(_this.labels.template.get(\"themeTags\", []), [\"pie\", \"series\"])\r\n            }, [_this.labels.template]); });\r\n        }\r\n    });\r\n    Object.defineProperty(PieSeries.prototype, \"_makeTicks\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            return new ListTemplate(Template.new({}), function () { return Tick._new(_this._root, {\r\n                themeTags: $utils.mergeTags(_this.ticks.template.get(\"themeTags\", []), [\"pie\", \"series\"])\r\n            }, [_this.ticks.template]); });\r\n        }\r\n    });\r\n    Object.defineProperty(PieSeries.prototype, \"processDataItem\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem) {\r\n            var _this = this;\r\n            _super.prototype.processDataItem.call(this, dataItem);\r\n            var slice = this.makeSlice(dataItem);\r\n            slice.on(\"scale\", function () {\r\n                _this._updateTick(dataItem);\r\n            });\r\n            slice.on(\"shiftRadius\", function () {\r\n                _this._updateTick(dataItem);\r\n            });\r\n            slice.events.on(\"positionchanged\", function () {\r\n                _this._updateTick(dataItem);\r\n            });\r\n            var label = this.makeLabel(dataItem);\r\n            label.events.on(\"positionchanged\", function () {\r\n                _this._updateTick(dataItem);\r\n            });\r\n            this.makeTick(dataItem);\r\n            slice.events.on(\"positionchanged\", function () {\r\n                label.markDirty();\r\n            });\r\n        }\r\n    });\r\n    Object.defineProperty(PieSeries.prototype, \"_getNextUp\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var chart = this.chart;\r\n            if (chart) {\r\n                return chart._maxRadius;\r\n            }\r\n            return this.labelsContainer.maxHeight() / 2;\r\n        }\r\n    });\r\n    Object.defineProperty(PieSeries.prototype, \"_getNextDown\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var chart = this.chart;\r\n            if (chart) {\r\n                return -chart._maxRadius;\r\n            }\r\n            return -this.labelsContainer.maxHeight() / 2;\r\n        }\r\n    });\r\n    Object.defineProperty(PieSeries.prototype, \"_prepareChildren\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            _super.prototype._prepareChildren.call(this);\r\n            var chart = this.chart;\r\n            if (chart) {\r\n                if (this.isDirty(\"alignLabels\")) {\r\n                    var labelsTemplate = this.labels.template;\r\n                    if (this.get(\"alignLabels\")) {\r\n                        labelsTemplate.set(\"textType\", \"aligned\");\r\n                    }\r\n                    else {\r\n                        var textType = labelsTemplate.get(\"textType\");\r\n                        if (textType == null || textType == \"aligned\") {\r\n                            labelsTemplate.set(\"textType\", \"adjusted\");\r\n                        }\r\n                    }\r\n                }\r\n                if (this._valuesDirty || this.isDirty(\"radius\") || this.isDirty(\"innerRadius\") || this.isDirty(\"startAngle\") || this.isDirty(\"endAngle\") || this.isDirty(\"alignLabels\")) {\r\n                    this.markDirtyBounds();\r\n                    var startAngle = this.get(\"startAngle\", chart.get(\"startAngle\", -90));\r\n                    var endAngle = this.get(\"endAngle\", chart.get(\"endAngle\", 270));\r\n                    var arc_1 = endAngle - startAngle;\r\n                    var currentAngle_1 = startAngle;\r\n                    var radius_1 = chart.radius(this);\r\n                    this.setPrivateRaw(\"radius\", radius_1);\r\n                    var innerRadius_1 = chart.innerRadius(this) * chart.getPrivate(\"irModifyer\", 1);\r\n                    if (innerRadius_1 < 0) {\r\n                        innerRadius_1 = radius_1 + innerRadius_1;\r\n                    }\r\n                    //if (radius > 0) {\r\n                    $array.each(this._dataItems, function (dataItem) {\r\n                        _this.updateLegendValue(dataItem);\r\n                        var currentArc = arc_1 * dataItem.get(\"valuePercentTotal\") / 100;\r\n                        var slice = dataItem.get(\"slice\");\r\n                        if (slice) {\r\n                            slice.set(\"radius\", radius_1);\r\n                            slice.set(\"innerRadius\", innerRadius_1);\r\n                            slice.set(\"startAngle\", currentAngle_1);\r\n                            slice.set(\"arc\", currentArc);\r\n                            var color = dataItem.get(\"fill\");\r\n                            slice._setDefault(\"fill\", color);\r\n                            slice._setDefault(\"stroke\", color);\r\n                        }\r\n                        var middleAngle = $math.normalizeAngle(currentAngle_1 + currentArc / 2);\r\n                        var label = dataItem.get(\"label\");\r\n                        if (label) {\r\n                            label.setPrivate(\"radius\", radius_1);\r\n                            label.setPrivate(\"innerRadius\", innerRadius_1);\r\n                            label.set(\"labelAngle\", middleAngle);\r\n                            if (label.get(\"textType\") == \"aligned\") {\r\n                                var labelRadius = radius_1 + label.get(\"radius\", 0);\r\n                                var y = radius_1 * $math.sin(middleAngle);\r\n                                if (middleAngle > 90 && middleAngle <= 270) {\r\n                                    if (!label.isHidden() && !label.isHiding()) {\r\n                                        _this._lLabels.push({ label: label, y: y });\r\n                                    }\r\n                                    labelRadius *= -1;\r\n                                    labelRadius -= _this.labelsContainer.get(\"paddingLeft\", 0);\r\n                                    label.set(\"centerX\", p100);\r\n                                    label.setPrivateRaw(\"left\", true);\r\n                                }\r\n                                else {\r\n                                    if (!label.isHidden() && !label.isHiding()) {\r\n                                        _this._rLabels.push({ label: label, y: y });\r\n                                    }\r\n                                    labelRadius += _this.labelsContainer.get(\"paddingRight\", 0);\r\n                                    label.set(\"centerX\", 0);\r\n                                    label.setPrivateRaw(\"left\", false);\r\n                                }\r\n                                label.set(\"x\", labelRadius);\r\n                                label.set(\"y\", radius_1 * $math.sin(middleAngle));\r\n                            }\r\n                        }\r\n                        currentAngle_1 += currentArc;\r\n                        _this._updateTick(dataItem);\r\n                    });\r\n                    //}\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(PieSeries.prototype, \"_updateTick\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem) {\r\n            var tick = dataItem.get(\"tick\");\r\n            var label = dataItem.get(\"label\");\r\n            var slice = dataItem.get(\"slice\");\r\n            var location = tick.get(\"location\", 1);\r\n            if (tick && label && slice) {\r\n                var radius = (slice.get(\"shiftRadius\", 0) + slice.get(\"radius\", 0)) * slice.get(\"scale\", 1) * location;\r\n                var labelAngle = label.get(\"labelAngle\", 0);\r\n                var cos = $math.cos(labelAngle);\r\n                var sin = $math.sin(labelAngle);\r\n                var labelsContainer = this.labelsContainer;\r\n                var pl = labelsContainer.get(\"paddingLeft\", 0);\r\n                var pr = labelsContainer.get(\"paddingRight\", 0);\r\n                var x = 0;\r\n                var y = 0;\r\n                x = label.x();\r\n                y = label.y();\r\n                if (label.get(\"textType\") == \"circular\") {\r\n                    var labelRadius = label.radius() - label.get(\"paddingBottom\", 0);\r\n                    var labelAngle_1 = label.get(\"labelAngle\", 0);\r\n                    x = labelRadius * $math.cos(labelAngle_1);\r\n                    y = labelRadius * $math.sin(labelAngle_1);\r\n                }\r\n                var dx = -pr;\r\n                if (label.getPrivate(\"left\")) {\r\n                    dx = pl;\r\n                }\r\n                tick.set(\"points\", [{ x: slice.x() + radius * cos, y: slice.y() + radius * sin }, { x: x + dx, y: y }, { x: x, y: y }]);\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(PieSeries.prototype, \"_positionBullet\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (bullet) {\r\n            var sprite = bullet.get(\"sprite\");\r\n            if (sprite) {\r\n                var dataItem = sprite.dataItem;\r\n                var slice = dataItem.get(\"slice\");\r\n                if (slice) {\r\n                    var innerRadius = slice.get(\"innerRadius\", 0);\r\n                    var radius = slice.get(\"radius\", 0);\r\n                    var startAngle = slice.get(\"startAngle\", 0);\r\n                    var arc = slice.get(\"arc\", 0);\r\n                    var locationX = bullet.get(\"locationX\", 0.5);\r\n                    var locationY = bullet.get(\"locationY\", 0.5);\r\n                    var angle = startAngle + arc * locationX;\r\n                    var r = innerRadius + (radius - innerRadius) * locationY;\r\n                    sprite.setAll({ x: $math.cos(angle) * r, y: $math.sin(angle) * r });\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(PieSeries, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"PieSeries\"\r\n    });\r\n    Object.defineProperty(PieSeries, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: PercentSeries.classNames.concat([PieSeries.className])\r\n    });\r\n    return PieSeries;\r\n}(PercentSeries));\r\nexport { PieSeries };\r\n//# sourceMappingURL=PieSeries.js.map","import { __extends, __read } from \"tslib\";\r\nimport { XYChartDefaultTheme } from \"./XYChartDefaultTheme\";\r\nimport { Container } from \"../../core/render/Container\";\r\nimport { Rectangle } from \"../../core/render/Rectangle\";\r\nimport { SerialChart } from \"../../core/render/SerialChart\";\r\nimport { ListAutoDispose } from \"../../core/util/List\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\nimport { Color } from \"../../core/util/Color\";\r\nimport { Button } from \"../../core/render/Button\";\r\nimport { Graphics } from \"../../core/render/Graphics\";\r\nimport { Percent } from \"../../core/util/Percent\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $order from \"../../core/util/Order\";\r\nimport * as $object from \"../../core/util/Object\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\n/**\r\n * Creates an XY chart.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/} for more info\r\n * @important\r\n */\r\nvar XYChart = /** @class */ (function (_super) {\r\n    __extends(XYChart, _super);\r\n    function XYChart() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * A list of horizontal axes.\r\n         */\r\n        Object.defineProperty(_this, \"xAxes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListAutoDispose()\r\n        });\r\n        /**\r\n         * A list of vertical axes.\r\n         */\r\n        Object.defineProperty(_this, \"yAxes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListAutoDispose()\r\n        });\r\n        /**\r\n         * A [[Container]] located on top of the chart, used to store top horizontal\r\n         * axes.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(_this, \"topAxesContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: _this.chartContainer.children.push(Container.new(_this._root, { width: p100, layout: _this._root.verticalLayout }))\r\n        });\r\n        /**\r\n         * A [[Container]] located in the middle the chart, used to store vertical axes\r\n         * and plot area container.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(_this, \"yAxesAndPlotContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: _this.chartContainer.children.push(Container.new(_this._root, { width: p100, height: p100, layout: _this._root.horizontalLayout }))\r\n        });\r\n        /**\r\n         * A [[Container]] located on bottom of the chart, used to store bottom\r\n         * horizontal axes.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(_this, \"bottomAxesContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: _this.chartContainer.children.push(Container.new(_this._root, { width: p100, layout: _this._root.verticalLayout }))\r\n        });\r\n        /**\r\n         * A [[Container]] located on left of the chart, used to store left-hand\r\n         * vertical axes.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(_this, \"leftAxesContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: _this.yAxesAndPlotContainer.children.push(Container.new(_this._root, { height: p100, layout: _this._root.horizontalLayout }))\r\n        });\r\n        /**\r\n         * A [[Container]] located in the middle of the chart, used to store plotContainer and topPlotContainer\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(_this, \"plotsContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: _this.yAxesAndPlotContainer.children.push(Container.new(_this._root, { width: p100, height: p100, maskContent: false }))\r\n        });\r\n        /**\r\n         * A [[Container]] located in the middle of the chart, used to store actual\r\n         * plots (series).\r\n         *\r\n         * NOTE: `plotContainer` will automatically have its `background` preset. If\r\n         * you need to modify background or outline for chart's plot area, you can\r\n         * use `plotContainer.get(\"background\")` for that.*\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(_this, \"plotContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: _this.plotsContainer.children.push(Container.new(_this._root, { width: p100, height: p100 }))\r\n        });\r\n        /**\r\n         * A [[Container]] used for any elements that need to be displayed over\r\n         * regular `plotContainer`.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(_this, \"topPlotContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: _this.plotsContainer.children.push(Container.new(_this._root, { width: p100, height: p100 }))\r\n        });\r\n        /**\r\n         * A [[Container]] axis grid elements are stored in.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(_this, \"gridContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: _this.plotContainer.children.push(Container.new(_this._root, { width: p100, height: p100, isMeasured: false }))\r\n        });\r\n        /**\r\n         * A [[Container]] axis background grid elements are stored in.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(_this, \"topGridContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Container.new(_this._root, { width: p100, height: p100, isMeasured: false })\r\n        });\r\n        /**\r\n         * A [[Container]] located on right of the chart, used to store right-hand\r\n         * vertical axes.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(_this, \"rightAxesContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: _this.yAxesAndPlotContainer.children.push(Container.new(_this._root, { height: p100, layout: _this._root.horizontalLayout }))\r\n        });\r\n        /**\r\n         * A [[Container]] axis headers are stored in.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(_this, \"axisHeadersContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: _this.plotContainer.children.push(Container.new(_this._root, {}))\r\n        });\r\n        /**\r\n         * A button that is shown when chart is not fully zoomed out.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Zoom_out_button} for more info\r\n         * @default Button.new()\r\n         */\r\n        Object.defineProperty(_this, \"zoomOutButton\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: _this.topPlotContainer.children.push(Button.new(_this._root, {\r\n                themeTags: [\"zoom\"],\r\n                icon: Graphics.new(_this._root, {\r\n                    themeTags: [\"button\", \"icon\"]\r\n                })\r\n            }))\r\n        });\r\n        Object.defineProperty(_this, \"_movePoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: { x: 0, y: 0 }\r\n        });\r\n        Object.defineProperty(_this, \"_wheelDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_otherCharts\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_movePoints\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(_this, \"_downStartX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_downEndX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_downStartY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_downEndY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(XYChart.prototype, \"_afterNew\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            this._defaultThemes.push(XYChartDefaultTheme.new(this._root));\r\n            _super.prototype._afterNew.call(this);\r\n            this._disposers.push(this.xAxes);\r\n            this._disposers.push(this.yAxes);\r\n            var root = this._root;\r\n            var verticalLayout = this._root.verticalLayout;\r\n            var zoomOutButton = this.zoomOutButton;\r\n            zoomOutButton.events.on(\"click\", function () {\r\n                _this.zoomOut();\r\n            });\r\n            zoomOutButton.set(\"opacity\", 0);\r\n            zoomOutButton.states.lookup(\"default\").set(\"opacity\", 1);\r\n            this.chartContainer.set(\"layout\", verticalLayout);\r\n            var plotContainer = this.plotContainer;\r\n            plotContainer.children.push(this.seriesContainer);\r\n            this._disposers.push(this._processAxis(this.xAxes, this.bottomAxesContainer));\r\n            this._disposers.push(this._processAxis(this.yAxes, this.leftAxesContainer));\r\n            plotContainer.children.push(this.topGridContainer);\r\n            plotContainer.children.push(this.bulletsContainer);\r\n            // Setting trasnparent background so that full body of the plot container\r\n            // is interactive\r\n            plotContainer.set(\"interactive\", true);\r\n            plotContainer.set(\"interactiveChildren\", false);\r\n            plotContainer.set(\"background\", Rectangle.new(root, {\r\n                themeTags: [\"xy\", \"background\"],\r\n                fill: Color.fromHex(0x000000),\r\n                fillOpacity: 0\r\n            }));\r\n            this._disposers.push(plotContainer.events.on(\"pointerdown\", function (event) {\r\n                _this._handlePlotDown(event.originalEvent);\r\n            }));\r\n            this._disposers.push(plotContainer.events.on(\"globalpointerup\", function (event) {\r\n                _this._handlePlotUp(event.originalEvent);\r\n            }));\r\n            this._disposers.push(plotContainer.events.on(\"globalpointermove\", function (event) {\r\n                _this._handlePlotMove(event.originalEvent);\r\n            }));\r\n            this._maskGrid();\r\n            this._setUpTouch();\r\n        }\r\n    });\r\n    Object.defineProperty(XYChart.prototype, \"_beforeChanged\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._beforeChanged.call(this);\r\n            if (this.isDirty(\"pinchZoomX\") || this.isDirty(\"pinchZoomY\") || this.get(\"panX\") || this.get(\"panY\")) {\r\n                this._setUpTouch();\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(XYChart.prototype, \"_setUpTouch\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            if (!this.plotContainer._display.cancelTouch) {\r\n                this.plotContainer._display.cancelTouch = (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\") || this.get(\"panX\") || this.get(\"panY\")) ? true : false;\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(XYChart.prototype, \"_maskGrid\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this.gridContainer.set(\"maskContent\", true);\r\n            this.topGridContainer.set(\"maskContent\", true);\r\n        }\r\n    });\r\n    Object.defineProperty(XYChart.prototype, \"_removeSeries\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (series) {\r\n            var xAxis = series.get(\"xAxis\");\r\n            if (xAxis) {\r\n                $array.remove(xAxis.series, series);\r\n                xAxis.markDirtyExtremes();\r\n            }\r\n            var yAxis = series.get(\"yAxis\");\r\n            if (yAxis) {\r\n                $array.remove(yAxis.series, series);\r\n                yAxis.markDirtyExtremes();\r\n            }\r\n            var cursor = this.get(\"cursor\");\r\n            if (cursor) {\r\n                var snapToSeries = cursor.get(\"snapToSeries\");\r\n                if (snapToSeries) {\r\n                    $array.remove(snapToSeries, series);\r\n                }\r\n            }\r\n            _super.prototype._removeSeries.call(this, series);\r\n        }\r\n    });\r\n    /**\r\n     * This method is invoked when mouse wheel is used over chart's plot\r\n     * container, and handles zooming/pan.\r\n     *\r\n     * You can invoke this method manually, if you need to mimic chart's wheel\r\n     * behavior over other elements of the chart.\r\n     */\r\n    Object.defineProperty(XYChart.prototype, \"handleWheel\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (event) {\r\n            var _this = this;\r\n            var wheelX = this.get(\"wheelX\");\r\n            var wheelY = this.get(\"wheelY\");\r\n            var plotContainer = this.plotContainer;\r\n            var wheelEvent = event.originalEvent;\r\n            // Ignore wheel event if it is happening on a non-chart element, e.g. if\r\n            // some page element is over the chart.\r\n            if ($utils.isLocalEvent(wheelEvent, this)) {\r\n                wheelEvent.preventDefault();\r\n            }\r\n            else {\r\n                return;\r\n            }\r\n            var plotPoint = plotContainer.toLocal(this._root.documentPointToRoot({ x: wheelEvent.clientX, y: wheelEvent.clientY }));\r\n            var wheelStep = this.get(\"wheelStep\", 0.2);\r\n            var shiftY = wheelEvent.deltaY / 100;\r\n            var shiftX = wheelEvent.deltaX / 100;\r\n            var wheelZoomPositionX = this.get(\"wheelZoomPositionX\");\r\n            var wheelZoomPositionY = this.get(\"wheelZoomPositionY\");\r\n            if ((wheelX === \"zoomX\" || wheelX === \"zoomXY\") && shiftX != 0) {\r\n                this.xAxes.each(function (axis) {\r\n                    if (axis.get(\"zoomX\")) {\r\n                        var start = axis.get(\"start\");\r\n                        var end = axis.get(\"end\");\r\n                        var position = axis.fixPosition(plotPoint.x / plotContainer.width());\r\n                        if (wheelZoomPositionX != null) {\r\n                            position = wheelZoomPositionX;\r\n                        }\r\n                        var newStart = start - wheelStep * (end - start) * shiftX * position;\r\n                        var newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\r\n                        if (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\r\n                            _this._handleWheelAnimation(axis.zoom(newStart, newEnd));\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            if ((wheelY === \"zoomX\" || wheelY === \"zoomXY\") && shiftY != 0) {\r\n                this.xAxes.each(function (axis) {\r\n                    if (axis.get(\"zoomX\")) {\r\n                        var start = axis.get(\"start\");\r\n                        var end = axis.get(\"end\");\r\n                        var position = axis.fixPosition(plotPoint.x / plotContainer.width());\r\n                        if (wheelZoomPositionX != null) {\r\n                            position = wheelZoomPositionX;\r\n                        }\r\n                        var newStart = start - wheelStep * (end - start) * shiftY * position;\r\n                        var newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\r\n                        if (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\r\n                            _this._handleWheelAnimation(axis.zoom(newStart, newEnd));\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            if ((wheelX === \"zoomY\" || wheelX === \"zoomXY\") && shiftX != 0) {\r\n                this.yAxes.each(function (axis) {\r\n                    if (axis.get(\"zoomY\")) {\r\n                        var start = axis.get(\"start\");\r\n                        var end = axis.get(\"end\");\r\n                        var position = axis.fixPosition(plotPoint.y / plotContainer.height());\r\n                        if (wheelZoomPositionY != null) {\r\n                            position = wheelZoomPositionY;\r\n                        }\r\n                        var newStart = start - wheelStep * (end - start) * shiftX * position;\r\n                        var newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\r\n                        if (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\r\n                            _this._handleWheelAnimation(axis.zoom(newStart, newEnd));\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            if ((wheelY === \"zoomY\" || wheelY === \"zoomXY\") && shiftY != 0) {\r\n                this.yAxes.each(function (axis) {\r\n                    if (axis.get(\"zoomY\")) {\r\n                        var start = axis.get(\"start\");\r\n                        var end = axis.get(\"end\");\r\n                        var position = axis.fixPosition(plotPoint.y / plotContainer.height());\r\n                        if (wheelZoomPositionY != null) {\r\n                            position = wheelZoomPositionY;\r\n                        }\r\n                        var newStart = start - wheelStep * (end - start) * shiftY * position;\r\n                        var newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\r\n                        if (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\r\n                            _this._handleWheelAnimation(axis.zoom(newStart, newEnd));\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            if ((wheelX === \"panX\" || wheelX === \"panXY\") && shiftX != 0) {\r\n                this.xAxes.each(function (axis) {\r\n                    if (axis.get(\"panX\")) {\r\n                        var start = axis.get(\"start\");\r\n                        var end = axis.get(\"end\");\r\n                        var delta = _this._getWheelSign(axis) * wheelStep * (end - start) * shiftX;\r\n                        var newStart = start + delta;\r\n                        var newEnd = end + delta;\r\n                        var se = _this._fixWheel(newStart, newEnd);\r\n                        newStart = se[0];\r\n                        newEnd = se[1];\r\n                        _this._handleWheelAnimation(axis.zoom(newStart, newEnd));\r\n                    }\r\n                });\r\n            }\r\n            if ((wheelY === \"panX\" || wheelY === \"panXY\") && shiftY != 0) {\r\n                this.xAxes.each(function (axis) {\r\n                    if (axis.get(\"panX\")) {\r\n                        var start = axis.get(\"start\");\r\n                        var end = axis.get(\"end\");\r\n                        var delta = _this._getWheelSign(axis) * wheelStep * (end - start) * shiftY;\r\n                        var newStart = start + delta;\r\n                        var newEnd = end + delta;\r\n                        var se = _this._fixWheel(newStart, newEnd);\r\n                        newStart = se[0];\r\n                        newEnd = se[1];\r\n                        _this._handleWheelAnimation(axis.zoom(newStart, newEnd));\r\n                    }\r\n                });\r\n            }\r\n            if ((wheelX === \"panY\" || wheelX === \"panXY\") && shiftX != 0) {\r\n                this.yAxes.each(function (axis) {\r\n                    if (axis.get(\"panY\")) {\r\n                        var start = axis.get(\"start\");\r\n                        var end = axis.get(\"end\");\r\n                        var delta = _this._getWheelSign(axis) * wheelStep * (end - start) * shiftX;\r\n                        var newStart = start + delta;\r\n                        var newEnd = end + delta;\r\n                        var se = _this._fixWheel(newStart, newEnd);\r\n                        newStart = se[0];\r\n                        newEnd = se[1];\r\n                        _this._handleWheelAnimation(axis.zoom(newStart, newEnd));\r\n                    }\r\n                });\r\n            }\r\n            if ((wheelY === \"panY\" || wheelY === \"panXY\") && shiftY != 0) {\r\n                this.yAxes.each(function (axis) {\r\n                    if (axis.get(\"panY\")) {\r\n                        var start = axis.get(\"start\");\r\n                        var end = axis.get(\"end\");\r\n                        var delta = _this._getWheelSign(axis) * wheelStep * (end - start) * shiftY;\r\n                        var newStart = start - delta;\r\n                        var newEnd = end - delta;\r\n                        var se = _this._fixWheel(newStart, newEnd);\r\n                        newStart = se[0];\r\n                        newEnd = se[1];\r\n                        _this._handleWheelAnimation(axis.zoom(newStart, newEnd));\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(XYChart.prototype, \"_handleSetWheel\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            var wheelX = this.get(\"wheelX\");\r\n            var wheelY = this.get(\"wheelY\");\r\n            var plotContainer = this.plotContainer;\r\n            if (wheelX !== \"none\" || wheelY !== \"none\") {\r\n                this._wheelDp = plotContainer.events.on(\"wheel\", function (event) {\r\n                    _this.handleWheel(event);\r\n                });\r\n                this._disposers.push(this._wheelDp);\r\n            }\r\n            else {\r\n                if (this._wheelDp) {\r\n                    this._wheelDp.dispose();\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(XYChart.prototype, \"_getWheelSign\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (axis) {\r\n            var sign = 1;\r\n            if (axis.get(\"renderer\").get(\"inversed\")) {\r\n                sign = -1;\r\n            }\r\n            return sign;\r\n        }\r\n    });\r\n    Object.defineProperty(XYChart.prototype, \"_fixWheel\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (start, end) {\r\n            var diff = end - start;\r\n            if (start < 0) {\r\n                start = 0;\r\n                end = start + diff;\r\n            }\r\n            if (end > 1) {\r\n                end = 1;\r\n                start = end - diff;\r\n            }\r\n            return [start, end];\r\n        }\r\n    });\r\n    Object.defineProperty(XYChart.prototype, \"_handlePlotDown\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (event) {\r\n            var plotContainer = this.plotContainer;\r\n            var local = plotContainer.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\r\n            if (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\")) {\r\n                var touchEvent = event;\r\n                var pointerId = touchEvent.pointerId;\r\n                if (pointerId) {\r\n                    if ($object.keys(plotContainer._downPoints).length > 0) {\r\n                        var xAxis = this.xAxes.getIndex(0);\r\n                        var yAxis = this.yAxes.getIndex(0);\r\n                        if (xAxis) {\r\n                            this._downStartX = xAxis.get(\"start\", 0);\r\n                            this._downEndX = xAxis.get(\"end\", 1);\r\n                        }\r\n                        if (yAxis) {\r\n                            this._downStartY = yAxis.get(\"start\", 0);\r\n                            this._downEndY = yAxis.get(\"end\", 1);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (this.get(\"panX\") || this.get(\"panY\")) {\r\n                if (local.x >= 0 && local.y >= 0 && local.x <= plotContainer.width() && local.y <= this.height()) {\r\n                    //this._downPoint = local;\r\n                    this._downPoint = { x: event.clientX, y: event.clientY };\r\n                    var panX = this.get(\"panX\");\r\n                    var panY = this.get(\"panY\");\r\n                    if (panX) {\r\n                        this.xAxes.each(function (axis) {\r\n                            axis._panStart = axis.get(\"start\");\r\n                            axis._panEnd = axis.get(\"end\");\r\n                        });\r\n                    }\r\n                    if (panY) {\r\n                        this.yAxes.each(function (axis) {\r\n                            axis._panStart = axis.get(\"start\");\r\n                            axis._panEnd = axis.get(\"end\");\r\n                        });\r\n                    }\r\n                    var eventType = \"panstarted\";\r\n                    if (this.events.isEnabled(eventType)) {\r\n                        this.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(XYChart.prototype, \"_handleWheelAnimation\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (animation) {\r\n            var _this = this;\r\n            if (animation) {\r\n                animation.events.on(\"stopped\", function () {\r\n                    _this._dispatchWheelAnimation();\r\n                });\r\n            }\r\n            else {\r\n                this._dispatchWheelAnimation();\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(XYChart.prototype, \"_dispatchWheelAnimation\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var eventType = \"wheelended\";\r\n            if (this.events.isEnabled(eventType)) {\r\n                this.events.dispatch(eventType, { type: eventType, target: this });\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(XYChart.prototype, \"_handlePlotUp\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (event) {\r\n            var downPoint = this._downPoint;\r\n            if (downPoint) {\r\n                if (this.get(\"panX\") || this.get(\"panY\")) {\r\n                    var local = this.plotContainer.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\r\n                    if (local.x == downPoint.x && local.y == downPoint.y) {\r\n                        var eventType_1 = \"pancancelled\";\r\n                        if (this.events.isEnabled(eventType_1)) {\r\n                            this.events.dispatch(eventType_1, { type: eventType_1, target: this, originalEvent: event });\r\n                        }\r\n                    }\r\n                    var eventType = \"panended\";\r\n                    if (this.events.isEnabled(eventType)) {\r\n                        this.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event });\r\n                    }\r\n                }\r\n            }\r\n            // TODO: handle multitouch\r\n            this._downPoint = undefined;\r\n            this.xAxes.each(function (xAxis) {\r\n                xAxis._isPanning = false;\r\n            });\r\n            this.yAxes.each(function (yAxis) {\r\n                yAxis._isPanning = false;\r\n            });\r\n        }\r\n    });\r\n    Object.defineProperty(XYChart.prototype, \"_handlePlotMove\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (event) {\r\n            var plotContainer = this.plotContainer;\r\n            if (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\")) {\r\n                var touchEvent = event;\r\n                var pointerId = touchEvent.pointerId;\r\n                if (pointerId) {\r\n                    this._movePoints[pointerId] = this._root.documentPointToRoot({ x: event.clientX, y: event.clientY });\r\n                    if ($object.keys(plotContainer._downPoints).length > 1) {\r\n                        this._handlePinch();\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            var downPoint = this._downPoint;\r\n            if (downPoint) {\r\n                downPoint = plotContainer.toLocal(this._root.documentPointToRoot(downPoint));\r\n                var local_1 = plotContainer.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\r\n                var panX = this.get(\"panX\");\r\n                var panY = this.get(\"panY\");\r\n                if (panX) {\r\n                    var scrollbarX = this.get(\"scrollbarX\");\r\n                    if (scrollbarX) {\r\n                        scrollbarX.events.disableType(\"rangechanged\");\r\n                    }\r\n                    this.xAxes.each(function (axis) {\r\n                        if (axis.get(\"panX\")) {\r\n                            axis._isPanning = true;\r\n                            //const maxDeviation = axis.get(\"maxDeviation\", 0);\r\n                            var panStart = axis._panStart;\r\n                            var panEnd = axis._panEnd;\r\n                            var difference = (panEnd - panStart);\r\n                            var deltaX = difference * (downPoint.x - local_1.x) / plotContainer.width();\r\n                            if (axis.get(\"renderer\").get(\"inversed\")) {\r\n                                deltaX *= -1;\r\n                            }\r\n                            var start = panStart + deltaX;\r\n                            var end = panEnd + deltaX;\r\n                            if (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\r\n                                axis.set(\"start\", start);\r\n                                axis.set(\"end\", end);\r\n                            }\r\n                        }\r\n                    });\r\n                    if (scrollbarX) {\r\n                        scrollbarX.events.enableType(\"rangechanged\");\r\n                    }\r\n                }\r\n                if (panY) {\r\n                    var scrollbarY = this.get(\"scrollbarY\");\r\n                    if (scrollbarY) {\r\n                        scrollbarY.events.disableType(\"rangechanged\");\r\n                    }\r\n                    this.yAxes.each(function (axis) {\r\n                        if (axis.get(\"panY\")) {\r\n                            axis._isPanning = true;\r\n                            //const maxDeviation = axis.get(\"maxDeviation\", 0);\r\n                            var panStart = axis._panStart;\r\n                            var panEnd = axis._panEnd;\r\n                            var difference = (panEnd - panStart);\r\n                            var deltaY = difference * (downPoint.y - local_1.y) / plotContainer.height();\r\n                            if (axis.get(\"renderer\").get(\"inversed\")) {\r\n                                deltaY *= -1;\r\n                            }\r\n                            var start = panStart - deltaY;\r\n                            var end = panEnd - deltaY;\r\n                            if (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\r\n                                axis.set(\"start\", start);\r\n                                axis.set(\"end\", end);\r\n                            }\r\n                        }\r\n                    });\r\n                    if (scrollbarY) {\r\n                        scrollbarY.events.enableType(\"rangechanged\");\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(XYChart.prototype, \"_handlePinch\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _a, _b, _c, _d;\r\n            var _this = this;\r\n            var plotContainer = this.plotContainer;\r\n            var i = 0;\r\n            var downPoints = [];\r\n            var movePoints = [];\r\n            $object.each(plotContainer._downPoints, function (k, point) {\r\n                downPoints[i] = point;\r\n                var movePoint = _this._movePoints[k];\r\n                if (movePoint) {\r\n                    movePoints[i] = movePoint;\r\n                }\r\n                i++;\r\n            });\r\n            if (downPoints.length > 1 && movePoints.length > 1) {\r\n                var w = plotContainer.width();\r\n                var h = plotContainer.height();\r\n                var downPoint0 = downPoints[0];\r\n                var downPoint1 = downPoints[1];\r\n                var movePoint0 = movePoints[0];\r\n                var movePoint1 = movePoints[1];\r\n                if (downPoint0 && downPoint1 && movePoint0 && movePoint1) {\r\n                    movePoint0 = plotContainer.toLocal(movePoint0);\r\n                    movePoint1 = plotContainer.toLocal(movePoint1);\r\n                    downPoint0 = plotContainer.toLocal(downPoint0);\r\n                    downPoint1 = plotContainer.toLocal(downPoint1);\r\n                    if (this.get(\"pinchZoomX\")) {\r\n                        var downStartX = this._downStartX;\r\n                        var downEndX = this._downEndX;\r\n                        if (downStartX != null && downEndX != null) {\r\n                            if (downPoint0.x > downPoint1.x) {\r\n                                _a = __read([downPoint1, downPoint0], 2), downPoint0 = _a[0], downPoint1 = _a[1];\r\n                                _b = __read([movePoint1, movePoint0], 2), movePoint0 = _b[0], movePoint1 = _b[1];\r\n                            }\r\n                            var downPos0 = downStartX + (downPoint0.x / w) * (downEndX - downStartX);\r\n                            var downPos1 = downStartX + (downPoint1.x / w) * (downEndX - downStartX);\r\n                            var movePos0 = downStartX + (movePoint0.x / w) * (downEndX - downStartX);\r\n                            var movePos1 = downStartX + (movePoint1.x / w) * (downEndX - downStartX);\r\n                            var initialDistance = Math.max(0.001, downPos1 - downPos0);\r\n                            var currentDistance = Math.max(0.001, movePos1 - movePos0);\r\n                            var d = initialDistance / currentDistance;\r\n                            var s_1 = downStartX * d + downPos0 - movePos0 * d;\r\n                            var e_1 = downEndX * d + downPos1 - movePos1 * d;\r\n                            this.xAxes.each(function (xAxis) {\r\n                                var sa = xAxis.fixPosition(s_1);\r\n                                var ea = xAxis.fixPosition(e_1);\r\n                                xAxis.zoom(sa, ea, 0);\r\n                            });\r\n                        }\r\n                    }\r\n                    if (this.get(\"pinchZoomY\")) {\r\n                        var downStartY = this._downStartY;\r\n                        var downEndY = this._downEndY;\r\n                        if (downStartY != null && downEndY != null) {\r\n                            if (downPoint0.y < downPoint1.y) {\r\n                                _c = __read([downPoint1, downPoint0], 2), downPoint0 = _c[0], downPoint1 = _c[1];\r\n                                _d = __read([movePoint1, movePoint0], 2), movePoint0 = _d[0], movePoint1 = _d[1];\r\n                            }\r\n                            var downPos0 = downStartY + (1 - downPoint0.y / h) * (downEndY - downStartY);\r\n                            var downPos1 = downStartY + (1 - downPoint1.y / h) * (downEndY - downStartY);\r\n                            var movePos0 = downStartY + (1 - movePoint0.y / h) * (downEndY - downStartY);\r\n                            var movePos1 = downStartY + (1 - movePoint1.y / h) * (downEndY - downStartY);\r\n                            var initialDistance = Math.max(0.001, downPos1 - downPos0);\r\n                            var currentDistance = Math.max(0.001, movePos1 - movePos0);\r\n                            var d = initialDistance / currentDistance;\r\n                            var s_2 = downStartY * d + downPos0 - movePos0 * d;\r\n                            var e_2 = downEndY * d + downPos1 - movePos1 * d;\r\n                            this.yAxes.each(function (yAxis) {\r\n                                var sa = yAxis.fixPosition(s_2);\r\n                                var ea = yAxis.fixPosition(e_2);\r\n                                yAxis.zoom(sa, ea, 0);\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(XYChart.prototype, \"_handleCursorPosition\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var cursor = this.get(\"cursor\");\r\n            if (cursor) {\r\n                var cursorPoint_1 = cursor.getPrivate(\"point\");\r\n                var snapToSeries = cursor.get(\"snapToSeries\");\r\n                if (cursor._downPoint) {\r\n                    snapToSeries = undefined;\r\n                }\r\n                if (snapToSeries && cursorPoint_1) {\r\n                    var snapToSeriesBy_1 = cursor.get(\"snapToSeriesBy\");\r\n                    var dataItems_1 = [];\r\n                    $array.each(snapToSeries, function (series) {\r\n                        if (!series.isHidden() && !series.isHiding()) {\r\n                            if (snapToSeriesBy_1 != \"x!\" && snapToSeriesBy_1 != \"y!\") {\r\n                                var startIndex = series.startIndex();\r\n                                var endIndex = series.endIndex();\r\n                                for (var i = startIndex; i < endIndex; i++) {\r\n                                    var dataItem = series.dataItems[i];\r\n                                    if (dataItem && !dataItem.isHidden()) {\r\n                                        dataItems_1.push(dataItem);\r\n                                    }\r\n                                }\r\n                            }\r\n                            else {\r\n                                var tooltipDataItem = series.get(\"tooltipDataItem\");\r\n                                if (tooltipDataItem) {\r\n                                    dataItems_1.push(tooltipDataItem);\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                    var minDistance_1 = Infinity;\r\n                    var closestItem_1;\r\n                    $array.each(dataItems_1, function (dataItem) {\r\n                        var point = dataItem.get(\"point\");\r\n                        if (point) {\r\n                            var distance = 0;\r\n                            if (snapToSeriesBy_1 == \"x\" || snapToSeriesBy_1 == \"x!\") {\r\n                                distance = Math.abs(cursorPoint_1.x - point.x);\r\n                            }\r\n                            else if (snapToSeriesBy_1 == \"y\" || snapToSeriesBy_1 == \"y!\") {\r\n                                distance = Math.abs(cursorPoint_1.y - point.y);\r\n                            }\r\n                            else {\r\n                                distance = Math.hypot(cursorPoint_1.x - point.x, cursorPoint_1.y - point.y);\r\n                            }\r\n                            if (distance < minDistance_1) {\r\n                                minDistance_1 = distance;\r\n                                closestItem_1 = dataItem;\r\n                            }\r\n                        }\r\n                    });\r\n                    $array.each(snapToSeries, function (series) {\r\n                        var tooltip = series.get(\"tooltip\");\r\n                        if (tooltip) {\r\n                            tooltip._setDataItem(undefined);\r\n                        }\r\n                    });\r\n                    if (closestItem_1) {\r\n                        var series = closestItem_1.component;\r\n                        series.showDataItemTooltip(closestItem_1);\r\n                        var point = closestItem_1.get(\"point\");\r\n                        if (point) {\r\n                            cursor.handleMove(series.toGlobal(point), true);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(XYChart.prototype, \"_updateCursor\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var cursor = this.get(\"cursor\");\r\n            if (cursor) {\r\n                cursor.handleMove();\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(XYChart.prototype, \"_addCursor\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (cursor) {\r\n            this.plotContainer.children.push(cursor);\r\n        }\r\n    });\r\n    Object.defineProperty(XYChart.prototype, \"_prepareChildren\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            _super.prototype._prepareChildren.call(this);\r\n            this.series.each(function (series) {\r\n                _this._colorize(series);\r\n            });\r\n            if (this.isDirty(\"wheelX\") || this.isDirty(\"wheelY\")) {\r\n                this._handleSetWheel();\r\n            }\r\n            if (this.isDirty(\"cursor\")) {\r\n                var previous = this._prevSettings.cursor;\r\n                var cursor = this.get(\"cursor\");\r\n                if (cursor !== previous) {\r\n                    this._disposeProperty(\"cursor\");\r\n                    if (previous) {\r\n                        previous.dispose();\r\n                    }\r\n                    if (cursor) {\r\n                        cursor._setChart(this);\r\n                        this._addCursor(cursor);\r\n                        this._pushPropertyDisposer(\"cursor\", cursor.events.on(\"selectended\", function () {\r\n                            _this._handleCursorSelectEnd();\r\n                        }));\r\n                    }\r\n                    //this.setRaw(\"cursor\", cursor) // to reset previous value\r\n                    this._prevSettings.cursor = cursor;\r\n                }\r\n            }\r\n            if (this.isDirty(\"scrollbarX\")) {\r\n                var previous = this._prevSettings.scrollbarX;\r\n                var scrollbarX = this.get(\"scrollbarX\");\r\n                if (scrollbarX !== previous) {\r\n                    this._disposeProperty(\"scrollbarX\");\r\n                    if (previous) {\r\n                        previous.dispose();\r\n                    }\r\n                    if (scrollbarX) {\r\n                        if (!scrollbarX.parent) {\r\n                            this.topAxesContainer.children.push(scrollbarX);\r\n                        }\r\n                        this._pushPropertyDisposer(\"scrollbarX\", scrollbarX.events.on(\"rangechanged\", function (e) {\r\n                            _this._handleScrollbar(_this.xAxes, e.start, e.end, e.grip);\r\n                        }));\r\n                        // Used to populate `ariaLabel` with meaningful values\r\n                        scrollbarX.setPrivate(\"positionTextFunction\", function (position) {\r\n                            var axis = _this.xAxes.getIndex(0);\r\n                            return axis ? axis.getTooltipText(position) || \"\" : \"\";\r\n                        });\r\n                    }\r\n                    this._prevSettings.scrollbarX = scrollbarX;\r\n                }\r\n            }\r\n            if (this.isDirty(\"scrollbarY\")) {\r\n                var previous = this._prevSettings.scrollbarY;\r\n                var scrollbarY = this.get(\"scrollbarY\");\r\n                if (scrollbarY !== previous) {\r\n                    this._disposeProperty(\"scrollbarY\");\r\n                    if (previous) {\r\n                        previous.dispose();\r\n                    }\r\n                    if (scrollbarY) {\r\n                        if (!scrollbarY.parent) {\r\n                            this.rightAxesContainer.children.push(scrollbarY);\r\n                        }\r\n                        this._pushPropertyDisposer(\"scrollbarY\", scrollbarY.events.on(\"rangechanged\", function (e) {\r\n                            _this._handleScrollbar(_this.yAxes, e.start, e.end, e.grip);\r\n                        }));\r\n                        // Used to populate `ariaLabel` with meaningful values\r\n                        scrollbarY.setPrivate(\"positionTextFunction\", function (position) {\r\n                            var axis = _this.yAxes.getIndex(0);\r\n                            return axis ? axis.getTooltipText(position) || \"\" : \"\";\r\n                        });\r\n                    }\r\n                    this._prevSettings.scrollbarY = scrollbarY;\r\n                }\r\n            }\r\n            this._handleZoomOut();\r\n        }\r\n    });\r\n    Object.defineProperty(XYChart.prototype, \"_processSeries\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (series) {\r\n            _super.prototype._processSeries.call(this, series);\r\n            this._colorize(series);\r\n        }\r\n    });\r\n    Object.defineProperty(XYChart.prototype, \"_colorize\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (series) {\r\n            var colorSet = this.get(\"colors\");\r\n            if (colorSet) {\r\n                if (series.get(\"fill\") == null) {\r\n                    var color = colorSet.next();\r\n                    series._setSoft(\"stroke\", color);\r\n                    series._setSoft(\"fill\", color);\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(XYChart.prototype, \"_handleCursorSelectEnd\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var cursor = this.get(\"cursor\");\r\n            var behavior = cursor.get(\"behavior\");\r\n            var downPositionX = cursor.getPrivate(\"downPositionX\", 0);\r\n            var downPositionY = cursor.getPrivate(\"downPositionY\", 0);\r\n            var positionX = cursor.getPrivate(\"positionX\", 0.5);\r\n            var positionY = cursor.getPrivate(\"positionY\", 0.5);\r\n            this.xAxes.each(function (axis) {\r\n                if (behavior === \"zoomX\" || behavior === \"zoomXY\") {\r\n                    var position0 = axis.toAxisPosition(downPositionX);\r\n                    var position1 = axis.toAxisPosition(positionX);\r\n                    axis.zoom(position0, position1);\r\n                }\r\n                axis.setPrivate(\"updateScrollbar\", true);\r\n            });\r\n            this.yAxes.each(function (axis) {\r\n                if (behavior === \"zoomY\" || behavior === \"zoomXY\") {\r\n                    var position0 = axis.toAxisPosition(downPositionY);\r\n                    var position1 = axis.toAxisPosition(positionY);\r\n                    axis.zoom(position0, position1);\r\n                }\r\n                axis.setPrivate(\"updateScrollbar\", true);\r\n            });\r\n        }\r\n    });\r\n    Object.defineProperty(XYChart.prototype, \"_handleScrollbar\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (axes, start, end, priority) {\r\n            axes.each(function (axis) {\r\n                var axisStart = axis.fixPosition(start);\r\n                var axisEnd = axis.fixPosition(end);\r\n                var zoomAnimation = axis.zoom(axisStart, axisEnd, undefined, priority);\r\n                var updateScrollbar = \"updateScrollbar\";\r\n                axis.setPrivateRaw(updateScrollbar, false);\r\n                if (zoomAnimation) {\r\n                    zoomAnimation.events.on(\"stopped\", function () {\r\n                        axis.setPrivateRaw(updateScrollbar, true);\r\n                    });\r\n                }\r\n                else {\r\n                    axis.setPrivateRaw(updateScrollbar, true);\r\n                }\r\n            });\r\n        }\r\n    });\r\n    Object.defineProperty(XYChart.prototype, \"_processAxis\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (axes, container) {\r\n            var _this = this;\r\n            return axes.events.onAll(function (change) {\r\n                if (change.type === \"clear\") {\r\n                    $array.each(change.oldValues, function (axis) {\r\n                        _this._removeAxis(axis);\r\n                    });\r\n                }\r\n                else if (change.type === \"push\") {\r\n                    container.children.push(change.newValue);\r\n                    change.newValue.processChart(_this);\r\n                }\r\n                else if (change.type === \"setIndex\") {\r\n                    container.children.setIndex(change.index, change.newValue);\r\n                    change.newValue.processChart(_this);\r\n                }\r\n                else if (change.type === \"insertIndex\") {\r\n                    container.children.insertIndex(change.index, change.newValue);\r\n                    change.newValue.processChart(_this);\r\n                }\r\n                else if (change.type === \"removeIndex\") {\r\n                    _this._removeAxis(change.oldValue);\r\n                }\r\n                else if (change.type === \"moveIndex\") {\r\n                    container.children.moveValue(change.value, change.newIndex);\r\n                    change.value.processChart(_this);\r\n                }\r\n                else {\r\n                    throw new Error(\"Unknown IListEvent type\");\r\n                }\r\n            });\r\n        }\r\n    });\r\n    Object.defineProperty(XYChart.prototype, \"_removeAxis\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (axis) {\r\n            if (!axis.isDisposed()) {\r\n                var axisParent = axis.parent;\r\n                if (axisParent) {\r\n                    axisParent.children.removeValue(axis);\r\n                }\r\n                var gridContainer = axis.gridContainer;\r\n                var gridParent = gridContainer.parent;\r\n                if (gridParent) {\r\n                    gridParent.children.removeValue(gridContainer);\r\n                }\r\n                var topGridContainer = axis.topGridContainer;\r\n                var topGridParent = topGridContainer.parent;\r\n                if (topGridParent) {\r\n                    topGridParent.children.removeValue(topGridContainer);\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(XYChart.prototype, \"_updateChartLayout\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var left = this.leftAxesContainer.width();\r\n            var right = this.rightAxesContainer.width();\r\n            var bottomAxesContainer = this.bottomAxesContainer;\r\n            bottomAxesContainer.set(\"paddingLeft\", left);\r\n            bottomAxesContainer.set(\"paddingRight\", right);\r\n            var topAxesContainer = this.topAxesContainer;\r\n            topAxesContainer.set(\"paddingLeft\", left);\r\n            topAxesContainer.set(\"paddingRight\", right);\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(XYChart.prototype, \"processAxis\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (_axis) { }\r\n    });\r\n    ;\r\n    Object.defineProperty(XYChart.prototype, \"_handleAxisSelection\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (axis, force) {\r\n            var _a;\r\n            var start = axis.fixPosition(axis.get(\"start\", 0));\r\n            var end = axis.fixPosition(axis.get(\"end\", 1));\r\n            if (start > end) {\r\n                _a = __read([end, start], 2), start = _a[0], end = _a[1];\r\n            }\r\n            if (this.xAxes.indexOf(axis) != -1) {\r\n                if (force || axis.getPrivate(\"updateScrollbar\")) {\r\n                    var scrollbarX = this.get(\"scrollbarX\");\r\n                    if (scrollbarX && (!scrollbarX.getPrivate(\"isBusy\") || force)) {\r\n                        scrollbarX.setRaw(\"start\", start);\r\n                        scrollbarX.setRaw(\"end\", end);\r\n                        scrollbarX.updateGrips();\r\n                    }\r\n                }\r\n            }\r\n            else if (this.yAxes.indexOf(axis) != -1) {\r\n                if (force || axis.getPrivate(\"updateScrollbar\")) {\r\n                    var scrollbarY = this.get(\"scrollbarY\");\r\n                    if (scrollbarY && (!scrollbarY.getPrivate(\"isBusy\") || force)) {\r\n                        scrollbarY.setRaw(\"start\", start);\r\n                        scrollbarY.setRaw(\"end\", end);\r\n                        scrollbarY.updateGrips();\r\n                    }\r\n                }\r\n            }\r\n            this._handleZoomOut();\r\n        }\r\n    });\r\n    Object.defineProperty(XYChart.prototype, \"_handleZoomOut\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var zoomOutButton = this.zoomOutButton;\r\n            if (zoomOutButton && zoomOutButton.parent) {\r\n                var visible_1 = false;\r\n                this.xAxes.each(function (axis) {\r\n                    if (axis.get(\"start\") != 0 || axis.get(\"end\") != 1) {\r\n                        visible_1 = true;\r\n                    }\r\n                });\r\n                this.yAxes.each(function (axis) {\r\n                    if (axis.get(\"start\") != 0 || axis.get(\"end\") != 1) {\r\n                        visible_1 = true;\r\n                    }\r\n                });\r\n                if (visible_1) {\r\n                    if (zoomOutButton.isHidden()) {\r\n                        zoomOutButton.show();\r\n                    }\r\n                }\r\n                else {\r\n                    zoomOutButton.hide();\r\n                }\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * Checks if point is within plot area.\r\n     *\r\n     * @param   point  Reference point\r\n     * @return         Is within plot area?\r\n     */\r\n    Object.defineProperty(XYChart.prototype, \"inPlot\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (point) {\r\n            var plotContainer = this.plotContainer;\r\n            var otherCharts = this.getPrivate(\"otherCharts\", this._otherCharts);\r\n            var global = plotContainer.toGlobal(point);\r\n            if (point.x >= -0.1 && point.y >= -0.1 && point.x <= plotContainer.width() + 0.1 && point.y <= plotContainer.height() + 0.1) {\r\n                return true;\r\n            }\r\n            if (otherCharts) {\r\n                for (var i = otherCharts.length - 1; i >= 0; i--) {\r\n                    var chart = otherCharts[i];\r\n                    if (chart != this) {\r\n                        var chartPlotContainer = chart.plotContainer;\r\n                        var documentPoint = this._root.rootPointToDocument(global);\r\n                        var chartRoot = chart._root.documentPointToRoot(documentPoint);\r\n                        var local = chartPlotContainer.toLocal(chartRoot);\r\n                        if (local.x >= -0.1 && local.y >= -0.1 && local.x <= chartPlotContainer.width() + 0.1 && local.y <= chartPlotContainer.height() + 0.1) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(XYChart.prototype, \"arrangeTooltips\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            var plotContainer = this.plotContainer;\r\n            var w = plotContainer.width();\r\n            var h = plotContainer.height();\r\n            var hh = this.height();\r\n            var plotT = plotContainer._display.toGlobal({ x: 0, y: 0 });\r\n            var plotB = plotContainer._display.toGlobal({ x: w, y: h });\r\n            var tooltips = [];\r\n            var sum = 0;\r\n            var minDistance = Infinity;\r\n            var movePoint = this._movePoint;\r\n            var maxTooltipDistance = this.get(\"maxTooltipDistance\");\r\n            var maxTooltipDistanceBy = this.get(\"maxTooltipDistanceBy\", \"xy\");\r\n            var closest;\r\n            var closestPoint;\r\n            if ($type.isNumber(maxTooltipDistance)) {\r\n                this.series.each(function (series) {\r\n                    var tooltip = series.get(\"tooltip\");\r\n                    if (tooltip) {\r\n                        var point = tooltip.get(\"pointTo\");\r\n                        if (point) {\r\n                            var distance = Math.hypot(movePoint.x - point.x, movePoint.y - point.y);\r\n                            if (maxTooltipDistanceBy == \"x\") {\r\n                                distance = Math.abs(movePoint.x - point.x);\r\n                            }\r\n                            else if (maxTooltipDistanceBy == \"y\") {\r\n                                distance = Math.abs(movePoint.y - point.y);\r\n                            }\r\n                            if (distance < minDistance) {\r\n                                minDistance = distance;\r\n                                closest = series;\r\n                                closestPoint = point;\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            var tooltipSeries = [];\r\n            this.series.each(function (series) {\r\n                var tooltip = series.get(\"tooltip\");\r\n                if (tooltip) {\r\n                    var hidden = false;\r\n                    var point = tooltip.get(\"pointTo\");\r\n                    if (point) {\r\n                        if (maxTooltipDistance >= 0) {\r\n                            var point_1 = tooltip.get(\"pointTo\");\r\n                            if (point_1) {\r\n                                if (series != closest) {\r\n                                    var distance = Math.hypot(closestPoint.x - point_1.x, closestPoint.y - point_1.y);\r\n                                    if (maxTooltipDistanceBy == \"x\") {\r\n                                        distance = Math.abs(closestPoint.x - point_1.x);\r\n                                    }\r\n                                    else if (maxTooltipDistanceBy == \"y\") {\r\n                                        distance = Math.abs(closestPoint.y - point_1.y);\r\n                                    }\r\n                                    if (distance > maxTooltipDistance) {\r\n                                        hidden = true;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        else if (maxTooltipDistance == -1) {\r\n                            if (series != closest) {\r\n                                hidden = true;\r\n                            }\r\n                        }\r\n                        if (!_this.inPlot(_this._tooltipToLocal(point)) || !tooltip.dataItem) {\r\n                            hidden = true;\r\n                        }\r\n                        else {\r\n                            if (!hidden) {\r\n                                sum += point.y;\r\n                            }\r\n                        }\r\n                        if (hidden || series.isHidden() || series.isHiding()) {\r\n                            tooltip.hide(0);\r\n                        }\r\n                        else {\r\n                            tooltip.show();\r\n                            tooltips.push(tooltip);\r\n                            tooltipSeries.push(series);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            this.setPrivate(\"tooltipSeries\", tooltipSeries);\r\n            if (this.get(\"arrangeTooltips\")) {\r\n                var tooltipContainer_1 = this._root.tooltipContainer;\r\n                var count = tooltips.length;\r\n                var average = sum / count;\r\n                if (average > h / 2 + plotT.y) {\r\n                    tooltips.sort(function (a, b) { return $order.compareNumber(b.get(\"pointTo\").y, a.get(\"pointTo\").y); });\r\n                    var prevY_1 = plotB.y;\r\n                    $array.each(tooltips, function (tooltip) {\r\n                        var height = tooltip.height();\r\n                        var centerY = tooltip.get(\"centerY\");\r\n                        if (centerY instanceof Percent) {\r\n                            height *= centerY.value;\r\n                        }\r\n                        height += tooltip.get(\"marginBottom\", 0);\r\n                        tooltip.set(\"bounds\", { left: plotT.x, top: plotT.y, right: plotB.x, bottom: prevY_1 });\r\n                        tooltip.setPrivate(\"customData\", { left: plotT.x, top: plotT.y, right: plotB.x, bottom: prevY_1 });\r\n                        prevY_1 = Math.min(prevY_1 - height, tooltip._fy - height);\r\n                        if (tooltip.parent == tooltipContainer_1) {\r\n                            tooltipContainer_1.children.moveValue(tooltip, 0);\r\n                        }\r\n                    });\r\n                    if (prevY_1 < 0) {\r\n                        tooltips.reverse();\r\n                        var prevBottom_1 = prevY_1;\r\n                        $array.each(tooltips, function (tooltip) {\r\n                            var bounds = tooltip.get(\"bounds\");\r\n                            if (bounds) {\r\n                                var top_1 = bounds.top - prevY_1;\r\n                                var bottom = bounds.bottom - prevY_1;\r\n                                if (top_1 < prevBottom_1) {\r\n                                    top_1 = prevBottom_1;\r\n                                    bottom = top_1 + tooltip.height();\r\n                                }\r\n                                tooltip.set(\"bounds\", { left: bounds.left, top: top_1, right: bounds.right, bottom: bottom });\r\n                                prevBottom_1 = bounds.bottom - prevY_1 + tooltip.get(\"marginBottom\", 0);\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                else {\r\n                    tooltips.reverse();\r\n                    tooltips.sort(function (a, b) { return $order.compareNumber(a.get(\"pointTo\").y, b.get(\"pointTo\").y); });\r\n                    var prevY_2 = 0;\r\n                    $array.each(tooltips, function (tooltip) {\r\n                        var height = tooltip.height();\r\n                        var centerY = tooltip.get(\"centerY\");\r\n                        if (centerY instanceof Percent) {\r\n                            height *= centerY.value;\r\n                        }\r\n                        height += tooltip.get(\"marginBottom\", 0);\r\n                        tooltip.set(\"bounds\", { left: plotT.x, top: prevY_2, right: plotB.x, bottom: Math.max(plotT.y + hh, prevY_2 + height) });\r\n                        if (tooltip.parent == tooltipContainer_1) {\r\n                            tooltipContainer_1.children.moveValue(tooltip, 0);\r\n                        }\r\n                        prevY_2 = Math.max(prevY_2 + height, tooltip._fy + height);\r\n                    });\r\n                    if (prevY_2 > hh) {\r\n                        tooltips.reverse();\r\n                        var prevBottom_2 = hh;\r\n                        $array.each(tooltips, function (tooltip) {\r\n                            var bounds = tooltip.get(\"bounds\");\r\n                            if (bounds) {\r\n                                var top_2 = bounds.top - (hh - prevY_2);\r\n                                var bottom = bounds.bottom - (hh - prevY_2);\r\n                                if (bottom > prevBottom_2) {\r\n                                    bottom = prevBottom_2;\r\n                                    top_2 = bottom - tooltip.height();\r\n                                }\r\n                                tooltip.set(\"bounds\", { left: bounds.left, top: top_2, right: bounds.right, bottom: bottom });\r\n                                prevBottom_2 = bottom - tooltip.height() - tooltip.get(\"marginBottom\", 0);\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(XYChart.prototype, \"_tooltipToLocal\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (point) {\r\n            return this.plotContainer.toLocal(point);\r\n        }\r\n    });\r\n    /**\r\n     * Fully zooms out the chart.\r\n     */\r\n    Object.defineProperty(XYChart.prototype, \"zoomOut\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this.xAxes.each(function (axis) {\r\n                axis.setPrivate(\"updateScrollbar\", true);\r\n                axis.zoom(0, 1);\r\n            });\r\n            this.yAxes.each(function (axis) {\r\n                axis.setPrivate(\"updateScrollbar\", true);\r\n                axis.zoom(0, 1);\r\n            });\r\n        }\r\n    });\r\n    Object.defineProperty(XYChart, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"XYChart\"\r\n    });\r\n    Object.defineProperty(XYChart, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: SerialChart.classNames.concat([XYChart.className])\r\n    });\r\n    return XYChart;\r\n}(SerialChart));\r\nexport { XYChart };\r\n//# sourceMappingURL=XYChart.js.map","import { __extends } from \"tslib\";\r\nimport { Theme } from \"../../core/Theme\";\r\nimport { percent, p50, p100 } from \"../../core/util/Percent\";\r\nimport { ColorSet } from \"../../core/util/ColorSet\";\r\nimport { setColor } from \"../../themes/DefaultTheme\";\r\nimport * as $time from \"../../core/util/Time\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $math from \"../../core/util/Math\";\r\nimport * as $object from \"../../core/util/Object\";\r\nimport * as $array from \"../../core/util/Array\";\r\n/**\r\n * @ignore\r\n */\r\nvar XYChartDefaultTheme = /** @class */ (function (_super) {\r\n    __extends(XYChartDefaultTheme, _super);\r\n    function XYChartDefaultTheme() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(XYChartDefaultTheme.prototype, \"setupDefaultRules\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            _super.prototype.setupDefaultRules.call(this);\r\n            var ic = this._root.interfaceColors;\r\n            var language = this._root.language;\r\n            var r = this.rule.bind(this);\r\n            /**\r\n             * ========================================================================\r\n             * charts/xy\r\n             * ========================================================================\r\n             */\r\n            r(\"XYChart\").setAll({\r\n                colors: ColorSet.new(this._root, {}),\r\n                paddingLeft: 20,\r\n                paddingRight: 20,\r\n                paddingTop: 16,\r\n                paddingBottom: 16,\r\n                panX: false,\r\n                panY: false,\r\n                wheelStep: 0.25,\r\n                arrangeTooltips: true,\r\n                pinchZoomX: false,\r\n                pinchZoomY: false\r\n            });\r\n            r(\"XYSeries\").setAll({\r\n                legendLabelText: \"{name}\"\r\n            });\r\n            /**\r\n             * ------------------------------------------------------------------------\r\n             * charts/xy: XYChartScrollbar\r\n             * ------------------------------------------------------------------------\r\n             */\r\n            r(\"XYChart\", [\"scrollbar\", \"chart\"]).setAll({\r\n                paddingBottom: 0,\r\n                paddingLeft: 0,\r\n                paddingTop: 0,\r\n                paddingRight: 0,\r\n                colors: ColorSet.new(this._root, {\r\n                    saturation: 0\r\n                })\r\n            });\r\n            {\r\n                var rule = r(\"Graphics\", [\"scrollbar\", \"overlay\"]);\r\n                rule.setAll({\r\n                    fillOpacity: 0.5\r\n                });\r\n                setColor(rule, \"fill\", ic, \"background\");\r\n            }\r\n            // Class: RoundedRectangle\r\n            r(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).setAll({\r\n                cornerRadiusTR: 0,\r\n                cornerRadiusTL: 0,\r\n                cornerRadiusBR: 0,\r\n                cornerRadiusBL: 0,\r\n                fillOpacity: 0,\r\n                focusable: true\r\n            });\r\n            r(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).states.create(\"hover\", { fillOpacity: 0.4 });\r\n            r(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\"]).setAll({\r\n                cornerRadiusTL: 0,\r\n                cornerRadiusBL: 0,\r\n                cornerRadiusTR: 0,\r\n                cornerRadiusBR: 0\r\n            });\r\n            r(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\", \"resize\", \"button\"]).setAll({\r\n                cornerRadiusBL: 40,\r\n                cornerRadiusBR: 40,\r\n                cornerRadiusTL: 40,\r\n                cornerRadiusTR: 40\r\n            });\r\n            r(\"AxisRendererX\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n                strokeOpacity: 0,\r\n                inside: true\r\n            });\r\n            r(\"AxisRendererY\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n                strokeOpacity: 0,\r\n                inside: true,\r\n                minGridDistance: 5\r\n            });\r\n            r(\"AxisLabel\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n                opacity: 0.5,\r\n                centerY: p100,\r\n                minPosition: 0.01,\r\n                maxPosition: 0.99,\r\n                fontSize: \"0.8em\"\r\n            });\r\n            r(\"AxisLabel\", [\"category\"]).setAll({\r\n                text: \"{category}\",\r\n                populateText: true\r\n            });\r\n            r(\"AxisLabel\", [\"x\"]).setAll({\r\n                centerY: 0\r\n            });\r\n            r(\"AxisLabel\", [\"x\", \"inside\"]).setAll({\r\n                centerY: p100\r\n            });\r\n            r(\"AxisLabel\", [\"x\", \"inside\", \"opposite\"]).setAll({\r\n                centerY: 0\r\n            });\r\n            r(\"AxisLabel\", [\"x\", \"opposite\"]).setAll({\r\n                centerY: p100\r\n            });\r\n            r(\"AxisLabel\", [\"y\"]).setAll({\r\n                centerX: p100\r\n            });\r\n            r(\"AxisLabel\", [\"y\", \"inside\"]).setAll({\r\n                centerX: 0\r\n            });\r\n            r(\"AxisLabel\", [\"y\", \"inside\", \"opposite\"]).setAll({\r\n                centerX: p100\r\n            });\r\n            r(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n                centerX: 0\r\n            });\r\n            r(\"AxisLabel\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n                visible: false\r\n            });\r\n            // Class: Grid\r\n            r(\"Grid\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n                visible: false\r\n            });\r\n            // Class: Grid\r\n            r(\"Grid\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n                opacity: 0.5\r\n            });\r\n            /**\r\n             * ------------------------------------------------------------------------\r\n             * charts/xy: Cursor\r\n             * ------------------------------------------------------------------------\r\n             */\r\n            r(\"XYCursor\").setAll({\r\n                behavior: \"none\",\r\n                layer: 30,\r\n                exportable: false,\r\n                snapToSeriesBy: \"xy\",\r\n                moveThreshold: 1\r\n            });\r\n            {\r\n                var rule = r(\"Grid\", [\"cursor\", \"x\"]);\r\n                rule.setAll({\r\n                    strokeOpacity: 0.8,\r\n                    strokeDasharray: [2, 2],\r\n                    ariaLabel: language.translate(\"Use left and right arrows to move selection\")\r\n                });\r\n                setColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n            }\r\n            {\r\n                var rule = r(\"Grid\", [\"cursor\", \"y\"]);\r\n                rule.setAll({\r\n                    strokeOpacity: 0.8,\r\n                    strokeDasharray: [2, 2],\r\n                    ariaLabel: language.translate(\"Use up and down arrows to move selection\")\r\n                });\r\n                setColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n            }\r\n            {\r\n                var rule = r(\"Graphics\", [\"cursor\", \"selection\"]);\r\n                rule.setAll({\r\n                    fillOpacity: 0.15,\r\n                });\r\n                setColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n            }\r\n            /**\r\n             * ------------------------------------------------------------------------\r\n             * charts/xy: Axes\r\n             * ------------------------------------------------------------------------\r\n             */\r\n            r(\"Axis\").setAll({\r\n                start: 0,\r\n                end: 1,\r\n                minZoomCount: 1,\r\n                maxZoomCount: Infinity,\r\n                maxZoomFactor: 1000,\r\n                maxDeviation: 0.1,\r\n                snapTooltip: true,\r\n                tooltipLocation: 0.5,\r\n                panX: true,\r\n                panY: true,\r\n                zoomX: true,\r\n                zoomY: true,\r\n                fixAxisSize: true\r\n            });\r\n            r(\"AxisLabel\").setAll({\r\n                location: 0.5,\r\n                multiLocation: 0,\r\n                centerX: p50,\r\n                centerY: p50,\r\n                paddingTop: 3,\r\n                paddingBottom: 3,\r\n                paddingLeft: 5,\r\n                paddingRight: 5\r\n            });\r\n            // The following is deprecated following text measuring updates in 5.0.5\r\n            // r(\"AxisLabel\", [\"y\"]).setAll({\r\n            // \ttextAlign: \"right\"\r\n            // });\r\n            // r(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n            // \ttextAlign: \"left\"\r\n            // });\r\n            r(\"Container\", [\"axis\", \"header\"]).setAll({\r\n                layer: 30\r\n            });\r\n            {\r\n                var rule = r(\"AxisRenderer\");\r\n                rule.setAll({\r\n                    strokeOpacity: 0\r\n                });\r\n                setColor(rule, \"stroke\", ic, \"grid\");\r\n            }\r\n            r(\"AxisRendererX\").setAll({\r\n                minGridDistance: 120,\r\n                opposite: false,\r\n                inversed: false,\r\n                cellStartLocation: 0,\r\n                cellEndLocation: 1,\r\n                width: p100\r\n            });\r\n            r(\"AxisRendererY\").setAll({\r\n                minGridDistance: 40,\r\n                opposite: false,\r\n                inversed: false,\r\n                cellStartLocation: 0,\r\n                cellEndLocation: 1,\r\n                height: p100\r\n            });\r\n            {\r\n                var rule = r(\"Rectangle\", [\"axis\", \"thumb\"]);\r\n                rule.setAll({\r\n                    fillOpacity: 0\r\n                });\r\n                setColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n                rule.states.create(\"hover\", { fillOpacity: 0.1 });\r\n            }\r\n            r(\"Rectangle\", [\"axis\", \"thumb\", \"x\"]).setAll({\r\n                cursorOverStyle: \"ew-resize\"\r\n            });\r\n            r(\"Rectangle\", [\"axis\", \"thumb\", \"y\"]).setAll({\r\n                cursorOverStyle: \"ns-resize\"\r\n            });\r\n            {\r\n                var rule = r(\"Grid\");\r\n                rule.setAll({\r\n                    location: 0,\r\n                    strokeOpacity: 0.15,\r\n                });\r\n                setColor(rule, \"stroke\", ic, \"grid\");\r\n            }\r\n            r(\"Grid\", [\"base\"]).setAll({\r\n                strokeOpacity: 0.3\r\n            });\r\n            {\r\n                var rule = r(\"Graphics\", [\"axis\", \"fill\"]);\r\n                rule.setAll({\r\n                    visible: false,\r\n                    isMeasured: false,\r\n                    position: \"absolute\",\r\n                    fillOpacity: 0.05,\r\n                });\r\n                setColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n            }\r\n            r(\"Graphics\", [\"axis\", \"fill\", \"range\"]).setAll({\r\n                isMeasured: true\r\n            });\r\n            // hides all elements of series axis range\r\n            r(\"Graphics\", [\"series\", \"fill\", \"range\"]).setAll({\r\n                visible: false,\r\n                isMeasured: true\r\n            });\r\n            r(\"Grid\", [\"series\", \"range\"]).setAll({\r\n                visible: false\r\n            });\r\n            r(\"AxisTick\", [\"series\", \"range\"]).setAll({\r\n                visible: false\r\n            });\r\n            r(\"AxisLabel\", [\"series\", \"range\"]).setAll({\r\n                visible: false\r\n            });\r\n            {\r\n                var rule = r(\"AxisTick\");\r\n                rule.setAll({\r\n                    location: 0.5,\r\n                    multiLocation: 0,\r\n                    strokeOpacity: 1,\r\n                    isMeasured: false,\r\n                    position: \"absolute\",\r\n                    visible: false\r\n                });\r\n                setColor(rule, \"stroke\", ic, \"grid\");\r\n            }\r\n            r(\"CategoryAxis\").setAll({\r\n                startLocation: 0,\r\n                endLocation: 1,\r\n                fillRule: function (dataItem, index) {\r\n                    var axisFill = dataItem.get(\"axisFill\");\r\n                    if (axisFill) {\r\n                        if (!$type.isNumber(index) || index % 2 == 0) {\r\n                            axisFill.setPrivate(\"visible\", true);\r\n                        }\r\n                        else {\r\n                            axisFill.setPrivate(\"visible\", false);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            var gridIntervals = [\r\n                { timeUnit: \"millisecond\", count: 1 },\r\n                { timeUnit: \"millisecond\", count: 5 },\r\n                { timeUnit: \"millisecond\", count: 10 },\r\n                { timeUnit: \"millisecond\", count: 50 },\r\n                { timeUnit: \"millisecond\", count: 100 },\r\n                { timeUnit: \"millisecond\", count: 500 },\r\n                { timeUnit: \"second\", count: 1 },\r\n                { timeUnit: \"second\", count: 5 },\r\n                { timeUnit: \"second\", count: 10 },\r\n                { timeUnit: \"second\", count: 30 },\r\n                { timeUnit: \"minute\", count: 1 },\r\n                { timeUnit: \"minute\", count: 5 },\r\n                { timeUnit: \"minute\", count: 10 },\r\n                { timeUnit: \"minute\", count: 15 },\r\n                { timeUnit: \"minute\", count: 30 },\r\n                { timeUnit: \"hour\", count: 1 },\r\n                { timeUnit: \"hour\", count: 3 },\r\n                { timeUnit: \"hour\", count: 6 },\r\n                { timeUnit: \"hour\", count: 12 },\r\n                { timeUnit: \"day\", count: 1 },\r\n                { timeUnit: \"day\", count: 2 },\r\n                { timeUnit: \"day\", count: 3 },\r\n                { timeUnit: \"day\", count: 4 },\r\n                { timeUnit: \"day\", count: 5 },\r\n                { timeUnit: \"week\", count: 1 },\r\n                { timeUnit: \"month\", count: 1 },\r\n                { timeUnit: \"month\", count: 2 },\r\n                { timeUnit: \"month\", count: 3 },\r\n                { timeUnit: \"month\", count: 6 },\r\n                { timeUnit: \"year\", count: 1 },\r\n                { timeUnit: \"year\", count: 2 },\r\n                { timeUnit: \"year\", count: 5 },\r\n                { timeUnit: \"year\", count: 10 },\r\n                { timeUnit: \"year\", count: 50 },\r\n                { timeUnit: \"year\", count: 100 },\r\n                { timeUnit: \"year\", count: 200 },\r\n                { timeUnit: \"year\", count: 500 },\r\n                { timeUnit: \"year\", count: 1000 },\r\n                { timeUnit: \"year\", count: 2000 },\r\n                { timeUnit: \"year\", count: 5000 },\r\n                { timeUnit: \"year\", count: 10000 },\r\n                { timeUnit: \"year\", count: 100000 }\r\n            ];\r\n            var dateFormats = {\r\n                \"millisecond\": language.translate(\"_date_millisecond\"),\r\n                \"second\": language.translate(\"_date_second\"),\r\n                \"minute\": language.translate(\"_date_minute\"),\r\n                \"hour\": language.translate(\"_date_hour\"),\r\n                \"day\": language.translate(\"_date_day\"),\r\n                \"week\": language.translate(\"_date_day\"),\r\n                \"month\": language.translate(\"_date_month\"),\r\n                \"year\": language.translate(\"_date_year\")\r\n            };\r\n            var periodChangeDateFormats = {\r\n                \"millisecond\": language.translate(\"_date_millisecond\"),\r\n                \"second\": language.translate(\"_date_second\"),\r\n                \"minute\": language.translate(\"_date_minute\"),\r\n                \"hour\": language.translate(\"_date_day\"),\r\n                \"day\": language.translate(\"_date_day\"),\r\n                \"week\": language.translate(\"_date_day\"),\r\n                \"month\": language.translate(\"_date_month\") + \" \" + language.translate(\"_date_year\"),\r\n                \"year\": language.translate(\"_date_year\")\r\n            };\r\n            var tooltipDateFormats = {\r\n                \"millisecond\": language.translate(\"_date_millisecond_full\"),\r\n                \"second\": language.translate(\"_date_second_full\"),\r\n                \"minute\": language.translate(\"_date_minute_full\"),\r\n                \"hour\": language.translate(\"_date_hour_full\"),\r\n                \"day\": language.translate(\"_date_day_full\"),\r\n                \"week\": language.translate(\"_date_week_full\"),\r\n                \"month\": language.translate(\"_date_month_full\"),\r\n                \"year\": language.translate(\"_date_year\")\r\n            };\r\n            r(\"CategoryDateAxis\").setAll({\r\n                markUnitChange: true,\r\n                gridIntervals: $array.copy(gridIntervals),\r\n                dateFormats: $object.copy(dateFormats),\r\n                periodChangeDateFormats: $object.copy(periodChangeDateFormats)\r\n            });\r\n            r(\"DateAxis\").setAll({\r\n                maxZoomFactor: null,\r\n                strictMinMax: true,\r\n                startLocation: 0,\r\n                endLocation: 1,\r\n                markUnitChange: true,\r\n                groupData: false,\r\n                groupCount: 500,\r\n                gridIntervals: $array.copy(gridIntervals),\r\n                dateFormats: $object.copy(dateFormats),\r\n                periodChangeDateFormats: $object.copy(periodChangeDateFormats),\r\n                tooltipDateFormats: tooltipDateFormats,\r\n                groupIntervals: [\r\n                    { timeUnit: \"millisecond\", count: 1 },\r\n                    { timeUnit: \"millisecond\", count: 10 },\r\n                    { timeUnit: \"millisecond\", count: 100 },\r\n                    { timeUnit: \"second\", count: 1 },\r\n                    { timeUnit: \"second\", count: 10 },\r\n                    { timeUnit: \"minute\", count: 1 },\r\n                    { timeUnit: \"minute\", count: 10 },\r\n                    { timeUnit: \"hour\", count: 1 },\r\n                    { timeUnit: \"day\", count: 1 },\r\n                    { timeUnit: \"week\", count: 1 },\r\n                    { timeUnit: \"month\", count: 1 },\r\n                    { timeUnit: \"year\", count: 1 }\r\n                ],\r\n                fillRule: function (dataItem) {\r\n                    var axisFill = dataItem.get(\"axisFill\");\r\n                    if (axisFill) {\r\n                        var axis = dataItem.component;\r\n                        var value = dataItem.get(\"value\");\r\n                        var endValue = dataItem.get(\"endValue\");\r\n                        var intervalDuration = axis.intervalDuration();\r\n                        var baseInterval = axis.getPrivate(\"baseInterval\");\r\n                        var gridInterval = axis.getPrivate(\"gridInterval\", baseInterval);\r\n                        var min = axis.getPrivate(\"min\", 0);\r\n                        min = $time.round(new Date(min), gridInterval.timeUnit, gridInterval.count, _this._root.locale.firstDayOfWeek, _this._root.utc, undefined, _this._root.timezone).getTime();\r\n                        if (value != null && endValue != null) {\r\n                            var val = Math.round(Math.round((value - min) / intervalDuration)) / 2;\r\n                            if (val == Math.round(val)) {\r\n                                axisFill.setPrivate(\"visible\", true);\r\n                            }\r\n                            else {\r\n                                axisFill.setPrivate(\"visible\", false);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            r(\"GaplessDateAxis\").setAll({\r\n                fillRule: function (dataItem) {\r\n                    var axisFill = dataItem.get(\"axisFill\");\r\n                    if (axisFill) {\r\n                        var index = dataItem.get(\"index\");\r\n                        var visible = false;\r\n                        if (!$type.isNumber(index) || index % 2 == 0) {\r\n                            visible = true;\r\n                        }\r\n                        axisFill.setPrivate(\"visible\", visible);\r\n                    }\r\n                }\r\n            });\r\n            r(\"ValueAxis\").setAll({\r\n                baseValue: 0,\r\n                logarithmic: false,\r\n                strictMinMax: false,\r\n                autoZoom: true,\r\n                fillRule: function (dataItem) {\r\n                    var axisFill = dataItem.get(\"axisFill\");\r\n                    if (axisFill) {\r\n                        var axis = dataItem.component;\r\n                        var value = dataItem.get(\"value\");\r\n                        var step = axis.getPrivate(\"step\");\r\n                        if ($type.isNumber(value) && $type.isNumber(step)) {\r\n                            if ($math.round(value / step / 2, 5) == Math.round(value / step / 2)) {\r\n                                axisFill.setPrivate(\"visible\", false);\r\n                            }\r\n                            else {\r\n                                axisFill.setPrivate(\"visible\", true);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            r(\"DurationAxis\").setAll({\r\n                baseUnit: \"second\"\r\n            });\r\n            /**\r\n             * ------------------------------------------------------------------------\r\n             * charts/xy: Series\r\n             * ------------------------------------------------------------------------\r\n             */\r\n            r(\"XYSeries\").setAll({\r\n                maskBullets: true,\r\n                stackToNegative: true,\r\n                locationX: 0.5,\r\n                locationY: 0.5,\r\n                snapTooltip: false,\r\n                openValueXGrouped: \"open\",\r\n                openValueYGrouped: \"open\",\r\n                valueXGrouped: \"close\",\r\n                valueYGrouped: \"close\",\r\n                seriesTooltipTarget: \"series\"\r\n            });\r\n            r(\"BaseColumnSeries\").setAll({\r\n                adjustBulletPosition: true\r\n            });\r\n            r(\"ColumnSeries\").setAll({\r\n                clustered: true\r\n            });\r\n            r(\"RoundedRectangle\", [\"series\", \"column\"]).setAll({\r\n                position: \"absolute\",\r\n                isMeasured: false,\r\n                width: percent(70),\r\n                height: percent(70),\r\n                strokeWidth: 1,\r\n                strokeOpacity: 1,\r\n                cornerRadiusBL: 0,\r\n                cornerRadiusTL: 0,\r\n                cornerRadiusBR: 0,\r\n                cornerRadiusTR: 0,\r\n                fillOpacity: 1,\r\n                role: \"figure\"\r\n            });\r\n            r(\"LineSeries\").setAll({\r\n                connect: true,\r\n                autoGapCount: 1.1,\r\n                stackToNegative: false\r\n            });\r\n            r(\"Graphics\", [\"series\", \"stroke\"]).setAll({\r\n                position: \"absolute\",\r\n                strokeWidth: 1,\r\n                strokeOpacity: 1,\r\n                isMeasured: false\r\n            });\r\n            r(\"Graphics\", [\"series\", \"fill\"]).setAll({\r\n                visible: false,\r\n                fillOpacity: 0,\r\n                position: \"absolute\",\r\n                strokeWidth: 0,\r\n                strokeOpacity: 0,\r\n                isMeasured: false\r\n            });\r\n            r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).setAll({\r\n                draw: function (display, sprite) {\r\n                    var parent = sprite.parent;\r\n                    if (parent) {\r\n                        var h = parent.height();\r\n                        var w = parent.width();\r\n                        display.moveTo(0, h / 2);\r\n                        display.lineTo(w, h / 2);\r\n                    }\r\n                }\r\n            });\r\n            {\r\n                var rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).states.create(\"disabled\", {});\r\n                setColor(rule, \"stroke\", ic, \"disabled\");\r\n            }\r\n            r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).setAll({\r\n                draw: function (display, sprite) {\r\n                    var parent = sprite.parent;\r\n                    if (parent) {\r\n                        var h = parent.height();\r\n                        var w = parent.width();\r\n                        display.moveTo(0, 0);\r\n                        display.lineTo(w, 0);\r\n                        display.lineTo(w, h);\r\n                        display.lineTo(0, h);\r\n                        display.lineTo(0, 0);\r\n                    }\r\n                }\r\n            });\r\n            {\r\n                var rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).states.create(\"disabled\", {});\r\n                setColor(rule, \"stroke\", ic, \"disabled\");\r\n            }\r\n            r(\"SmoothedXYLineSeries\").setAll({\r\n                tension: 0.5\r\n            });\r\n            r(\"SmoothedXLineSeries\").setAll({\r\n                tension: 0.5\r\n            });\r\n            r(\"SmoothedYLineSeries\").setAll({\r\n                tension: 0.5\r\n            });\r\n            r(\"Candlestick\").setAll({\r\n                position: \"absolute\",\r\n                isMeasured: false,\r\n                width: percent(50),\r\n                height: percent(50),\r\n                strokeWidth: 1,\r\n                strokeOpacity: 1,\r\n                cornerRadiusBL: 0,\r\n                cornerRadiusTL: 0,\r\n                cornerRadiusBR: 0,\r\n                cornerRadiusTR: 0,\r\n                fillOpacity: 1,\r\n                role: \"figure\"\r\n            });\r\n            r(\"OHLC\").setAll({\r\n                width: percent(80),\r\n                height: percent(80)\r\n            });\r\n            r(\"CandlestickSeries\").setAll({\r\n                lowValueXGrouped: \"low\",\r\n                lowValueYGrouped: \"low\",\r\n                highValueXGrouped: \"high\",\r\n                highValueYGrouped: \"high\",\r\n                openValueXGrouped: \"open\",\r\n                openValueYGrouped: \"open\",\r\n                valueXGrouped: \"close\",\r\n                valueYGrouped: \"close\"\r\n            });\r\n            // These rules can be used for regular columns, too\r\n            {\r\n                var rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"riseFromOpen\", {});\r\n                setColor(rule, \"fill\", ic, \"positive\");\r\n                setColor(rule, \"stroke\", ic, \"positive\");\r\n            }\r\n            {\r\n                var rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"dropFromOpen\", {});\r\n                setColor(rule, \"fill\", ic, \"negative\");\r\n                setColor(rule, \"stroke\", ic, \"negative\");\r\n            }\r\n            // Hollow\r\n            r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"riseFromOpen\", { fillOpacity: 0 });\r\n            r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"dropFromOpen\", { fillOpacity: 1 });\r\n            {\r\n                var rule = r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"riseFromPrevious\", {});\r\n                setColor(rule, \"fill\", ic, \"positive\");\r\n                setColor(rule, \"stroke\", ic, \"positive\");\r\n            }\r\n            {\r\n                var rule = r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"dropFromPrevious\", {});\r\n                setColor(rule, \"fill\", ic, \"negative\");\r\n                setColor(rule, \"stroke\", ic, \"negative\");\r\n            }\r\n        }\r\n    });\r\n    return XYChartDefaultTheme;\r\n}(Theme));\r\nexport { XYChartDefaultTheme };\r\n//# sourceMappingURL=XYChartDefaultTheme.js.map","import { __extends, __read } from \"tslib\";\r\nimport { Scrollbar } from \"../../core/render/Scrollbar\";\r\nimport { XYChart } from \"./XYChart\";\r\nimport { Graphics } from \"../../core/render/Graphics\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\n/**\r\n * Creates a scrollbar with chart preview in it.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/#Scrollbar_with_chart_preview} for more info\r\n * @important\r\n */\r\nvar XYChartScrollbar = /** @class */ (function (_super) {\r\n    __extends(XYChartScrollbar, _super);\r\n    function XYChartScrollbar() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * An instance of an [[XYChart]] that is used to plot chart preview in\r\n         * scrollbar.\r\n         */\r\n        Object.defineProperty(_this, \"chart\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: _this.children.push(XYChart.new(_this._root, {\r\n                themeTags: [\"chart\"],\r\n                interactive: false,\r\n                interactiveChildren: false,\r\n                panX: false,\r\n                panY: false,\r\n                wheelX: \"none\",\r\n                wheelY: \"none\"\r\n            }))\r\n        });\r\n        /**\r\n         * A graphics element that is displayed over inactive portion of the\r\n         * scrollbarpreview, to dim it down.\r\n         */\r\n        Object.defineProperty(_this, \"overlay\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: _this.children.push(Graphics.new(_this._root, {\r\n                themeTags: [\"overlay\"],\r\n                interactive: false\r\n            }))\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(XYChartScrollbar.prototype, \"_afterNew\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this._addOrientationClass();\r\n            this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"scrollbar\", \"xy\", \"chart\", this._settings.orientation]);\r\n            var children = this.children;\r\n            children.moveValue(this.thumb);\r\n            children.moveValue(this.startGrip);\r\n            children.moveValue(this.endGrip);\r\n            this.thumb.set(\"opacity\", 0);\r\n            this.thumb.states.create(\"hover\", { opacity: 0.2 });\r\n            var plotContainer = this.chart.plotContainer;\r\n            plotContainer.set(\"interactive\", false);\r\n            plotContainer.remove(\"background\");\r\n            plotContainer.children.removeValue(this.chart.zoomOutButton);\r\n            _super.prototype._afterNew.call(this);\r\n        }\r\n    });\r\n    Object.defineProperty(XYChartScrollbar.prototype, \"_updateThumb\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            _super.prototype._updateThumb.call(this);\r\n            this.overlay.set(\"draw\", function (display) {\r\n                var _a, _b;\r\n                var startGrip = _this.startGrip;\r\n                var endGrip = _this.endGrip;\r\n                var x0 = startGrip.x();\r\n                var y0 = startGrip.y();\r\n                var x1 = endGrip.x();\r\n                var y1 = endGrip.y();\r\n                var h = _this.height();\r\n                var w = _this.width();\r\n                if (x0 > x1) {\r\n                    _a = __read([x1, x0], 2), x0 = _a[0], x1 = _a[1];\r\n                }\r\n                if (y0 > y1) {\r\n                    _b = __read([y1, y0], 2), y0 = _b[0], y1 = _b[1];\r\n                }\r\n                if (_this.get(\"orientation\") === \"horizontal\") {\r\n                    display.moveTo(0, 0);\r\n                    display.lineTo(x0, 0);\r\n                    display.lineTo(x0, h);\r\n                    display.lineTo(0, h);\r\n                    display.lineTo(0, 0);\r\n                    display.moveTo(x1, 0);\r\n                    display.lineTo(w, 0);\r\n                    display.lineTo(w, h);\r\n                    display.lineTo(x1, h);\r\n                    display.lineTo(x1, 0);\r\n                }\r\n                else {\r\n                    display.moveTo(0, 0);\r\n                    display.lineTo(0, y0);\r\n                    display.lineTo(w, y0);\r\n                    display.lineTo(w, 0);\r\n                    display.lineTo(0, 0);\r\n                    display.moveTo(0, y1);\r\n                    display.lineTo(0, h);\r\n                    display.lineTo(w, h);\r\n                    display.lineTo(w, y1);\r\n                    display.lineTo(0, y1);\r\n                }\r\n            });\r\n        }\r\n    });\r\n    Object.defineProperty(XYChartScrollbar, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"XYChartScrollbar\"\r\n    });\r\n    Object.defineProperty(XYChartScrollbar, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: Scrollbar.classNames.concat([XYChartScrollbar.className])\r\n    });\r\n    return XYChartScrollbar;\r\n}(Scrollbar));\r\nexport { XYChartScrollbar };\r\n//# sourceMappingURL=XYChartScrollbar.js.map","import { __extends } from \"tslib\";\r\nimport { Container } from \"../../core/render/Container\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\nimport { Graphics } from \"../../core/render/Graphics\";\r\nimport { Grid } from \"./axes/Grid\";\r\n//import { Animations } from \"../core/util/Animation\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\nimport * as $math from \"../../core/util/Math\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $object from \"../../core/util/Object\";\r\n/**\r\n * Creates a chart cursor for an [[XYChart]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/} for more info\r\n * @important\r\n */\r\nvar XYCursor = /** @class */ (function (_super) {\r\n    __extends(XYCursor, _super);\r\n    function XYCursor() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\r\n         *\r\n         * @default Grid.new()\r\n         */\r\n        Object.defineProperty(_this, \"lineX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: _this.children.push(Grid.new(_this._root, {\r\n                themeTags: [\"x\"]\r\n            }))\r\n        });\r\n        /**\r\n         * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\r\n         *\r\n         * @default Grid.new()\r\n         */\r\n        Object.defineProperty(_this, \"lineY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: _this.children.push(Grid.new(_this._root, {\r\n                themeTags: [\"y\"]\r\n            }))\r\n        });\r\n        /**\r\n         * An element that represents current selection.\r\n         *\r\n         * @default Graphics.new()\r\n         */\r\n        Object.defineProperty(_this, \"selection\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: _this.children.push(Graphics.new(_this._root, {\r\n                themeTags: [\"selection\", \"cursor\"], layer: 30\r\n            }))\r\n        });\r\n        Object.defineProperty(_this, \"_movePoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_lastPoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: { x: 0, y: 0 }\r\n        });\r\n        Object.defineProperty(_this, \"_tooltipX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(_this, \"_tooltipY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * A chart cursor is attached to.\r\n         */\r\n        Object.defineProperty(_this, \"chart\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_toX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_toY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(XYCursor.prototype, \"_afterNew\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"xy\", \"cursor\"]);\r\n            _super.prototype._afterNew.call(this);\r\n            this.setAll({ \"width\": p100, height: p100, isMeasured: true, position: \"absolute\" });\r\n            this.states.create(\"hidden\", { visible: true, opacity: 0 });\r\n            this._drawLines();\r\n            this.setPrivateRaw(\"visible\", false);\r\n            this._disposers.push(this.setTimeout(function () {\r\n                _this.setPrivate(\"visible\", true);\r\n            }, 500));\r\n            this.lineX.events.on(\"positionchanged\", function () {\r\n                _this._handleXLine();\r\n            });\r\n            this.lineY.events.on(\"positionchanged\", function () {\r\n                _this._handleYLine();\r\n            });\r\n            this.lineX.events.on(\"focus\", function (ev) { return _this._handleLineFocus(ev.target); });\r\n            this.lineX.events.on(\"blur\", function (ev) { return _this._handleLineBlur(ev.target); });\r\n            this.lineY.events.on(\"focus\", function (ev) { return _this._handleLineFocus(ev.target); });\r\n            this.lineY.events.on(\"blur\", function (ev) { return _this._handleLineBlur(ev.target); });\r\n            if ($utils.supports(\"keyboardevents\")) {\r\n                this._disposers.push($utils.addEventListener(document, \"keydown\", function (ev) {\r\n                    _this._handleLineMove(ev.keyCode);\r\n                }));\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(XYCursor.prototype, \"_setUpTouch\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var chart = this.chart;\r\n            if (chart) {\r\n                chart.plotContainer._display.cancelTouch = this.get(\"behavior\") != \"none\" ? true : false;\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(XYCursor.prototype, \"_handleXLine\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var x = this.lineX.x();\r\n            var visible = true;\r\n            if (x < 0 || x > this.width()) {\r\n                visible = false;\r\n            }\r\n            this.lineX.setPrivate(\"visible\", visible);\r\n        }\r\n    });\r\n    Object.defineProperty(XYCursor.prototype, \"_handleYLine\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var y = this.lineY.y();\r\n            var visible = true;\r\n            if (y < 0 || y > this.height()) {\r\n                visible = false;\r\n            }\r\n            this.lineY.setPrivate(\"visible\", visible);\r\n        }\r\n    });\r\n    Object.defineProperty(XYCursor.prototype, \"_handleLineMove\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (keyCode) {\r\n            var dir = \"\";\r\n            var position = 0;\r\n            var increment = 0.1;\r\n            var chart = this.chart;\r\n            if (this._root.focused(this.lineX)) {\r\n                if (chart && chart.xAxes.length) {\r\n                    increment = chart.xAxes.getIndex(0).getCellWidthPosition();\r\n                }\r\n                position = this.getPrivate(\"positionX\", 0);\r\n                dir = \"positionX\";\r\n                if (keyCode == 37) {\r\n                    position -= increment;\r\n                }\r\n                else if (keyCode == 39) {\r\n                    position += increment;\r\n                }\r\n            }\r\n            else if (this._root.focused(this.lineY)) {\r\n                if (chart && chart.yAxes.length) {\r\n                    increment = chart.yAxes.getIndex(0).getCellWidthPosition();\r\n                }\r\n                position = this.getPrivate(\"positionY\", 0);\r\n                dir = \"positionY\";\r\n                if (keyCode == 38) {\r\n                    position -= increment;\r\n                }\r\n                else if (keyCode == 40) {\r\n                    position += increment;\r\n                }\r\n            }\r\n            if (position < 0) {\r\n                position = 0;\r\n            }\r\n            else if (position > 1) {\r\n                position = 1;\r\n            }\r\n            if (dir != \"\") {\r\n                this.set(dir, position);\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(XYCursor.prototype, \"_handleLineFocus\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (_line) {\r\n            this.setAll({\r\n                positionX: this.getPrivate(\"positionX\"),\r\n                positionY: this.getPrivate(\"positionY\"),\r\n                alwaysShow: true\r\n            });\r\n        }\r\n    });\r\n    Object.defineProperty(XYCursor.prototype, \"_handleLineBlur\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (_line) {\r\n            this.setAll({\r\n                positionX: undefined,\r\n                positionY: undefined,\r\n                alwaysShow: false\r\n            });\r\n        }\r\n    });\r\n    Object.defineProperty(XYCursor.prototype, \"_prepareChildren\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            _super.prototype._prepareChildren.call(this);\r\n            if (this.isDirty(\"xAxis\")) {\r\n                this._tooltipX = false;\r\n                var xAxis = this.get(\"xAxis\");\r\n                if (xAxis) {\r\n                    var tooltip_1 = xAxis.get(\"tooltip\");\r\n                    if (tooltip_1) {\r\n                        this._tooltipX = true;\r\n                        tooltip_1.on(\"pointTo\", function () {\r\n                            _this._updateXLine(tooltip_1);\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            if (this.isDirty(\"yAxis\")) {\r\n                this._tooltipY = false;\r\n                var yAxis = this.get(\"yAxis\");\r\n                if (yAxis) {\r\n                    var tooltip_2 = yAxis.get(\"tooltip\");\r\n                    if (tooltip_2) {\r\n                        this._tooltipY = true;\r\n                        tooltip_2.on(\"pointTo\", function () {\r\n                            _this._updateYLine(tooltip_2);\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(XYCursor.prototype, \"_handleSyncWith\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var chart = this.chart;\r\n            if (chart) {\r\n                var syncWith = this.get(\"syncWith\");\r\n                var otherCharts_1 = [];\r\n                if (syncWith) {\r\n                    $array.each(syncWith, function (cursor) {\r\n                        var chart = cursor.chart;\r\n                        if (chart) {\r\n                            otherCharts_1.push(chart);\r\n                        }\r\n                    });\r\n                }\r\n                chart._otherCharts = otherCharts_1;\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(XYCursor.prototype, \"_updateChildren\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._updateChildren.call(this);\r\n            this._handleSyncWith();\r\n            if (this.isDirty(\"positionX\") || this.isDirty(\"positionY\")) {\r\n                var positionX = this.get(\"positionX\");\r\n                var positionY = this.get(\"positionY\");\r\n                if (positionX == null && positionY == null) {\r\n                    this.hide(0);\r\n                }\r\n                else {\r\n                    this._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\r\n                    this.handleMove();\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(XYCursor.prototype, \"_updateXLine\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (tooltip) {\r\n            var x = $math.round(this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).x, 2);\r\n            if (this._toX != x) {\r\n                this.lineX.animate({ key: \"x\", to: x, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\r\n                this._toX = x;\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(XYCursor.prototype, \"_updateYLine\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (tooltip) {\r\n            var y = $math.round(this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).y, 2);\r\n            if (this._toY != y) {\r\n                this.lineY.animate({ key: \"y\", to: y, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\r\n                this._toY = y;\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(XYCursor.prototype, \"_drawLines\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            this.lineX.set(\"draw\", function (display) {\r\n                display.moveTo(0, 0);\r\n                display.lineTo(0, _this.height());\r\n            });\r\n            this.lineY.set(\"draw\", function (display) {\r\n                display.moveTo(0, 0);\r\n                display.lineTo(_this.width(), 0);\r\n            });\r\n        }\r\n    });\r\n    Object.defineProperty(XYCursor.prototype, \"_setChart\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (chart) {\r\n            var _this = this;\r\n            this.chart = chart;\r\n            this._handleSyncWith();\r\n            var plotContainer = chart.plotContainer;\r\n            this.events.on(\"boundschanged\", function () {\r\n                _this._disposers.push(_this.setTimeout(function () {\r\n                    if (_this.get(\"alwaysShow\")) {\r\n                        _this._movePoint = _this.toGlobal(_this._getPoint(_this.get(\"positionX\", 0), _this.get(\"positionY\", 0)));\r\n                        _this.handleMove();\r\n                    }\r\n                }, 50));\r\n            });\r\n            //this._display.interactive = true;\r\n            if ($utils.supports(\"touchevents\")) {\r\n                this._disposers.push(plotContainer.events.on(\"click\", function (event) {\r\n                    if ($utils.isTouchEvent(event.originalEvent)) {\r\n                        _this._handleMove(event.originalEvent);\r\n                    }\r\n                }));\r\n                this._setUpTouch();\r\n            }\r\n            this._disposers.push(plotContainer.events.on(\"pointerdown\", function (event) {\r\n                _this._handleCursorDown(event.originalEvent);\r\n            }));\r\n            this._disposers.push(plotContainer.events.on(\"globalpointerup\", function (event) {\r\n                _this._handleCursorUp(event.originalEvent);\r\n                if (!event.native && !_this.isHidden()) {\r\n                    _this._handleMove(event.originalEvent);\r\n                }\r\n            }));\r\n            this._disposers.push(plotContainer.events.on(\"globalpointermove\", function (event) {\r\n                if (!_this.get(\"syncWith\")) {\r\n                    if ($object.keys(plotContainer._downPoints).length == 0 && !event.native && _this.isHidden()) {\r\n                        // Ignore mouse movement if it originates on outside element and\r\n                        // we're not dragging.\r\n                        return;\r\n                    }\r\n                }\r\n                _this._handleMove(event.originalEvent);\r\n            }));\r\n            var parent = this.parent;\r\n            if (parent) {\r\n                parent.children.moveValue(this.selection);\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(XYCursor.prototype, \"_inPlot\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (point) {\r\n            var chart = this.chart;\r\n            if (chart) {\r\n                return chart.inPlot(point);\r\n            }\r\n            return false;\r\n        }\r\n    });\r\n    Object.defineProperty(XYCursor.prototype, \"_handleCursorDown\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (event) {\r\n            var rootPoint = this._root.documentPointToRoot({ x: event.clientX, y: event.clientY });\r\n            var local = this._display.toLocal(rootPoint);\r\n            var chart = this.chart;\r\n            this.selection.set(\"draw\", function () { });\r\n            if (chart && this._inPlot(local)) {\r\n                this._downPoint = local;\r\n                if (this.get(\"behavior\") != \"none\") {\r\n                    this.selection.show();\r\n                    var type = \"selectstarted\";\r\n                    if (this.events.isEnabled(type)) {\r\n                        this.events.dispatch(type, { type: type, target: this });\r\n                    }\r\n                }\r\n                var positionX = this._getPosition(local).x;\r\n                var positionY = this._getPosition(local).y;\r\n                this.setPrivate(\"downPositionX\", positionX);\r\n                this.setPrivate(\"downPositionY\", positionY);\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(XYCursor.prototype, \"_handleCursorUp\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (event) {\r\n            // TODO: handle multitouch\r\n            if (this._downPoint) {\r\n                var behavior = this.get(\"behavior\", \"none\");\r\n                if (behavior != \"none\") {\r\n                    if (behavior.charAt(0) === \"z\") {\r\n                        this.selection.hide();\r\n                    }\r\n                    var rootPoint = this._root.documentPointToRoot({ x: event.clientX, y: event.clientY });\r\n                    var local = this._display.toLocal(rootPoint);\r\n                    var downPoint = this._downPoint;\r\n                    var moveThreshold = this.get(\"moveThreshold\", 1);\r\n                    if (local && downPoint) {\r\n                        var dispatch = false;\r\n                        if (behavior === \"zoomX\" || behavior === \"zoomXY\" || behavior === \"selectX\" || behavior === \"selectXY\") {\r\n                            if (Math.abs(local.x - downPoint.x) > moveThreshold) {\r\n                                dispatch = true;\r\n                            }\r\n                        }\r\n                        if (behavior === \"zoomY\" || behavior === \"zoomXY\" || behavior === \"selectY\" || behavior === \"selectXY\") {\r\n                            if (Math.abs(local.y - downPoint.y) > moveThreshold) {\r\n                                dispatch = true;\r\n                            }\r\n                        }\r\n                        if (dispatch) {\r\n                            var type = \"selectended\";\r\n                            if (this.events.isEnabled(type)) {\r\n                                this.events.dispatch(type, { type: type, target: this });\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this._downPoint = undefined;\r\n        }\r\n    });\r\n    Object.defineProperty(XYCursor.prototype, \"_handleMove\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (event) {\r\n            if (this.getPrivate(\"visible\")) {\r\n                var chart = this.chart;\r\n                if (chart && $object.keys(chart.plotContainer._downPoints).length > 1) {\r\n                    this.set(\"forceHidden\", true);\r\n                    return;\r\n                }\r\n                else {\r\n                    this.set(\"forceHidden\", false);\r\n                }\r\n                // TODO: handle multitouch\r\n                var rootPoint = this._root.documentPointToRoot({ x: event.clientX, y: event.clientY });\r\n                var lastPoint = this._lastPoint;\r\n                if (Math.round(lastPoint.x) === Math.round(rootPoint.x) && Math.round(lastPoint.y) === Math.round(rootPoint.y)) {\r\n                    return;\r\n                }\r\n                this._lastPoint = rootPoint;\r\n                this.handleMove({ x: rootPoint.x, y: rootPoint.y });\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(XYCursor.prototype, \"_getPosition\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (point) {\r\n            return { x: point.x / this.width(), y: point.y / this.height() };\r\n        }\r\n    });\r\n    /**\r\n     * Moves the cursor to X/Y coordinates within chart container (`point`).\r\n     *\r\n     * If `skipEvent` parameter is set to `true`, the move will not invoke\r\n     * the `\"cursormoved\"` event.\r\n     *\r\n     * @param  point      X/Y to move cursor to\r\n     * @param  skipEvent  Do not fire \"cursormoved\" event\r\n     */\r\n    Object.defineProperty(XYCursor.prototype, \"handleMove\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (point, skipEvent) {\r\n            if (!point) {\r\n                point = this._movePoint;\r\n            }\r\n            var alwaysShow = this.get(\"alwaysShow\");\r\n            if (!point) {\r\n                this.hide(0);\r\n                return;\r\n            }\r\n            this._movePoint = point;\r\n            var local = this._display.toLocal(point);\r\n            var chart = this.chart;\r\n            if (chart && this._inPlot(local)) {\r\n                chart._movePoint = point;\r\n                if (this.isHidden()) {\r\n                    this.show();\r\n                    var behavior = this.get(\"behavior\", \"\");\r\n                    if (behavior.charAt(0) == \"z\") {\r\n                        this.selection.set(\"draw\", function () { });\r\n                    }\r\n                }\r\n                var x = local.x;\r\n                var y = local.y;\r\n                var xyPos = this._getPosition(local);\r\n                this.setPrivate(\"point\", local);\r\n                var snapToSeries_1 = this.get(\"snapToSeries\");\r\n                if (this._downPoint) {\r\n                    snapToSeries_1 = undefined;\r\n                }\r\n                var userPositionX = this.get(\"positionX\");\r\n                var positionX_1 = xyPos.x;\r\n                if ($type.isNumber(userPositionX)) {\r\n                    positionX_1 = userPositionX;\r\n                }\r\n                var userPositionY = this.get(\"positionY\");\r\n                var positionY_1 = xyPos.y;\r\n                if ($type.isNumber(userPositionY)) {\r\n                    positionY_1 = userPositionY;\r\n                }\r\n                this.setPrivate(\"positionX\", positionX_1);\r\n                this.setPrivate(\"positionY\", positionY_1);\r\n                var xy = this._getPoint(positionX_1, positionY_1);\r\n                x = xy.x;\r\n                y = xy.y;\r\n                chart.xAxes.each(function (axis) {\r\n                    axis._handleCursorPosition(positionX_1, snapToSeries_1);\r\n                    if (alwaysShow) {\r\n                        axis.handleCursorShow();\r\n                    }\r\n                });\r\n                chart.yAxes.each(function (axis) {\r\n                    axis._handleCursorPosition(positionY_1, snapToSeries_1);\r\n                    if (alwaysShow) {\r\n                        axis.handleCursorShow();\r\n                    }\r\n                });\r\n                if (!skipEvent) {\r\n                    chart._handleCursorPosition();\r\n                    var type = \"cursormoved\";\r\n                    if (this.events.isEnabled(type)) {\r\n                        this.events.dispatch(type, { type: type, target: this });\r\n                    }\r\n                }\r\n                this._updateLines(x, y);\r\n                chart.arrangeTooltips();\r\n            }\r\n            else if (!this._downPoint) {\r\n                if (!alwaysShow) {\r\n                    this.hide(0);\r\n                    var type = \"cursorhidden\";\r\n                    if (this.events.isEnabled(type)) {\r\n                        this.events.dispatch(type, { type: type, target: this });\r\n                    }\r\n                }\r\n            }\r\n            if (this._downPoint && this.get(\"behavior\") != \"none\") {\r\n                this._updateSelection(local);\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(XYCursor.prototype, \"_getPoint\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (positionX, positionY) {\r\n            return { x: this.width() * positionX, y: this.height() * positionY };\r\n        }\r\n    });\r\n    Object.defineProperty(XYCursor.prototype, \"_updateLines\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (x, y) {\r\n            if (!this._tooltipX) {\r\n                this.lineX.set(\"x\", x);\r\n            }\r\n            if (!this._tooltipY) {\r\n                this.lineY.set(\"y\", y);\r\n            }\r\n            this._drawLines();\r\n        }\r\n    });\r\n    Object.defineProperty(XYCursor.prototype, \"_updateSelection\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (point) {\r\n            var _this = this;\r\n            var selection = this.selection;\r\n            var behavior = this.get(\"behavior\");\r\n            var w = this.width();\r\n            var h = this.height();\r\n            if (point.x < 0) {\r\n                point.x = 0;\r\n            }\r\n            if (point.x > w) {\r\n                point.x = w;\r\n            }\r\n            if (point.y < 0) {\r\n                point.y = 0;\r\n            }\r\n            if (point.y > h) {\r\n                point.y = h;\r\n            }\r\n            selection.set(\"draw\", function (display) {\r\n                var downPoint = _this._downPoint;\r\n                if (downPoint) {\r\n                    if (behavior === \"zoomXY\" || behavior === \"selectXY\") {\r\n                        display.moveTo(downPoint.x, downPoint.y);\r\n                        display.lineTo(downPoint.x, point.y);\r\n                        display.lineTo(point.x, point.y);\r\n                        display.lineTo(point.x, downPoint.y);\r\n                        display.lineTo(downPoint.x, downPoint.y);\r\n                    }\r\n                    else if (behavior === \"zoomX\" || behavior === \"selectX\") {\r\n                        display.moveTo(downPoint.x, 0);\r\n                        display.lineTo(downPoint.x, h);\r\n                        display.lineTo(point.x, h);\r\n                        display.lineTo(point.x, 0);\r\n                        display.lineTo(downPoint.x, 0);\r\n                    }\r\n                    else if (behavior === \"zoomY\" || behavior === \"selectY\") {\r\n                        display.moveTo(0, downPoint.y);\r\n                        display.lineTo(w, downPoint.y);\r\n                        display.lineTo(w, point.y);\r\n                        display.lineTo(0, point.y);\r\n                        display.lineTo(0, downPoint.y);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    });\r\n    Object.defineProperty(XYCursor.prototype, \"_onHide\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            if (this.isHidden()) {\r\n                var chart = this.chart;\r\n                if (chart) {\r\n                    chart.xAxes.each(function (axis) {\r\n                        axis.handleCursorHide();\r\n                    });\r\n                    chart.yAxes.each(function (axis) {\r\n                        axis.handleCursorHide();\r\n                    });\r\n                    chart.series.each(function (series) {\r\n                        series.handleCursorHide();\r\n                    });\r\n                }\r\n            }\r\n            _super.prototype._onHide.call(this);\r\n        }\r\n    });\r\n    Object.defineProperty(XYCursor.prototype, \"_onShow\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            if (!this.isHidden()) {\r\n                var chart = this.chart;\r\n                if (chart) {\r\n                    chart.xAxes.each(function (axis) {\r\n                        axis.handleCursorShow();\r\n                    });\r\n                    chart.yAxes.each(function (axis) {\r\n                        axis.handleCursorShow();\r\n                    });\r\n                }\r\n            }\r\n            _super.prototype._onShow.call(this);\r\n        }\r\n    });\r\n    Object.defineProperty(XYCursor.prototype, \"_dispose\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._dispose.call(this);\r\n            this.selection.dispose();\r\n        }\r\n    });\r\n    Object.defineProperty(XYCursor, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"XYCursor\"\r\n    });\r\n    Object.defineProperty(XYCursor, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: Container.classNames.concat([XYCursor.className])\r\n    });\r\n    return XYCursor;\r\n}(Container));\r\nexport { XYCursor };\r\n//# sourceMappingURL=XYCursor.js.map","import { __extends, __read } from \"tslib\";\r\nimport { DataItem } from \"../../../core/render/Component\";\r\nimport { Component } from \"../../../core/render/Component\";\r\nimport { Container } from \"../../../core/render/Container\";\r\nimport { p100 } from \"../../../core/util/Percent\";\r\nimport { List } from \"../../../core/util/List\";\r\nimport { Rectangle } from \"../../../core/render/Rectangle\";\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n/**\r\n * A base class for all axes.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Adding_axes} for more info\r\n */\r\nvar Axis = /** @class */ (function (_super) {\r\n    __extends(Axis, _super);\r\n    function Axis() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        Object.defineProperty(_this, \"_series\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(_this, \"_isPanning\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * A [[Container]] that holds all the axis label elements.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(_this, \"labelsContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: _this.children.push(Container.new(_this._root, {}))\r\n        });\r\n        /**\r\n         * A [[Container]] that holds all the axis grid and fill elements.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(_this, \"gridContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Container.new(_this._root, { width: p100, height: p100 })\r\n        });\r\n        /**\r\n         * A [[Container]] that holds axis grid elements which goes above the series.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(_this, \"topGridContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Container.new(_this._root, { width: p100, height: p100 })\r\n        });\r\n        /**\r\n         * A [[Container]] that holds all the axis bullet elements.\r\n         *\r\n         * @default new Container\r\n         */\r\n        Object.defineProperty(_this, \"bulletsContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: _this.children.push(Container.new(_this._root, { isMeasured: false, width: p100, height: p100, position: \"absolute\" }))\r\n        });\r\n        /**\r\n         * A referenece to the the chart the axis belongs to.\r\n         */\r\n        Object.defineProperty(_this, \"chart\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_rangesDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(_this, \"_panStart\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(_this, \"_panEnd\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(_this, \"_sAnimation\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_eAnimation\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_skipSync\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * A list of axis ranges.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\r\n         * @default new List()\r\n         */\r\n        Object.defineProperty(_this, \"axisRanges\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new List()\r\n        });\r\n        Object.defineProperty(_this, \"_seriesAxisRanges\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        /**\r\n         * A control label that is invisible but is used to keep width the width of\r\n         * the axis constant.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Ghost_label} for more info\r\n         */\r\n        Object.defineProperty(_this, \"ghostLabel\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_cursorPosition\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: -1\r\n        });\r\n        Object.defineProperty(_this, \"_snapToSeries\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_seriesValuesDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * A container above the axis that can be used to add additional stuff into\r\n         * it. For example a legend, label, or an icon.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\r\n         * @default new Container\r\n         */\r\n        Object.defineProperty(_this, \"axisHeader\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: _this.children.push(Container.new(_this._root, {\r\n                themeTags: [\"axis\", \"header\"],\r\n                position: \"absolute\",\r\n                background: Rectangle.new(_this._root, {\r\n                    themeTags: [\"header\", \"background\"],\r\n                    fill: _this._root.interfaceColors.get(\"background\")\r\n                })\r\n            }))\r\n        });\r\n        Object.defineProperty(_this, \"_bullets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Axis.prototype, \"_dispose\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            // these could be in other parents, so disposing just in case\r\n            this.gridContainer.dispose();\r\n            this.topGridContainer.dispose();\r\n            this.bulletsContainer.dispose();\r\n            this.labelsContainer.dispose();\r\n            this.axisHeader.dispose();\r\n            _super.prototype._dispose.call(this);\r\n        }\r\n    });\r\n    Object.defineProperty(Axis.prototype, \"_afterNew\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            _super.prototype._afterNew.call(this);\r\n            this.setPrivate(\"updateScrollbar\", true);\r\n            this._disposers.push(this.axisRanges.events.onAll(function (change) {\r\n                if (change.type === \"clear\") {\r\n                    $array.each(change.oldValues, function (dataItem) {\r\n                        _this.disposeDataItem(dataItem);\r\n                    });\r\n                }\r\n                else if (change.type === \"push\") {\r\n                    _this._processAxisRange(change.newValue, [\"range\"]);\r\n                }\r\n                else if (change.type === \"setIndex\") {\r\n                    _this._processAxisRange(change.newValue, [\"range\"]);\r\n                }\r\n                else if (change.type === \"insertIndex\") {\r\n                    _this._processAxisRange(change.newValue, [\"range\"]);\r\n                }\r\n                else if (change.type === \"removeIndex\") {\r\n                    _this.disposeDataItem(change.oldValue);\r\n                }\r\n                else if (change.type === \"moveIndex\") {\r\n                    _this._processAxisRange(change.value, [\"range\"]);\r\n                }\r\n                else {\r\n                    throw new Error(\"Unknown IStreamEvent type\");\r\n                }\r\n            }));\r\n            var renderer = this.get(\"renderer\");\r\n            if (renderer) {\r\n                renderer.axis = this;\r\n                renderer.processAxis();\r\n            }\r\n            this.children.push(renderer);\r\n            this.ghostLabel = renderer.makeLabel(new DataItem(this, undefined, {}), []);\r\n            this.ghostLabel.adapters.disable(\"text\");\r\n            this.ghostLabel.set(\"opacity\", 0);\r\n        }\r\n    });\r\n    /**\r\n     * Zooms the axis to relative locations.\r\n     *\r\n     * Both `start` and `end` are relative: 0 means start of the axis, 1 - end.\r\n     *\r\n     * @param   start     Relative start\r\n     * @param   end       Relative end\r\n     * @param   duration  Duration of the zoom animation in milliseconds\r\n     * @return            Zoom animation\r\n     */\r\n    Object.defineProperty(Axis.prototype, \"zoom\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (start, end, duration, priority) {\r\n            var _a;\r\n            var _this = this;\r\n            if (this.get(\"start\") !== start || this.get(\"end\") != end) {\r\n                var sAnimation = this._sAnimation;\r\n                var eAnimation = this._eAnimation;\r\n                var maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\r\n                if (start < -maxDeviation) {\r\n                    start = -maxDeviation;\r\n                }\r\n                if (end > 1 + maxDeviation) {\r\n                    end = 1 + maxDeviation;\r\n                }\r\n                if (start > end) {\r\n                    _a = __read([end, start], 2), start = _a[0], end = _a[1];\r\n                }\r\n                if (!$type.isNumber(duration)) {\r\n                    duration = this.get(\"interpolationDuration\", 0);\r\n                }\r\n                if (!priority) {\r\n                    priority = \"end\";\r\n                }\r\n                var maxZoomFactor = this.getPrivate(\"maxZoomFactor\", this.get(\"maxZoomFactor\", 100));\r\n                var maxZoomFactorReal = maxZoomFactor;\r\n                if (end === 1 && start !== 0) {\r\n                    if (start < this.get(\"start\")) {\r\n                        priority = \"start\";\r\n                    }\r\n                    else {\r\n                        priority = \"end\";\r\n                    }\r\n                }\r\n                if (start === 0 && end !== 1) {\r\n                    if (end > this.get(\"end\")) {\r\n                        priority = \"end\";\r\n                    }\r\n                    else {\r\n                        priority = \"start\";\r\n                    }\r\n                }\r\n                var minZoomCount = this.get(\"minZoomCount\");\r\n                var maxZoomCount = this.get(\"maxZoomCount\");\r\n                if ($type.isNumber(minZoomCount)) {\r\n                    maxZoomFactor = maxZoomFactorReal / minZoomCount;\r\n                }\r\n                var minZoomFactor = 1;\r\n                if ($type.isNumber(maxZoomCount)) {\r\n                    minZoomFactor = maxZoomFactorReal / maxZoomCount;\r\n                }\r\n                // most likely we are dragging left scrollbar grip here, so we tend to modify end\r\n                if (priority === \"start\") {\r\n                    if (maxZoomCount > 0) {\r\n                        // add to the end\r\n                        if (1 / (end - start) < minZoomFactor) {\r\n                            end = start + 1 / minZoomFactor;\r\n                        }\r\n                    }\r\n                    // add to the end\r\n                    if (1 / (end - start) > maxZoomFactor) {\r\n                        end = start + 1 / maxZoomFactor;\r\n                    }\r\n                    //unless end is > 0\r\n                    if (end > 1 && end - start < 1 / maxZoomFactor) {\r\n                        //end = 1;\r\n                        start = end - 1 / maxZoomFactor;\r\n                    }\r\n                }\r\n                // most likely we are dragging right, so we modify left\r\n                else {\r\n                    if (maxZoomCount > 0) {\r\n                        // add to the end\r\n                        if (1 / (end - start) < minZoomFactor) {\r\n                            start = end - 1 / minZoomFactor;\r\n                        }\r\n                    }\r\n                    // remove from start\r\n                    if (1 / (end - start) > maxZoomFactor) {\r\n                        start = end - 1 / maxZoomFactor;\r\n                    }\r\n                    if (start < 0 && end - start < 1 / maxZoomFactor) {\r\n                        //start = 0;\r\n                        end = start + 1 / maxZoomFactor;\r\n                    }\r\n                }\r\n                if (1 / (end - start) > maxZoomFactor) {\r\n                    end = start + 1 / maxZoomFactor;\r\n                }\r\n                if (1 / (end - start) > maxZoomFactor) {\r\n                    start = end - 1 / maxZoomFactor;\r\n                }\r\n                if (maxZoomCount != null && minZoomCount != null && (start == this.get(\"start\") && end == this.get(\"end\"))) {\r\n                    var chart = this.chart;\r\n                    if (chart) {\r\n                        chart._handleAxisSelection(this, true);\r\n                    }\r\n                }\r\n                if (((sAnimation && sAnimation.playing && sAnimation.to == start) || this.get(\"start\") == start) && ((eAnimation && eAnimation.playing && eAnimation.to == end) || this.get(\"end\") == end)) {\r\n                    return;\r\n                }\r\n                if (duration > 0) {\r\n                    var easing = this.get(\"interpolationEasing\");\r\n                    var sAnimation_1, eAnimation_1;\r\n                    if (this.get(\"start\") != start) {\r\n                        sAnimation_1 = this.animate({ key: \"start\", to: start, duration: duration, easing: easing });\r\n                    }\r\n                    if (this.get(\"end\") != end) {\r\n                        eAnimation_1 = this.animate({ key: \"end\", to: end, duration: duration, easing: easing });\r\n                    }\r\n                    this._sAnimation = sAnimation_1;\r\n                    this._eAnimation = eAnimation_1;\r\n                    if (sAnimation_1) {\r\n                        return sAnimation_1;\r\n                    }\r\n                    else if (eAnimation_1) {\r\n                        return eAnimation_1;\r\n                    }\r\n                }\r\n                else {\r\n                    this.set(\"start\", start);\r\n                    this.set(\"end\", end);\r\n                    // otherwise bullets and line out of sync, as series is not redrawn\r\n                    this._root.events.once(\"frameended\", function () {\r\n                        _this._markDirtyKey(\"start\");\r\n                        _this._root._markDirty();\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                if (this._sAnimation) {\r\n                    this._sAnimation.stop();\r\n                }\r\n                if (this._eAnimation) {\r\n                    this._eAnimation.stop();\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Axis.prototype, \"series\", {\r\n        /**\r\n         * A list of series using this axis.\r\n         *\r\n         * @return Series\r\n         */\r\n        get: function () {\r\n            return this._series;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Axis.prototype, \"_processAxisRange\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem, themeTags) {\r\n            dataItem.setRaw(\"isRange\", true);\r\n            this._createAssets(dataItem, themeTags);\r\n            this._rangesDirty = true;\r\n            this._prepareDataItem(dataItem);\r\n            var above = dataItem.get(\"above\");\r\n            var container = this.topGridContainer;\r\n            var grid = dataItem.get(\"grid\");\r\n            if (above && grid) {\r\n                container.children.moveValue(grid);\r\n            }\r\n            var fill = dataItem.get(\"axisFill\");\r\n            if (above && fill) {\r\n                container.children.moveValue(fill);\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Axis.prototype, \"_prepareDataItem\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (_dataItem, _index) { }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(Axis.prototype, \"markDirtyExtremes\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(Axis.prototype, \"markDirtySelectionExtremes\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n        }\r\n    });\r\n    Object.defineProperty(Axis.prototype, \"_calculateTotals\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n        }\r\n    });\r\n    Object.defineProperty(Axis.prototype, \"_updateAxisRanges\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            this._bullets = {};\r\n            this.axisRanges.each(function (axisRange) {\r\n                _this._prepareDataItem(axisRange);\r\n            });\r\n            $array.each(this._seriesAxisRanges, function (axisRange) {\r\n                _this._prepareDataItem(axisRange);\r\n            });\r\n        }\r\n    });\r\n    Object.defineProperty(Axis.prototype, \"_prepareChildren\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._prepareChildren.call(this);\r\n            if (this.get(\"fixAxisSize\")) {\r\n                this.ghostLabel.set(\"visible\", true);\r\n            }\r\n            else {\r\n                this.ghostLabel.set(\"visible\", false);\r\n            }\r\n            if (this.isDirty(\"start\") || this.isDirty(\"end\")) {\r\n                this.chart._updateCursor();\r\n                var start = this.get(\"start\", 0);\r\n                var end = this.get(\"end\", 1);\r\n                var maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\r\n                if (start < -maxDeviation) {\r\n                    var delta = start + maxDeviation;\r\n                    start = -maxDeviation;\r\n                    this.setRaw(\"start\", start);\r\n                    if (this.isDirty(\"end\")) {\r\n                        this.setRaw(\"end\", end - delta);\r\n                    }\r\n                }\r\n                if (end > 1 + maxDeviation) {\r\n                    var delta = end - 1 - maxDeviation;\r\n                    end = 1 + maxDeviation;\r\n                    this.setRaw(\"end\", end);\r\n                    if (this.isDirty(\"start\")) {\r\n                        this.setRaw(\"start\", start - delta);\r\n                    }\r\n                }\r\n            }\r\n            var renderer = this.get(\"renderer\");\r\n            renderer._start = this.get(\"start\");\r\n            renderer._end = this.get(\"end\");\r\n            renderer._inversed = renderer.get(\"inversed\", false);\r\n            renderer._axisLength = renderer.axisLength() / (renderer._end - renderer._start);\r\n            renderer._updateLC();\r\n            if (this.isDirty(\"tooltip\")) {\r\n                var tooltip = this.get(\"tooltip\");\r\n                if (tooltip) {\r\n                    var rendererTags = renderer.get(\"themeTags\");\r\n                    tooltip.addTag(\"axis\");\r\n                    tooltip.addTag(this.className.toLowerCase());\r\n                    tooltip._applyThemes();\r\n                    if (rendererTags) {\r\n                        tooltip.set(\"themeTags\", $utils.mergeTags(tooltip.get(\"themeTags\"), rendererTags));\r\n                        tooltip.label._applyThemes();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Axis.prototype, \"_updateTooltipBounds\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var tooltip = this.get(\"tooltip\");\r\n            if (tooltip) {\r\n                this.get(\"renderer\").updateTooltipBounds(tooltip);\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Axis.prototype, \"_updateBounds\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._updateBounds.call(this);\r\n            this._updateTooltipBounds();\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(Axis.prototype, \"processChart\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (chart) {\r\n            var _this = this;\r\n            this.chart = chart;\r\n            var renderer = this.get(\"renderer\");\r\n            renderer.chart = chart;\r\n            chart.gridContainer.children.push(this.gridContainer);\r\n            chart.topGridContainer.children.push(this.topGridContainer);\r\n            chart.axisHeadersContainer.children.push(this.axisHeader);\r\n            this.on(\"start\", function () {\r\n                chart._handleAxisSelection(_this);\r\n            });\r\n            this.on(\"end\", function () {\r\n                chart._handleAxisSelection(_this);\r\n            });\r\n            chart.plotContainer.onPrivate(\"width\", function () {\r\n                _this.markDirtySize();\r\n            });\r\n            chart.plotContainer.onPrivate(\"height\", function () {\r\n                _this.markDirtySize();\r\n            });\r\n            chart.processAxis(this);\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(Axis.prototype, \"hideDataItem\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem) {\r\n            this._toggleDataItem(dataItem, false);\r\n            return _super.prototype.hideDataItem.call(this, dataItem);\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(Axis.prototype, \"showDataItem\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem) {\r\n            this._toggleDataItem(dataItem, true);\r\n            return _super.prototype.showDataItem.call(this, dataItem);\r\n        }\r\n    });\r\n    Object.defineProperty(Axis.prototype, \"_toggleDataItem\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem, visible) {\r\n            var label = dataItem.get(\"label\");\r\n            if (label) {\r\n                label.setPrivate(\"visible\", visible);\r\n            }\r\n            var grid = dataItem.get(\"grid\");\r\n            if (grid) {\r\n                grid.setPrivate(\"visible\", visible);\r\n            }\r\n            var tick = dataItem.get(\"tick\");\r\n            if (tick) {\r\n                tick.setPrivate(\"visible\", visible);\r\n            }\r\n            var axisFill = dataItem.get(\"axisFill\");\r\n            if (axisFill) {\r\n                axisFill.setPrivate(\"visible\", visible);\r\n            }\r\n            var bullet = dataItem.get(\"bullet\");\r\n            if (bullet) {\r\n                var sprite = bullet.get(\"sprite\");\r\n                if (sprite) {\r\n                    sprite.setPrivate(\"visible\", visible);\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Axis.prototype, \"_createAssets\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem, tags) {\r\n            var renderer = this.get(\"renderer\");\r\n            if (!dataItem.get(\"label\")) {\r\n                renderer.makeLabel(dataItem, tags);\r\n            }\r\n            if (!dataItem.get(\"grid\")) {\r\n                renderer.makeGrid(dataItem, tags);\r\n            }\r\n            if (!dataItem.get(\"tick\")) {\r\n                renderer.makeTick(dataItem, tags);\r\n            }\r\n            if (!dataItem.get(\"axisFill\")) {\r\n                renderer.makeAxisFill(dataItem, tags);\r\n            }\r\n            this._processBullet(dataItem);\r\n        }\r\n    });\r\n    Object.defineProperty(Axis.prototype, \"_processBullet\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem) {\r\n            var bullet = dataItem.get(\"bullet\");\r\n            var axisBullet = this.get(\"bullet\");\r\n            if (!bullet && axisBullet && !dataItem.get(\"isRange\")) {\r\n                bullet = axisBullet(this._root, this, dataItem);\r\n            }\r\n            if (bullet) {\r\n                bullet.axis = this;\r\n                var sprite = bullet.get(\"sprite\");\r\n                if (sprite) {\r\n                    sprite._setDataItem(dataItem);\r\n                    dataItem.setRaw(\"bullet\", bullet);\r\n                    if (!sprite.parent) {\r\n                        this.bulletsContainer.children.push(sprite);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Axis.prototype, \"_afterChanged\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._afterChanged.call(this);\r\n            var chart = this.chart;\r\n            if (chart) {\r\n                chart._updateChartLayout();\r\n                chart.axisHeadersContainer.markDirtySize();\r\n            }\r\n            this.get(\"renderer\")._updatePositions();\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(Axis.prototype, \"disposeDataItem\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem) {\r\n            _super.prototype.disposeDataItem.call(this, dataItem);\r\n            var renderer = this.get(\"renderer\");\r\n            var label = dataItem.get(\"label\");\r\n            if (label) {\r\n                renderer.labels.removeValue(label);\r\n                label.dispose();\r\n            }\r\n            var tick = dataItem.get(\"tick\");\r\n            if (tick) {\r\n                renderer.ticks.removeValue(tick);\r\n                tick.dispose();\r\n            }\r\n            var grid = dataItem.get(\"grid\");\r\n            if (grid) {\r\n                renderer.grid.removeValue(grid);\r\n                grid.dispose();\r\n            }\r\n            var axisFill = dataItem.get(\"axisFill\");\r\n            if (axisFill) {\r\n                renderer.axisFills.removeValue(axisFill);\r\n                axisFill.dispose();\r\n            }\r\n            var bullet = dataItem.get(\"bullet\");\r\n            if (bullet) {\r\n                bullet.dispose();\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Axis.prototype, \"_updateGhost\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var ghostLabel = this.ghostLabel;\r\n            if (!ghostLabel.isHidden()) {\r\n                var bounds = ghostLabel.localBounds();\r\n                var gWidth_1 = bounds.right - bounds.left;\r\n                var text_1 = ghostLabel.get(\"text\");\r\n                $array.each(this.dataItems, function (dataItem) {\r\n                    var label = dataItem.get(\"label\");\r\n                    if (label && !label.isHidden()) {\r\n                        var bounds_1 = label.localBounds();\r\n                        var w = bounds_1.right - bounds_1.left;\r\n                        if (w > gWidth_1) {\r\n                            text_1 = label.text._getText();\r\n                        }\r\n                    }\r\n                });\r\n                ghostLabel.set(\"text\", text_1);\r\n            }\r\n            var start = this.get(\"start\", 0);\r\n            var end = this.get(\"end\", 1);\r\n            this.get(\"renderer\").updateLabel(ghostLabel, start + (end - start) * 0.5);\r\n        }\r\n    });\r\n    Object.defineProperty(Axis.prototype, \"_handleCursorPosition\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (position, snapToSeries) {\r\n            var renderer = this.get(\"renderer\");\r\n            position = renderer.toAxisPosition(position);\r\n            this._cursorPosition = position;\r\n            this._snapToSeries = snapToSeries;\r\n            this.updateTooltip();\r\n        }\r\n    });\r\n    /**\r\n     * Can be called when axis zoom changes and you need to update tooltip\r\n     * position.\r\n     */\r\n    Object.defineProperty(Axis.prototype, \"updateTooltip\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            var snapToSeries = this._snapToSeries;\r\n            var position = this._cursorPosition;\r\n            var tooltip = this.get(\"tooltip\");\r\n            var renderer = this.get(\"renderer\");\r\n            if ($type.isNumber(position)) {\r\n                $array.each(this.series, function (series) {\r\n                    if (series.get(\"baseAxis\") === _this) {\r\n                        var dataItem = _this.getSeriesItem(series, position, _this.get(\"tooltipLocation\"));\r\n                        series.setRaw(\"tooltipDataItem\", dataItem);\r\n                        if (snapToSeries && snapToSeries.indexOf(series) != -1) {\r\n                            series.updateLegendMarker(dataItem);\r\n                            series.updateLegendValue(dataItem);\r\n                        }\r\n                        else {\r\n                            series.showDataItemTooltip(dataItem);\r\n                        }\r\n                    }\r\n                });\r\n                if (tooltip) {\r\n                    renderer.updateTooltipBounds(tooltip);\r\n                    if (this.get(\"snapTooltip\")) {\r\n                        position = this.roundAxisPosition(position, this.get(\"tooltipLocation\", 0.5));\r\n                    }\r\n                    if (!$type.isNaN(position)) {\r\n                        this.setPrivateRaw(\"tooltipPosition\", position);\r\n                        this._updateTooltipText(tooltip, position);\r\n                        renderer.positionTooltip(tooltip, position);\r\n                        if (position < this.get(\"start\") || position > this.get(\"end\")) {\r\n                            tooltip.hide(0);\r\n                        }\r\n                        else {\r\n                            tooltip.show(0);\r\n                        }\r\n                    }\r\n                    else {\r\n                        tooltip.hide(0);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Axis.prototype, \"_updateTooltipText\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (tooltip, position) {\r\n            tooltip.label.set(\"text\", this.getTooltipText(position));\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(Axis.prototype, \"roundAxisPosition\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (position, _location) {\r\n            return position;\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(Axis.prototype, \"handleCursorShow\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var tooltip = this.get(\"tooltip\");\r\n            if (tooltip) {\r\n                tooltip.show();\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(Axis.prototype, \"handleCursorHide\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var tooltip = this.get(\"tooltip\");\r\n            if (tooltip) {\r\n                tooltip.hide();\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(Axis.prototype, \"processSeriesDataItem\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (_dataItem, _fields) {\r\n        }\r\n    });\r\n    Object.defineProperty(Axis.prototype, \"_clearDirty\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._clearDirty.call(this);\r\n            this._sizeDirty = false;\r\n            this._rangesDirty = false;\r\n        }\r\n    });\r\n    /**\r\n     * Converts pixel coordinate to a relative position on axis.\r\n     *\r\n     * @param   coordinate  Coordinate\r\n     * @return              Relative position\r\n     */\r\n    Object.defineProperty(Axis.prototype, \"coordinateToPosition\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (coordinate) {\r\n            var renderer = this.get(\"renderer\");\r\n            return renderer.toAxisPosition(coordinate / renderer.axisLength());\r\n        }\r\n    });\r\n    /**\r\n     * Converts relative position of the plot area to relative position of the\r\n     * axis with zoom taken into account.\r\n     *\r\n     * @param position Position\r\n     * @return Relative position\r\n     */\r\n    Object.defineProperty(Axis.prototype, \"toAxisPosition\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (position) {\r\n            return this.get(\"renderer\").toAxisPosition(position);\r\n        }\r\n    });\r\n    /**\r\n     * Adjusts position with inversed taken into account.\r\n     *\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(Axis.prototype, \"fixPosition\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (position) {\r\n            return this.get(\"renderer\").fixPosition(position);\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(Axis.prototype, \"shouldGap\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (_dataItem, _nextItem, _autoGapCount, _fieldName) {\r\n            return false;\r\n        }\r\n    });\r\n    /**\r\n     * Creates and returns an axis range object.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\r\n     * @param   axisDataItem  Axis data item\r\n     * @return                Axis range\r\n     */\r\n    Object.defineProperty(Axis.prototype, \"createAxisRange\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (axisDataItem) {\r\n            return this.axisRanges.push(axisDataItem);\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(Axis.prototype, \"_groupSeriesData\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (_series) { }\r\n    });\r\n    /**\r\n     * Returns position span between start and end of a single cell in axis.\r\n     *\r\n     * @since 5.2.30\r\n     * @return Position\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(Axis.prototype, \"getCellWidthPosition\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            return 0.05;\r\n        }\r\n    });\r\n    Object.defineProperty(Axis, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"Axis\"\r\n    });\r\n    Object.defineProperty(Axis, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: Component.classNames.concat([Axis.className])\r\n    });\r\n    return Axis;\r\n}(Component));\r\nexport { Axis };\r\n//# sourceMappingURL=Axis.js.map","import { __extends } from \"tslib\";\r\nimport { Entity } from \"../../../core/util/Entity\";\r\n/**\r\n * Draws a bullet on an axis.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_bullets} for more info\r\n */\r\nvar AxisBullet = /** @class */ (function (_super) {\r\n    __extends(AxisBullet, _super);\r\n    function AxisBullet() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Target axis object.\r\n         */\r\n        Object.defineProperty(_this, \"axis\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(AxisBullet.prototype, \"_beforeChanged\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._beforeChanged.call(this);\r\n            var sprite = this.get(\"sprite\");\r\n            if (this.isDirty(\"sprite\")) {\r\n                if (sprite) {\r\n                    sprite.setAll({ position: \"absolute\", role: \"figure\" });\r\n                    this._disposers.push(sprite);\r\n                }\r\n            }\r\n            if (this.isDirty(\"location\")) {\r\n                var dataItem = sprite.dataItem;\r\n                if (this.axis && sprite && dataItem) {\r\n                    this.axis._prepareDataItem(dataItem);\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(AxisBullet, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"AxisBullet\"\r\n    });\r\n    Object.defineProperty(AxisBullet, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: Entity.classNames.concat([AxisBullet.className])\r\n    });\r\n    return AxisBullet;\r\n}(Entity));\r\nexport { AxisBullet };\r\n//# sourceMappingURL=AxisBullet.js.map","import { __extends } from \"tslib\";\r\nimport { Label } from \"../../../core/render/Label\";\r\n/**\r\n * Draws an axis label.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels} for more info\r\n * @important\r\n */\r\nvar AxisLabel = /** @class */ (function (_super) {\r\n    __extends(AxisLabel, _super);\r\n    function AxisLabel() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        Object.defineProperty(_this, \"_tickPoints\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(AxisLabel, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"AxisLabel\"\r\n    });\r\n    Object.defineProperty(AxisLabel, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: Label.classNames.concat([AxisLabel.className])\r\n    });\r\n    return AxisLabel;\r\n}(Label));\r\nexport { AxisLabel };\r\n//# sourceMappingURL=AxisLabel.js.map","import { __extends } from \"tslib\";\r\nimport { RadialLabel } from \"../../../core/render/RadialLabel\";\r\n/**\r\n * Draws a label on a circular axis.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels} for more info\r\n */\r\nvar AxisLabelRadial = /** @class */ (function (_super) {\r\n    __extends(AxisLabelRadial, _super);\r\n    function AxisLabelRadial() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        Object.defineProperty(_this, \"_tickPoints\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(AxisLabelRadial, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"AxisLabelRadial\"\r\n    });\r\n    Object.defineProperty(AxisLabelRadial, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: RadialLabel.classNames.concat([AxisLabelRadial.className])\r\n    });\r\n    return AxisLabelRadial;\r\n}(RadialLabel));\r\nexport { AxisLabelRadial };\r\n//# sourceMappingURL=AxisLabelRadial.js.map","import { __extends } from \"tslib\";\r\nimport { Graphics } from \"../../../core/render/Graphics\";\r\nimport { Template } from \"../../../core/util/Template\";\r\nimport { ListTemplate } from \"../../../core/util/List\";\r\nimport { AxisTick } from \"./AxisTick\";\r\nimport { Grid } from \"./Grid\";\r\nimport { AxisLabel } from \"./AxisLabel\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n/**\r\n * Base class for an axis renderer.\r\n *\r\n * Should not be used on its own.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\r\n */\r\nvar AxisRenderer = /** @class */ (function (_super) {\r\n    __extends(AxisRenderer, _super);\r\n    function AxisRenderer() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        // save for quick access\r\n        Object.defineProperty(_this, \"_axisLength\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 100\r\n        });\r\n        Object.defineProperty(_this, \"_start\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(_this, \"_end\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(_this, \"_inversed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(_this, \"_minSize\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        /**\r\n         * Chart the renderer is used in.\r\n         */\r\n        Object.defineProperty(_this, \"chart\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_lc\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(_this, \"_ls\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(_this, \"_thumbDownPoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_downStart\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_downEnd\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A list of ticks in the axis.\r\n         *\r\n         * `ticks.template` can be used to configure ticks.\r\n         *\r\n         * @default new ListTemplate<AxisTick>\r\n         */\r\n        Object.defineProperty(_this, \"ticks\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), function () { return AxisTick._new(_this._root, {\r\n                themeTags: $utils.mergeTags(_this.ticks.template.get(\"themeTags\", []), _this.get(\"themeTags\", []))\r\n            }, [_this.ticks.template]); })\r\n        });\r\n        /**\r\n         * A list of grid elements in the axis.\r\n         *\r\n         * `grid.template` can be used to configure grid.\r\n         *\r\n         * @default new ListTemplate<Grid>\r\n         */\r\n        Object.defineProperty(_this, \"grid\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), function () { return Grid._new(_this._root, {\r\n                themeTags: $utils.mergeTags(_this.grid.template.get(\"themeTags\", []), _this.get(\"themeTags\", []))\r\n            }, [_this.grid.template]); })\r\n        });\r\n        /**\r\n         * A list of fills in the axis.\r\n         *\r\n         * `axisFills.template` can be used to configure axis fills.\r\n         *\r\n         * @default new ListTemplate<Graphics>\r\n         */\r\n        Object.defineProperty(_this, \"axisFills\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), function () { return Graphics._new(_this._root, {\r\n                themeTags: $utils.mergeTags(_this.axisFills.template.get(\"themeTags\", [\"axis\", \"fill\"]), _this.get(\"themeTags\", []))\r\n            }, [_this.axisFills.template]); })\r\n        });\r\n        /**\r\n         * A list of labels in the axis.\r\n         *\r\n         * `labels.template` can be used to configure axis labels.\r\n         *\r\n         * @default new ListTemplate<AxisLabel>\r\n         */\r\n        Object.defineProperty(_this, \"labels\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), function () { return AxisLabel._new(_this._root, {\r\n                themeTags: $utils.mergeTags(_this.labels.template.get(\"themeTags\", []), _this.get(\"themeTags\", []))\r\n            }, [_this.labels.template]); })\r\n        });\r\n        /**\r\n         * An [[Axis]] renderer is for.\r\n         */\r\n        Object.defineProperty(_this, \"axis\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"thumb\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        return _this;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(AxisRenderer.prototype, \"makeTick\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem, themeTags) {\r\n            var tick = this.ticks.make();\r\n            tick._setDataItem(dataItem);\r\n            dataItem.setRaw(\"tick\", tick);\r\n            tick.set(\"themeTags\", $utils.mergeTags(tick.get(\"themeTags\"), themeTags));\r\n            this.axis.labelsContainer.children.push(tick);\r\n            this.ticks.push(tick);\r\n            return tick;\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(AxisRenderer.prototype, \"makeGrid\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem, themeTags) {\r\n            var grid = this.grid.make();\r\n            grid._setDataItem(dataItem);\r\n            dataItem.setRaw(\"grid\", grid);\r\n            grid.set(\"themeTags\", $utils.mergeTags(grid.get(\"themeTags\"), themeTags));\r\n            this.axis.gridContainer.children.push(grid);\r\n            this.grid.push(grid);\r\n            return grid;\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(AxisRenderer.prototype, \"makeAxisFill\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem, themeTags) {\r\n            var axisFill = this.axisFills.make();\r\n            axisFill._setDataItem(dataItem);\r\n            axisFill.set(\"themeTags\", $utils.mergeTags(axisFill.get(\"themeTags\"), themeTags));\r\n            this.axis.gridContainer.children.push(axisFill);\r\n            dataItem.setRaw(\"axisFill\", axisFill);\r\n            this.axisFills.push(axisFill);\r\n            return axisFill;\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(AxisRenderer.prototype, \"makeLabel\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem, themeTags) {\r\n            var label = this.labels.make();\r\n            label.set(\"themeTags\", $utils.mergeTags(label.get(\"themeTags\"), themeTags));\r\n            this.axis.labelsContainer.children.moveValue(label, 0);\r\n            label._setDataItem(dataItem);\r\n            dataItem.setRaw(\"label\", label);\r\n            this.labels.push(label);\r\n            return label;\r\n        }\r\n    });\r\n    Object.defineProperty(AxisRenderer.prototype, \"axisLength\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            return 0;\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(AxisRenderer.prototype, \"gridCount\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            return this.axisLength() / this.get(\"minGridDistance\", 50);\r\n        }\r\n    });\r\n    Object.defineProperty(AxisRenderer.prototype, \"_updatePositions\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n        }\r\n    });\r\n    Object.defineProperty(AxisRenderer.prototype, \"_afterNew\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            _super.prototype._afterNew.call(this);\r\n            this.set(\"isMeasured\", false);\r\n            var thumb = this.thumb;\r\n            if (thumb) {\r\n                this._disposers.push(thumb.events.on(\"pointerdown\", function (event) {\r\n                    _this._handleThumbDown(event.originalEvent);\r\n                }));\r\n                this._disposers.push(thumb.events.on(\"globalpointerup\", function (event) {\r\n                    _this._handleThumbUp(event.originalEvent);\r\n                }));\r\n                this._disposers.push(thumb.events.on(\"globalpointermove\", function (event) {\r\n                    _this._handleThumbMove(event.originalEvent);\r\n                }));\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(AxisRenderer.prototype, \"_changed\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._changed.call(this);\r\n            if (this.isDirty(\"pan\")) {\r\n                var thumb = this.thumb;\r\n                if (thumb) {\r\n                    var labelsContainer = this.axis.labelsContainer;\r\n                    var pan = this.get(\"pan\");\r\n                    if (pan == \"zoom\") {\r\n                        labelsContainer.children.push(thumb);\r\n                    }\r\n                    else if (pan == \"none\") {\r\n                        labelsContainer.children.removeValue(thumb);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(AxisRenderer.prototype, \"_handleThumbDown\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (event) {\r\n            this._thumbDownPoint = this.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\r\n            var axis = this.axis;\r\n            this._downStart = axis.get(\"start\");\r\n            this._downEnd = axis.get(\"end\");\r\n        }\r\n    });\r\n    Object.defineProperty(AxisRenderer.prototype, \"_handleThumbUp\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (_event) {\r\n            this._thumbDownPoint = undefined;\r\n        }\r\n    });\r\n    Object.defineProperty(AxisRenderer.prototype, \"_handleThumbMove\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (event) {\r\n            var downPoint = this._thumbDownPoint;\r\n            if (downPoint) {\r\n                var point = this.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\r\n                var downStart = this._downStart;\r\n                var downEnd = this._downEnd;\r\n                var extra = this._getPan(point, downPoint) * Math.min(1, (downEnd - downStart)) / 2;\r\n                this.axis.setAll({ start: downStart - extra, end: downEnd + extra });\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(AxisRenderer.prototype, \"_getPan\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (_point1, _point2) {\r\n            return 0;\r\n        }\r\n    });\r\n    /**\r\n     * Converts relative position (0-1) on axis to a pixel coordinate.\r\n     *\r\n     * @param position  Position (0-1)\r\n     * @return Coordinate (px)\r\n     */\r\n    Object.defineProperty(AxisRenderer.prototype, \"positionToCoordinate\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (position) {\r\n            if (this._inversed) {\r\n                return (this._end - position) * this._axisLength;\r\n            }\r\n            else {\r\n                return (position - this._start) * this._axisLength;\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(AxisRenderer.prototype, \"updateTooltipBounds\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (_tooltip) { }\r\n    });\r\n    Object.defineProperty(AxisRenderer.prototype, \"_updateSize\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this.markDirty();\r\n            this._clear = true;\r\n        }\r\n    });\r\n    Object.defineProperty(AxisRenderer.prototype, \"toAxisPosition\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (position) {\r\n            var start = this._start || 0;\r\n            var end = this._end || 1;\r\n            position = position * (end - start);\r\n            if (!this.get(\"inversed\")) {\r\n                position = start + position;\r\n            }\r\n            else {\r\n                position = end - position;\r\n            }\r\n            return position;\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(AxisRenderer.prototype, \"fixPosition\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (position) {\r\n            if (this.get(\"inversed\")) {\r\n                return 1 - position;\r\n            }\r\n            return position;\r\n        }\r\n    });\r\n    Object.defineProperty(AxisRenderer.prototype, \"_updateLC\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n        }\r\n    });\r\n    Object.defineProperty(AxisRenderer.prototype, \"toggleVisibility\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (sprite, position, minPosition, maxPosition) {\r\n            var axis = this.axis;\r\n            var start = axis.get(\"start\", 0);\r\n            var end = axis.get(\"end\", 1);\r\n            var updatedStart = start + (end - start) * (minPosition - 0.0001);\r\n            var updatedEnd = start + (end - start) * (maxPosition + 0.0001);\r\n            if (position < updatedStart || position > updatedEnd) {\r\n                sprite.setPrivate(\"visible\", false);\r\n            }\r\n            else {\r\n                sprite.setPrivate(\"visible\", true);\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(AxisRenderer.prototype, \"_positionTooltip\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (tooltip, point) {\r\n            var chart = this.chart;\r\n            if (chart) {\r\n                if (chart.inPlot(point)) {\r\n                    tooltip.set(\"pointTo\", this._display.toGlobal(point));\r\n                }\r\n                else {\r\n                    tooltip.hide();\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(AxisRenderer.prototype, \"processAxis\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () { }\r\n    });\r\n    Object.defineProperty(AxisRenderer, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"AxisRenderer\"\r\n    });\r\n    Object.defineProperty(AxisRenderer, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: Graphics.classNames.concat([AxisRenderer.className])\r\n    });\r\n    return AxisRenderer;\r\n}(Graphics));\r\nexport { AxisRenderer };\r\n//# sourceMappingURL=AxisRenderer.js.map","import { __extends, __read } from \"tslib\";\r\nimport { AxisRenderer } from \"./AxisRenderer\";\r\nimport { p100 } from \"../../../core/util/Percent\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\nimport { Rectangle } from \"../../../core/render/Rectangle\";\r\n/**\r\n * Used to render horizontal axis.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\r\n * @important\r\n */\r\nvar AxisRendererX = /** @class */ (function (_super) {\r\n    __extends(AxisRendererX, _super);\r\n    function AxisRendererX() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        Object.defineProperty(_this, \"thumb\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Rectangle.new(_this._root, { width: p100, isMeasured: false, themeTags: [\"axis\", \"x\", \"thumb\"] })\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(AxisRendererX.prototype, \"_afterNew\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"x\"]);\r\n            _super.prototype._afterNew.call(this);\r\n            this.setPrivateRaw(\"letter\", \"X\");\r\n            var gridTemplate = this.grid.template;\r\n            gridTemplate.set(\"height\", p100);\r\n            gridTemplate.set(\"width\", 0);\r\n            gridTemplate.set(\"draw\", function (display, graphics) {\r\n                display.moveTo(0, 0);\r\n                display.lineTo(0, graphics.height());\r\n            });\r\n            this.set(\"draw\", function (display, graphics) {\r\n                display.moveTo(0, 0);\r\n                display.lineTo(graphics.width(), 0);\r\n            });\r\n        }\r\n    });\r\n    Object.defineProperty(AxisRendererX.prototype, \"_changed\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._changed.call(this);\r\n            var axis = this.axis;\r\n            axis.ghostLabel.setPrivate(\"visible\", !this.get(\"inside\"));\r\n            var opposite = \"opposite\";\r\n            var inside = \"inside\";\r\n            if (this.isDirty(opposite) || this.isDirty(inside)) {\r\n                var chart = this.chart;\r\n                var axisChildren = axis.children;\r\n                if (this.get(inside)) {\r\n                    axis.addTag(inside);\r\n                }\r\n                else {\r\n                    axis.removeTag(inside);\r\n                }\r\n                if (chart) {\r\n                    if (this.get(opposite)) {\r\n                        var children = chart.topAxesContainer.children;\r\n                        if (children.indexOf(axis) == -1) {\r\n                            children.insertIndex(0, axis);\r\n                        }\r\n                        axis.addTag(opposite);\r\n                        axisChildren.moveValue(this);\r\n                    }\r\n                    else {\r\n                        var children = chart.bottomAxesContainer.children;\r\n                        if (children.indexOf(axis) == -1) {\r\n                            children.moveValue(axis);\r\n                        }\r\n                        axis.removeTag(opposite);\r\n                        axisChildren.moveValue(this, 0);\r\n                    }\r\n                    axis.ghostLabel._applyThemes();\r\n                    this.labels.each(function (label) {\r\n                        label._applyThemes();\r\n                    });\r\n                    this.root._markDirtyRedraw();\r\n                }\r\n                axis.markDirtySize();\r\n            }\r\n            this.thumb.setPrivate(\"height\", axis.labelsContainer.height());\r\n        }\r\n    });\r\n    Object.defineProperty(AxisRendererX.prototype, \"_getPan\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (point1, point2) {\r\n            return (point2.x - point1.x) / this.width();\r\n        }\r\n    });\r\n    Object.defineProperty(AxisRendererX.prototype, \"toAxisPosition\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (position) {\r\n            var start = this._start || 0;\r\n            var end = this._end || 1;\r\n            position -= this._ls;\r\n            position = position * (end - start) / this._lc;\r\n            if (!this.get(\"inversed\")) {\r\n                position = start + position;\r\n            }\r\n            else {\r\n                position = end - position;\r\n            }\r\n            return position;\r\n        }\r\n    });\r\n    Object.defineProperty(AxisRendererX.prototype, \"_updateLC\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var axis = this.axis;\r\n            var parent = axis.parent;\r\n            if (parent) {\r\n                var w = parent.innerWidth();\r\n                this._lc = this.axisLength() / w;\r\n                this._ls = (axis.x() - parent.get(\"paddingLeft\", 0)) / w;\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(AxisRendererX.prototype, \"_updatePositions\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var axis = this.axis;\r\n            axis.gridContainer.set(\"x\", axis.x() - $utils.relativeToValue(axis.get(\"centerX\", 0), axis.width()) - axis.parent.get(\"paddingLeft\", 0));\r\n            axis.bulletsContainer.set(\"y\", this.y());\r\n            var chart = axis.chart;\r\n            if (chart) {\r\n                var plotContainer = chart.plotContainer;\r\n                var axisHeader = axis.axisHeader;\r\n                var width = axis.get(\"marginLeft\", 0);\r\n                var x = axis.x() - width;\r\n                var parent_1 = axis.parent;\r\n                if (parent_1) {\r\n                    x -= parent_1.get(\"paddingLeft\", 0);\r\n                }\r\n                if (axisHeader.children.length > 0) {\r\n                    width = axis.axisHeader.width();\r\n                    axis.set(\"marginLeft\", width);\r\n                }\r\n                else {\r\n                    axisHeader.set(\"width\", width);\r\n                }\r\n                axisHeader.setAll({ x: x, y: -1, height: plotContainer.height() + 2 });\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(AxisRendererX.prototype, \"processAxis\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype.processAxis.call(this);\r\n            var axis = this.axis;\r\n            axis.set(\"width\", p100);\r\n            var verticalLayout = this._root.verticalLayout;\r\n            axis.set(\"layout\", verticalLayout);\r\n            axis.labelsContainer.set(\"width\", p100);\r\n            axis.axisHeader.setAll({ layout: verticalLayout });\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(AxisRendererX.prototype, \"axisLength\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            return this.axis.width();\r\n        }\r\n    });\r\n    /**\r\n     * Converts axis relative position to actual coordinate in pixels.\r\n     *\r\n     * @param   position  Position\r\n     * @return            Point\r\n     */\r\n    Object.defineProperty(AxisRendererX.prototype, \"positionToPoint\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (position) {\r\n            return { x: this.positionToCoordinate(position), y: 0 };\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(AxisRendererX.prototype, \"updateTick\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (tick, position, endPosition, count) {\r\n            if (tick) {\r\n                if (!$type.isNumber(position)) {\r\n                    position = 0;\r\n                }\r\n                var location_1 = 0.5;\r\n                if ($type.isNumber(count) && count > 1) {\r\n                    location_1 = tick.get(\"multiLocation\", location_1);\r\n                }\r\n                else {\r\n                    location_1 = tick.get(\"location\", location_1);\r\n                }\r\n                if ($type.isNumber(endPosition) && endPosition != position) {\r\n                    position = position + (endPosition - position) * location_1;\r\n                }\r\n                tick.set(\"x\", this.positionToCoordinate(position));\r\n                var length_1 = tick.get(\"length\", 0);\r\n                var inside = tick.get(\"inside\", this.get(\"inside\", false));\r\n                if (this.get(\"opposite\")) {\r\n                    tick.set(\"y\", p100);\r\n                    if (!inside) {\r\n                        length_1 *= -1;\r\n                    }\r\n                }\r\n                else {\r\n                    tick.set(\"y\", 0);\r\n                    if (inside) {\r\n                        length_1 *= -1;\r\n                    }\r\n                }\r\n                tick.set(\"draw\", function (display) {\r\n                    display.moveTo(0, 0);\r\n                    display.lineTo(0, length_1);\r\n                });\r\n                this.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(AxisRendererX.prototype, \"updateLabel\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (label, position, endPosition, count) {\r\n            if (label) {\r\n                var location_2 = 0.5;\r\n                if ($type.isNumber(count) && count > 1) {\r\n                    location_2 = label.get(\"multiLocation\", location_2);\r\n                }\r\n                else {\r\n                    location_2 = label.get(\"location\", location_2);\r\n                }\r\n                if (!$type.isNumber(position)) {\r\n                    position = 0;\r\n                }\r\n                var inside = label.get(\"inside\", this.get(\"inside\", false));\r\n                var opposite = this.get(\"opposite\");\r\n                if (opposite) {\r\n                    if (!inside) {\r\n                        label.set(\"position\", \"relative\");\r\n                        label.set(\"y\", p100);\r\n                    }\r\n                    else {\r\n                        label.set(\"position\", \"absolute\");\r\n                        label.set(\"y\", 0);\r\n                    }\r\n                }\r\n                else {\r\n                    if (!inside) {\r\n                        label.set(\"y\", undefined);\r\n                        label.set(\"position\", \"relative\");\r\n                    }\r\n                    else {\r\n                        label.set(\"y\", 0);\r\n                        label.set(\"position\", \"absolute\");\r\n                    }\r\n                }\r\n                if ($type.isNumber(endPosition) && endPosition != position) {\r\n                    position = position + (endPosition - position) * location_2;\r\n                }\r\n                label.set(\"x\", this.positionToCoordinate(position));\r\n                this.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(AxisRendererX.prototype, \"updateGrid\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (grid, position, endPosition) {\r\n            if (grid) {\r\n                if (!$type.isNumber(position)) {\r\n                    position = 0;\r\n                }\r\n                var location_3 = grid.get(\"location\", 0.5);\r\n                if ($type.isNumber(endPosition) && endPosition != position) {\r\n                    position = position + (endPosition - position) * location_3;\r\n                }\r\n                grid.set(\"x\", Math.round(this.positionToCoordinate(position)));\r\n                this.toggleVisibility(grid, position, 0, 1);\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(AxisRendererX.prototype, \"updateBullet\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (bullet, position, endPosition) {\r\n            if (bullet) {\r\n                var sprite = bullet.get(\"sprite\");\r\n                if (sprite) {\r\n                    if (!$type.isNumber(position)) {\r\n                        position = 0;\r\n                    }\r\n                    var location_4 = bullet.get(\"location\", 0.5);\r\n                    if ($type.isNumber(endPosition) && endPosition != position) {\r\n                        position = position + (endPosition - position) * location_4;\r\n                    }\r\n                    var bulletPosition = this.axis.roundAxisPosition(position, location_4);\r\n                    var previousBullet = this.axis._bullets[bulletPosition];\r\n                    var d = -1;\r\n                    if (this.get(\"opposite\")) {\r\n                        d = 1;\r\n                    }\r\n                    if (bullet.get(\"stacked\")) {\r\n                        if (previousBullet) {\r\n                            var previousSprite = previousBullet.get(\"sprite\");\r\n                            if (previousSprite) {\r\n                                sprite.set(\"y\", previousSprite.y() + previousSprite.height() * d);\r\n                            }\r\n                        }\r\n                        else {\r\n                            sprite.set(\"y\", 0);\r\n                        }\r\n                    }\r\n                    this.axis._bullets[bulletPosition] = bullet;\r\n                    sprite.set(\"x\", this.positionToCoordinate(position));\r\n                    this.toggleVisibility(sprite, position, 0, 1);\r\n                }\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(AxisRendererX.prototype, \"updateFill\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (fill, position, endPosition) {\r\n            if (fill) {\r\n                if (!$type.isNumber(position)) {\r\n                    position = 0;\r\n                }\r\n                if (!$type.isNumber(endPosition)) {\r\n                    endPosition = 1;\r\n                }\r\n                var x0 = this.positionToCoordinate(position);\r\n                var x1 = this.positionToCoordinate(endPosition);\r\n                this.fillDrawMethod(fill, x0, x1);\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(AxisRendererX.prototype, \"fillDrawMethod\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (fill, x0, x1) {\r\n            var _this = this;\r\n            fill.set(\"draw\", function (display) {\r\n                var _a;\r\n                //display.drawRect(x0, 0, x1 - x0, this.axis!.gridContainer.height());\r\n                // using for holes, so can not be rectangle\r\n                var h = _this.axis.gridContainer.height();\r\n                var w = _this.width();\r\n                if (x1 < x0) {\r\n                    _a = __read([x0, x1], 2), x1 = _a[0], x0 = _a[1];\r\n                }\r\n                if (x0 > w || x1 < 0) {\r\n                    return;\r\n                }\r\n                /*\r\n                const limit = 10000;\r\n    \r\n                x0 = Math.max(-limit, x0);\r\n                x1 = Math.min(limit, x1);\r\n                */\r\n                display.moveTo(x0, 0);\r\n                display.lineTo(x1, 0);\r\n                display.lineTo(x1, h);\r\n                display.lineTo(x0, h);\r\n                display.lineTo(x0, 0);\r\n            });\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(AxisRendererX.prototype, \"positionTooltip\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (tooltip, position) {\r\n            this._positionTooltip(tooltip, { x: this.positionToCoordinate(position), y: 0 });\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(AxisRendererX.prototype, \"updateTooltipBounds\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (tooltip) {\r\n            var inside = this.get(\"inside\");\r\n            var num = 100000;\r\n            var global = this._display.toGlobal({ x: 0, y: 0 });\r\n            var x = global.x;\r\n            var y = 0;\r\n            var w = this.axisLength();\r\n            var h = num;\r\n            var pointerOrientation = \"up\";\r\n            if (this.get(\"opposite\")) {\r\n                if (inside) {\r\n                    pointerOrientation = \"up\";\r\n                    y = global.y;\r\n                    h = num;\r\n                }\r\n                else {\r\n                    pointerOrientation = \"down\";\r\n                    y = global.y - num;\r\n                    h = num;\r\n                }\r\n            }\r\n            else {\r\n                if (inside) {\r\n                    pointerOrientation = \"down\";\r\n                    y = global.y - num;\r\n                    h = num;\r\n                }\r\n                else {\r\n                    pointerOrientation = \"up\";\r\n                    y = global.y;\r\n                    h = num;\r\n                }\r\n            }\r\n            var bounds = { left: x, right: x + w, top: y, bottom: y + h };\r\n            var oldBounds = tooltip.get(\"bounds\");\r\n            if (!$utils.sameBounds(bounds, oldBounds)) {\r\n                tooltip.set(\"bounds\", bounds);\r\n                tooltip.set(\"pointerOrientation\", pointerOrientation);\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(AxisRendererX, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"AxisRendererX\"\r\n    });\r\n    Object.defineProperty(AxisRendererX, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: AxisRenderer.classNames.concat([AxisRendererX.className])\r\n    });\r\n    return AxisRendererX;\r\n}(AxisRenderer));\r\nexport { AxisRendererX };\r\n//# sourceMappingURL=AxisRendererX.js.map","import { __extends, __read } from \"tslib\";\r\nimport { AxisRenderer } from \"./AxisRenderer\";\r\nimport { p100 } from \"../../../core/util/Percent\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\nimport { Rectangle } from \"../../../core/render/Rectangle\";\r\n/**\r\n * Used to render vertical axis.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\r\n * @important\r\n */\r\nvar AxisRendererY = /** @class */ (function (_super) {\r\n    __extends(AxisRendererY, _super);\r\n    function AxisRendererY() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        Object.defineProperty(_this, \"_downY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"thumb\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Rectangle.new(_this._root, { height: p100, isMeasured: false, themeTags: [\"axis\", \"y\", \"thumb\"] })\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(AxisRendererY.prototype, \"_afterNew\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"y\"]);\r\n            if (this._settings.opposite) {\r\n                this._settings.themeTags.push(\"opposite\");\r\n            }\r\n            _super.prototype._afterNew.call(this);\r\n            this.setPrivateRaw(\"letter\", \"Y\");\r\n            var gridTemplate = this.grid.template;\r\n            gridTemplate.set(\"width\", p100);\r\n            gridTemplate.set(\"height\", 0);\r\n            gridTemplate.set(\"draw\", function (display, graphics) {\r\n                display.moveTo(0, 0);\r\n                display.lineTo(graphics.width(), 0);\r\n            });\r\n            this.set(\"draw\", function (display, renderer) {\r\n                display.moveTo(0, 0);\r\n                display.lineTo(0, renderer.height());\r\n            });\r\n        }\r\n    });\r\n    Object.defineProperty(AxisRendererY.prototype, \"_getPan\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (point1, point2) {\r\n            return (point1.y - point2.y) / this.height();\r\n        }\r\n    });\r\n    Object.defineProperty(AxisRendererY.prototype, \"_changed\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._changed.call(this);\r\n            var axis = this.axis;\r\n            axis.ghostLabel.setPrivate(\"visible\", !this.get(\"inside\"));\r\n            var thumb = this.thumb;\r\n            var opposite = \"opposite\";\r\n            var inside = \"inside\";\r\n            var chart = this.chart;\r\n            if (this.isDirty(opposite) || this.isDirty(inside)) {\r\n                var axisChildren = axis.children;\r\n                if (this.get(inside)) {\r\n                    axis.addTag(inside);\r\n                }\r\n                else {\r\n                    axis.removeTag(inside);\r\n                }\r\n                if (chart) {\r\n                    if (this.get(opposite)) {\r\n                        var children = chart.rightAxesContainer.children;\r\n                        if (children.indexOf(axis) == -1) {\r\n                            children.moveValue(axis, 0);\r\n                        }\r\n                        axis.addTag(opposite);\r\n                        axisChildren.moveValue(this, 0);\r\n                    }\r\n                    else {\r\n                        var children = chart.leftAxesContainer.children;\r\n                        if (children.indexOf(axis) == -1) {\r\n                            children.moveValue(axis);\r\n                        }\r\n                        axis.removeTag(opposite);\r\n                        axisChildren.moveValue(this);\r\n                    }\r\n                    axis.ghostLabel._applyThemes();\r\n                    this.labels.each(function (label) {\r\n                        label._applyThemes();\r\n                    });\r\n                    this.root._markDirtyRedraw();\r\n                }\r\n                axis.markDirtySize();\r\n            }\r\n            var w = axis.labelsContainer.width();\r\n            if (chart) {\r\n                if (this.get(opposite)) {\r\n                    thumb.set(\"centerX\", 0);\r\n                }\r\n                else {\r\n                    thumb.set(\"centerX\", w);\r\n                }\r\n            }\r\n            thumb.setPrivate(\"width\", w);\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(AxisRendererY.prototype, \"processAxis\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype.processAxis.call(this);\r\n            var axis = this.axis;\r\n            if (axis.get(\"height\") == null) {\r\n                axis.set(\"height\", p100);\r\n            }\r\n            var horizontalLayout = this._root.horizontalLayout;\r\n            axis.set(\"layout\", horizontalLayout);\r\n            axis.labelsContainer.set(\"height\", p100);\r\n            axis.axisHeader.set(\"layout\", horizontalLayout);\r\n        }\r\n    });\r\n    Object.defineProperty(AxisRendererY.prototype, \"_updatePositions\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var axis = this.axis;\r\n            axis.gridContainer.set(\"y\", axis.y() - $utils.relativeToValue(axis.get(\"centerY\", 0), axis.height()));\r\n            axis.bulletsContainer.set(\"x\", this.x());\r\n            var chart = axis.chart;\r\n            if (chart) {\r\n                var plotContainer = chart.plotContainer;\r\n                var axisHeader = axis.axisHeader;\r\n                var height = axis.get(\"marginTop\", 0);\r\n                if (axisHeader.children.length > 0) {\r\n                    height = axis.axisHeader.height();\r\n                    axis.set(\"marginTop\", height);\r\n                }\r\n                else {\r\n                    axisHeader.set(\"height\", height);\r\n                }\r\n                axisHeader.setAll({ y: axis.y() - height, x: -1, width: plotContainer.width() + 2 });\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(AxisRendererY.prototype, \"axisLength\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            return this.axis.innerHeight();\r\n        }\r\n    });\r\n    /**\r\n     * Converts axis relative position to actual coordinate in pixels.\r\n     *\r\n     * @param   position  Position\r\n     * @return            Point\r\n     */\r\n    Object.defineProperty(AxisRendererY.prototype, \"positionToPoint\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (position) {\r\n            return { x: 0, y: this.positionToCoordinate(position) };\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(AxisRendererY.prototype, \"updateLabel\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (label, position, endPosition, count) {\r\n            if (label) {\r\n                if (!$type.isNumber(position)) {\r\n                    position = 0;\r\n                }\r\n                var location_1 = 0.5;\r\n                if ($type.isNumber(count) && count > 1) {\r\n                    location_1 = label.get(\"multiLocation\", location_1);\r\n                }\r\n                else {\r\n                    location_1 = label.get(\"location\", location_1);\r\n                }\r\n                var opposite = this.get(\"opposite\");\r\n                var inside = label.get(\"inside\", this.get(\"inside\", false));\r\n                if (opposite) {\r\n                    label.set(\"x\", 0);\r\n                    if (inside) {\r\n                        label.set(\"position\", \"absolute\");\r\n                    }\r\n                    else {\r\n                        label.set(\"position\", \"relative\");\r\n                    }\r\n                }\r\n                else {\r\n                    if (inside) {\r\n                        label.set(\"x\", 0);\r\n                        label.set(\"position\", \"absolute\");\r\n                    }\r\n                    else {\r\n                        label.set(\"x\", undefined);\r\n                        label.set(\"position\", \"relative\");\r\n                    }\r\n                }\r\n                if ($type.isNumber(endPosition) && endPosition != position) {\r\n                    position = position + (endPosition - position) * location_1;\r\n                }\r\n                label.set(\"y\", this.positionToCoordinate(position));\r\n                this.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(AxisRendererY.prototype, \"updateGrid\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (grid, position, endPosition) {\r\n            if (grid) {\r\n                if (!$type.isNumber(position)) {\r\n                    position = 0;\r\n                }\r\n                var location_2 = grid.get(\"location\", 0.5);\r\n                if ($type.isNumber(endPosition) && endPosition != position) {\r\n                    position = position + (endPosition - position) * location_2;\r\n                }\r\n                var y = this.positionToCoordinate(position);\r\n                grid.set(\"y\", y);\r\n                this.toggleVisibility(grid, position, 0, 1);\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(AxisRendererY.prototype, \"updateTick\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (tick, position, endPosition, count) {\r\n            if (tick) {\r\n                if (!$type.isNumber(position)) {\r\n                    position = 0;\r\n                }\r\n                var location_3 = 0.5;\r\n                if ($type.isNumber(count) && count > 1) {\r\n                    location_3 = tick.get(\"multiLocation\", location_3);\r\n                }\r\n                else {\r\n                    location_3 = tick.get(\"location\", location_3);\r\n                }\r\n                if ($type.isNumber(endPosition) && endPosition != position) {\r\n                    position = position + (endPosition - position) * location_3;\r\n                }\r\n                tick.set(\"y\", this.positionToCoordinate(position));\r\n                var length_1 = tick.get(\"length\", 0);\r\n                var inside = tick.get(\"inside\", this.get(\"inside\", false));\r\n                if (this.get(\"opposite\")) {\r\n                    tick.set(\"x\", 0);\r\n                    if (inside) {\r\n                        length_1 *= -1;\r\n                    }\r\n                }\r\n                else {\r\n                    if (!inside) {\r\n                        length_1 *= -1;\r\n                    }\r\n                }\r\n                tick.set(\"draw\", function (display) {\r\n                    display.moveTo(0, 0);\r\n                    display.lineTo(length_1, 0);\r\n                });\r\n                this.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(AxisRendererY.prototype, \"updateBullet\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (bullet, position, endPosition) {\r\n            if (bullet) {\r\n                var sprite = bullet.get(\"sprite\");\r\n                if (sprite) {\r\n                    if (!$type.isNumber(position)) {\r\n                        position = 0;\r\n                    }\r\n                    var location_4 = bullet.get(\"location\", 0.5);\r\n                    if ($type.isNumber(endPosition) && endPosition != position) {\r\n                        position = position + (endPosition - position) * location_4;\r\n                    }\r\n                    var bulletPosition = this.axis.roundAxisPosition(position, location_4);\r\n                    var previousBullet = this.axis._bullets[bulletPosition];\r\n                    var d = 1;\r\n                    if (this.get(\"opposite\")) {\r\n                        d = -1;\r\n                    }\r\n                    if (bullet.get(\"stacked\")) {\r\n                        if (previousBullet) {\r\n                            var previousSprite = previousBullet.get(\"sprite\");\r\n                            if (previousSprite) {\r\n                                sprite.set(\"x\", previousSprite.x() + previousSprite.width() * d);\r\n                            }\r\n                        }\r\n                        else {\r\n                            sprite.set(\"x\", 0);\r\n                        }\r\n                    }\r\n                    this.axis._bullets[bulletPosition] = bullet;\r\n                    sprite.set(\"y\", this.positionToCoordinate(position));\r\n                    this.toggleVisibility(sprite, position, 0, 1);\r\n                }\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(AxisRendererY.prototype, \"updateFill\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (fill, position, endPosition) {\r\n            if (fill) {\r\n                if (!$type.isNumber(position)) {\r\n                    position = 0;\r\n                }\r\n                if (!$type.isNumber(endPosition)) {\r\n                    endPosition = 1;\r\n                }\r\n                var y0 = this.positionToCoordinate(position);\r\n                var y1 = this.positionToCoordinate(endPosition);\r\n                this.fillDrawMethod(fill, y0, y1);\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(AxisRendererY.prototype, \"fillDrawMethod\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (fill, y0, y1) {\r\n            var _this = this;\r\n            fill.set(\"draw\", function (display) {\r\n                var _a;\r\n                // using for holes, so can not be rectangle\r\n                var w = _this.axis.gridContainer.width();\r\n                var h = _this.height();\r\n                if (y1 < y0) {\r\n                    _a = __read([y0, y1], 2), y1 = _a[0], y0 = _a[1];\r\n                }\r\n                if (y0 > h || y1 < 0) {\r\n                    return;\r\n                }\r\n                //y0 = Math.max(0, y0);\r\n                //y1 = Math.min(h, y1);\r\n                display.moveTo(0, y0);\r\n                display.lineTo(w, y0);\r\n                display.lineTo(w, y1);\r\n                display.lineTo(0, y1);\r\n                display.lineTo(0, y0);\r\n            });\r\n        }\r\n    });\r\n    /**\r\n     * Converts relative position (0-1) on axis to a pixel coordinate.\r\n     *\r\n     * @param position  Position (0-1)\r\n     * @return Coordinate (px)\r\n     */\r\n    Object.defineProperty(AxisRendererY.prototype, \"positionToCoordinate\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (position) {\r\n            if (!this._inversed) {\r\n                return (this._end - position) * this._axisLength;\r\n            }\r\n            else {\r\n                return (position - this._start) * this._axisLength;\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(AxisRendererY.prototype, \"positionTooltip\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (tooltip, position) {\r\n            this._positionTooltip(tooltip, { x: 0, y: this.positionToCoordinate(position) });\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(AxisRendererY.prototype, \"updateTooltipBounds\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (tooltip) {\r\n            var inside = this.get(\"inside\");\r\n            var num = 100000;\r\n            var global = this._display.toGlobal({ x: 0, y: 0 });\r\n            var y = global.y;\r\n            var x = 0;\r\n            var h = this.axisLength();\r\n            var w = num;\r\n            var pointerOrientation = \"right\";\r\n            if (this.get(\"opposite\")) {\r\n                if (inside) {\r\n                    pointerOrientation = \"right\";\r\n                    x = global.x - num;\r\n                    w = num;\r\n                }\r\n                else {\r\n                    pointerOrientation = \"left\";\r\n                    x = global.x;\r\n                    w = num;\r\n                }\r\n            }\r\n            else {\r\n                if (inside) {\r\n                    pointerOrientation = \"left\";\r\n                    x = global.x;\r\n                    w = num;\r\n                }\r\n                else {\r\n                    pointerOrientation = \"right\";\r\n                    x = global.x - num;\r\n                    w = num;\r\n                }\r\n            }\r\n            var bounds = { left: x, right: x + w, top: y, bottom: y + h };\r\n            var oldBounds = tooltip.get(\"bounds\");\r\n            if (!$utils.sameBounds(bounds, oldBounds)) {\r\n                tooltip.set(\"bounds\", bounds);\r\n                tooltip.set(\"pointerOrientation\", pointerOrientation);\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(AxisRendererY.prototype, \"_updateLC\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var axis = this.axis;\r\n            var parent = axis.parent;\r\n            if (parent) {\r\n                var h = parent.innerHeight();\r\n                this._lc = this.axisLength() / h;\r\n                this._ls = axis.y() / h;\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(AxisRendererY.prototype, \"toAxisPosition\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (position) {\r\n            var start = this._start || 0;\r\n            var end = this._end || 1;\r\n            position -= this._ls;\r\n            position = position * (end - start) / this._lc;\r\n            if (this.get(\"inversed\")) {\r\n                position = start + position;\r\n            }\r\n            else {\r\n                position = end - position;\r\n            }\r\n            return position;\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(AxisRendererY.prototype, \"fixPosition\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (position) {\r\n            if (!this.get(\"inversed\")) {\r\n                return 1 - position;\r\n            }\r\n            return position;\r\n        }\r\n    });\r\n    Object.defineProperty(AxisRendererY, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"AxisRendererY\"\r\n    });\r\n    Object.defineProperty(AxisRendererY, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: AxisRenderer.classNames.concat([AxisRendererY.className])\r\n    });\r\n    return AxisRendererY;\r\n}(AxisRenderer));\r\nexport { AxisRendererY };\r\n//# sourceMappingURL=AxisRendererY.js.map","import { __extends } from \"tslib\";\r\nimport { Tick } from \"../../../core/render/Tick\";\r\n/**\r\n * Draws an axis tick.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Ticks} for more info\r\n * @important\r\n */\r\nvar AxisTick = /** @class */ (function (_super) {\r\n    __extends(AxisTick, _super);\r\n    function AxisTick() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        Object.defineProperty(_this, \"_tickPoints\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(AxisTick, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"AxisTick\"\r\n    });\r\n    Object.defineProperty(AxisTick, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: Tick.classNames.concat([AxisTick.className])\r\n    });\r\n    return AxisTick;\r\n}(Tick));\r\nexport { AxisTick };\r\n//# sourceMappingURL=AxisTick.js.map","import { __extends } from \"tslib\";\r\nimport { Axis } from \"./Axis\";\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $math from \"../../../core/util/Math\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\nimport { populateString } from \"../../../core/util/PopulateString\";\r\n/**\r\n * Creates a category axis.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/category-axis/} for more info\r\n * @important\r\n */\r\nvar CategoryAxis = /** @class */ (function (_super) {\r\n    __extends(CategoryAxis, _super);\r\n    function CategoryAxis() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        Object.defineProperty(_this, \"_frequency\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(_this, \"_itemMap\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(CategoryAxis.prototype, \"_afterNew\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\r\n            this.fields.push(\"category\");\r\n            this.setPrivateRaw(\"name\", \"category\");\r\n            this.addTag(\"category\");\r\n            _super.prototype._afterNew.call(this);\r\n        }\r\n    });\r\n    Object.defineProperty(CategoryAxis.prototype, \"_prepareChildren\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            _super.prototype._prepareChildren.call(this);\r\n            var len = this.dataItems.length;\r\n            var i = 0;\r\n            if (this._valuesDirty) {\r\n                this._itemMap = {};\r\n                $array.each(this.dataItems, function (dataItem) {\r\n                    dataItem.setRaw(\"index\", i);\r\n                    _this._itemMap[dataItem.get(\"category\")] = dataItem;\r\n                    i++;\r\n                });\r\n                this.setPrivateRaw(\"maxZoomFactor\", len);\r\n            }\r\n            this.setPrivateRaw(\"startIndex\", Math.max(Math.round(this.get(\"start\", 0) * len), 0));\r\n            this.setPrivateRaw(\"endIndex\", Math.min(Math.round(this.get(\"end\", 1) * len), len));\r\n            if (this._sizeDirty || this._valuesDirty || (this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"endIndex\") || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\"))) {\r\n                if (this.dataItems.length > 0) {\r\n                    this._handleRangeChange();\r\n                    this._prepareAxisItems();\r\n                    this._updateAxisRanges();\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(CategoryAxis.prototype, \"_handleRangeChange\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            $array.each(this.series, function (series) {\r\n                var startCategory = _this.dataItems[_this.startIndex()].get(\"category\");\r\n                var endCategory = _this.dataItems[_this.endIndex() - 1].get(\"category\");\r\n                var baseAxis = series.get(\"baseAxis\");\r\n                var xAxis = series.get(\"xAxis\");\r\n                var yAxis = series.get(\"yAxis\");\r\n                if (xAxis instanceof CategoryAxis && yAxis instanceof CategoryAxis) {\r\n                    series._markDirtyAxes();\r\n                }\r\n                else if (baseAxis === _this) {\r\n                    var key = void 0;\r\n                    var openKey = void 0;\r\n                    var otherAxis = yAxis;\r\n                    if (xAxis === baseAxis) {\r\n                        if (series.get(\"categoryXField\")) {\r\n                            key = \"categoryX\";\r\n                        }\r\n                        if (series.get(\"openCategoryXField\")) {\r\n                            openKey = \"openCategoryX\";\r\n                        }\r\n                    }\r\n                    else if (yAxis === baseAxis) {\r\n                        if (series.get(\"categoryYField\")) {\r\n                            key = \"categoryY\";\r\n                        }\r\n                        if (series.get(\"openCategoryYField\")) {\r\n                            openKey = \"openCategoryY\";\r\n                        }\r\n                        otherAxis = xAxis;\r\n                    }\r\n                    if (otherAxis.className == \"ValueAxis\") {\r\n                        if (key || openKey) {\r\n                            var startDataItem = void 0;\r\n                            var endDataItem = void 0;\r\n                            for (var i = 0, len = series.dataItems.length; i < len; i++) {\r\n                                var dataItem = series.dataItems[i];\r\n                                if (key) {\r\n                                    if (dataItem.get(key) === startCategory) {\r\n                                        startDataItem = dataItem;\r\n                                        break;\r\n                                    }\r\n                                }\r\n                                if (openKey) {\r\n                                    if (dataItem.get(openKey) === startCategory) {\r\n                                        startDataItem = dataItem;\r\n                                        break;\r\n                                    }\r\n                                }\r\n                            }\r\n                            for (var i = series.dataItems.length - 1; i >= 0; i--) {\r\n                                var dataItem = series.dataItems[i];\r\n                                if (key) {\r\n                                    if (dataItem.get(key) === endCategory) {\r\n                                        endDataItem = dataItem;\r\n                                        break;\r\n                                    }\r\n                                }\r\n                                if (openKey) {\r\n                                    if (dataItem.get(openKey) === endCategory) {\r\n                                        endDataItem = dataItem;\r\n                                        break;\r\n                                    }\r\n                                }\r\n                            }\r\n                            var startIndex = 0;\r\n                            var endIndex = series.dataItems.length;\r\n                            if (startDataItem) {\r\n                                startIndex = series.dataItems.indexOf(startDataItem);\r\n                            }\r\n                            if (endDataItem) {\r\n                                endIndex = series.dataItems.indexOf(endDataItem) + 1;\r\n                            }\r\n                            series.setPrivate(\"startIndex\", startIndex);\r\n                            series.setPrivate(\"endIndex\", endIndex);\r\n                            var hasValue_1 = false;\r\n                            var _loop_1 = function (i) {\r\n                                var dataItem = series.dataItems[i];\r\n                                $array.each(series.__valueXShowFields, function (key) {\r\n                                    var value = dataItem.get(key);\r\n                                    if (value != null) {\r\n                                        hasValue_1 = true;\r\n                                    }\r\n                                });\r\n                                $array.each(series.__valueYShowFields, function (key) {\r\n                                    var value = dataItem.get(key);\r\n                                    if (value != null) {\r\n                                        hasValue_1 = true;\r\n                                    }\r\n                                });\r\n                                if (hasValue_1) {\r\n                                    return \"break\";\r\n                                }\r\n                            };\r\n                            for (var i = startIndex; i < endIndex; i++) {\r\n                                var state_1 = _loop_1(i);\r\n                                if (state_1 === \"break\")\r\n                                    break;\r\n                            }\r\n                            series.setPrivate(\"outOfSelection\", !hasValue_1);\r\n                        }\r\n                    }\r\n                    series._markDirtyAxes(); // must be outside\r\n                }\r\n            });\r\n        }\r\n    });\r\n    Object.defineProperty(CategoryAxis.prototype, \"_prepareAxisItems\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var renderer = this.get(\"renderer\");\r\n            var len = this.dataItems.length;\r\n            var startIndex = this.startIndex();\r\n            if (startIndex > 0) {\r\n                startIndex--;\r\n            }\r\n            var endIndex = this.endIndex();\r\n            if (endIndex < len) {\r\n                endIndex++;\r\n            }\r\n            var maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\"), 1 / Number.MAX_SAFE_INTEGER);\r\n            var frequency = Math.max(1, Math.min(len, Math.ceil((endIndex - startIndex) / maxCount)));\r\n            startIndex = Math.floor(startIndex / frequency) * frequency;\r\n            this._frequency = frequency;\r\n            for (var j = 0; j < len; j++) {\r\n                this.dataItems[j].hide();\r\n            }\r\n            var f = this.dataItems[startIndex].get(\"index\", 0);\r\n            for (var i = startIndex; i < endIndex; i = i + frequency) {\r\n                var dataItem = this.dataItems[i];\r\n                this._createAssets(dataItem, []);\r\n                if (dataItem.isHidden()) {\r\n                    dataItem.show();\r\n                }\r\n                this._prepareDataItem(dataItem, f, frequency);\r\n                f++;\r\n            }\r\n            this._updateGhost();\r\n        }\r\n    });\r\n    Object.defineProperty(CategoryAxis.prototype, \"_prepareDataItem\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem, fillIndex, count) {\r\n            var renderer = this.get(\"renderer\");\r\n            var categoryLocation = dataItem.get(\"categoryLocation\", 0);\r\n            var endCategoryLocation = dataItem.get(\"endCategoryLocation\", 1);\r\n            var index = dataItem.get(\"index\");\r\n            if (!$type.isNumber(index)) {\r\n                index = this.categoryToIndex(dataItem.get(\"category\"));\r\n            }\r\n            var position = this.indexToPosition(index, categoryLocation);\r\n            var endCategory = dataItem.get(\"endCategory\");\r\n            var endIndex;\r\n            if (endCategory) {\r\n                endIndex = this.categoryToIndex(endCategory);\r\n                if (!$type.isNumber(endIndex)) {\r\n                    endIndex = index;\r\n                }\r\n            }\r\n            else {\r\n                endIndex = index;\r\n            }\r\n            var endPosition = this.indexToPosition(endIndex, endCategoryLocation);\r\n            var fillEndIndex;\r\n            var fillEndPosition;\r\n            if (dataItem.get(\"isRange\")) {\r\n                fillEndIndex = endIndex;\r\n            }\r\n            else {\r\n                fillEndIndex = index + this._frequency - 1;\r\n            }\r\n            fillEndPosition = this.indexToPosition(fillEndIndex, endCategoryLocation);\r\n            renderer.updateLabel(dataItem.get(\"label\"), position, endPosition, count);\r\n            renderer.updateGrid(dataItem.get(\"grid\"), position, endPosition);\r\n            renderer.updateTick(dataItem.get(\"tick\"), position, endPosition, count);\r\n            renderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\r\n            this._processBullet(dataItem);\r\n            renderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\r\n            var fillRule = this.get(\"fillRule\");\r\n            if (fillRule) {\r\n                fillRule(dataItem, fillIndex);\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(CategoryAxis.prototype, \"startIndex\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var len = this.dataItems.length;\r\n            return Math.min(Math.max(this.getPrivate(\"startIndex\", 0), 0), len - 1);\r\n        }\r\n    });\r\n    Object.defineProperty(CategoryAxis.prototype, \"endIndex\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var len = this.dataItems.length;\r\n            return Math.max(1, Math.min(this.getPrivate(\"endIndex\", len), len));\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(CategoryAxis.prototype, \"baseValue\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(CategoryAxis.prototype, \"basePosition\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            return 0;\r\n        }\r\n    });\r\n    /**\r\n     * Returns X coordinate in pixels corresponding to specific category index.\r\n     *\r\n     * @param   value  Index\r\n     * @return         X coordinate\r\n     */\r\n    Object.defineProperty(CategoryAxis.prototype, \"getX\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (value) {\r\n            var axisDataItem = this._itemMap[value];\r\n            if (axisDataItem) {\r\n                return this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\r\n            }\r\n            return NaN;\r\n        }\r\n    });\r\n    /**\r\n     * Returns Y coordinate in pixels corresponding to specific category index.\r\n     *\r\n     * @param   value  Index\r\n     * @return         Y coordinate\r\n     */\r\n    Object.defineProperty(CategoryAxis.prototype, \"getY\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (value) {\r\n            var axisDataItem = this._itemMap[value];\r\n            if (axisDataItem) {\r\n                return this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\r\n            }\r\n            return NaN;\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(CategoryAxis.prototype, \"getDataItemPositionX\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem, field, cellLocation, _axisLocation) {\r\n            var category = dataItem.get(field);\r\n            var axisDataItem = this._itemMap[category];\r\n            if (axisDataItem) {\r\n                return this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\r\n            }\r\n            return NaN;\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(CategoryAxis.prototype, \"getDataItemCoordinateX\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem, field, cellLocation, _axisLocation) {\r\n            return this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, cellLocation, _axisLocation));\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(CategoryAxis.prototype, \"getDataItemPositionY\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem, field, cellLocation, _axisLocation) {\r\n            var category = dataItem.get(field);\r\n            var axisDataItem = this._itemMap[category];\r\n            if (axisDataItem) {\r\n                return this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\r\n            }\r\n            return NaN;\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(CategoryAxis.prototype, \"getDataItemCoordinateY\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem, field, cellLocation, _axisLocation) {\r\n            return this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, cellLocation, _axisLocation));\r\n        }\r\n    });\r\n    /**\r\n     * Converts category index to a relative position.\r\n     *\r\n     * `location` indicates relative position within category: 0 - start, 1 - end.\r\n     *\r\n     * If not set, will use middle (0.5) of the category.\r\n     *\r\n     * @param   index     Index\r\n     * @param   location  Location\r\n     * @return            Index\r\n     */\r\n    Object.defineProperty(CategoryAxis.prototype, \"indexToPosition\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (index, location) {\r\n            if (!$type.isNumber(location)) {\r\n                location = 0.5;\r\n            }\r\n            var len = this.dataItems.length;\r\n            var startLocation = this.get(\"startLocation\", 0);\r\n            var endLocation = this.get(\"endLocation\", 1);\r\n            len -= startLocation;\r\n            len -= (1 - endLocation);\r\n            var position = (index + location - startLocation) / len;\r\n            var dataItem = this.dataItems[index];\r\n            if (dataItem) {\r\n                position += dataItem.get(\"deltaPosition\", 0);\r\n            }\r\n            return position;\r\n        }\r\n    });\r\n    /**\r\n     * Returns an index of a category.\r\n     *\r\n     * @param   category  Category to look up\r\n     * @return            Index\r\n     */\r\n    Object.defineProperty(CategoryAxis.prototype, \"categoryToIndex\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (category) {\r\n            var dataItem = this._itemMap[category];\r\n            if (dataItem) {\r\n                return dataItem.get(\"index\");\r\n            }\r\n            return NaN;\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(CategoryAxis.prototype, \"dataItemToPosition\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem) {\r\n            return this.indexToPosition(dataItem.get(\"index\"));\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(CategoryAxis.prototype, \"roundAxisPosition\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (position, location) {\r\n            position += (0.5 - location) / this.dataItems.length;\r\n            return this.indexToPosition(this.axisPositionToIndex(position), location);\r\n        }\r\n    });\r\n    /**\r\n     * Returns an index of the category that corresponds to specific pixel\r\n     * position within axis.\r\n     *\r\n     * @param position  Position (px)\r\n     * @return Category index\r\n     */\r\n    Object.defineProperty(CategoryAxis.prototype, \"axisPositionToIndex\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (position) {\r\n            var len = this.dataItems.length;\r\n            return $math.fitToRange(Math.floor(position * len), 0, len - 1); //$math.fitToRange(Math.floor((end - start) * len * position + len * start), 0, len - 1);\r\n        }\r\n    });\r\n    /**\r\n     * Returns text to be used in an axis tooltip for specific relative position.\r\n     *\r\n     * @param   position  Position\r\n     * @return            Tooltip text\r\n     */\r\n    Object.defineProperty(CategoryAxis.prototype, \"getTooltipText\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (position) {\r\n            //@todo number formatter + tag\r\n            var dataItem = this.dataItems[this.axisPositionToIndex(position)];\r\n            if (dataItem) {\r\n                var label = dataItem.get(\"label\");\r\n                if (label) {\r\n                    return populateString(label, this.get(\"tooltipText\", \"\"));\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(CategoryAxis.prototype, \"_updateTooltipText\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (tooltip, position) {\r\n            tooltip._setDataItem(this.dataItems[this.axisPositionToIndex(position)]);\r\n            tooltip.label.text.markDirtyText();\r\n        }\r\n    });\r\n    /**\r\n     * Returns a data item from series that is closest to the `position`.\r\n     *\r\n     * @param   series    Series\r\n     * @param   position  Relative position\r\n     * @return            Data item\r\n     */\r\n    Object.defineProperty(CategoryAxis.prototype, \"getSeriesItem\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (series, position) {\r\n            if (this.dataItems.length > 0) {\r\n                var fieldName = (this.getPrivate(\"name\") + this.get(\"renderer\").getPrivate(\"letter\"));\r\n                var index = this.axisPositionToIndex(position);\r\n                // try simple first\r\n                var seriesDataItem = series.dataItems[index];\r\n                var axisDataItem = this.dataItems[index];\r\n                var category = axisDataItem.get(\"category\");\r\n                if (seriesDataItem && axisDataItem) {\r\n                    if (seriesDataItem.get(fieldName) === category) {\r\n                        return seriesDataItem;\r\n                    }\r\n                }\r\n                // if not found, try looking\r\n                for (var i = 0, len = series.dataItems.length; i < len; i++) {\r\n                    var dataItem = series.dataItems[i];\r\n                    if (dataItem.get(fieldName) === category) {\r\n                        return dataItem;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * Zooms the axis to specific `start` and `end` indexes.\r\n     *\r\n     * Optional `duration` specifies duration of zoom animation in milliseconds.\r\n     *\r\n     * @param  start     Start index\r\n     * @param  end       End index\r\n     * @param  duration  Duration in milliseconds\r\n     */\r\n    Object.defineProperty(CategoryAxis.prototype, \"zoomToIndexes\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (start, end, duration) {\r\n            var len = this.dataItems.length;\r\n            this.zoom(start / len, end / len, duration);\r\n        }\r\n    });\r\n    Object.defineProperty(CategoryAxis.prototype, \"zoomToCategories\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (startCategory, endCategory, duration) {\r\n            this.zoomToIndexes(this.categoryToIndex(startCategory), this.categoryToIndex(endCategory) + 1, duration);\r\n        }\r\n    });\r\n    /**\r\n     * Returns position span between start and end of a single cell in axis.\r\n     *\r\n     * @since 5.2.30\r\n     * @return Position\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(CategoryAxis.prototype, \"getCellWidthPosition\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            return 1 / this.dataItems.length * (this.get(\"end\", 1) - this.get(\"start\", 0));\r\n        }\r\n    });\r\n    Object.defineProperty(CategoryAxis, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"CategoryAxis\"\r\n    });\r\n    Object.defineProperty(CategoryAxis, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: Axis.classNames.concat([CategoryAxis.className])\r\n    });\r\n    return CategoryAxis;\r\n}(Axis));\r\nexport { CategoryAxis };\r\n//# sourceMappingURL=CategoryAxis.js.map","import { __assign, __extends } from \"tslib\";\r\nimport { CategoryAxis } from \"./CategoryAxis\";\r\nimport * as $time from \"../../../core/util/Time\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n/**\r\n * Category-based date axis.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/category-date-axis/} for more info\r\n * @important\r\n */\r\nvar CategoryDateAxis = /** @class */ (function (_super) {\r\n    __extends(CategoryDateAxis, _super);\r\n    function CategoryDateAxis() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        Object.defineProperty(_this, \"_frequency\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(_this, \"_itemMap\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(CategoryDateAxis.prototype, \"_afterNew\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\r\n            this.fields.push(\"category\");\r\n            _super.prototype._afterNew.call(this);\r\n        }\r\n    });\r\n    Object.defineProperty(CategoryDateAxis.prototype, \"_prepareAxisItems\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            // temp\r\n            this.setPrivateRaw(\"baseInterval\", this.get(\"baseInterval\"));\r\n            var renderer = this.get(\"renderer\");\r\n            var len = this.dataItems.length;\r\n            var startIndex = this.startIndex();\r\n            if (startIndex > 0) {\r\n                startIndex--;\r\n            }\r\n            var endIndex = this.endIndex();\r\n            if (endIndex < len) {\r\n                endIndex++;\r\n            }\r\n            var maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\"), 1 / Number.MAX_SAFE_INTEGER);\r\n            var frequency = Math.min(len, Math.ceil((endIndex - startIndex) / maxCount));\r\n            startIndex = Math.floor(startIndex / frequency) * frequency;\r\n            this._frequency = frequency;\r\n            for (var j = 0; j < len; j++) {\r\n                this.dataItems[j].hide();\r\n            }\r\n            var startTime = Number(this.dataItems[startIndex].get(\"category\"));\r\n            var endTime = Number(this.dataItems[endIndex - 1].get(\"category\"));\r\n            var realDuration = (endTime - startTime);\r\n            if (endIndex - startIndex < maxCount) {\r\n                realDuration = (endTime - startTime) - ((endTime - startTime) / this.baseDuration() - (endIndex - startIndex)) * this.baseDuration();\r\n            }\r\n            // if all items are on axis\r\n            var gridInterval = $time.chooseInterval(0, realDuration, maxCount, this.get(\"gridIntervals\"));\r\n            var nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\r\n            var baseInterval = this.getPrivate(\"baseInterval\");\r\n            if ($time.getIntervalDuration(gridInterval) < this.baseDuration()) {\r\n                gridInterval = __assign({}, baseInterval);\r\n            }\r\n            var formats = this.get(\"dateFormats\");\r\n            var previousValue = -Infinity;\r\n            var previousIndex = -Infinity;\r\n            var previousUnitValue = -Infinity;\r\n            var format;\r\n            var selectedItems = [];\r\n            var changed = false;\r\n            for (var i = startIndex; i < endIndex; i++) {\r\n                var dataItem = this.dataItems[i];\r\n                var index = dataItem.get(\"index\");\r\n                var skip = false;\r\n                var value = Number(dataItem.get(\"category\"));\r\n                var date = new Date(value);\r\n                var unitValue = $time.getUnitValue(date, gridInterval.timeUnit);\r\n                format = formats[gridInterval.timeUnit];\r\n                var added = false;\r\n                if (gridInterval.timeUnit != \"year\" && gridInterval.timeUnit != \"week\") {\r\n                    if (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\r\n                        if ($time.checkChange(value, previousValue, nextGridUnit, this._root.utc)) {\r\n                            format = this.get(\"periodChangeDateFormats\")[gridInterval.timeUnit];\r\n                            if (index - frequency * 0.5 < previousIndex) {\r\n                                selectedItems.pop();\r\n                            }\r\n                            selectedItems.push({ format: format, dataItem: dataItem });\r\n                            changed = true;\r\n                            added = true;\r\n                            previousIndex = index;\r\n                            previousUnitValue = unitValue;\r\n                        }\r\n                    }\r\n                }\r\n                var shouldAdd = false;\r\n                if (gridInterval.timeUnit === \"day\" || gridInterval.timeUnit === \"week\") {\r\n                    if (index - previousIndex >= frequency) {\r\n                        shouldAdd = true;\r\n                    }\r\n                }\r\n                else {\r\n                    if (unitValue % gridInterval.count === 0) {\r\n                        if (unitValue != previousUnitValue) {\r\n                            shouldAdd = true;\r\n                        }\r\n                    }\r\n                }\r\n                if (!added && shouldAdd) {\r\n                    if (index - frequency * 0.7 < previousIndex) {\r\n                        if (changed) {\r\n                            skip = true;\r\n                        }\r\n                    }\r\n                    if (!skip) {\r\n                        selectedItems.push({ format: format, dataItem: dataItem });\r\n                        previousIndex = index;\r\n                        previousUnitValue = unitValue;\r\n                    }\r\n                    changed = false;\r\n                }\r\n                previousValue = value;\r\n            }\r\n            if (selectedItems.length > 0) {\r\n                var f_1 = selectedItems[0].dataItem.get(\"index\", 0);\r\n                $array.each(selectedItems, function (item) {\r\n                    var dataItem = item.dataItem;\r\n                    var format = item.format;\r\n                    _this._createAssets(dataItem, []);\r\n                    if (dataItem.isHidden()) {\r\n                        dataItem.show();\r\n                    }\r\n                    var value = Number(dataItem.get(\"category\"));\r\n                    var date = new Date(value);\r\n                    var label = dataItem.get(\"label\");\r\n                    if (label) {\r\n                        label.set(\"text\", _this._root.dateFormatter.format(date, format));\r\n                    }\r\n                    f_1++;\r\n                    _this._prepareDataItem(dataItem, f_1, frequency);\r\n                });\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * Returns a duration of currently active `baseInterval` in milliseconds.\r\n     *\r\n     * @return Duration\r\n     */\r\n    Object.defineProperty(CategoryDateAxis.prototype, \"baseDuration\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            return $time.getIntervalDuration(this.getPrivate(\"baseInterval\"));\r\n        }\r\n    });\r\n    /**\r\n     * Returns text to be used in an axis tooltip for specific relative position.\r\n     *\r\n     * @param   position  Position\r\n     * @return            Tooltip text\r\n     */\r\n    Object.defineProperty(CategoryDateAxis.prototype, \"getTooltipText\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (position) {\r\n            //@todo number formatter + tag\r\n            var dataItem = this.dataItems[this.axisPositionToIndex(position)];\r\n            if (dataItem) {\r\n                var format = this.get(\"dateFormats\")[this.getPrivate(\"baseInterval\").timeUnit];\r\n                return this._root.dateFormatter.format(new Date(dataItem.get(\"category\", 0)), this.get(\"tooltipDateFormat\", format));\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(CategoryDateAxis.prototype, \"_updateTooltipText\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (tooltip, position) {\r\n            tooltip.label.set(\"text\", this.getTooltipText(position));\r\n        }\r\n    });\r\n    Object.defineProperty(CategoryDateAxis, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"CategoryDateAxis\"\r\n    });\r\n    Object.defineProperty(CategoryDateAxis, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: CategoryAxis.classNames.concat([CategoryDateAxis.className])\r\n    });\r\n    return CategoryDateAxis;\r\n}(CategoryAxis));\r\nexport { CategoryDateAxis };\r\n//# sourceMappingURL=CategoryDateAxis.js.map","import { __assign, __extends } from \"tslib\";\r\nimport { DataItem } from \"../../../core/render/Component\";\r\nimport { ValueAxis } from \"./ValueAxis\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $order from \"../../../core/util/Order\";\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $object from \"../../../core/util/Object\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\nimport * as $time from \"../../../core/util/Time\";\r\n/**\r\n * Creates a date axis.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/} for more info\r\n * @important\r\n */\r\nvar DateAxis = /** @class */ (function (_super) {\r\n    __extends(DateAxis, _super);\r\n    function DateAxis() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        Object.defineProperty(_this, \"_dataGrouped\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(_this, \"_seriesDataGrouped\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(_this, \"_groupingCalculated\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(_this, \"_intervalDuration\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(_this, \"_baseDuration\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(_this, \"_intervalMax\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(_this, \"_intervalMin\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(DateAxis.prototype, \"_afterNew\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\r\n            _super.prototype._afterNew.call(this);\r\n            this._setBaseInterval(this.get(\"baseInterval\"));\r\n            this.on(\"baseInterval\", function () {\r\n                _this._setBaseInterval(_this.get(\"baseInterval\"));\r\n            });\r\n        }\r\n    });\r\n    Object.defineProperty(DateAxis.prototype, \"_setBaseInterval\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (interval) {\r\n            this.setPrivateRaw(\"baseInterval\", interval);\r\n            this._baseDuration = $time.getIntervalDuration(interval);\r\n        }\r\n    });\r\n    Object.defineProperty(DateAxis.prototype, \"_fixZoomFactor\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var maxZoomFactor = this.get(\"maxZoomFactor\");\r\n            if (maxZoomFactor != null) {\r\n                this.setPrivateRaw(\"maxZoomFactor\", maxZoomFactor);\r\n            }\r\n            else {\r\n                this.setPrivateRaw(\"maxZoomFactor\", Math.round((this.getPrivate(\"max\", 0) - this.getPrivate(\"min\", 0)) / this.baseMainDuration()));\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(DateAxis.prototype, \"_groupData\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            var min = this.getPrivate(\"min\");\r\n            var max = this.getPrivate(\"max\");\r\n            if (($type.isNumber(min) && $type.isNumber(max))) {\r\n                this._fixZoomFactor();\r\n                var groupInterval = this.getPrivate(\"groupInterval\");\r\n                if (groupInterval) {\r\n                    this._setBaseInterval(groupInterval);\r\n                }\r\n                else {\r\n                    this._setBaseInterval(this.get(\"baseInterval\"));\r\n                }\r\n                if (this.isDirty(\"groupInterval\")) {\r\n                    var groupInterval_1 = this.get(\"groupInterval\");\r\n                    if (groupInterval_1) {\r\n                        this.setRaw(\"groupIntervals\", [groupInterval_1]);\r\n                    }\r\n                }\r\n                if (this.isDirty(\"groupData\")) {\r\n                    if (!this._dataGrouped) {\r\n                        if (this.get(\"groupData\")) {\r\n                            $array.each(this.series, function (series) {\r\n                                _this._groupSeriesData(series);\r\n                            });\r\n                            this._handleRangeChange();\r\n                        }\r\n                        else {\r\n                            var baseInterval = this.get(\"baseInterval\");\r\n                            var mainDataSetId_1 = baseInterval.timeUnit + baseInterval.count;\r\n                            $array.each(this.series, function (series) {\r\n                                series.setDataSet(mainDataSetId_1);\r\n                            });\r\n                            this._setBaseInterval(baseInterval);\r\n                            this.setPrivateRaw(\"groupInterval\", undefined);\r\n                            this.markDirtyExtremes();\r\n                        }\r\n                        this._dataGrouped = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(DateAxis.prototype, \"_groupSeriesData\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (series) {\r\n            var _this = this;\r\n            if (this.get(\"groupData\") && !series.get(\"groupDataDisabled\")) {\r\n                this._dataGrouped = true; // helps to avoid double grouping\r\n                this._seriesDataGrouped = true;\r\n                // make array of intervals which will be used;\r\n                var intervals_1 = [];\r\n                var baseDuration_1 = this.baseMainDuration();\r\n                var groupIntervals = this.get(\"groupIntervals\");\r\n                if (groupIntervals) { }\r\n                $array.each(groupIntervals, function (interval) {\r\n                    var intervalDuration = $time.getIntervalDuration(interval);\r\n                    if (intervalDuration > baseDuration_1) {\r\n                        intervals_1.push(interval);\r\n                    }\r\n                });\r\n                series._dataSets = {};\r\n                var key_1 = this.getPrivate(\"name\") + this.get(\"renderer\").getPrivate(\"letter\");\r\n                var fields_1;\r\n                var baseAxis = series.get(\"baseAxis\");\r\n                if (series.get(\"xAxis\") === baseAxis) {\r\n                    fields_1 = series._valueYFields;\r\n                }\r\n                else if (series.get(\"yAxis\") === baseAxis) {\r\n                    fields_1 = series._valueXFields;\r\n                }\r\n                var dataItems_1 = series._mainDataItems;\r\n                var baseInterval = this.get(\"baseInterval\");\r\n                var mainDataSetId = baseInterval.timeUnit + baseInterval.count;\r\n                series._dataSets[mainDataSetId] = dataItems_1;\r\n                var groupCallback_1 = series.get(\"groupDataCallback\");\r\n                var groupOriginals_1 = series.get(\"groupDataWithOriginals\", false);\r\n                if (groupCallback_1) {\r\n                    groupOriginals_1 = true;\r\n                }\r\n                $array.each(intervals_1, function (interval) {\r\n                    var previousTime = -Infinity;\r\n                    var dataSetId = interval.timeUnit + interval.count;\r\n                    series._dataSets[dataSetId] = [];\r\n                    var newDataItem;\r\n                    var sum = {};\r\n                    var count = {};\r\n                    var groupFieldValues = {};\r\n                    var workingFields = {};\r\n                    $array.each(fields_1, function (field) {\r\n                        sum[field] = 0;\r\n                        count[field] = 0;\r\n                        groupFieldValues[field] = series.get((field + \"Grouped\"));\r\n                        workingFields[field] = field + \"Working\";\r\n                    });\r\n                    var intervalDuration = $time.getDuration(interval.timeUnit);\r\n                    var firstItem = dataItems_1[0];\r\n                    var firstDate;\r\n                    if (firstItem) {\r\n                        firstDate = new Date(dataItems_1[0].get(key_1));\r\n                    }\r\n                    var prevNewDataItem;\r\n                    $array.each(dataItems_1, function (dataItem) {\r\n                        var time = dataItem.get(key_1);\r\n                        var roundedTime = $time.round(new Date(time), interval.timeUnit, interval.count, _this._root.locale.firstDayOfWeek, _this._root.utc, firstDate, _this._root.timezone).getTime();\r\n                        var dataContext;\r\n                        if (previousTime < roundedTime - intervalDuration / 24) {\r\n                            dataContext = $object.copy(dataItem.dataContext);\r\n                            newDataItem = new DataItem(series, dataContext, series._makeDataItem(dataContext));\r\n                            newDataItem.setRaw(key_1, roundedTime);\r\n                            series._dataSets[dataSetId].push(newDataItem);\r\n                            $array.each(fields_1, function (field) {\r\n                                var value = dataItem.get(field);\r\n                                if ($type.isNumber(value)) {\r\n                                    newDataItem.setRaw(field, value);\r\n                                    newDataItem.setRaw(workingFields[field], value);\r\n                                    count[field] = 1;\r\n                                    sum[field] = value;\r\n                                }\r\n                                else {\r\n                                    sum[field] = 0;\r\n                                    count[field] = 0;\r\n                                }\r\n                            });\r\n                            if (groupOriginals_1) {\r\n                                newDataItem.set(\"originals\", [dataItem]);\r\n                            }\r\n                            if (groupCallback_1 && prevNewDataItem) {\r\n                                groupCallback_1(prevNewDataItem, interval);\r\n                            }\r\n                            prevNewDataItem = newDataItem;\r\n                        }\r\n                        else {\r\n                            $array.each(fields_1, function (field) {\r\n                                var groupKey = groupFieldValues[field];\r\n                                var value = dataItem.get(field);\r\n                                if (value !== undefined) {\r\n                                    var currentValue = newDataItem.get(field);\r\n                                    switch (groupKey) {\r\n                                        case \"close\":\r\n                                            newDataItem.setRaw(field, value);\r\n                                            break;\r\n                                        case \"sum\":\r\n                                            newDataItem.setRaw(field, currentValue + value);\r\n                                            break;\r\n                                        case \"open\":\r\n                                            break;\r\n                                        case \"low\":\r\n                                            if (value < currentValue) {\r\n                                                newDataItem.setRaw(field, value);\r\n                                            }\r\n                                            break;\r\n                                        case \"high\":\r\n                                            if (value > currentValue) {\r\n                                                newDataItem.setRaw(field, value);\r\n                                            }\r\n                                            break;\r\n                                        case \"average\":\r\n                                            count[field]++;\r\n                                            sum[field] += value;\r\n                                            var average = sum[field] / count[field];\r\n                                            newDataItem.setRaw(field, average);\r\n                                            break;\r\n                                        case \"extreme\":\r\n                                            if (Math.abs(value) > Math.abs(currentValue)) {\r\n                                                newDataItem.setRaw(field, value);\r\n                                            }\r\n                                            break;\r\n                                    }\r\n                                    newDataItem.setRaw(workingFields[field], newDataItem.get(field));\r\n                                    var dataContext_1 = $object.copy(dataItem.dataContext);\r\n                                    dataContext_1[key_1] = roundedTime;\r\n                                    newDataItem.dataContext = dataContext_1;\r\n                                }\r\n                            });\r\n                            if (groupOriginals_1) {\r\n                                newDataItem.get(\"originals\").push(dataItem);\r\n                            }\r\n                        }\r\n                        previousTime = roundedTime;\r\n                    });\r\n                    if (groupCallback_1 && prevNewDataItem) {\r\n                        groupCallback_1(prevNewDataItem, interval);\r\n                    }\r\n                });\r\n                if (series._dataSetId) {\r\n                    series.setDataSet(series._dataSetId);\r\n                }\r\n                this.markDirtySize();\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(DateAxis.prototype, \"_clearDirty\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._clearDirty.call(this);\r\n            this._groupingCalculated = false;\r\n            this._dataGrouped = false;\r\n        }\r\n    });\r\n    /**\r\n     * Returns a time interval axis would group data to for a specified duration.\r\n     *\r\n     * @since 5.2.1\r\n     */\r\n    Object.defineProperty(DateAxis.prototype, \"getGroupInterval\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (duration) {\r\n            var baseInterval = this.get(\"baseInterval\");\r\n            var groupInterval = $time.chooseInterval(0, duration, this.get(\"groupCount\", Infinity), this.get(\"groupIntervals\"));\r\n            if ($time.getIntervalDuration(groupInterval) < $time.getIntervalDuration(baseInterval)) {\r\n                groupInterval = __assign({}, baseInterval);\r\n            }\r\n            return groupInterval;\r\n        }\r\n    });\r\n    /**\r\n     * Return `max` of a specified time interval.\r\n     *\r\n     * Will work only if the axis was grouped to this interval at least once.\r\n     *\r\n     * @since 5.2.1\r\n     * @param   interval  Interval\r\n     * @return            Max\r\n     */\r\n    Object.defineProperty(DateAxis.prototype, \"getIntervalMax\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (interval) {\r\n            return this._intervalMax[interval.timeUnit + interval.count];\r\n        }\r\n    });\r\n    /**\r\n     * Return `min` of a specified time interval.\r\n     *\r\n     * Will work only if the axis was grouped to this interval at least once.\r\n     *\r\n     * @since 5.2.1\r\n     * @param   interval  Interval\r\n     * @return            Min\r\n     */\r\n    Object.defineProperty(DateAxis.prototype, \"getIntervalMin\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (interval) {\r\n            return this._intervalMin[interval.timeUnit + interval.count];\r\n        }\r\n    });\r\n    Object.defineProperty(DateAxis.prototype, \"_handleRangeChange\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            _super.prototype._handleRangeChange.call(this);\r\n            var selectionMin = Math.round(this.getPrivate(\"selectionMin\"));\r\n            var selectionMax = Math.round(this.getPrivate(\"selectionMax\"));\r\n            if ($type.isNumber(selectionMin) && $type.isNumber(selectionMax)) {\r\n                if (this.get(\"endLocation\") == 0) {\r\n                    selectionMax += 1;\r\n                }\r\n                if (this.get(\"groupData\") && !this._groupingCalculated) {\r\n                    this._groupingCalculated = true;\r\n                    var modifiedDifference = (selectionMax - selectionMin) + (this.get(\"startLocation\", 0) + (1 - this.get(\"endLocation\", 1)) * this.baseDuration());\r\n                    var groupInterval = this.get(\"groupInterval\");\r\n                    if (!groupInterval) {\r\n                        groupInterval = this.getGroupInterval(modifiedDifference);\r\n                    }\r\n                    var current = this.getPrivate(\"groupInterval\");\r\n                    if (groupInterval && (!current || (current.timeUnit !== groupInterval.timeUnit || current.count !== groupInterval.count) || this._seriesDataGrouped)) {\r\n                        this._seriesDataGrouped = false;\r\n                        this.setPrivateRaw(\"groupInterval\", groupInterval);\r\n                        this._setBaseInterval(groupInterval);\r\n                        if (groupInterval) {\r\n                            var newId_1 = groupInterval.timeUnit + groupInterval.count;\r\n                            $array.each(this.series, function (series) {\r\n                                if (series.get(\"baseAxis\") === _this) {\r\n                                    series.setDataSet(newId_1);\r\n                                }\r\n                            });\r\n                            this.markDirtyExtremes();\r\n                        }\r\n                    }\r\n                }\r\n                $array.each(this.series, function (series) {\r\n                    if (series.get(\"baseAxis\") === _this) {\r\n                        var fieldName_1 = (_this.getPrivate(\"name\") + _this.get(\"renderer\").getPrivate(\"letter\"));\r\n                        var start = $array.getSortedIndex(series.dataItems, function (dataItem) {\r\n                            return $order.compare(dataItem.get(fieldName_1), selectionMin);\r\n                        });\r\n                        var startIndex = start.index;\r\n                        if (startIndex > 0) {\r\n                            startIndex -= 1;\r\n                        }\r\n                        var end = $array.getSortedIndex(series.dataItems, function (dataItem) {\r\n                            return $order.compare(dataItem.get(fieldName_1), selectionMax);\r\n                        });\r\n                        var endIndex = end.index;\r\n                        var endIndex2 = endIndex;\r\n                        if (endIndex2 > 0) {\r\n                            endIndex2--;\r\n                        }\r\n                        var firstDataItem = series.dataItems[startIndex];\r\n                        var lastDataItem = series.dataItems[endIndex2];\r\n                        var lastDate = void 0;\r\n                        var firstDate = void 0;\r\n                        if (firstDataItem) {\r\n                            firstDate = firstDataItem.get(fieldName_1);\r\n                        }\r\n                        if (lastDataItem) {\r\n                            lastDate = lastDataItem.get(fieldName_1);\r\n                        }\r\n                        var outOfSelection = false;\r\n                        if (lastDate != null && firstDate != null) {\r\n                            if (lastDate < selectionMin || firstDate > selectionMax) {\r\n                                outOfSelection = true;\r\n                            }\r\n                        }\r\n                        series.setPrivate(\"outOfSelection\", outOfSelection);\r\n                        series.setPrivate(\"startIndex\", startIndex);\r\n                        series.setPrivate(\"endIndex\", endIndex);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(DateAxis.prototype, \"_adjustMinMax\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (min, max, gridCount, _strictMode) {\r\n            return { min: min, max: max, step: (max - min) / gridCount };\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(DateAxis.prototype, \"intervalDuration\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            return this._intervalDuration;\r\n        }\r\n    });\r\n    Object.defineProperty(DateAxis.prototype, \"_saveMinMax\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (min, max) {\r\n            var groupInterval = this.getPrivate(\"groupInterval\");\r\n            if (!groupInterval) {\r\n                groupInterval = this.get(\"baseInterval\");\r\n            }\r\n            var id = groupInterval.timeUnit + groupInterval.count;\r\n            this._intervalMin[id] = min;\r\n            this._intervalMax[id] = max;\r\n        }\r\n    });\r\n    Object.defineProperty(DateAxis.prototype, \"_prepareAxisItems\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var min = this.getPrivate(\"min\");\r\n            var max = this.getPrivate(\"max\");\r\n            if ($type.isNumber(min) && $type.isNumber(max)) {\r\n                var selectionMin = Math.round(this.getPrivate(\"selectionMin\"));\r\n                var selectionMax = Math.round(this.getPrivate(\"selectionMax\"));\r\n                var renderer = this.get(\"renderer\");\r\n                var baseInterval = this.getPrivate(\"baseInterval\");\r\n                var value = selectionMin;\r\n                var i = 0;\r\n                var intervals = this.get(\"gridIntervals\");\r\n                var gridInterval = $time.chooseInterval(0, selectionMax - selectionMin, renderer.gridCount(), intervals);\r\n                if ($time.getIntervalDuration(gridInterval) < this.baseDuration()) {\r\n                    gridInterval = __assign({}, baseInterval);\r\n                }\r\n                var intervalDuration = $time.getIntervalDuration(gridInterval);\r\n                this._intervalDuration = intervalDuration;\r\n                var nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\r\n                value = $time.round(new Date(selectionMin - intervalDuration), gridInterval.timeUnit, gridInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, new Date(min), this._root.timezone).getTime();\r\n                var previousValue = value - intervalDuration;\r\n                var format = void 0;\r\n                var formats = this.get(\"dateFormats\");\r\n                this.setPrivateRaw(\"gridInterval\", gridInterval);\r\n                while (value < selectionMax + intervalDuration) {\r\n                    var dataItem = void 0;\r\n                    if (this.dataItems.length < i + 1) {\r\n                        dataItem = new DataItem(this, undefined, {});\r\n                        this._dataItems.push(dataItem);\r\n                        this.processDataItem(dataItem);\r\n                    }\r\n                    else {\r\n                        dataItem = this.dataItems[i];\r\n                    }\r\n                    this._createAssets(dataItem, []);\r\n                    if (dataItem.isHidden()) {\r\n                        dataItem.show();\r\n                    }\r\n                    dataItem.setRaw(\"value\", value);\r\n                    var endValue = value + $time.getDuration(gridInterval.timeUnit, gridInterval.count * 1.05);\r\n                    endValue = $time.round(new Date(endValue), gridInterval.timeUnit, 1, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\r\n                    dataItem.setRaw(\"endValue\", endValue);\r\n                    var date = new Date(value);\r\n                    format = formats[gridInterval.timeUnit];\r\n                    if (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\r\n                        if (gridInterval.timeUnit != \"year\") {\r\n                            if ($time.checkChange(value, previousValue, nextGridUnit, this._root.utc, this._root.timezone)) {\r\n                                format = this.get(\"periodChangeDateFormats\")[gridInterval.timeUnit];\r\n                            }\r\n                        }\r\n                    }\r\n                    var label = dataItem.get(\"label\");\r\n                    if (label) {\r\n                        label.set(\"text\", this._root.dateFormatter.format(date, format));\r\n                    }\r\n                    this._prepareDataItem(dataItem, gridInterval.count);\r\n                    previousValue = value;\r\n                    value = endValue;\r\n                    if (value == previousValue) {\r\n                        break;\r\n                    }\r\n                    i++;\r\n                }\r\n                for (var j = i; j < this.dataItems.length; j++) {\r\n                    this.dataItems[j].hide();\r\n                }\r\n                $array.each(this.series, function (series) {\r\n                    if (series.inited) {\r\n                        series._markDirtyAxes();\r\n                    }\r\n                });\r\n            }\r\n            this._updateGhost();\r\n        }\r\n    });\r\n    Object.defineProperty(DateAxis.prototype, \"_getDelta\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this._deltaMinMax = this.baseDuration() / 2;\r\n        }\r\n    });\r\n    Object.defineProperty(DateAxis.prototype, \"_fixMin\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (min) {\r\n            var baseInterval = this.getPrivate(\"baseInterval\");\r\n            var startTime = $time.round(new Date(min), baseInterval.timeUnit, baseInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\r\n            var endTime = startTime + $time.getDuration(baseInterval.timeUnit, baseInterval.count * 1.05);\r\n            endTime = $time.round(new Date(endTime), baseInterval.timeUnit, 1, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\r\n            return startTime + (endTime - startTime) * this.get(\"startLocation\", 0);\r\n        }\r\n    });\r\n    /* goes up to the year\r\n    protected _getFormat(timeUnit: TimeUnit, value: number, previousValue: number) {\r\n        const formats = this.get(\"dateFormats\")!;\r\n        let format = formats[timeUnit];\r\n\r\n        if (this.get(\"markUnitChange\")) {\r\n            let nextGridUnit = $time.getNextUnit(timeUnit);\r\n\r\n            while (nextGridUnit != undefined) {\r\n\r\n                if (nextGridUnit) {\r\n                    if (timeUnit != \"year\") {\r\n                        if ($time.checkChange(value, previousValue, nextGridUnit, this._root.utc, this._root.timezone)) {\r\n                            format = this.get(\"periodChangeDateFormats\")![timeUnit];\r\n                            timeUnit = nextGridUnit;\r\n                            nextGridUnit = $time.getNextUnit(nextGridUnit);\r\n                        }\r\n                        else {\r\n                            nextGridUnit = undefined;\r\n                        }\r\n                    }\r\n                    else {\r\n                        nextGridUnit = undefined;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return format;\r\n    }\r\n    */\r\n    Object.defineProperty(DateAxis.prototype, \"_fixMax\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (max) {\r\n            var baseInterval = this.getPrivate(\"baseInterval\");\r\n            var startTime = $time.round(new Date(max), baseInterval.timeUnit, baseInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\r\n            var endTime = startTime + $time.getDuration(baseInterval.timeUnit, baseInterval.count * 1.05);\r\n            endTime = $time.round(new Date(endTime), baseInterval.timeUnit, 1, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\r\n            return startTime + (endTime - startTime) * this.get(\"endLocation\", 1);\r\n        }\r\n    });\r\n    Object.defineProperty(DateAxis.prototype, \"_updateDates\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (_date) {\r\n        }\r\n    });\r\n    /**\r\n     * Returns a duration of currently active `baseInterval` in milliseconds.\r\n     *\r\n     * @return Duration\r\n     */\r\n    Object.defineProperty(DateAxis.prototype, \"baseDuration\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            return this._baseDuration;\r\n            //return $time.getIntervalDuration(this.getPrivate(\"baseInterval\"));\r\n        }\r\n    });\r\n    /**\r\n     * Returns a duration of user-defined `baseInterval` in milliseconds.\r\n     *\r\n     * @return Duration\r\n     */\r\n    Object.defineProperty(DateAxis.prototype, \"baseMainDuration\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            return $time.getIntervalDuration(this.get(\"baseInterval\"));\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(DateAxis.prototype, \"processSeriesDataItem\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem, fields) {\r\n            var _this = this;\r\n            var baseInterval = this.getPrivate(\"baseInterval\");\r\n            if (!dataItem.open) {\r\n                dataItem.open = {};\r\n            }\r\n            if (!dataItem.close) {\r\n                dataItem.close = {};\r\n            }\r\n            $array.each(fields, function (field) {\r\n                var value = dataItem.get(field);\r\n                if ($type.isNumber(value)) {\r\n                    var startTime = dataItem.open[field];\r\n                    var endTime = dataItem.close[field];\r\n                    // this is done to save cpu, as rounding is quite expensive, especially with timezone set. \r\n                    // if value is between prev start and end, it means it didn't change, all is fine.\r\n                    if (value >= startTime && value <= endTime) {\r\n                    }\r\n                    else {\r\n                        startTime = $time.round(new Date(value), baseInterval.timeUnit, baseInterval.count, _this._root.locale.firstDayOfWeek, _this._root.utc, undefined, _this._root.timezone).getTime();\r\n                        endTime = startTime + $time.getDuration(baseInterval.timeUnit, baseInterval.count * 1.05);\r\n                        endTime = $time.round(new Date(endTime), baseInterval.timeUnit, 1, _this._root.locale.firstDayOfWeek, _this._root.utc, undefined, _this._root.timezone).getTime();\r\n                        dataItem.open[field] = startTime;\r\n                        dataItem.close[field] = endTime;\r\n                    }\r\n                    _this._updateDates(startTime);\r\n                }\r\n            });\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(DateAxis.prototype, \"getDataItemPositionX\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem, field, cellLocation, axisLocation) {\r\n            var openValue;\r\n            var closeValue;\r\n            if (dataItem.open && dataItem.close) {\r\n                openValue = dataItem.open[field];\r\n                closeValue = dataItem.close[field];\r\n            }\r\n            else {\r\n                openValue = dataItem.get(field);\r\n                closeValue = openValue;\r\n            }\r\n            var value = openValue + (closeValue - openValue) * cellLocation;\r\n            value = this._baseValue + (value - this._baseValue) * axisLocation;\r\n            return this.valueToPosition(value);\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(DateAxis.prototype, \"getDataItemCoordinateX\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem, field, cellLocation, axisLocation) {\r\n            return this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, cellLocation, axisLocation));\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(DateAxis.prototype, \"getDataItemPositionY\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem, field, cellLocation, axisLocation) {\r\n            var openValue;\r\n            var closeValue;\r\n            if (dataItem.open && dataItem.close) {\r\n                openValue = dataItem.open[field];\r\n                closeValue = dataItem.close[field];\r\n            }\r\n            else {\r\n                openValue = dataItem.get(field);\r\n                closeValue = openValue;\r\n            }\r\n            var value = openValue + (closeValue - openValue) * cellLocation;\r\n            value = this._baseValue + (value - this._baseValue) * axisLocation;\r\n            return this.valueToPosition(value);\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(DateAxis.prototype, \"getDataItemCoordinateY\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem, field, cellLocation, axisLocation) {\r\n            return this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, cellLocation, axisLocation));\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(DateAxis.prototype, \"roundAxisPosition\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (position, location) {\r\n            var value = this.positionToValue(position);\r\n            value = value - (location - 0.5) * this.baseDuration();\r\n            var baseInterval = this.getPrivate(\"baseInterval\");\r\n            if (!$type.isNaN(value)) {\r\n                var timeZone = this._root.timezone;\r\n                var firstDayOfWeek = this._root.locale.firstDayOfWeek;\r\n                value = $time.round(new Date(value), baseInterval.timeUnit, baseInterval.count, firstDayOfWeek, this._root.utc, new Date(this.getPrivate(\"min\", 0)), timeZone).getTime();\r\n                var duration = $time.getDateIntervalDuration(baseInterval, new Date(value), firstDayOfWeek, this._root.utc, this._root.timezone);\r\n                if (timeZone) {\r\n                    value = $time.round(new Date(value + this.baseDuration() * 0.05), baseInterval.timeUnit, baseInterval.count, firstDayOfWeek, this._root.utc, new Date(this.getPrivate(\"min\", 0)), timeZone).getTime();\r\n                    var newValue = value + duration * location;\r\n                    duration = $time.getDateIntervalDuration(baseInterval, new Date(newValue), firstDayOfWeek, this._root.utc, this._root.timezone);\r\n                }\r\n                return this.valueToPosition(value + duration * location);\r\n            }\r\n            return NaN;\r\n        }\r\n    });\r\n    /**\r\n     * Returns text to be used in an axis tooltip for specific relative position.\r\n     *\r\n     * @param   position  Position\r\n     * @return            Tooltip text\r\n     */\r\n    Object.defineProperty(DateAxis.prototype, \"getTooltipText\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (position) {\r\n            //@todo number formatter + tag\r\n            if (this.getPrivate(\"min\") != null) {\r\n                var format = this.get(\"tooltipDateFormats\")[this.getPrivate(\"baseInterval\").timeUnit];\r\n                var value = this.positionToValue(position);\r\n                var date = new Date(value);\r\n                var baseInterval = this.getPrivate(\"baseInterval\");\r\n                var duration = $time.getDateIntervalDuration(baseInterval, date, this._root.locale.firstDayOfWeek, this._root.utc, this._root.timezone);\r\n                return this._root.dateFormatter.format(new Date(value + this.get(\"tooltipIntervalOffset\", -this.get(\"tooltipLocation\", 0.5)) * duration), this.get(\"tooltipDateFormat\", format));\r\n            }\r\n            return \"\";\r\n        }\r\n    });\r\n    /**\r\n     * Returns a data item from series that is closest to the `position`.\r\n     *\r\n     * @param   series    Series\r\n     * @param   position  Relative position\r\n     * @return            Data item\r\n     */\r\n    Object.defineProperty(DateAxis.prototype, \"getSeriesItem\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (series, position, location) {\r\n            var fieldName = (this.getPrivate(\"name\") + this.get(\"renderer\").getPrivate(\"letter\"));\r\n            var value = this.positionToValue(position);\r\n            if (location == null) {\r\n                location = 0.5;\r\n            }\r\n            value = value - (location - 0.5) * this.baseDuration();\r\n            var result = $array.getSortedIndex(series.dataItems, function (dataItem) {\r\n                var diValue = 0;\r\n                if (dataItem.open) {\r\n                    diValue = dataItem.open[fieldName];\r\n                }\r\n                return $order.compare(diValue, value);\r\n            });\r\n            if (series.get(\"snapTooltip\")) {\r\n                var first = series.dataItems[result.index - 1];\r\n                var second = series.dataItems[result.index];\r\n                if (first && second) {\r\n                    if (first.open && second.close) {\r\n                        var open_1 = first.open[fieldName];\r\n                        var close_1 = second.close[fieldName];\r\n                        if (Math.abs(value - open_1) > Math.abs(value - close_1)) {\r\n                            return second;\r\n                        }\r\n                    }\r\n                }\r\n                return first;\r\n            }\r\n            else {\r\n                // @todo check if is in range\r\n                var dataItem = series.dataItems[result.index - 1];\r\n                if (dataItem) {\r\n                    if (dataItem.open && dataItem.close) {\r\n                        var open_2 = dataItem.open[fieldName];\r\n                        var close_2 = dataItem.close[fieldName];\r\n                        if (value >= open_2 && value <= close_2) {\r\n                            return dataItem;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(DateAxis.prototype, \"shouldGap\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem, nextItem, autoGapCount, fieldName) {\r\n            var value1 = dataItem.get(fieldName);\r\n            var value2 = nextItem.get(fieldName);\r\n            if (value2 - value1 > this.baseDuration() * autoGapCount) {\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n    });\r\n    /**\r\n     * Zooms the axis to specific `start` and `end` dates.\r\n     *\r\n     * Optional `duration` specifies duration of zoom animation in milliseconds.\r\n     *\r\n     * @param  start     Start Date\r\n     * @param  end       End Date\r\n     * @param  duration  Duration in milliseconds\r\n     */\r\n    Object.defineProperty(DateAxis.prototype, \"zoomToDates\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (start, end, duration) {\r\n            this.zoomToValues(start.getTime(), end.getTime(), duration);\r\n        }\r\n    });\r\n    /**\r\n     * Returns a `Date` object corresponding to specific position within plot\r\n     * area.\r\n     *\r\n     * @param   position  Pposition\r\n     * @return            Date\r\n     */\r\n    Object.defineProperty(DateAxis.prototype, \"positionToDate\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (position) {\r\n            return new Date(this.positionToValue(position));\r\n        }\r\n    });\r\n    /**\r\n     * Returns a relative position within plot area that corresponds to specific\r\n     * date.\r\n     *\r\n     * @param   date  Date\r\n     * @return        Position\r\n     */\r\n    Object.defineProperty(DateAxis.prototype, \"dateToPosition\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (date) {\r\n            return this.valueToPosition(date.getTime());\r\n        }\r\n    });\r\n    /**\r\n     * Returns position span between start and end of a single cell in axis.\r\n     *\r\n     * @since 5.2.30\r\n     * @return Position\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(DateAxis.prototype, \"getCellWidthPosition\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var max = this.getPrivate(\"selectionMax\", this.getPrivate(\"max\"));\r\n            var min = this.getPrivate(\"selectionMin\", this.getPrivate(\"min\"));\r\n            if ($type.isNumber(max) && $type.isNumber(min)) {\r\n                return this.baseDuration() / (max - min);\r\n            }\r\n            return 0.05;\r\n        }\r\n    });\r\n    Object.defineProperty(DateAxis, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"DateAxis\"\r\n    });\r\n    Object.defineProperty(DateAxis, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: ValueAxis.classNames.concat([DateAxis.className])\r\n    });\r\n    return DateAxis;\r\n}(ValueAxis));\r\nexport { DateAxis };\r\n//# sourceMappingURL=DateAxis.js.map","import { __extends, __values } from \"tslib\";\r\nimport { ValueAxis } from \"./ValueAxis\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\nimport * as $math from \"../../../core/util/Math\";\r\n/**\r\n * Creates a duration axis.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/duration-axis/} for more info\r\n * @important\r\n */\r\nvar DurationAxis = /** @class */ (function (_super) {\r\n    __extends(DurationAxis, _super);\r\n    function DurationAxis() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        Object.defineProperty(_this, \"_dataGrouped\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(_this, \"_groupingCalculated\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(_this, \"_intervalDuration\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(DurationAxis.prototype, \"_afterNew\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\r\n            _super.prototype._afterNew.call(this);\r\n        }\r\n    });\r\n    Object.defineProperty(DurationAxis.prototype, \"_adjustMinMax\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (min, max, gridCount, strictMode) {\r\n            var e_1, _a;\r\n            var minMaxStep;\r\n            var durationFormatter = this.getDurationFormatter();\r\n            var baseUnit = this.get(\"baseUnit\");\r\n            // we don't allow to go to smaller units, setting so to avoid invalidation\r\n            this.setRaw(\"maxPrecision\", 0);\r\n            if (baseUnit == \"millisecond\" || baseUnit == \"second\" || baseUnit == \"minute\" || baseUnit == \"hour\") {\r\n                // will fail if 0\r\n                if (gridCount <= 1) {\r\n                    gridCount = 1;\r\n                }\r\n                gridCount = Math.round(gridCount);\r\n                //let initialMin: number = min;\r\n                //let initialMax: number = max;\r\n                var difference = max - min;\r\n                // in case min and max is the same, use max\r\n                if (difference === 0) {\r\n                    difference = Math.abs(max);\r\n                }\r\n                var step = difference / gridCount;\r\n                var divisors = [60, 30, 20, 15, 10, 2, 1];\r\n                var realDivisor = 1;\r\n                if (baseUnit == \"hour\") {\r\n                    divisors = [24, 12, 6, 4, 2, 1];\r\n                }\r\n                try {\r\n                    for (var divisors_1 = __values(divisors), divisors_1_1 = divisors_1.next(); !divisors_1_1.done; divisors_1_1 = divisors_1.next()) {\r\n                        var divisor = divisors_1_1.value;\r\n                        if (difference / divisor > gridCount) {\r\n                            realDivisor = divisor;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (divisors_1_1 && !divisors_1_1.done && (_a = divisors_1.return)) _a.call(divisors_1);\r\n                    }\r\n                    finally { if (e_1) throw e_1.error; }\r\n                }\r\n                var count = Math.ceil(((max - min) / realDivisor) / gridCount);\r\n                var exponent = Math.log(Math.abs(count)) * Math.LOG10E;\r\n                var power = Math.pow(10, Math.floor(exponent)) / 10;\r\n                var reducedCount = count / power;\r\n                // find closest to divisor\r\n                var closest = $math.closest(divisors, reducedCount);\r\n                count = closest * power;\r\n                step = realDivisor * count;\r\n                min = Math.floor(min / step) * step;\r\n                max = Math.ceil(max / step) * step;\r\n                /*\r\n                causese SO with seconds\r\n                if (strictMode) {\r\n                    min -= step;\r\n                    if (min < 0 && initialMin >= 0) {\r\n                        min = 0;\r\n                    }\r\n                    max += step;\r\n    \r\n                    if (max > 0 && initialMax <= 0) {\r\n                        max = 0;\r\n                    }\r\n                }*/\r\n                minMaxStep = { min: min, max: max, step: step };\r\n            }\r\n            else {\r\n                minMaxStep = _super.prototype._adjustMinMax.call(this, min, max, gridCount, strictMode);\r\n            }\r\n            // choose duration formatter based on step\r\n            this.setPrivateRaw(\"durationFormat\", durationFormatter.getFormat(minMaxStep.step, minMaxStep.max, baseUnit));\r\n            return minMaxStep;\r\n        }\r\n    });\r\n    Object.defineProperty(DurationAxis.prototype, \"_formatText\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (value) {\r\n            var formatter = this.getDurationFormatter();\r\n            return formatter.format(value, this.getPrivate(\"durationFormat\"), this.get(\"baseUnit\"));\r\n        }\r\n    });\r\n    /**\r\n     * Returns text to be used in an axis tooltip for specific relative position.\r\n     *\r\n     * @param   position  Position\r\n     * @return            Tooltip text\r\n     */\r\n    Object.defineProperty(DurationAxis.prototype, \"getTooltipText\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (position) {\r\n            var formatter = this.getDurationFormatter();\r\n            var extraDecimals = this.get(\"extraTooltipPrecision\", 0);\r\n            var decimals = this.getPrivate(\"stepDecimalPlaces\", 0) + extraDecimals;\r\n            var value = $math.round(this.positionToValue(position), decimals);\r\n            return formatter.format(value, this.getPrivate(\"durationFormat\"), this.get(\"baseUnit\"));\r\n        }\r\n    });\r\n    Object.defineProperty(DurationAxis, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"DurationAxis\"\r\n    });\r\n    Object.defineProperty(DurationAxis, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: ValueAxis.classNames.concat([DurationAxis.className])\r\n    });\r\n    return DurationAxis;\r\n}(ValueAxis));\r\nexport { DurationAxis };\r\n//# sourceMappingURL=DurationAxis.js.map","import { __assign, __extends } from \"tslib\";\r\nimport { DateAxis } from \"./DateAxis\";\r\nimport { DataItem } from \"../../../core/render/Component\";\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $order from \"../../../core/util/Order\";\r\nimport * as $time from \"../../../core/util/Time\";\r\nimport * as $type from \"../../../core/util/Type\";\r\n/**\r\n * A version of a [[DateAxis]] which removes intervals that don't have any data\r\n * items in them.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/gapless-date-axis/} for more info\r\n * @important\r\n */\r\nvar GaplessDateAxis = /** @class */ (function (_super) {\r\n    __extends(GaplessDateAxis, _super);\r\n    function GaplessDateAxis() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        Object.defineProperty(_this, \"_frequency\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(_this, \"_dates\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(GaplessDateAxis.prototype, \"_afterNew\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this.valueFields.push(\"date\");\r\n            _super.prototype._afterNew.call(this);\r\n        }\r\n    });\r\n    Object.defineProperty(GaplessDateAxis.prototype, \"_updateDates\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (date) {\r\n            var dates = this._dates;\r\n            var result = $array.getSortedIndex(dates, function (x) { return $order.compare(x, date); });\r\n            if (!result.found) {\r\n                $array.insertIndex(dates, result.index, date);\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(GaplessDateAxis.prototype, \"_updateAllDates\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            this._dates.length = 0;\r\n            $array.each(this.series, function (series) {\r\n                var field = \"valueX\";\r\n                if (series.get(\"yAxis\") == _this) {\r\n                    field = \"valueY\";\r\n                }\r\n                $array.each(series.dataItems, function (dataItem) {\r\n                    var value = dataItem.get(field);\r\n                    if ($type.isNumber(value)) {\r\n                        if (dataItem.open) {\r\n                            _this._updateDates(dataItem.open[field]);\r\n                        }\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    });\r\n    /**\r\n     * Convers value to a relative position on axis.\r\n     *\r\n     * @param   value  Value\r\n     * @return         Relative position\r\n     */\r\n    Object.defineProperty(GaplessDateAxis.prototype, \"valueToPosition\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (value) {\r\n            var dates = this._dates;\r\n            var len = dates.length;\r\n            var result = $array.getSortedIndex(dates, function (x) { return $order.compare(x, value); });\r\n            var index = result.index;\r\n            if (result.found) {\r\n                return index / len;\r\n            }\r\n            else {\r\n                if (index > 0) {\r\n                    index -= 1;\r\n                }\r\n                var itemValue = dates[index];\r\n                var d = 0;\r\n                if (itemValue > value) {\r\n                    d = itemValue - value;\r\n                }\r\n                else {\r\n                    d = value - itemValue;\r\n                }\r\n                return index / len + d / this.baseDuration() / len;\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * Converts numeric value from axis scale to index.\r\n     *\r\n     * @param  value  Value\r\n     * @return        Index\r\n     */\r\n    Object.defineProperty(GaplessDateAxis.prototype, \"valueToIndex\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (value) {\r\n            var dates = this._dates;\r\n            var result = $array.getSortedIndex(dates, function (x) { return $order.compare(x, value); });\r\n            var index = result.index;\r\n            if (result.found) {\r\n                return index;\r\n            }\r\n            else {\r\n                if (index > 0) {\r\n                    index -= 1;\r\n                }\r\n                return index;\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * Converts a relative position to a corresponding numeric value from axis\r\n     * scale.\r\n     *\r\n     * @param   position  Relative position\r\n     * @return            Value\r\n     */\r\n    Object.defineProperty(GaplessDateAxis.prototype, \"positionToValue\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (position) {\r\n            var len = this._dates.length;\r\n            var index = position * len;\r\n            var findex = Math.floor(index);\r\n            if (findex < 0) {\r\n                findex = 0;\r\n            }\r\n            if (findex > len - 1) {\r\n                findex = len - 1;\r\n            }\r\n            return this._dates[findex] + (index - findex) * this.baseDuration();\r\n        }\r\n    });\r\n    Object.defineProperty(GaplessDateAxis.prototype, \"_fixZoomFactor\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this.setPrivateRaw(\"maxZoomFactor\", this._dates.length);\r\n        }\r\n    });\r\n    Object.defineProperty(GaplessDateAxis.prototype, \"_prepareAxisItems\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            var startTime = this.getPrivate(\"selectionMin\", 0);\r\n            var endTime = this.getPrivate(\"selectionMax\", 0);\r\n            if ($type.isNumber(startTime) && $type.isNumber(endTime)) {\r\n                if (this._seriesValuesDirty) {\r\n                    this._seriesValuesDirty = false;\r\n                    this._updateAllDates();\r\n                }\r\n                var dates_1 = this._dates;\r\n                var renderer = this.get(\"renderer\");\r\n                var len = dates_1.length;\r\n                var startIndex_1 = this.valueToIndex(startTime);\r\n                if (startIndex_1 > 0) {\r\n                    startIndex_1--;\r\n                }\r\n                var endIndex_1 = this.valueToIndex(endTime);\r\n                if (endIndex_1 < len - 1) {\r\n                    endIndex_1++;\r\n                }\r\n                var maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\"), 1 / Number.MAX_SAFE_INTEGER);\r\n                var frequency = Math.min(len, Math.ceil((endIndex_1 - startIndex_1) / maxCount));\r\n                frequency = Math.max(1, frequency);\r\n                startIndex_1 = Math.floor(startIndex_1 / frequency) * frequency;\r\n                this._frequency = frequency;\r\n                for (var j = 0, length_1 = this.dataItems.length; j < length_1; j++) {\r\n                    this.dataItems[j].hide();\r\n                }\r\n                var realDuration = (endTime - startTime) - ((endTime - startTime) / this.baseDuration() - (endIndex_1 - startIndex_1)) * this.baseDuration();\r\n                // if all items are on axis\r\n                var gridInterval_1 = $time.chooseInterval(0, realDuration, maxCount, this.get(\"gridIntervals\"));\r\n                var baseInterval = this.getPrivate(\"baseInterval\");\r\n                var intervalDuration_1 = $time.getIntervalDuration(gridInterval_1);\r\n                if (intervalDuration_1 < this.baseDuration()) {\r\n                    gridInterval_1 = __assign({}, baseInterval);\r\n                    intervalDuration_1 = $time.getIntervalDuration(gridInterval_1);\r\n                }\r\n                this._intervalDuration = intervalDuration_1;\r\n                var formats_1 = this.get(\"dateFormats\");\r\n                var selectedItems_1 = [];\r\n                var firstDate = new Date();\r\n                if (this._dates[0]) {\r\n                    firstDate = new Date(this._dates[0]);\r\n                }\r\n                var startDate = $time.round(new Date(this.getPrivate(\"min\", 0)), gridInterval_1.timeUnit, gridInterval_1.count, this._root.locale.firstDayOfWeek, this._root.utc, firstDate, this._root.timezone);\r\n                var value = $time.add(startDate, gridInterval_1.timeUnit, -1, this._root.utc, this._root.timezone).getTime();\r\n                var selectionMax = this.getPrivate(\"selectionMax\");\r\n                var previousPosition = -Infinity;\r\n                var minDifference = (this.get(\"end\", 1) - this.get(\"start\", 0)) / maxCount;\r\n                while (value <= selectionMax) {\r\n                    var index = this.valueToIndex(value);\r\n                    var realValue = this._dates[index];\r\n                    if (realValue < value) {\r\n                        for (var i = index, len_1 = this._dates.length; i < len_1; i++) {\r\n                            var realValue_1 = this._dates[i];\r\n                            if (realValue_1 >= value) {\r\n                                index = i;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    var position = this.valueToPosition(realValue);\r\n                    if (position - previousPosition >= minDifference * 0.95) {\r\n                        $array.move(selectedItems_1, index);\r\n                        previousPosition = position;\r\n                    }\r\n                    var previousValue = value;\r\n                    value += $time.getDuration(gridInterval_1.timeUnit, gridInterval_1.count * 1.05);\r\n                    value = $time.round(new Date(value), gridInterval_1.timeUnit, gridInterval_1.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\r\n                    if (value == previousValue) {\r\n                        break;\r\n                    }\r\n                }\r\n                if (selectedItems_1.length > 0) {\r\n                    var i_1 = 0;\r\n                    var previousValue_1 = value - intervalDuration_1 * 10;\r\n                    var nextGridUnit_1 = $time.getNextUnit(gridInterval_1.timeUnit);\r\n                    $array.each(selectedItems_1, function (index) {\r\n                        var dataItem;\r\n                        if (_this.dataItems.length < i_1 + 1) {\r\n                            dataItem = new DataItem(_this, undefined, {});\r\n                            _this._dataItems.push(dataItem);\r\n                            _this.processDataItem(dataItem);\r\n                        }\r\n                        else {\r\n                            dataItem = _this.dataItems[i_1];\r\n                        }\r\n                        var value = dates_1[index];\r\n                        var date = new Date(value);\r\n                        var endValue = value;\r\n                        if (i_1 < selectedItems_1.length - 1) {\r\n                            endValue = dates_1[selectedItems_1[i_1 + 1]];\r\n                        }\r\n                        else {\r\n                            endValue += intervalDuration_1;\r\n                        }\r\n                        dataItem.setRaw(\"value\", value);\r\n                        dataItem.setRaw(\"endValue\", endValue);\r\n                        dataItem.setRaw(\"index\", i_1);\r\n                        if (index > startIndex_1 - 100 && index < endIndex_1 + 100) {\r\n                            var format = formats_1[gridInterval_1.timeUnit];\r\n                            format = formats_1[gridInterval_1.timeUnit];\r\n                            if (nextGridUnit_1 && _this.get(\"markUnitChange\") && $type.isNumber(previousValue_1)) {\r\n                                if (gridInterval_1.timeUnit != \"year\") {\r\n                                    if ($time.checkChange(value, previousValue_1, nextGridUnit_1, _this._root.utc, _this._root.timezone)) {\r\n                                        format = _this.get(\"periodChangeDateFormats\")[gridInterval_1.timeUnit];\r\n                                    }\r\n                                }\r\n                            }\r\n                            _this._createAssets(dataItem, []);\r\n                            var label = dataItem.get(\"label\");\r\n                            if (label) {\r\n                                label.set(\"text\", _this._root.dateFormatter.format(date, format));\r\n                            }\r\n                            if (dataItem.isHidden()) {\r\n                                dataItem.show();\r\n                            }\r\n                            _this._prepareDataItem(dataItem, gridInterval_1.count);\r\n                        }\r\n                        i_1++;\r\n                        previousValue_1 = value;\r\n                    });\r\n                }\r\n                $array.each(this.series, function (series) {\r\n                    if (series.inited) {\r\n                        series._markDirtyAxes();\r\n                    }\r\n                });\r\n            }\r\n            this._updateGhost();\r\n        }\r\n    });\r\n    Object.defineProperty(GaplessDateAxis, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"GaplessDateAxis\"\r\n    });\r\n    Object.defineProperty(GaplessDateAxis, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: DateAxis.classNames.concat([GaplessDateAxis.className])\r\n    });\r\n    return GaplessDateAxis;\r\n}(DateAxis));\r\nexport { GaplessDateAxis };\r\n//# sourceMappingURL=GaplessDateAxis.js.map","import { __extends } from \"tslib\";\r\nimport { Graphics } from \"../../../core/render/Graphics\";\r\n/**\r\n * Creates an axis grid line.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Grid} for more info\r\n * @important\r\n */\r\nvar Grid = /** @class */ (function (_super) {\r\n    __extends(Grid, _super);\r\n    function Grid() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Grid.prototype, \"_beforeChanged\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._beforeChanged.call(this);\r\n            if (this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\r\n                this._clear = true;\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Grid, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"Grid\"\r\n    });\r\n    Object.defineProperty(Grid, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: Graphics.classNames.concat([Grid.className])\r\n    });\r\n    return Grid;\r\n}(Graphics));\r\nexport { Grid };\r\n//# sourceMappingURL=Grid.js.map","import { __extends, __read } from \"tslib\";\r\nimport { DataItem } from \"../../../core/render/Component\";\r\nimport { Axis } from \"./Axis\";\r\nimport { MultiDisposer } from \"../../../core/util/Disposer\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $math from \"../../../core/util/Math\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n/**\r\n * Creates a value axis.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/} for more info\r\n * @important\r\n */\r\nvar ValueAxis = /** @class */ (function (_super) {\r\n    __extends(ValueAxis, _super);\r\n    function ValueAxis() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        Object.defineProperty(_this, \"_dirtyExtremes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(_this, \"_dirtySelectionExtremes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(_this, \"_deltaMinMax\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(_this, \"_minReal\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_maxReal\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_baseValue\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(_this, \"_syncDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_minLogAdjusted\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        return _this;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(ValueAxis.prototype, \"markDirtyExtremes\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this._dirtyExtremes = true;\r\n            this.markDirty();\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(ValueAxis.prototype, \"markDirtySelectionExtremes\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this._dirtySelectionExtremes = true;\r\n            this.markDirty();\r\n        }\r\n    });\r\n    Object.defineProperty(ValueAxis.prototype, \"_afterNew\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\r\n            this.setPrivateRaw(\"name\", \"value\");\r\n            this.addTag(\"value\");\r\n            _super.prototype._afterNew.call(this);\r\n        }\r\n    });\r\n    Object.defineProperty(ValueAxis.prototype, \"_prepareChildren\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            _super.prototype._prepareChildren.call(this);\r\n            if (this.isDirty(\"syncWithAxis\")) {\r\n                var previousValue = this._prevSettings.syncWithAxis;\r\n                if (previousValue) {\r\n                    if (this._syncDp) {\r\n                        this._syncDp.dispose();\r\n                    }\r\n                }\r\n                var syncWithAxis = this.get(\"syncWithAxis\");\r\n                if (syncWithAxis) {\r\n                    this._syncDp = new MultiDisposer([\r\n                        syncWithAxis.onPrivate(\"selectionMinFinal\", function () {\r\n                            _this._dirtySelectionExtremes = true;\r\n                        }),\r\n                        syncWithAxis.onPrivate(\"selectionMaxFinal\", function () {\r\n                            _this._dirtySelectionExtremes = true;\r\n                        })\r\n                    ]);\r\n                }\r\n            }\r\n            //if (this._dirtyExtremes || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"maxPrecision\")) {\r\n            if (this._sizeDirty || this._dirtyExtremes || this._valuesDirty || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"strictMinMaxSelection\") || this.isDirty(\"maxPrecision\") || this.isDirty(\"numberFormat\")) {\r\n                this._getMinMax();\r\n                this.ghostLabel.set(\"text\", \"\");\r\n                this._dirtyExtremes = false;\r\n            }\r\n            if (this._dirtySelectionExtremes && !this._isPanning && this.get(\"autoZoom\", true)) {\r\n                this._getSelectionMinMax();\r\n                this._dirtySelectionExtremes = false;\r\n            }\r\n            this._groupData();\r\n            if (this._sizeDirty || this._valuesDirty || this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"min\") || this.isPrivateDirty(\"selectionMax\") || this.isPrivateDirty(\"selectionMin\") || this.isPrivateDirty(\"max\") || this.isPrivateDirty(\"step\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"logarithmic\")) {\r\n                this._handleRangeChange();\r\n                this._prepareAxisItems();\r\n                this._updateAxisRanges();\r\n            }\r\n            this._baseValue = this.baseValue();\r\n        }\r\n    });\r\n    Object.defineProperty(ValueAxis.prototype, \"_groupData\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n        }\r\n    });\r\n    Object.defineProperty(ValueAxis.prototype, \"_formatText\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (value) {\r\n            var numberFormat = this.get(\"numberFormat\");\r\n            var formatter = this.getNumberFormatter();\r\n            var text = \"\";\r\n            if (numberFormat) {\r\n                text = formatter.format(value, numberFormat);\r\n            }\r\n            else {\r\n                text = formatter.format(value, undefined, this.getPrivate(\"stepDecimalPlaces\"));\r\n            }\r\n            return text;\r\n        }\r\n    });\r\n    Object.defineProperty(ValueAxis.prototype, \"_prepareAxisItems\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var min = this.getPrivate(\"min\");\r\n            var max = this.getPrivate(\"max\");\r\n            if ($type.isNumber(min) && $type.isNumber(max)) {\r\n                var logarithmic = this.get(\"logarithmic\");\r\n                var step = this.getPrivate(\"step\");\r\n                var selectionMin = this.getPrivate(\"selectionMin\");\r\n                var selectionMax = this.getPrivate(\"selectionMax\") + step;\r\n                var value = selectionMin - step;\r\n                var i = 0;\r\n                var differencePower = 1;\r\n                var minLog = min;\r\n                if (logarithmic) {\r\n                    value = this._minLogAdjusted;\r\n                    if (value < selectionMin) {\r\n                        while (value < selectionMin) {\r\n                            value += step;\r\n                        }\r\n                    }\r\n                    minLog = value;\r\n                    if (minLog <= 0) {\r\n                        minLog = 1;\r\n                        if (step < 1) {\r\n                            minLog = step;\r\n                        }\r\n                    }\r\n                    differencePower = Math.log(selectionMax - step) * Math.LOG10E - Math.log(minLog) * Math.LOG10E;\r\n                    if (differencePower > 2) {\r\n                        value = Math.pow(10, Math.log(minLog) * Math.LOG10E - 5);\r\n                    }\r\n                }\r\n                var previous = -Infinity;\r\n                while (value < selectionMax) {\r\n                    var dataItem = void 0;\r\n                    if (this.dataItems.length < i + 1) {\r\n                        dataItem = new DataItem(this, undefined, {});\r\n                        this._dataItems.push(dataItem);\r\n                        this.processDataItem(dataItem);\r\n                    }\r\n                    else {\r\n                        dataItem = this.dataItems[i];\r\n                    }\r\n                    this._createAssets(dataItem, []);\r\n                    if (dataItem.isHidden()) {\r\n                        dataItem.show();\r\n                    }\r\n                    dataItem.setRaw(\"value\", value);\r\n                    var label = dataItem.get(\"label\");\r\n                    if (label) {\r\n                        label.set(\"text\", this._formatText(value));\r\n                    }\r\n                    this._prepareDataItem(dataItem);\r\n                    if (!logarithmic) {\r\n                        value += step;\r\n                    }\r\n                    else {\r\n                        if (differencePower > 2) {\r\n                            value = Math.pow(10, Math.log(minLog) * Math.LOG10E + i - 5);\r\n                        }\r\n                        else {\r\n                            value += step;\r\n                        }\r\n                    }\r\n                    if (previous == value) {\r\n                        break;\r\n                    }\r\n                    var stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\r\n                    if (stepPower < 1) {\r\n                        // exponent is less then 1 too. Count decimals of exponent\r\n                        var decCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 2;\r\n                        // round value to avoid floating point issues\r\n                        value = $math.round(value, decCount);\r\n                    }\r\n                    i++;\r\n                    previous = value;\r\n                }\r\n                for (var j = i; j < this.dataItems.length; j++) {\r\n                    this.dataItems[j].hide();\r\n                }\r\n                $array.each(this.series, function (series) {\r\n                    if (series.inited) {\r\n                        series._markDirtyAxes();\r\n                    }\r\n                });\r\n                this._updateGhost();\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(ValueAxis.prototype, \"_prepareDataItem\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem, count) {\r\n            var renderer = this.get(\"renderer\");\r\n            var value = dataItem.get(\"value\");\r\n            var endValue = dataItem.get(\"endValue\");\r\n            var position = this.valueToPosition(value);\r\n            var endPosition = position;\r\n            var fillEndPosition = this.valueToPosition(value + this.getPrivate(\"step\"));\r\n            if ($type.isNumber(endValue)) {\r\n                endPosition = this.valueToPosition(endValue);\r\n                fillEndPosition = endPosition;\r\n            }\r\n            if (dataItem.get(\"isRange\")) {\r\n                if (endValue == null) {\r\n                    fillEndPosition = position;\r\n                }\r\n            }\r\n            renderer.updateLabel(dataItem.get(\"label\"), position, endPosition, count);\r\n            var grid = dataItem.get(\"grid\");\r\n            renderer.updateGrid(grid, position, endPosition);\r\n            if (grid) {\r\n                if (value == this.get(\"baseValue\", 0)) {\r\n                    grid.addTag(\"base\");\r\n                    grid._applyThemes();\r\n                }\r\n                else if (grid.hasTag(\"base\")) {\r\n                    grid.removeTag(\"base\");\r\n                    grid._applyThemes();\r\n                }\r\n            }\r\n            renderer.updateTick(dataItem.get(\"tick\"), position, endPosition, count);\r\n            renderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\r\n            this._processBullet(dataItem);\r\n            renderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\r\n            if (!dataItem.get(\"isRange\")) {\r\n                var fillRule = this.get(\"fillRule\");\r\n                if (fillRule) {\r\n                    fillRule(dataItem);\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(ValueAxis.prototype, \"_handleRangeChange\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var selectionMin = this.positionToValue(this.get(\"start\", 0));\r\n            var selectionMax = this.positionToValue(this.get(\"end\", 1));\r\n            var gridCount = this.get(\"renderer\").gridCount();\r\n            var minMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\r\n            var stepDecimalPlaces = $utils.decimalPlaces(minMaxStep.step);\r\n            this.setPrivateRaw(\"stepDecimalPlaces\", stepDecimalPlaces);\r\n            selectionMin = $math.round(selectionMin, stepDecimalPlaces);\r\n            selectionMax = $math.round(selectionMax, stepDecimalPlaces);\r\n            minMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\r\n            var step = minMaxStep.step;\r\n            selectionMin = minMaxStep.min;\r\n            selectionMax = minMaxStep.max;\r\n            if (this.getPrivate(\"selectionMin\") !== selectionMin || this.getPrivate(\"selectionMax\") !== selectionMax || this.getPrivate(\"step\") !== step) {\r\n                // do not change to setPrivate, will cause SO\r\n                this.setPrivateRaw(\"selectionMin\", selectionMin);\r\n                this.setPrivateRaw(\"selectionMax\", selectionMax);\r\n                this.setPrivateRaw(\"step\", step);\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * Converts a relative position to a corresponding numeric value from axis\r\n     * scale.\r\n     *\r\n     * @param   position  Relative position\r\n     * @return            Value\r\n     */\r\n    Object.defineProperty(ValueAxis.prototype, \"positionToValue\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (position) {\r\n            var min = this.getPrivate(\"min\");\r\n            var max = this.getPrivate(\"max\");\r\n            if (!this.get(\"logarithmic\")) {\r\n                return position * (max - min) + min;\r\n            }\r\n            else {\r\n                return Math.pow(Math.E, (position * ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E)) + Math.log(min) * Math.LOG10E) / Math.LOG10E);\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * Convers value to a relative position on axis.\r\n     *\r\n     * @param   value  Value\r\n     * @return         Relative position\r\n     */\r\n    Object.defineProperty(ValueAxis.prototype, \"valueToPosition\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (value) {\r\n            var min = this.getPrivate(\"min\");\r\n            var max = this.getPrivate(\"max\");\r\n            if (!this.get(\"logarithmic\")) {\r\n                return (value - min) / (max - min);\r\n            }\r\n            else {\r\n                if (value <= 0) {\r\n                    var treatZeroAs = this.get(\"treatZeroAs\");\r\n                    if ($type.isNumber(treatZeroAs)) {\r\n                        value = treatZeroAs;\r\n                    }\r\n                }\r\n                return (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(ValueAxis.prototype, \"valueToFinalPosition\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (value) {\r\n            var min = this.getPrivate(\"minFinal\");\r\n            var max = this.getPrivate(\"maxFinal\");\r\n            if (!this.get(\"logarithmic\")) {\r\n                return (value - min) / (max - min);\r\n            }\r\n            else {\r\n                if (value <= 0) {\r\n                    var treatZeroAs = this.get(\"treatZeroAs\");\r\n                    if ($type.isNumber(treatZeroAs)) {\r\n                        value = treatZeroAs;\r\n                    }\r\n                }\r\n                return (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * Returns X coordinate in pixels corresponding to specific value.\r\n     *\r\n     * @param   value     Numeric value\r\n     * @param   location  Location\r\n     * @param   baseValue Base value\r\n     * @return            X coordinate\r\n     */\r\n    Object.defineProperty(ValueAxis.prototype, \"getX\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (value, location, baseValue) {\r\n            value = baseValue + (value - baseValue) * location;\r\n            var position = this.valueToPosition(value);\r\n            return this._settings.renderer.positionToCoordinate(position);\r\n        }\r\n    });\r\n    /**\r\n     * Returns X coordinate in pixels corresponding to specific value.\r\n     *\r\n     * @param   value     Numeric value\r\n     * @param   location  Location\r\n     * @param   baseValue Base value\r\n     * @return            X coordinate\r\n     */\r\n    Object.defineProperty(ValueAxis.prototype, \"getY\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (value, location, baseValue) {\r\n            value = baseValue + (value - baseValue) * location;\r\n            var position = this.valueToPosition(value);\r\n            return this._settings.renderer.positionToCoordinate(position);\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(ValueAxis.prototype, \"getDataItemCoordinateX\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem, field, _cellLocation, axisLocation) {\r\n            return this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, _cellLocation, axisLocation));\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(ValueAxis.prototype, \"getDataItemPositionX\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem, field, _cellLocation, axisLocation) {\r\n            var value = dataItem.get(field);\r\n            var stackToItem = dataItem.get(\"stackToItemX\");\r\n            if (stackToItem) {\r\n                var series = dataItem.component;\r\n                value = value * axisLocation + series.getStackedXValueWorking(dataItem, field);\r\n            }\r\n            else {\r\n                value = this._baseValue + (value - this._baseValue) * axisLocation;\r\n            }\r\n            return this.valueToPosition(value);\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(ValueAxis.prototype, \"getDataItemCoordinateY\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem, field, _cellLocation, axisLocation) {\r\n            return this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, _cellLocation, axisLocation));\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(ValueAxis.prototype, \"getDataItemPositionY\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem, field, _cellLocation, axisLocation) {\r\n            var value = dataItem.get(field);\r\n            var stackToItem = dataItem.get(\"stackToItemY\");\r\n            if (stackToItem) {\r\n                var series = dataItem.component;\r\n                value = value * axisLocation + series.getStackedYValueWorking(dataItem, field);\r\n            }\r\n            else {\r\n                value = this._baseValue + (value - this._baseValue) * axisLocation;\r\n            }\r\n            return this.valueToPosition(value);\r\n        }\r\n    });\r\n    /**\r\n     * Returns relative position of axis' `baseValue`.\r\n     *\r\n     * @return  Base value position\r\n     */\r\n    Object.defineProperty(ValueAxis.prototype, \"basePosition\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            return this.valueToPosition(this.baseValue());\r\n        }\r\n    });\r\n    /**\r\n     * Base value of the [[ValueAxis]], which determines positive and negative\r\n     * values.\r\n     *\r\n     * @return Base value\r\n     */\r\n    Object.defineProperty(ValueAxis.prototype, \"baseValue\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var min = Math.min(this.getPrivate(\"minFinal\", -Infinity), this.getPrivate(\"selectionMin\", -Infinity));\r\n            var max = Math.max(this.getPrivate(\"maxFinal\", Infinity), this.getPrivate(\"selectionMax\", Infinity));\r\n            var baseValue = this.get(\"baseValue\", 0);\r\n            if (baseValue < min) {\r\n                baseValue = min;\r\n            }\r\n            if (baseValue > max) {\r\n                baseValue = max;\r\n            }\r\n            return baseValue;\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(ValueAxis.prototype, \"cellEndValue\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (value) {\r\n            return value;\r\n        }\r\n    });\r\n    Object.defineProperty(ValueAxis.prototype, \"fixSmallStep\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (step) {\r\n            // happens because of floating point error\r\n            if (1 + step === 1) {\r\n                step *= 2;\r\n                return this.fixSmallStep(step);\r\n            }\r\n            return step;\r\n        }\r\n    });\r\n    Object.defineProperty(ValueAxis.prototype, \"_fixMin\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (min) {\r\n            return min;\r\n        }\r\n    });\r\n    Object.defineProperty(ValueAxis.prototype, \"_fixMax\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (max) {\r\n            return max;\r\n        }\r\n    });\r\n    Object.defineProperty(ValueAxis.prototype, \"_calculateTotals\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            if (this.get(\"calculateTotals\")) {\r\n                var series = this.series[0];\r\n                if (series) {\r\n                    var startIndex = series.startIndex();\r\n                    if (series.dataItems.length > 0) {\r\n                        if (startIndex > 0) {\r\n                            startIndex--;\r\n                        }\r\n                        var endIndex = series.endIndex();\r\n                        if (endIndex < series.dataItems.length) {\r\n                            endIndex++;\r\n                        }\r\n                        var field_1;\r\n                        var vc_1;\r\n                        if (series.get(\"yAxis\") == this) {\r\n                            field_1 = \"valueY\";\r\n                            vc_1 = \"vcy\";\r\n                        }\r\n                        else if (series.get(\"xAxis\") == this) {\r\n                            field_1 = \"valueX\";\r\n                            vc_1 = \"vcx\";\r\n                        }\r\n                        var fieldWorking_1 = field_1 + \"Working\";\r\n                        if (field_1) {\r\n                            var _loop_1 = function (i) {\r\n                                var sum = 0;\r\n                                var total = 0;\r\n                                $array.each(this_1.series, function (series) {\r\n                                    if (!series.get(\"excludeFromTotal\")) {\r\n                                        var dataItem = series.dataItems[i];\r\n                                        if (dataItem) {\r\n                                            var value = dataItem.get(fieldWorking_1) * series.get(vc_1);\r\n                                            if (!$type.isNaN(value)) {\r\n                                                sum += value;\r\n                                                total += Math.abs(value);\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                });\r\n                                $array.each(this_1.series, function (series) {\r\n                                    if (!series.get(\"excludeFromTotal\")) {\r\n                                        var dataItem = series.dataItems[i];\r\n                                        if (dataItem) {\r\n                                            var value = dataItem.get(fieldWorking_1) * series.get(vc_1);\r\n                                            if (!$type.isNaN(value)) {\r\n                                                dataItem.set((field_1 + \"Total\"), total);\r\n                                                dataItem.set((field_1 + \"Sum\"), sum);\r\n                                                dataItem.set((field_1 + \"TotalPercent\"), value / total * 100);\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                });\r\n                            };\r\n                            var this_1 = this;\r\n                            for (var i = startIndex; i < endIndex; i++) {\r\n                                _loop_1(i);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(ValueAxis.prototype, \"_getSelectionMinMax\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _a;\r\n            var _this = this;\r\n            var min = this.getPrivate(\"minFinal\");\r\n            var max = this.getPrivate(\"maxFinal\");\r\n            var minDefined = this.get(\"min\");\r\n            var maxDefined = this.get(\"max\");\r\n            var extraMin = this.get(\"extraMin\", 0);\r\n            var extraMax = this.get(\"extraMax\", 0);\r\n            if (this.get(\"logarithmic\")) {\r\n                if (this.get(\"extraMin\") == null) {\r\n                    extraMin = 0.1;\r\n                }\r\n                if (this.get(\"extraMax\") == null) {\r\n                    extraMax = 0.2;\r\n                }\r\n            }\r\n            var gridCount = this.get(\"renderer\").gridCount();\r\n            var selectionStrictMinMax = this.get(\"strictMinMaxSelection\");\r\n            var strictMinMax = this.get(\"strictMinMax\");\r\n            if ($type.isNumber(min) && $type.isNumber(max)) {\r\n                var selectionMin_1 = max;\r\n                var selectionMax_1 = min;\r\n                $array.each(this.series, function (series) {\r\n                    if (!series.get(\"ignoreMinMax\")) {\r\n                        var seriesMin = void 0;\r\n                        var seriesMax = void 0;\r\n                        var outOfSelection = series.getPrivate(\"outOfSelection\");\r\n                        if (series.get(\"xAxis\") === _this) {\r\n                            if (!outOfSelection) {\r\n                                seriesMin = series.getPrivate(\"selectionMinX\", series.getPrivate(\"minX\"));\r\n                                seriesMax = series.getPrivate(\"selectionMaxX\", series.getPrivate(\"maxX\"));\r\n                            }\r\n                        }\r\n                        else if (series.get(\"yAxis\") === _this) {\r\n                            if (!outOfSelection) {\r\n                                seriesMin = series.getPrivate(\"selectionMinY\", series.getPrivate(\"minY\"));\r\n                                seriesMax = series.getPrivate(\"selectionMaxY\", series.getPrivate(\"maxY\"));\r\n                            }\r\n                        }\r\n                        if (!series.isHidden() && !series.isShowing()) {\r\n                            if ($type.isNumber(seriesMin)) {\r\n                                selectionMin_1 = Math.min(selectionMin_1, seriesMin);\r\n                            }\r\n                            if ($type.isNumber(seriesMax)) {\r\n                                selectionMax_1 = Math.max(selectionMax_1, seriesMax);\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n                this.axisRanges.each(function (range) {\r\n                    if (range.get(\"affectsMinMax\")) {\r\n                        var value = range.get(\"value\");\r\n                        if (value != null) {\r\n                            selectionMin_1 = Math.min(selectionMin_1, value);\r\n                            selectionMax_1 = Math.max(selectionMax_1, value);\r\n                        }\r\n                        value = range.get(\"endValue\");\r\n                        if (value != null) {\r\n                            selectionMin_1 = Math.min(selectionMin_1, value);\r\n                            selectionMax_1 = Math.max(selectionMax_1, value);\r\n                        }\r\n                    }\r\n                });\r\n                if (selectionMin_1 > selectionMax_1) {\r\n                    _a = __read([selectionMax_1, selectionMin_1], 2), selectionMin_1 = _a[0], selectionMax_1 = _a[1];\r\n                }\r\n                if ($type.isNumber(minDefined)) {\r\n                    if (strictMinMax) {\r\n                        selectionMin_1 = minDefined;\r\n                    }\r\n                    else {\r\n                        selectionMin_1 = min;\r\n                    }\r\n                }\r\n                else if (strictMinMax) {\r\n                    if ($type.isNumber(this._minReal)) {\r\n                        selectionMin_1 = this._minReal;\r\n                    }\r\n                }\r\n                if ($type.isNumber(maxDefined)) {\r\n                    if (strictMinMax) {\r\n                        selectionMax_1 = maxDefined;\r\n                    }\r\n                    else {\r\n                        selectionMax_1 = max;\r\n                    }\r\n                }\r\n                else if (strictMinMax) {\r\n                    if ($type.isNumber(this._maxReal)) {\r\n                        selectionMax_1 = this._maxReal;\r\n                    }\r\n                }\r\n                if (selectionMin_1 === selectionMax_1) {\r\n                    selectionMin_1 -= this._deltaMinMax;\r\n                    selectionMax_1 += this._deltaMinMax;\r\n                    var minMaxStep2 = this._adjustMinMax(selectionMin_1, selectionMax_1, gridCount, strictMinMax);\r\n                    selectionMin_1 = minMaxStep2.min;\r\n                    selectionMax_1 = minMaxStep2.max;\r\n                }\r\n                var selectionMinReal = selectionMin_1;\r\n                var selectionMaxReal = selectionMax_1;\r\n                selectionMin_1 -= (selectionMax_1 - selectionMin_1) * extraMin;\r\n                selectionMax_1 += (selectionMax_1 - selectionMin_1) * extraMax;\r\n                var minMaxStep = this._adjustMinMax(selectionMin_1, selectionMax_1, gridCount);\r\n                selectionMin_1 = minMaxStep.min;\r\n                selectionMax_1 = minMaxStep.max;\r\n                selectionMin_1 = $math.fitToRange(selectionMin_1, min, max);\r\n                selectionMax_1 = $math.fitToRange(selectionMax_1, min, max);\r\n                // do it for the second time !important\t\t\t\r\n                minMaxStep = this._adjustMinMax(selectionMin_1, selectionMax_1, gridCount, true);\r\n                if (!strictMinMax) {\r\n                    selectionMin_1 = minMaxStep.min;\r\n                    selectionMax_1 = minMaxStep.max;\r\n                }\r\n                var syncWithAxis = this.get(\"syncWithAxis\");\r\n                if (syncWithAxis) {\r\n                    minMaxStep = this._syncAxes(selectionMin_1, selectionMax_1, minMaxStep.step, syncWithAxis.getPrivate(\"selectionMinFinal\", syncWithAxis.getPrivate(\"minFinal\", 0)), syncWithAxis.getPrivate(\"selectionMaxFinal\", syncWithAxis.getPrivate(\"maxFinal\", 1)), syncWithAxis.getPrivate(\"selectionStepFinal\", syncWithAxis.getPrivate(\"step\", 1)));\r\n                    selectionMin_1 = minMaxStep.min;\r\n                    selectionMax_1 = minMaxStep.max;\r\n                }\r\n                if (strictMinMax) {\r\n                    if ($type.isNumber(minDefined)) {\r\n                        selectionMin_1 = Math.max(selectionMin_1, minDefined);\r\n                    }\r\n                    if ($type.isNumber(maxDefined)) {\r\n                        selectionMax_1 = Math.min(selectionMax_1, maxDefined);\r\n                    }\r\n                }\r\n                if (selectionStrictMinMax) {\r\n                    selectionMin_1 = selectionMinReal - (selectionMax_1 - selectionMin_1) * extraMin;\r\n                    selectionMax_1 = selectionMaxReal + (selectionMax_1 - selectionMin_1) * extraMax;\r\n                }\r\n                if (this.get(\"logarithmic\")) {\r\n                    if (selectionMin_1 <= 0) {\r\n                        selectionMin_1 = selectionMinReal * (1 - Math.min(extraMin, 0.99));\r\n                    }\r\n                    if (selectionMin_1 < min) {\r\n                        selectionMin_1 = min;\r\n                    }\r\n                    if (selectionMax_1 > max) {\r\n                        selectionMax_1 = max;\r\n                    }\r\n                }\r\n                var start = this.valueToFinalPosition(selectionMin_1);\r\n                var end = this.valueToFinalPosition(selectionMax_1);\r\n                this.setPrivateRaw(\"selectionMinFinal\", selectionMin_1);\r\n                this.setPrivateRaw(\"selectionMaxFinal\", selectionMax_1);\r\n                this.setPrivateRaw(\"selectionStepFinal\", minMaxStep.step);\r\n                this.zoom(start, end);\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(ValueAxis.prototype, \"_getMinMax\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            var minDefined = this.get(\"min\");\r\n            var maxDefined = this.get(\"max\");\r\n            var min = Infinity;\r\n            var max = -Infinity;\r\n            var extraMin = this.get(\"extraMin\", 0);\r\n            var extraMax = this.get(\"extraMax\", 0);\r\n            if (this.get(\"logarithmic\")) {\r\n                if (this.get(\"extraMin\") == null) {\r\n                    extraMin = 0.1;\r\n                }\r\n                if (this.get(\"extraMax\") == null) {\r\n                    extraMax = 0.2;\r\n                }\r\n            }\r\n            var minDiff = Infinity;\r\n            $array.each(this.series, function (series) {\r\n                if (!series.get(\"ignoreMinMax\")) {\r\n                    var seriesMin = void 0;\r\n                    var seriesMax = void 0;\r\n                    if (series.get(\"xAxis\") === _this) {\r\n                        seriesMin = series.getPrivate(\"minX\");\r\n                        seriesMax = series.getPrivate(\"maxX\");\r\n                    }\r\n                    else if (series.get(\"yAxis\") === _this) {\r\n                        seriesMin = series.getPrivate(\"minY\");\r\n                        seriesMax = series.getPrivate(\"maxY\");\r\n                    }\r\n                    if ($type.isNumber(seriesMin) && $type.isNumber(seriesMax)) {\r\n                        min = Math.min(min, seriesMin);\r\n                        max = Math.max(max, seriesMax);\r\n                        var diff = seriesMax - seriesMin;\r\n                        if (diff <= 0) {\r\n                            diff = Math.abs(seriesMax / 100);\r\n                        }\r\n                        if (diff < minDiff) {\r\n                            minDiff = diff;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            this.axisRanges.each(function (range) {\r\n                if (range.get(\"affectsMinMax\")) {\r\n                    var value = range.get(\"value\");\r\n                    if (value != null) {\r\n                        min = Math.min(min, value);\r\n                        max = Math.max(max, value);\r\n                    }\r\n                    value = range.get(\"endValue\");\r\n                    if (value != null) {\r\n                        min = Math.min(min, value);\r\n                        max = Math.max(max, value);\r\n                    }\r\n                }\r\n            });\r\n            if (this.get(\"logarithmic\")) {\r\n                var treatZeroAs = this.get(\"treatZeroAs\");\r\n                if ($type.isNumber(treatZeroAs)) {\r\n                    if (min <= 0) {\r\n                        min = treatZeroAs;\r\n                    }\r\n                }\r\n                if (min <= 0) {\r\n                    new Error(\"Logarithmic value axis can not have values <= 0.\");\r\n                }\r\n            }\r\n            if (min === 0 && max === 0) {\r\n                max = 0.9;\r\n                min = -0.9;\r\n            }\r\n            if ($type.isNumber(minDefined)) {\r\n                min = minDefined;\r\n            }\r\n            if ($type.isNumber(maxDefined)) {\r\n                max = maxDefined;\r\n            }\r\n            // meaning no min/max found on series/ranges and no min/max was defined\r\n            if (min === Infinity || max === -Infinity) {\r\n                return;\r\n            }\r\n            var initialMin = min;\r\n            var initialMax = max;\r\n            // adapter\r\n            var minAdapted = this.adapters.fold(\"min\", min);\r\n            var maxAdapted = this.adapters.fold(\"max\", max);\r\n            if ($type.isNumber(minAdapted)) {\r\n                min = minAdapted;\r\n            }\r\n            if ($type.isNumber(maxAdapted)) {\r\n                max = maxAdapted;\r\n            }\r\n            // DateAxis does some magic here\r\n            min = this._fixMin(min);\r\n            max = this._fixMax(max);\r\n            // this happens if starLocation and endLocation are 0.5 and DateAxis has only one date\t\t\r\n            if (max - min <= 1 / Math.pow(10, 15)) {\r\n                if (max - min !== 0) {\r\n                    this._deltaMinMax = (max - min) / 2;\r\n                }\r\n                else {\r\n                    this._getDelta(max);\r\n                }\r\n                min -= this._deltaMinMax;\r\n                max += this._deltaMinMax;\r\n            }\r\n            // add extras\r\n            min -= (max - min) * extraMin;\r\n            max += (max - min) * extraMax;\r\n            if (this.get(\"logarithmic\")) {\r\n                // don't let min go below 0 if real min is >= 0\r\n                if (min < 0 && initialMin >= 0) {\r\n                    min = 0;\r\n                }\r\n                // don't let max go above 0 if real max is <= 0\r\n                if (max > 0 && initialMax <= 0) {\r\n                    max = 0;\r\n                }\r\n            }\r\n            this._minReal = min;\r\n            this._maxReal = max;\r\n            var strictMinMax = this.get(\"strictMinMax\");\r\n            var strictMinMaxSelection = this.get(\"strictMinMaxSelection\", false);\r\n            if (strictMinMaxSelection) {\r\n                strictMinMax = strictMinMaxSelection;\r\n            }\r\n            var strict = strictMinMax;\r\n            if ($type.isNumber(maxDefined)) {\r\n                strict = true;\r\n            }\r\n            var gridCount = this.get(\"renderer\").gridCount();\r\n            var minMaxStep = this._adjustMinMax(min, max, gridCount, strict);\r\n            min = minMaxStep.min;\r\n            max = minMaxStep.max;\r\n            // do it for the second time with strict true (importat!)\r\n            minMaxStep = this._adjustMinMax(min, max, gridCount, true);\r\n            min = minMaxStep.min;\r\n            max = minMaxStep.max;\r\n            // return min max if strict\r\n            if (strictMinMax) {\r\n                if ($type.isNumber(minDefined)) {\r\n                    min = minDefined;\r\n                }\r\n                else {\r\n                    min = this._minReal;\r\n                }\r\n                if ($type.isNumber(maxDefined)) {\r\n                    max = maxDefined;\r\n                }\r\n                else {\r\n                    max = this._maxReal;\r\n                }\r\n                if (max - min <= 0.00000001) {\r\n                    min -= this._deltaMinMax;\r\n                    max += this._deltaMinMax;\r\n                }\r\n                min -= (max - min) * extraMin;\r\n                max += (max - min) * extraMax;\r\n            }\r\n            minAdapted = this.adapters.fold(\"min\", min);\r\n            maxAdapted = this.adapters.fold(\"max\", max);\r\n            if ($type.isNumber(minAdapted)) {\r\n                min = minAdapted;\r\n            }\r\n            if ($type.isNumber(maxAdapted)) {\r\n                max = maxAdapted;\r\n            }\r\n            if (minDiff == Infinity) {\r\n                minDiff = (max - min);\r\n            }\r\n            // this is to avoid floating point number error\r\n            var decCount = Math.round(Math.abs(Math.log(Math.abs(max - min)) * Math.LOG10E)) + 5;\r\n            min = $math.round(min, decCount);\r\n            max = $math.round(max, decCount);\r\n            var syncWithAxis = this.get(\"syncWithAxis\");\r\n            if (syncWithAxis) {\r\n                minMaxStep = this._syncAxes(min, max, minMaxStep.step, syncWithAxis.getPrivate(\"minFinal\", syncWithAxis.getPrivate(\"min\", 0)), syncWithAxis.getPrivate(\"maxFinal\", syncWithAxis.getPrivate(\"max\", 1)), syncWithAxis.getPrivate(\"step\", 1));\r\n                min = minMaxStep.min;\r\n                max = minMaxStep.max;\r\n            }\r\n            this.setPrivateRaw(\"maxZoomFactor\", (max - min) / minDiff * this.get(\"maxZoomFactor\", 100));\r\n            if (this.get(\"logarithmic\")) {\r\n                this._minLogAdjusted = min;\r\n                min = this._minReal;\r\n                max = this._maxReal;\r\n                if (min <= 0) {\r\n                    min = initialMin * (1 - Math.min(extraMin, 0.99));\r\n                }\r\n            }\r\n            if ($type.isNumber(min) && $type.isNumber(max)) {\r\n                if (this.getPrivate(\"minFinal\") !== min || this.getPrivate(\"maxFinal\") !== max) {\r\n                    this.setPrivate(\"minFinal\", min);\r\n                    this.setPrivate(\"maxFinal\", max);\r\n                    this._saveMinMax(min, max);\r\n                    var duration = this.get(\"interpolationDuration\", 0);\r\n                    var easing = this.get(\"interpolationEasing\");\r\n                    this.animatePrivate({ key: \"min\", to: min, duration: duration, easing: easing });\r\n                    this.animatePrivate({ key: \"max\", to: max, duration: duration, easing: easing });\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(ValueAxis.prototype, \"_getDelta\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (max) {\r\n            // the number by which we need to raise 10 to get difference\r\n            var exponent = Math.log(Math.abs(max)) * Math.LOG10E;\r\n            // here we find a number which is power of 10 and has the same count of numbers as difference has\r\n            var power = Math.pow(10, Math.floor(exponent));\r\n            // reduce this number by 10 times\r\n            power = power / 10;\r\n            this._deltaMinMax = power;\r\n        }\r\n    });\r\n    Object.defineProperty(ValueAxis.prototype, \"_saveMinMax\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (_min, _max) {\r\n        }\r\n    });\r\n    Object.defineProperty(ValueAxis.prototype, \"_adjustMinMax\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (min, max, gridCount, strictMode) {\r\n            // will fail if 0\r\n            if (gridCount <= 1) {\r\n                gridCount = 1;\r\n            }\r\n            gridCount = Math.round(gridCount);\r\n            var initialMin = min;\r\n            var initialMax = max;\r\n            var difference = max - min;\r\n            // in case min and max is the same, use max\r\n            if (difference === 0) {\r\n                difference = Math.abs(max);\r\n            }\r\n            // the number by which we need to raise 10 to get difference\r\n            var exponent = Math.log(Math.abs(difference)) * Math.LOG10E;\r\n            // here we find a number which is power of 10 and has the same count of numbers as difference has\r\n            var power = Math.pow(10, Math.floor(exponent));\r\n            // reduce this number by 10 times\r\n            power = power / 10;\r\n            var extra = power;\r\n            if (strictMode) {\r\n                extra = 0;\r\n            }\r\n            // round down min\r\n            if (strictMode) {\r\n                min = Math.floor(min / power) * power;\r\n                // round up max\r\n                max = Math.ceil(max / power) * power;\r\n            }\r\n            else {\r\n                min = Math.ceil(min / power) * power - extra;\r\n                // round up max\r\n                max = Math.floor(max / power) * power + extra;\r\n            }\r\n            // don't let min go below 0 if real min is >= 0\r\n            if (min < 0 && initialMin >= 0) {\r\n                min = 0;\r\n            }\r\n            // don't let max go above 0 if real max is <= 0\r\n            if (max > 0 && initialMax <= 0) {\r\n                max = 0;\r\n            }\r\n            exponent = Math.log(Math.abs(difference)) * Math.LOG10E;\r\n            power = Math.pow(10, Math.floor(exponent));\r\n            power = power / 100; // used to be 10 in v4, but this caused issue that there could be limited number of grids with even very small minGridDistance\r\n            // approximate difference between two grid lines\r\n            var step = Math.ceil((difference / gridCount) / power) * power;\r\n            var stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\r\n            // the step should divide by  2, 5, and 10.\r\n            var stepDivisor = Math.ceil(step / stepPower); // number 0 - 10\r\n            if (stepDivisor > 5) {\r\n                stepDivisor = 10;\r\n            }\r\n            else if (stepDivisor <= 5 && stepDivisor > 2) {\r\n                stepDivisor = 5;\r\n            }\r\n            // now get real step\r\n            step = Math.ceil(step / (stepPower * stepDivisor)) * stepPower * stepDivisor;\r\n            var maxPrecision = this.get(\"maxPrecision\");\r\n            if ($type.isNumber(maxPrecision)) {\r\n                var ceiledStep = $math.ceil(step, maxPrecision);\r\n                if (maxPrecision < Number.MAX_VALUE && step !== ceiledStep) {\r\n                    step = ceiledStep;\r\n                }\r\n            }\r\n            var decCount = 0;\r\n            // in case numbers are smaller than 1\r\n            if (stepPower < 1) {\r\n                // exponent is less then 1 too. Count decimals of exponent\r\n                decCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 1;\r\n                // round step\r\n                step = $math.round(step, decCount);\r\n            }\r\n            // final min and max\r\n            var minCount = Math.floor(min / step);\r\n            min = $math.round(step * minCount, decCount);\r\n            var maxCount;\r\n            if (!strictMode) {\r\n                maxCount = Math.ceil(max / step);\r\n            }\r\n            else {\r\n                maxCount = Math.floor(max / step);\r\n            }\r\n            if (maxCount === minCount) {\r\n                maxCount++;\r\n            }\r\n            max = $math.round(step * maxCount, decCount);\r\n            if (max < initialMax) {\r\n                max = max + step;\r\n            }\r\n            if (min > initialMin) {\r\n                min = min - step;\r\n            }\r\n            step = this.fixSmallStep(step);\r\n            return { min: min, max: max, step: step };\r\n        }\r\n    });\r\n    /**\r\n     * Returns text to be used in an axis tooltip for specific relative position.\r\n     *\r\n     * @param   position  Position\r\n     * @return            Tooltip text\r\n     */\r\n    Object.defineProperty(ValueAxis.prototype, \"getTooltipText\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (position) {\r\n            var numberFormat = this.get(\"tooltipNumberFormat\", this.get(\"numberFormat\"));\r\n            var formatter = this.getNumberFormatter();\r\n            var extraDecimals = this.get(\"extraTooltipPrecision\", 0);\r\n            var decimals = this.getPrivate(\"stepDecimalPlaces\", 0) + extraDecimals;\r\n            var value = $math.round(this.positionToValue(position), decimals);\r\n            if (numberFormat) {\r\n                return formatter.format(value, numberFormat);\r\n            }\r\n            else {\r\n                return formatter.format(value, undefined, decimals);\r\n                //label.set(\"text\", this.getNumberFormatter().format(value, undefined, this.getPrivate(\"stepDecimalPlaces\")));\r\n            }\r\n            // //@todo number formatter + tag\r\n            // return $math.round(this.positionToValue(position), this.getPrivate(\"stepDecimalPlaces\")).toString();\r\n        }\r\n    });\r\n    /**\r\n     * Returns a data item from series that is closest to the `position`.\r\n     *\r\n     * @param   series    Series\r\n     * @param   position  Relative position\r\n     * @return            Data item\r\n     */\r\n    Object.defineProperty(ValueAxis.prototype, \"getSeriesItem\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (series, position) {\r\n            var fieldName = (this.getPrivate(\"name\") + this.get(\"renderer\").getPrivate(\"letter\"));\r\n            var value = this.positionToValue(position);\r\n            var index = undefined;\r\n            var oldDiff;\r\n            $array.each(series.dataItems, function (dataItem, i) {\r\n                var diff = Math.abs(dataItem.get(fieldName) - value);\r\n                if (index === undefined || diff < oldDiff) {\r\n                    index = i;\r\n                    oldDiff = diff;\r\n                }\r\n            });\r\n            if (index != null) {\r\n                return series.dataItems[index];\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * Zooms the axis to specific `start` and `end` values.\r\n     *\r\n     * Optional `duration` specifies duration of zoom animation in milliseconds.\r\n     *\r\n     * @param  start     Start value\r\n     * @param  end       End value\r\n     * @param  duration  Duration in milliseconds\r\n     */\r\n    Object.defineProperty(ValueAxis.prototype, \"zoomToValues\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (start, end, duration) {\r\n            var min = this.getPrivate(\"minFinal\", 0);\r\n            var max = this.getPrivate(\"maxFinal\", 0);\r\n            if (this.getPrivate(\"min\") != null && this.getPrivate(\"max\") != null) {\r\n                this.zoom((start - min) / (max - min), (end - min) / (max - min), duration);\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * Syncs with a target axis.\r\n     *\r\n     * @param  min  Min\r\n     * @param  max  Max\r\n     * @param  step Step\r\n     */\r\n    Object.defineProperty(ValueAxis.prototype, \"_syncAxes\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (min, max, step, syncMin, syncMax, syncStep) {\r\n            var axis = this.get(\"syncWithAxis\");\r\n            if (axis) {\r\n                var count = Math.round(syncMax - syncMin) / syncStep;\r\n                var currentCount = Math.round((max - min) / step);\r\n                var gridCount = this.get(\"renderer\").gridCount();\r\n                if ($type.isNumber(count) && $type.isNumber(currentCount)) {\r\n                    var synced = false;\r\n                    var c = 0;\r\n                    var diff = (max - min) * 0.01;\r\n                    var omin = min;\r\n                    var omax = max;\r\n                    var ostep = step;\r\n                    while (synced != true) {\r\n                        synced = this._checkSync(omin, omax, ostep, count);\r\n                        c++;\r\n                        if (c > 500) {\r\n                            synced = true;\r\n                        }\r\n                        if (!synced) {\r\n                            if (c / 3 == Math.round(c / 3)) {\r\n                                omin = min - diff * c;\r\n                                if (min >= 0 && omin < 0) {\r\n                                    omin = 0;\r\n                                }\r\n                            }\r\n                            else {\r\n                                omax = max + diff * c;\r\n                                if (omax <= 0 && omax > 0) {\r\n                                    omax = 0;\r\n                                }\r\n                            }\r\n                            var minMaxStep = this._adjustMinMax(omin, omax, gridCount, true);\r\n                            omin = minMaxStep.min;\r\n                            omax = minMaxStep.max;\r\n                            ostep = minMaxStep.step;\r\n                        }\r\n                        else {\r\n                            min = omin;\r\n                            max = omax;\r\n                            step = ostep;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return { min: min, max: max, step: step };\r\n        }\r\n    });\r\n    /**\r\n     * Returns `true` if axis needs to be resunced with some other axis.\r\n     */\r\n    Object.defineProperty(ValueAxis.prototype, \"_checkSync\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (min, max, step, count) {\r\n            var currentCount = (max - min) / step;\r\n            for (var i = 1; i < count; i++) {\r\n                if ($math.round(currentCount / i, 1) == count || currentCount * i == count) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n    });\r\n    Object.defineProperty(ValueAxis, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"ValueAxis\"\r\n    });\r\n    Object.defineProperty(ValueAxis, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: Axis.classNames.concat([ValueAxis.className])\r\n    });\r\n    return ValueAxis;\r\n}(Axis));\r\nexport { ValueAxis };\r\n//# sourceMappingURL=ValueAxis.js.map","import { __awaiter, __extends, __generator } from \"tslib\";\r\nimport { XYSeries } from \"./XYSeries\";\r\nimport { Percent } from \"../../../core/util/Percent\";\r\nimport { visualSettings } from \"../../../core/render/Graphics\";\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $type from \"../../../core/util/Type\";\r\n/**\r\n * Base class for all \"column-based\" series\r\n */\r\nvar BaseColumnSeries = /** @class */ (function (_super) {\r\n    __extends(BaseColumnSeries, _super);\r\n    function BaseColumnSeries() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        Object.defineProperty(_this, \"_ph\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(_this, \"_pw\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(BaseColumnSeries.prototype, \"_makeGraphics\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (listTemplate, dataItem) {\r\n            return this.makeColumn(dataItem, listTemplate);\r\n        }\r\n    });\r\n    Object.defineProperty(BaseColumnSeries.prototype, \"_makeFieldNames\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._makeFieldNames.call(this);\r\n            var xAxis = this.get(\"xAxis\");\r\n            var yAxis = this.get(\"yAxis\");\r\n            var categoryAxis = \"CategoryAxis\";\r\n            var valueAxis = \"ValueAxis\";\r\n            if (xAxis.isType(categoryAxis)) {\r\n                if (!this.get(\"openCategoryXField\")) {\r\n                    this._xOpenField = this._xField;\r\n                }\r\n            }\r\n            if (xAxis.isType(valueAxis)) {\r\n                if (!this.get(\"openValueXField\")) {\r\n                    this._xOpenField = this._xField;\r\n                }\r\n            }\r\n            if (yAxis.isType(categoryAxis)) {\r\n                if (!this.get(\"openCategoryYField\")) {\r\n                    this._yOpenField = this._yField;\r\n                }\r\n            }\r\n            if (yAxis.isType(valueAxis)) {\r\n                if (!this.get(\"openValueYField\")) {\r\n                    this._yOpenField = this._yField;\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(BaseColumnSeries.prototype, \"_prepareChildren\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._prepareChildren.call(this);\r\n            var xAxis = this.get(\"xAxis\");\r\n            var yAxis = this.get(\"yAxis\");\r\n            var len = this.dataItems.length;\r\n            var startIndex = Math.max(0, this.startIndex() - 2);\r\n            var endIndex = Math.min(this.endIndex() + 2, len - 1);\r\n            if (xAxis.inited && yAxis.inited) {\r\n                for (var i = startIndex; i <= endIndex; i++) {\r\n                    var dataItem = this.dataItems[i];\r\n                    this._createGraphics(dataItem);\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(BaseColumnSeries.prototype, \"_updateChildren\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            var chart = this.chart;\r\n            if (chart) {\r\n                this._ph = chart.plotContainer.height();\r\n                this._pw = chart.plotContainer.width();\r\n            }\r\n            var xAxis = this.get(\"xAxis\");\r\n            var yAxis = this.get(\"yAxis\");\r\n            var baseAxis = this.get(\"baseAxis\");\r\n            var columnsTemplate = this.columns.template;\r\n            if (this.isDirty(\"fill\")) {\r\n                if (columnsTemplate.get(\"fill\") == null) {\r\n                    columnsTemplate.set(\"fill\", this.get(\"fill\"));\r\n                }\r\n            }\r\n            if (this.isDirty(\"stroke\")) {\r\n                if (columnsTemplate.get(\"stroke\") == null) {\r\n                    columnsTemplate.set(\"stroke\", this.get(\"stroke\"));\r\n                }\r\n            }\r\n            var index = 0;\r\n            var clusterCount = 0;\r\n            var i = 0;\r\n            $array.each(baseAxis.series, function (series) {\r\n                if (series instanceof BaseColumnSeries) {\r\n                    var stacked = series.get(\"stacked\");\r\n                    if (stacked && i == 0) {\r\n                        clusterCount++;\r\n                    }\r\n                    if (!stacked && series.get(\"clustered\")) {\r\n                        clusterCount++;\r\n                    }\r\n                }\r\n                if (series === _this) {\r\n                    index = clusterCount - 1;\r\n                }\r\n                i++;\r\n            });\r\n            if (!this.get(\"clustered\")) {\r\n                index = 0;\r\n                clusterCount = 1;\r\n            }\r\n            if (clusterCount === 0) {\r\n                clusterCount = 1;\r\n                index = 0;\r\n            }\r\n            var xRenderer = xAxis.get(\"renderer\");\r\n            var yRenderer = yAxis.get(\"renderer\");\r\n            var cellStartLocation = \"cellStartLocation\";\r\n            var cellEndLocation = \"cellEndLocation\";\r\n            var cellLocationX0 = xRenderer.get(cellStartLocation, 0);\r\n            var cellLocationX1 = xRenderer.get(cellEndLocation, 1);\r\n            var cellLocationY0 = yRenderer.get(cellStartLocation, 0);\r\n            var cellLocationY1 = yRenderer.get(cellEndLocation, 1);\r\n            this._aLocationX0 = cellLocationX0 + (index / clusterCount) * (cellLocationX1 - cellLocationX0);\r\n            this._aLocationX1 = cellLocationX0 + (index + 1) / clusterCount * (cellLocationX1 - cellLocationX0);\r\n            ;\r\n            this._aLocationY0 = cellLocationY0 + (index / clusterCount) * (cellLocationY1 - cellLocationY0);\r\n            this._aLocationY1 = cellLocationY0 + (index + 1) / clusterCount * (cellLocationY1 - cellLocationY0);\r\n            if (xAxis.inited && yAxis.inited) {\r\n                if (this._axesDirty || this._valuesDirty || this._stackDirty || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._sizeDirty) {\r\n                    var len = this.dataItems.length;\r\n                    var startIndex = Math.max(0, this.startIndex() - 2);\r\n                    var endIndex = Math.min(this.endIndex() + 2, len - 1);\r\n                    for (var i_1 = 0; i_1 < startIndex; i_1++) {\r\n                        this._toggleColumn(this.dataItems[i_1], false);\r\n                    }\r\n                    var previous = this.dataItems[startIndex];\r\n                    for (var i_2 = startIndex; i_2 <= endIndex; i_2++) {\r\n                        var dataItem = this.dataItems[i_2];\r\n                        if (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\r\n                            previous = dataItem;\r\n                            if (i_2 > 0 && startIndex > 0) {\r\n                                for (var j = i_2 - 1; j >= 0; j--) {\r\n                                    var dataItem_1 = this.dataItems[j];\r\n                                    if (dataItem_1.get(\"valueX\") != null && dataItem_1.get(\"valueY\") != null) {\r\n                                        previous = dataItem_1;\r\n                                        break;\r\n                                    }\r\n                                }\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n                    for (var i_3 = startIndex; i_3 <= endIndex; i_3++) {\r\n                        var dataItem = this.dataItems[i_3];\r\n                        this._updateGraphics(dataItem, previous);\r\n                        if (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\r\n                            previous = dataItem;\r\n                        }\r\n                    }\r\n                    for (var i_4 = endIndex + 1; i_4 < len; i_4++) {\r\n                        this._toggleColumn(this.dataItems[i_4], false);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                this._skipped = true;\r\n            }\r\n            this.updateLegendMarker();\r\n            _super.prototype._updateChildren.call(this);\r\n        }\r\n    });\r\n    Object.defineProperty(BaseColumnSeries.prototype, \"_createGraphics\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem) {\r\n            var _this = this;\r\n            var graphics = dataItem.get(\"graphics\");\r\n            if (!graphics) {\r\n                graphics = this._makeGraphics(this.columns, dataItem);\r\n                dataItem.set(\"graphics\", graphics);\r\n                graphics._setDataItem(dataItem);\r\n                var legendDataItem = dataItem.get(\"legendDataItem\");\r\n                if (legendDataItem) {\r\n                    var markerRectangle = legendDataItem.get(\"markerRectangle\");\r\n                    if (markerRectangle) {\r\n                        markerRectangle.setAll({ fill: graphics.get(\"fill\"), stroke: graphics.get(\"stroke\") });\r\n                    }\r\n                }\r\n                this.axisRanges.each(function (axisRange) {\r\n                    var container = axisRange.container;\r\n                    var graphicsArray = dataItem.get(\"rangeGraphics\", []);\r\n                    dataItem.set(\"rangeGraphics\", graphicsArray);\r\n                    var rangeGraphics = _this._makeGraphics(axisRange.columns, dataItem);\r\n                    graphicsArray.push(rangeGraphics);\r\n                    rangeGraphics.setPrivate(\"list\", axisRange.columns);\r\n                    container.children.push(rangeGraphics);\r\n                });\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(BaseColumnSeries.prototype, \"_updateGraphics\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem, previousDataItem) {\r\n            var _this = this;\r\n            var graphics = dataItem.get(\"graphics\");\r\n            //if (!graphics) {\r\n            //\tthis._createGraphics(dataItem);\r\n            //\tgraphics = dataItem.get(\"graphics\")!;\r\n            //}\r\n            var xField = this._xField;\r\n            var yField = this._yField;\r\n            var valueX = dataItem.get(xField);\r\n            var valueY = dataItem.get(yField);\r\n            if (valueX != null && valueY != null) {\r\n                var xOpenField = this._xOpenField;\r\n                var yOpenField = this._yOpenField;\r\n                var locationX = this.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\r\n                var locationY = this.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\r\n                var openLocationX = this.get(\"openLocationX\", dataItem.get(\"openLocationX\", locationX));\r\n                var openLocationY = this.get(\"openLocationY\", dataItem.get(\"openLocationY\", locationY));\r\n                var width = graphics.get(\"width\");\r\n                var height = graphics.get(\"height\");\r\n                var stacked = this.get(\"stacked\");\r\n                var xAxis = this.get(\"xAxis\");\r\n                var yAxis = this.get(\"yAxis\");\r\n                var baseAxis = this.get(\"baseAxis\");\r\n                var xStart = xAxis.get(\"start\");\r\n                var xEnd = xAxis.get(\"end\");\r\n                var yStart = yAxis.get(\"start\");\r\n                var yEnd = yAxis.get(\"end\");\r\n                var l_1;\r\n                var r_1;\r\n                var t_1;\r\n                var b_1;\r\n                var vcy = this.get(\"vcy\", 1);\r\n                var vcx = this.get(\"vcx\", 1);\r\n                var fitW_1 = false;\r\n                var fitH_1 = false;\r\n                if (yAxis.isType(\"CategoryAxis\") && xAxis.isType(\"CategoryAxis\")) {\r\n                    var startLocation = this._aLocationX0 + openLocationX - 0.5;\r\n                    var endLocation = this._aLocationX1 + locationX - 0.5;\r\n                    if (width instanceof Percent) {\r\n                        var offset = (endLocation - startLocation) * (1 - width.value) / 2;\r\n                        startLocation += offset;\r\n                        endLocation -= offset;\r\n                    }\r\n                    l_1 = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx);\r\n                    r_1 = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx);\r\n                    startLocation = this._aLocationY0 + openLocationY - 0.5;\r\n                    endLocation = this._aLocationY1 + locationY - 0.5;\r\n                    if (height instanceof Percent) {\r\n                        var offset = (endLocation - startLocation) * (1 - height.value) / 2;\r\n                        startLocation += offset;\r\n                        endLocation -= offset;\r\n                    }\r\n                    t_1 = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\r\n                    b_1 = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\r\n                    dataItem.setRaw(\"point\", { x: l_1 + (r_1 - l_1) / 2, y: t_1 + (b_1 - t_1) / 2 });\r\n                }\r\n                else if (xAxis === baseAxis) {\r\n                    var startLocation = this._aLocationX0 + openLocationX - 0.5;\r\n                    var endLocation = this._aLocationX1 + locationX - 0.5;\r\n                    if (width instanceof Percent) {\r\n                        var offset = (endLocation - startLocation) * (1 - width.value) / 2;\r\n                        startLocation += offset;\r\n                        endLocation -= offset;\r\n                    }\r\n                    l_1 = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx);\r\n                    r_1 = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx);\r\n                    t_1 = yAxis.getDataItemPositionY(dataItem, yField, locationY, vcy);\r\n                    if (this._yOpenField !== this._yField) {\r\n                        b_1 = yAxis.getDataItemPositionY(dataItem, yOpenField, openLocationY, vcy);\r\n                    }\r\n                    else {\r\n                        if (stacked) {\r\n                            var stackToItemY = dataItem.get(\"stackToItemY\");\r\n                            if (stackToItemY) {\r\n                                b_1 = yAxis.getDataItemPositionY(stackToItemY, yField, openLocationY, stackToItemY.component.get(\"vcy\"));\r\n                            }\r\n                            else {\r\n                                b_1 = yAxis.basePosition();\r\n                            }\r\n                        }\r\n                        else {\r\n                            b_1 = yAxis.basePosition();\r\n                        }\r\n                    }\r\n                    dataItem.setRaw(\"point\", { x: l_1 + (r_1 - l_1) / 2, y: t_1 });\r\n                    fitH_1 = true;\r\n                }\r\n                else if (yAxis === baseAxis) {\r\n                    var startLocation = this._aLocationY0 + openLocationY - 0.5;\r\n                    var endLocation = this._aLocationY1 + locationY - 0.5;\r\n                    if (height instanceof Percent) {\r\n                        var offset = (endLocation - startLocation) * (1 - height.value) / 2;\r\n                        startLocation += offset;\r\n                        endLocation -= offset;\r\n                    }\r\n                    t_1 = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\r\n                    b_1 = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\r\n                    r_1 = xAxis.getDataItemPositionX(dataItem, xField, locationX, vcx);\r\n                    if (this._xOpenField !== this._xField) {\r\n                        l_1 = xAxis.getDataItemPositionX(dataItem, xOpenField, openLocationX, vcx);\r\n                    }\r\n                    else {\r\n                        if (stacked) {\r\n                            var stackToItemX = dataItem.get(\"stackToItemX\");\r\n                            if (stackToItemX) {\r\n                                l_1 = xAxis.getDataItemPositionX(stackToItemX, xField, openLocationX, stackToItemX.component.get(\"vcx\"));\r\n                            }\r\n                            else {\r\n                                l_1 = xAxis.basePosition();\r\n                            }\r\n                        }\r\n                        else {\r\n                            l_1 = xAxis.basePosition();\r\n                        }\r\n                    }\r\n                    fitW_1 = true;\r\n                    dataItem.setRaw(\"point\", { x: r_1, y: t_1 + (b_1 - t_1) / 2 });\r\n                }\r\n                this._updateSeriesGraphics(dataItem, graphics, l_1, r_1, t_1, b_1, fitW_1, fitH_1);\r\n                if ((l_1 < xStart && r_1 < xStart) || (l_1 > xEnd && r_1 > xEnd) || (t_1 < yStart && b_1 < yStart) || (t_1 > yEnd && b_1 > yEnd) || $type.isNaN(l_1) || $type.isNaN(t_1)) {\r\n                    this._toggleColumn(dataItem, false);\r\n                }\r\n                else {\r\n                    this._toggleColumn(dataItem, true);\r\n                }\r\n                var rangeGraphics = dataItem.get(\"rangeGraphics\");\r\n                if (rangeGraphics) {\r\n                    $array.each(rangeGraphics, function (graphics) {\r\n                        _this._updateSeriesGraphics(dataItem, graphics, l_1, r_1, t_1, b_1, fitW_1, fitH_1);\r\n                    });\r\n                }\r\n                this._applyGraphicsStates(dataItem, previousDataItem);\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(BaseColumnSeries.prototype, \"_updateSeriesGraphics\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem, graphics, l, r, t, b, fitW, fitH) {\r\n            var width = graphics.get(\"width\");\r\n            var height = graphics.get(\"height\");\r\n            var maxWidth = graphics.get(\"maxWidth\");\r\n            var maxHeight = graphics.get(\"maxHeight\");\r\n            var ptl = this.getPoint(l, t);\r\n            var pbr = this.getPoint(r, b);\r\n            var tooltipPoint = dataItem.get(\"point\");\r\n            if (tooltipPoint) {\r\n                var point = this.getPoint(tooltipPoint.x, tooltipPoint.y);\r\n                tooltipPoint.x = point.x + this._x;\r\n                tooltipPoint.y = point.y + this._y;\r\n            }\r\n            l = ptl.x;\r\n            r = pbr.x;\r\n            t = ptl.y;\r\n            b = pbr.y;\r\n            if ($type.isNumber(width)) {\r\n                var offset = ((r - l) - width) / 2;\r\n                l += offset;\r\n                r -= offset;\r\n            }\r\n            if ($type.isNumber(maxWidth) && maxWidth < Math.abs(r - l)) {\r\n                var offset = ((r - l) - maxWidth) / 2;\r\n                l += offset;\r\n                r -= offset;\r\n            }\r\n            if ($type.isNumber(height)) {\r\n                var offset = ((b - t) - height) / 2;\r\n                t += offset;\r\n                b -= offset;\r\n            }\r\n            if ($type.isNumber(maxHeight) && maxHeight < Math.abs(b - t)) {\r\n                var offset = ((b - t) - maxHeight) / 2;\r\n                t += offset;\r\n                b -= offset;\r\n            }\r\n            if (this.get(\"adjustBulletPosition\")) {\r\n                if (fitW) {\r\n                    r = Math.min(Math.max(0, r), this._pw);\r\n                    l = Math.min(Math.max(0, l), this._pw);\r\n                }\r\n                if (fitH) {\r\n                    t = Math.min(Math.max(0, t), this._ph);\r\n                    b = Math.min(Math.max(0, b), this._ph);\r\n                }\r\n            }\r\n            dataItem.setRaw(\"left\", l);\r\n            dataItem.setRaw(\"right\", r);\r\n            dataItem.setRaw(\"top\", t);\r\n            dataItem.setRaw(\"bottom\", b);\r\n            graphics.setPrivate(\"width\", r - l);\r\n            graphics.setPrivate(\"height\", b - t);\r\n            graphics.set(\"x\", l);\r\n            graphics.set(\"y\", b - (b - t));\r\n        }\r\n    });\r\n    Object.defineProperty(BaseColumnSeries.prototype, \"_handleDataSetChange\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            _super.prototype._handleDataSetChange.call(this);\r\n            $array.each(this._dataItems, function (dataItem) {\r\n                _this._toggleColumn(dataItem, false);\r\n            });\r\n        }\r\n    });\r\n    Object.defineProperty(BaseColumnSeries.prototype, \"_applyGraphicsStates\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem, previousDataItem) {\r\n            var graphics = dataItem.get(\"graphics\");\r\n            var dropFromOpen = graphics.states.lookup(\"dropFromOpen\");\r\n            var riseFromOpen = graphics.states.lookup(\"riseFromOpen\");\r\n            var dropFromPrevious = graphics.states.lookup(\"dropFromPrevious\");\r\n            var riseFromPrevious = graphics.states.lookup(\"riseFromPrevious\");\r\n            if (dropFromOpen || dropFromPrevious || riseFromOpen || riseFromPrevious) {\r\n                var xAxis = this.get(\"xAxis\");\r\n                var yAxis = this.get(\"yAxis\");\r\n                var baseAxis = this.get(\"baseAxis\");\r\n                var open_1;\r\n                var close_1;\r\n                var previousClose = void 0;\r\n                if (baseAxis === xAxis && yAxis.isType(\"ValueAxis\")) {\r\n                    open_1 = dataItem.get(this._yOpenField);\r\n                    close_1 = dataItem.get(this._yField);\r\n                    previousClose = previousDataItem.get(this._yField);\r\n                }\r\n                else if (baseAxis === yAxis && xAxis.isType(\"ValueAxis\")) {\r\n                    open_1 = dataItem.get(this._xOpenField);\r\n                    close_1 = dataItem.get(this._xField);\r\n                    previousClose = previousDataItem.get(this._xField);\r\n                }\r\n                if ($type.isNumber(open_1) && $type.isNumber(close_1)) {\r\n                    if (close_1 < open_1) {\r\n                        if (dropFromOpen) {\r\n                            dropFromOpen.apply();\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (riseFromOpen) {\r\n                            riseFromOpen.apply();\r\n                        }\r\n                    }\r\n                    if ($type.isNumber(previousClose)) {\r\n                        if (close_1 < previousClose) {\r\n                            if (dropFromPrevious) {\r\n                                dropFromPrevious.apply();\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (riseFromPrevious) {\r\n                                riseFromPrevious.apply();\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(BaseColumnSeries.prototype, \"disposeDataItem\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem) {\r\n            _super.prototype.disposeDataItem.call(this, dataItem);\r\n            var graphics = dataItem.get(\"graphics\");\r\n            if (graphics) {\r\n                this.columns.removeValue(graphics);\r\n                graphics.dispose();\r\n            }\r\n            var rangeGraphics = dataItem.get(\"rangeGraphics\");\r\n            if (rangeGraphics) {\r\n                $array.each(rangeGraphics, function (graphics) {\r\n                    var list = graphics.getPrivate(\"list\");\r\n                    if (list) {\r\n                        list.removeValue(graphics);\r\n                    }\r\n                    graphics.dispose();\r\n                });\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * Hides series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    Object.defineProperty(BaseColumnSeries.prototype, \"hideDataItem\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem, duration) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var promises, graphics, rangeGraphics;\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0:\r\n                            promises = [_super.prototype.hideDataItem.call(this, dataItem, duration)];\r\n                            graphics = dataItem.get(\"graphics\");\r\n                            if (graphics) {\r\n                                promises.push(graphics.hide(duration));\r\n                            }\r\n                            rangeGraphics = dataItem.get(\"rangeGraphics\");\r\n                            if (rangeGraphics) {\r\n                                $array.each(rangeGraphics, function (graphics) {\r\n                                    promises.push(graphics.hide(duration));\r\n                                });\r\n                            }\r\n                            return [4 /*yield*/, Promise.all(promises)];\r\n                        case 1:\r\n                            _a.sent();\r\n                            return [2 /*return*/];\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    });\r\n    Object.defineProperty(BaseColumnSeries.prototype, \"_toggleColumn\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem, visible) {\r\n            var graphics = dataItem.get(\"graphics\");\r\n            if (graphics) {\r\n                graphics.setPrivate(\"visible\", visible);\r\n            }\r\n            var rangeGraphics = dataItem.get(\"rangeGraphics\");\r\n            if (rangeGraphics) {\r\n                $array.each(rangeGraphics, function (graphics) {\r\n                    graphics.setPrivate(\"visible\", visible);\r\n                });\r\n            }\r\n            var bullets = dataItem.bullets;\r\n            if (bullets) {\r\n                $array.each(bullets, function (bullet) {\r\n                    bullet.setPrivate(\"hidden\", !visible);\r\n                });\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * Shows series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    Object.defineProperty(BaseColumnSeries.prototype, \"showDataItem\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem, duration) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var promises, graphics, rangeGraphics;\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0:\r\n                            promises = [_super.prototype.showDataItem.call(this, dataItem, duration)];\r\n                            graphics = dataItem.get(\"graphics\");\r\n                            if (graphics) {\r\n                                promises.push(graphics.show(duration));\r\n                            }\r\n                            rangeGraphics = dataItem.get(\"rangeGraphics\");\r\n                            if (rangeGraphics) {\r\n                                $array.each(rangeGraphics, function (graphics) {\r\n                                    promises.push(graphics.show(duration));\r\n                                });\r\n                            }\r\n                            return [4 /*yield*/, Promise.all(promises)];\r\n                        case 1:\r\n                            _a.sent();\r\n                            return [2 /*return*/];\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(BaseColumnSeries.prototype, \"updateLegendMarker\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem) {\r\n            var _this = this;\r\n            var legendDataItem = this.get(\"legendDataItem\");\r\n            if (this.get(\"useLastColorForLegendMarker\")) {\r\n                if (!dataItem) {\r\n                    var lastDataItem = this.dataItems[this.endIndex() - 1];\r\n                    if (lastDataItem) {\r\n                        dataItem = lastDataItem;\r\n                    }\r\n                }\r\n            }\r\n            if (legendDataItem) {\r\n                var graphics_1 = this.columns.template;\r\n                if (dataItem) {\r\n                    var column = dataItem.get(\"graphics\");\r\n                    if (column) {\r\n                        graphics_1 = column;\r\n                    }\r\n                }\r\n                var markerRectangle_1 = legendDataItem.get(\"markerRectangle\");\r\n                if (markerRectangle_1) {\r\n                    if (!legendDataItem.get(\"itemContainer\").get(\"disabled\")) {\r\n                        $array.each(visualSettings, function (setting) {\r\n                            markerRectangle_1.set(setting, graphics_1.get(setting, _this.get(setting)));\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(BaseColumnSeries.prototype, \"_getTooltipTarget\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem) {\r\n            if (this.get(\"seriesTooltipTarget\") == \"bullet\") {\r\n                return _super.prototype._getTooltipTarget.call(this, dataItem);\r\n            }\r\n            var column = dataItem.get(\"graphics\");\r\n            if (column) {\r\n                return column;\r\n            }\r\n            return this;\r\n        }\r\n    });\r\n    Object.defineProperty(BaseColumnSeries, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"BaseColumnSeries\"\r\n    });\r\n    Object.defineProperty(BaseColumnSeries, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: XYSeries.classNames.concat([BaseColumnSeries.className])\r\n    });\r\n    return BaseColumnSeries;\r\n}(XYSeries));\r\nexport { BaseColumnSeries };\r\n//# sourceMappingURL=BaseColumnSeries.js.map","import { __extends } from \"tslib\";\r\nimport { RoundedRectangle } from \"../../../core/render/RoundedRectangle\";\r\n/**\r\n * A candle element used in a [[CandlestickSeries]].\r\n */\r\nvar Candlestick = /** @class */ (function (_super) {\r\n    __extends(Candlestick, _super);\r\n    function Candlestick() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Candlestick.prototype, \"_beforeChanged\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._beforeChanged.call(this);\r\n            if (this.isDirty(\"lowX0\") || this.isDirty(\"lowY0\") || this.isDirty(\"lowX1\") || this.isDirty(\"lowY1\") || this.isDirty(\"highX0\") || this.isDirty(\"highX1\") || this.isDirty(\"highY0\") || this.isDirty(\"highY1\")) {\r\n                this._clear = true;\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Candlestick.prototype, \"_draw\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._draw.call(this);\r\n            var display = this._display;\r\n            display.moveTo(this.get(\"lowX0\", 0), this.get(\"lowY0\", 0));\r\n            display.lineTo(this.get(\"lowX1\", 0), this.get(\"lowY1\", 0));\r\n            display.moveTo(this.get(\"highX0\", 0), this.get(\"highY0\", 0));\r\n            display.lineTo(this.get(\"highX1\", 0), this.get(\"highY1\", 0));\r\n        }\r\n    });\r\n    Object.defineProperty(Candlestick, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"Candlestick\"\r\n    });\r\n    Object.defineProperty(Candlestick, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: RoundedRectangle.classNames.concat([Candlestick.className])\r\n    });\r\n    return Candlestick;\r\n}(RoundedRectangle));\r\nexport { Candlestick };\r\n//# sourceMappingURL=Candlestick.js.map","import { __extends } from \"tslib\";\r\nimport { ColumnSeries } from \"./ColumnSeries\";\r\nimport { Candlestick } from \"./Candlestick\";\r\nimport { Template } from \"../../../core/util/Template\";\r\nimport { ListTemplate } from \"../../../core/util/List\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\nimport * as $array from \"../../../core/util/Array\";\r\n/**\r\n * Candlestick series.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\r\n * @important\r\n */\r\nvar CandlestickSeries = /** @class */ (function (_super) {\r\n    __extends(CandlestickSeries, _super);\r\n    function CandlestickSeries() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * A list of candles in the series.\r\n         *\r\n         * `columns.template` can be used to configure candles.\r\n         *\r\n         * @default new ListTemplate<Candlestick>\r\n         */\r\n        Object.defineProperty(_this, \"columns\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({\r\n                themeTags: [\"autocolor\"]\r\n            }), function () { return Candlestick._new(_this._root, {\r\n                themeTags: $utils.mergeTags(_this.columns.template.get(\"themeTags\", []), [\"candlestick\", \"series\", \"column\"])\r\n            }, [_this.columns.template]); })\r\n        });\r\n        return _this;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(CandlestickSeries.prototype, \"makeColumn\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem, listTemplate) {\r\n            var column = this.mainContainer.children.push(listTemplate.make());\r\n            column._setDataItem(dataItem);\r\n            listTemplate.push(column);\r\n            return column;\r\n        }\r\n    });\r\n    Object.defineProperty(CandlestickSeries.prototype, \"_updateGraphics\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem, previousDataItem) {\r\n            _super.prototype._updateGraphics.call(this, dataItem, previousDataItem);\r\n            var xAxis = this.getRaw(\"xAxis\");\r\n            var yAxis = this.getRaw(\"yAxis\");\r\n            var baseAxis = this.getRaw(\"baseAxis\");\r\n            var vcy = this.get(\"vcy\", 1);\r\n            var vcx = this.get(\"vcx\", 1);\r\n            var lx0;\r\n            var lx1;\r\n            var ly0;\r\n            var ly1;\r\n            var hx0;\r\n            var hx1;\r\n            var hy0;\r\n            var hy1;\r\n            var locationX = this.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\r\n            var locationY = this.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\r\n            var openLocationX = this.get(\"openLocationX\", dataItem.get(\"openLocationX\", locationX));\r\n            var openLocationY = this.get(\"openLocationY\", dataItem.get(\"openLocationY\", locationY));\r\n            var orientation;\r\n            if (yAxis === baseAxis) {\r\n                var open_1 = xAxis.getDataItemPositionX(dataItem, this._xOpenField, 1, vcx);\r\n                var close_1 = xAxis.getDataItemPositionX(dataItem, this._xField, 1, vcx);\r\n                lx1 = xAxis.getDataItemPositionX(dataItem, this._xLowField, 1, vcx);\r\n                hx1 = xAxis.getDataItemPositionX(dataItem, this._xHighField, 1, vcx);\r\n                hx0 = Math.max(open_1, close_1);\r\n                lx0 = Math.min(open_1, close_1);\r\n                var startLocation = this._aLocationY0 + openLocationY - 0.5;\r\n                var endLocation = this._aLocationY1 + locationY - 0.5;\r\n                ly0 = yAxis.getDataItemPositionY(dataItem, this._yField, startLocation + (endLocation - startLocation) / 2, vcy);\r\n                ly1 = ly0;\r\n                hy0 = ly0;\r\n                hy1 = ly0;\r\n                orientation = \"horizontal\";\r\n            }\r\n            else {\r\n                var open_2 = yAxis.getDataItemPositionY(dataItem, this._yOpenField, 1, vcy);\r\n                var close_2 = yAxis.getDataItemPositionY(dataItem, this._yField, 1, vcy);\r\n                ly1 = yAxis.getDataItemPositionY(dataItem, this._yLowField, 1, vcy);\r\n                hy1 = yAxis.getDataItemPositionY(dataItem, this._yHighField, 1, vcy);\r\n                hy0 = Math.max(open_2, close_2);\r\n                ly0 = Math.min(open_2, close_2);\r\n                var startLocation = this._aLocationX0 + openLocationX - 0.5;\r\n                var endLocation = this._aLocationX1 + locationX - 0.5;\r\n                lx0 = xAxis.getDataItemPositionX(dataItem, this._xField, startLocation + (endLocation - startLocation) / 2, vcx);\r\n                lx1 = lx0;\r\n                hx0 = lx0;\r\n                hx1 = lx0;\r\n                orientation = \"vertical\";\r\n            }\r\n            this._updateCandleGraphics(dataItem, lx0, lx1, ly0, ly1, hx0, hx1, hy0, hy1, orientation);\r\n        }\r\n    });\r\n    Object.defineProperty(CandlestickSeries.prototype, \"_updateCandleGraphics\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem, lx0, lx1, ly0, ly1, hx0, hx1, hy0, hy1, orientation) {\r\n            var column = dataItem.get(\"graphics\");\r\n            if (column) {\r\n                var pl0_1 = this.getPoint(lx0, ly0);\r\n                var pl1_1 = this.getPoint(lx1, ly1);\r\n                var ph0_1 = this.getPoint(hx0, hy0);\r\n                var ph1_1 = this.getPoint(hx1, hy1);\r\n                var x_1 = column.x();\r\n                var y_1 = column.y();\r\n                column.set(\"lowX0\", pl0_1.x - x_1);\r\n                column.set(\"lowY0\", pl0_1.y - y_1);\r\n                column.set(\"lowX1\", pl1_1.x - x_1);\r\n                column.set(\"lowY1\", pl1_1.y - y_1);\r\n                column.set(\"highX0\", ph0_1.x - x_1);\r\n                column.set(\"highY0\", ph0_1.y - y_1);\r\n                column.set(\"highX1\", ph1_1.x - x_1);\r\n                column.set(\"highY1\", ph1_1.y - y_1);\r\n                column.set(\"orientation\", orientation);\r\n                var rangeGraphics = dataItem.get(\"rangeGraphics\");\r\n                if (rangeGraphics) {\r\n                    $array.each(rangeGraphics, function (column) {\r\n                        column.set(\"lowX0\", pl0_1.x - x_1);\r\n                        column.set(\"lowY0\", pl0_1.y - y_1);\r\n                        column.set(\"lowX1\", pl1_1.x - x_1);\r\n                        column.set(\"lowY1\", pl1_1.y - y_1);\r\n                        column.set(\"highX0\", ph0_1.x - x_1);\r\n                        column.set(\"highY0\", ph0_1.y - y_1);\r\n                        column.set(\"highX1\", ph1_1.x - x_1);\r\n                        column.set(\"highY1\", ph1_1.y - y_1);\r\n                        column.set(\"orientation\", orientation);\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(CandlestickSeries.prototype, \"_processAxisRange\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (axisRange) {\r\n            var _this = this;\r\n            _super.prototype._processAxisRange.call(this, axisRange);\r\n            axisRange.columns = new ListTemplate(Template.new({}), function () { return Candlestick._new(_this._root, {\r\n                themeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"candlestick\", \"series\", \"column\"]),\r\n            }, [_this.columns.template, axisRange.columns.template]); });\r\n        }\r\n    });\r\n    Object.defineProperty(CandlestickSeries, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"CandlestickSeries\"\r\n    });\r\n    Object.defineProperty(CandlestickSeries, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: ColumnSeries.classNames.concat([CandlestickSeries.className])\r\n    });\r\n    return CandlestickSeries;\r\n}(ColumnSeries));\r\nexport { CandlestickSeries };\r\n//# sourceMappingURL=CandlestickSeries.js.map","import { __extends } from \"tslib\";\r\nimport { BaseColumnSeries } from \"./BaseColumnSeries\";\r\nimport { Template } from \"../../../core/util/Template\";\r\nimport { ListTemplate } from \"../../../core/util/List\";\r\nimport { RoundedRectangle } from \"../../../core/render/RoundedRectangle\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\nvar ColumnSeries = /** @class */ (function (_super) {\r\n    __extends(ColumnSeries, _super);\r\n    function ColumnSeries() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * A [[TemplateList]] of all columns in series.\r\n         *\r\n         * `columns.template` can be used to set default settings for all columns,\r\n         * or to change on existing ones.\r\n         */\r\n        Object.defineProperty(_this, \"columns\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), function () { return RoundedRectangle._new(_this._root, {\r\n                position: \"absolute\",\r\n                themeTags: $utils.mergeTags(_this.columns.template.get(\"themeTags\", []), [\"series\", \"column\"])\r\n            }, [_this.columns.template]); })\r\n        });\r\n        return _this;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(ColumnSeries.prototype, \"makeColumn\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem, listTemplate) {\r\n            var column = this.mainContainer.children.push(listTemplate.make());\r\n            column._setDataItem(dataItem);\r\n            listTemplate.push(column);\r\n            return column;\r\n        }\r\n    });\r\n    Object.defineProperty(ColumnSeries.prototype, \"_processAxisRange\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (axisRange) {\r\n            var _this = this;\r\n            _super.prototype._processAxisRange.call(this, axisRange);\r\n            axisRange.columns = new ListTemplate(Template.new({}), function () { return RoundedRectangle._new(_this._root, {\r\n                position: \"absolute\",\r\n                themeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"series\", \"column\"]),\r\n            }, [_this.columns.template, axisRange.columns.template]); });\r\n        }\r\n    });\r\n    Object.defineProperty(ColumnSeries, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"ColumnSeries\"\r\n    });\r\n    Object.defineProperty(ColumnSeries, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: BaseColumnSeries.classNames.concat([ColumnSeries.className])\r\n    });\r\n    return ColumnSeries;\r\n}(BaseColumnSeries));\r\nexport { ColumnSeries };\r\n//# sourceMappingURL=ColumnSeries.js.map","import { __extends } from \"tslib\";\r\nimport { XYSeries } from \"./XYSeries\";\r\nimport { Graphics } from \"../../../core/render/Graphics\";\r\nimport { line, area } from \"d3-shape\";\r\nimport { Template } from \"../../../core/util/Template\";\r\nimport { ListTemplate } from \"../../../core/util/List\";\r\nimport { color } from \"../../../core/util/Color\";\r\nimport { DataItem } from \"../../../core/render/Component\";\r\nimport { Rectangle } from \"../../../core/render/Rectangle\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n/**\r\n * Used to plot line and/or area series.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/} for more info\r\n * @important\r\n */\r\nvar LineSeries = /** @class */ (function (_super) {\r\n    __extends(LineSeries, _super);\r\n    function LineSeries() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        Object.defineProperty(_this, \"_endIndex\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_strokeGenerator\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: line()\r\n        });\r\n        Object.defineProperty(_this, \"_fillGenerator\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: area()\r\n        });\r\n        Object.defineProperty(_this, \"_legendStroke\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_legendFill\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A [[TemplateList]] of all line segments in series.\r\n         *\r\n         * `strokes.template` can be used to set default settings for all line\r\n         * segments, or to change on existing ones.\r\n         *\r\n         * @default new ListTemplate<Graphics>\r\n         */\r\n        Object.defineProperty(_this, \"strokes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), function () { return Graphics._new(_this._root, {\r\n                themeTags: $utils.mergeTags(_this.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"stroke\"])\r\n            }, [_this.strokes.template]); })\r\n        });\r\n        /**\r\n         * A [[TemplateList]] of all segment fills in series.\r\n         *\r\n         * `fills.template` can be used to set default settings for all segment\r\n         * fills, or to change on existing ones.\r\n         *\r\n         * @default new ListTemplate<Graphics>\r\n         */\r\n        Object.defineProperty(_this, \"fills\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), function () { return Graphics._new(_this._root, {\r\n                themeTags: $utils.mergeTags(_this.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"fill\"])\r\n            }, [_this.fills.template]); })\r\n        });\r\n        // custom set from data\r\n        Object.defineProperty(_this, \"_fillTemplate\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_strokeTemplate\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_previousPoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [0, 0, 0, 0]\r\n        });\r\n        Object.defineProperty(_this, \"_dindex\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(_this, \"_sindex\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(LineSeries.prototype, \"_afterNew\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this._fillGenerator.y0(function (p) {\r\n                return p[3];\r\n            });\r\n            this._fillGenerator.x0(function (p) {\r\n                return p[2];\r\n            });\r\n            this._fillGenerator.y1(function (p) {\r\n                return p[1];\r\n            });\r\n            this._fillGenerator.x1(function (p) {\r\n                return p[0];\r\n            });\r\n            _super.prototype._afterNew.call(this);\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(LineSeries.prototype, \"makeStroke\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (strokes) {\r\n            var stroke = this.mainContainer.children.push(strokes.make());\r\n            strokes.push(stroke);\r\n            return stroke;\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(LineSeries.prototype, \"makeFill\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (fills) {\r\n            var fill = this.mainContainer.children.push(fills.make());\r\n            fills.push(fill);\r\n            return fill;\r\n        }\r\n    });\r\n    Object.defineProperty(LineSeries.prototype, \"_updateChildren\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this._strokeTemplate = undefined;\r\n            this._fillTemplate = undefined;\r\n            var xAxis = this.get(\"xAxis\");\r\n            var yAxis = this.get(\"yAxis\");\r\n            if (this.isDirty(\"stroke\")) {\r\n                var stroke = this.get(\"stroke\");\r\n                this.strokes.template.set(\"stroke\", stroke);\r\n                var legendStroke = this._legendStroke;\r\n                if (legendStroke) {\r\n                    legendStroke.states.lookup(\"default\").set(\"stroke\", stroke);\r\n                }\r\n            }\r\n            if (this.isDirty(\"fill\")) {\r\n                var fill = this.get(\"fill\");\r\n                this.fills.template.set(\"fill\", fill);\r\n                var legendFill = this._legendFill;\r\n                if (legendFill) {\r\n                    legendFill.states.lookup(\"default\").set(\"fill\", fill);\r\n                }\r\n            }\r\n            if (this.isDirty(\"curveFactory\")) {\r\n                var curveFactory = this.get(\"curveFactory\");\r\n                if (curveFactory) {\r\n                    this._strokeGenerator.curve(curveFactory);\r\n                    this._fillGenerator.curve(curveFactory);\r\n                }\r\n            }\r\n            if (xAxis.inited && yAxis.inited) {\r\n                if (this._axesDirty || this._valuesDirty || this._stackDirty || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._sizeDirty || this.isDirty(\"connect\") || this.isDirty(\"curveFactory\")) {\r\n                    this.fills.each(function (fill) {\r\n                        fill.setPrivate(\"visible\", false);\r\n                    });\r\n                    this.strokes.each(function (fill) {\r\n                        fill.setPrivate(\"visible\", false);\r\n                    });\r\n                    this.axisRanges.each(function (axisRange) {\r\n                        var fills = axisRange.fills;\r\n                        if (fills) {\r\n                            fills.each(function (fill) {\r\n                                fill.setPrivate(\"visible\", false);\r\n                            });\r\n                        }\r\n                        var strokes = axisRange.strokes;\r\n                        if (strokes) {\r\n                            strokes.each(function (stroke) {\r\n                                stroke.setPrivate(\"visible\", false);\r\n                            });\r\n                        }\r\n                    });\r\n                    var startIndex = this.startIndex();\r\n                    var strokeTemplateField = this.strokes.template.get(\"templateField\");\r\n                    var fillTemplateField = this.fills.template.get(\"templateField\");\r\n                    var strokeTemplateFound = true;\r\n                    var fillTemplateFound = true;\r\n                    if (strokeTemplateField) {\r\n                        strokeTemplateFound = false;\r\n                    }\r\n                    if (fillTemplateField) {\r\n                        fillTemplateFound = false;\r\n                    }\r\n                    var _loop_1 = function (i) {\r\n                        var dataItem = this_1.dataItems[i];\r\n                        var hasValues = true;\r\n                        var dataContext = dataItem.dataContext;\r\n                        if (strokeTemplateField) {\r\n                            if (dataContext[strokeTemplateField]) {\r\n                                strokeTemplateFound = true;\r\n                            }\r\n                        }\r\n                        if (fillTemplateField) {\r\n                            if (dataContext[fillTemplateField]) {\r\n                                fillTemplateFound = true;\r\n                            }\r\n                        }\r\n                        $array.each(this_1._valueFields, function (field) {\r\n                            if (!$type.isNumber(dataItem.get(field))) {\r\n                                hasValues = false;\r\n                            }\r\n                        });\r\n                        if (hasValues && strokeTemplateFound && fillTemplateFound) {\r\n                            startIndex = i;\r\n                            return \"break\";\r\n                        }\r\n                    };\r\n                    var this_1 = this;\r\n                    for (var i = startIndex - 1; i >= 0; i--) {\r\n                        var state_1 = _loop_1(i);\r\n                        if (state_1 === \"break\")\r\n                            break;\r\n                    }\r\n                    var len = this.dataItems.length;\r\n                    var endIndex = this.endIndex();\r\n                    if (endIndex < len) {\r\n                        endIndex++;\r\n                        var _loop_2 = function (i) {\r\n                            var dataItem = this_2.dataItems[i];\r\n                            var hasValues = true;\r\n                            $array.each(this_2._valueFields, function (field) {\r\n                                if (!$type.isNumber(dataItem.get(field))) {\r\n                                    hasValues = false;\r\n                                }\r\n                            });\r\n                            if (hasValues) {\r\n                                endIndex = i + 1;\r\n                                return \"break\";\r\n                            }\r\n                        };\r\n                        var this_2 = this;\r\n                        for (var i = endIndex; i < len; i++) {\r\n                            var state_2 = _loop_2(i);\r\n                            if (state_2 === \"break\")\r\n                                break;\r\n                        }\r\n                    }\r\n                    if (startIndex > 0) {\r\n                        startIndex--;\r\n                    }\r\n                    this._endIndex = endIndex;\r\n                    this._clearGraphics();\r\n                    this._sindex = 0;\r\n                    this._dindex = startIndex;\r\n                    if (this.dataItems.length == 1) {\r\n                        this._startSegment(0);\r\n                    }\r\n                    else {\r\n                        // this is done to avoid recursion with a lot of segments \r\n                        while (this._dindex < endIndex - 1) {\r\n                            this._startSegment(this._dindex);\r\n                            this._sindex++;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                this._skipped = true;\r\n            }\r\n            _super.prototype._updateChildren.call(this);\r\n        }\r\n    });\r\n    Object.defineProperty(LineSeries.prototype, \"_clearGraphics\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this.strokes.clear();\r\n            this.fills.clear();\r\n        }\r\n    });\r\n    Object.defineProperty(LineSeries.prototype, \"_startSegment\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItemIndex) {\r\n            var _this = this;\r\n            var endIndex = this._endIndex;\r\n            var currentEndIndex = endIndex;\r\n            var autoGapCount = this.get(\"autoGapCount\");\r\n            var connect = this.get(\"connect\");\r\n            var fill = this.makeFill(this.fills);\r\n            var fillTemplate = this._fillTemplate;\r\n            var originalTemplate = this.fills.template;\r\n            if (fillTemplate && fillTemplate != originalTemplate) {\r\n                fill.template = fillTemplate;\r\n            }\r\n            fill.setPrivate(\"visible\", true);\r\n            var stroke = this.makeStroke(this.strokes);\r\n            var strokeTemplate = this._strokeTemplate;\r\n            if (strokeTemplate && strokeTemplate != this.strokes.template) {\r\n                stroke.template = strokeTemplate;\r\n            }\r\n            stroke.setPrivate(\"visible\", true);\r\n            var xAxis = this.get(\"xAxis\");\r\n            var yAxis = this.get(\"yAxis\");\r\n            var baseAxis = this.get(\"baseAxis\");\r\n            var vcx = this.get(\"vcx\", 1);\r\n            var vcy = this.get(\"vcy\", 1);\r\n            var xField = this._xField;\r\n            var yField = this._yField;\r\n            var xOpenField = this._xOpenField;\r\n            var yOpenField = this._yOpenField;\r\n            var xOpenFieldValue = this.get(\"openValueXField\");\r\n            var yOpenFieldValue = this.get(\"openValueYField\");\r\n            if (!xOpenFieldValue) {\r\n                xOpenField = this._xField;\r\n            }\r\n            if (!yOpenFieldValue) {\r\n                yOpenField = this._yField;\r\n            }\r\n            var stacked = this.get(\"stacked\");\r\n            var basePosX = xAxis.basePosition();\r\n            var basePosY = yAxis.basePosition();\r\n            var baseField;\r\n            if (baseAxis === yAxis) {\r\n                baseField = this._yField;\r\n            }\r\n            else {\r\n                baseField = this._xField;\r\n            }\r\n            var segments = [];\r\n            var points = [];\r\n            segments.push(points);\r\n            var strokeTemplateField = this.strokes.template.get(\"templateField\");\r\n            var fillTemplateField = this.fills.template.get(\"templateField\");\r\n            var locationX = this.get(\"locationX\", 0.5);\r\n            var locationY = this.get(\"locationY\", 0.5);\r\n            var openLocationX = this.get(\"openLocationX\", locationX);\r\n            var openLocationY = this.get(\"openLocationY\", locationY);\r\n            var minDistance = this.get(\"minDistance\", 0);\r\n            var i;\r\n            var fillVisible = this.fills.template.get(\"visible\");\r\n            if (this.axisRanges.length > 0) {\r\n                fillVisible = true;\r\n            }\r\n            var getOpen = false;\r\n            if (stacked || xOpenFieldValue || yOpenFieldValue) {\r\n                getOpen = true;\r\n            }\r\n            var o = {\r\n                points: points,\r\n                segments: segments,\r\n                stacked: stacked,\r\n                getOpen: getOpen,\r\n                basePosX: basePosX,\r\n                basePosY: basePosY,\r\n                fillVisible: fillVisible,\r\n                xField: xField,\r\n                yField: yField,\r\n                xOpenField: xOpenField,\r\n                yOpenField: yOpenField,\r\n                vcx: vcx,\r\n                vcy: vcy,\r\n                baseAxis: baseAxis,\r\n                xAxis: xAxis,\r\n                yAxis: yAxis,\r\n                locationX: locationX,\r\n                locationY: locationY,\r\n                openLocationX: openLocationX,\r\n                openLocationY: openLocationY,\r\n                minDistance: minDistance\r\n            };\r\n            for (i = dataItemIndex; i < currentEndIndex; i++) {\r\n                this._dindex = i;\r\n                var dataItem = this._dataItems[i];\r\n                var valueX = dataItem.get(xField);\r\n                var valueY = dataItem.get(yField);\r\n                if (valueX == null || valueY == null) {\r\n                    if (!connect) {\r\n                        points = [];\r\n                        segments.push(points);\r\n                        o.points = points;\r\n                    }\r\n                }\r\n                else {\r\n                    this._getPoints(dataItem, o);\r\n                }\r\n                if (strokeTemplateField) {\r\n                    var strokeTemplate_1 = dataItem.dataContext[strokeTemplateField];\r\n                    if (strokeTemplate_1) {\r\n                        if (!(strokeTemplate_1 instanceof Template)) {\r\n                            strokeTemplate_1 = Template.new(strokeTemplate_1);\r\n                        }\r\n                        this._strokeTemplate = strokeTemplate_1;\r\n                        if (i > dataItemIndex) {\r\n                            currentEndIndex = i;\r\n                            break;\r\n                        }\r\n                        else {\r\n                            stroke.template = strokeTemplate_1;\r\n                        }\r\n                    }\r\n                }\r\n                if (fillTemplateField) {\r\n                    var fillTemplate_1 = dataItem.dataContext[fillTemplateField];\r\n                    if (fillTemplate_1) {\r\n                        if (!(fillTemplate_1 instanceof Template)) {\r\n                            fillTemplate_1 = Template.new(fillTemplate_1);\r\n                        }\r\n                        this._fillTemplate = fillTemplate_1;\r\n                        if (i > dataItemIndex) {\r\n                            currentEndIndex = i;\r\n                            break;\r\n                        }\r\n                        else {\r\n                            fill.template = fillTemplate_1;\r\n                        }\r\n                    }\r\n                }\r\n                if (!connect) {\r\n                    var nextItem = this.dataItems[i + 1];\r\n                    if (nextItem) {\r\n                        if (baseAxis.shouldGap(dataItem, nextItem, autoGapCount, baseField)) {\r\n                            points = [];\r\n                            segments.push(points);\r\n                            o.points = points;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            fill.setRaw(\"userData\", [dataItemIndex, i]);\r\n            stroke.setRaw(\"userData\", [dataItemIndex, i]);\r\n            if (i === endIndex) {\r\n                this._endLine(points, segments[0][0]);\r\n            }\r\n            if (stroke) {\r\n                this._drawStroke(stroke, segments);\r\n            }\r\n            if (fill) {\r\n                this._drawFill(fill, segments);\r\n            }\r\n            this.axisRanges.each(function (axisRange) {\r\n                var container = axisRange.container;\r\n                var fills = axisRange.fills;\r\n                var fill = _this.makeFill(fills);\r\n                if (container) {\r\n                    container.children.push(fill);\r\n                }\r\n                fill.setPrivate(\"visible\", true);\r\n                _this._drawFill(fill, segments);\r\n                var strokes = axisRange.strokes;\r\n                var stroke = _this.makeStroke(strokes);\r\n                if (container) {\r\n                    container.children.push(stroke);\r\n                }\r\n                stroke.setPrivate(\"visible\", true);\r\n                _this._drawStroke(stroke, segments);\r\n                fill.setRaw(\"userData\", [dataItemIndex, i]);\r\n                stroke.setRaw(\"userData\", [dataItemIndex, i]);\r\n            });\r\n        }\r\n    });\r\n    Object.defineProperty(LineSeries.prototype, \"_getPoints\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem, o) {\r\n            var points = o.points;\r\n            var itemLocationX = dataItem.get(\"locationX\", o.locationX);\r\n            var itemLocationY = dataItem.get(\"locationY\", o.locationY);\r\n            var xPos = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX, o.vcx);\r\n            var yPos = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY, o.vcy);\r\n            if (this._shouldInclude(xPos)) {\r\n                var iPoint = this.getPoint(xPos, yPos);\r\n                var point = [iPoint.x, iPoint.y];\r\n                iPoint.x += this._x;\r\n                iPoint.y += this._y;\r\n                dataItem.set(\"point\", iPoint);\r\n                if (o.fillVisible) {\r\n                    var xPos0 = xPos;\r\n                    var yPos0 = yPos;\r\n                    if (o.baseAxis === o.xAxis) {\r\n                        yPos0 = o.basePosY;\r\n                    }\r\n                    else if (o.baseAxis === o.yAxis) {\r\n                        xPos0 = o.basePosX;\r\n                    }\r\n                    if (o.getOpen) {\r\n                        var valueX = dataItem.get(o.xOpenField);\r\n                        var valueY = dataItem.get(o.yOpenField);\r\n                        if (valueX != null && valueY != null) {\r\n                            var itemLocationX_1 = dataItem.get(\"openLocationX\", o.openLocationX);\r\n                            var itemLocationY_1 = dataItem.get(\"openLocationY\", o.openLocationY);\r\n                            if (o.stacked) {\r\n                                var stackToItemX = dataItem.get(\"stackToItemX\");\r\n                                var stackToItemY = dataItem.get(\"stackToItemY\");\r\n                                if (stackToItemX) {\r\n                                    xPos0 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX_1, stackToItemX.component.get(\"vcx\"));\r\n                                    if ($type.isNaN(xPos0)) {\r\n                                        xPos0 = o.basePosX;\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    if (o.yAxis === o.baseAxis) {\r\n                                        xPos0 = o.basePosX;\r\n                                    }\r\n                                    else {\r\n                                        xPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX_1, o.vcx);\r\n                                    }\r\n                                }\r\n                                if (stackToItemY) {\r\n                                    yPos0 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY_1, stackToItemY.component.get(\"vcy\"));\r\n                                    if ($type.isNaN(yPos0)) {\r\n                                        yPos0 = o.basePosY;\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    if (o.xAxis === o.baseAxis) {\r\n                                        yPos0 = o.basePosY;\r\n                                    }\r\n                                    else {\r\n                                        yPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY_1, o.vcy);\r\n                                    }\r\n                                }\r\n                            }\r\n                            else {\r\n                                xPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX_1, o.vcx);\r\n                                yPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY_1, o.vcy);\r\n                            }\r\n                        }\r\n                    }\r\n                    var closeIPoint = this.getPoint(xPos0, yPos0);\r\n                    point[2] = closeIPoint.x;\r\n                    point[3] = closeIPoint.y;\r\n                }\r\n                if (o.minDistance > 0) {\r\n                    var p0 = point[0];\r\n                    var p1 = point[1];\r\n                    var p2 = point[2];\r\n                    var p3 = point[3];\r\n                    var prev = this._previousPoint;\r\n                    var pp0 = prev[0];\r\n                    var pp1 = prev[1];\r\n                    var pp2 = prev[2];\r\n                    var pp3 = prev[3];\r\n                    if (Math.hypot(p0 - pp0, p1 - pp1) > o.minDistance || (p2 && p3 && Math.hypot(p2 - pp2, p3 - pp3) > o.minDistance)) {\r\n                        points.push(point);\r\n                        this._previousPoint = point;\r\n                    }\r\n                }\r\n                else {\r\n                    points.push(point);\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(LineSeries.prototype, \"_endLine\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (_points, _firstPoint) {\r\n        }\r\n    });\r\n    Object.defineProperty(LineSeries.prototype, \"_drawStroke\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (graphics, segments) {\r\n            var _this = this;\r\n            if (graphics.get(\"visible\")) {\r\n                graphics.set(\"draw\", function (display) {\r\n                    $array.each(segments, function (segment) {\r\n                        _this._strokeGenerator.context(display);\r\n                        _this._strokeGenerator(segment);\r\n                    });\r\n                });\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(LineSeries.prototype, \"_drawFill\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (graphics, segments) {\r\n            var _this = this;\r\n            if (graphics.get(\"visible\")) {\r\n                graphics.set(\"draw\", function (display) {\r\n                    $array.each(segments, function (segment) {\r\n                        _this._fillGenerator.context(display);\r\n                        _this._fillGenerator(segment);\r\n                    });\r\n                });\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(LineSeries.prototype, \"_processAxisRange\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (axisRange) {\r\n            var _this = this;\r\n            _super.prototype._processAxisRange.call(this, axisRange);\r\n            axisRange.fills = new ListTemplate(Template.new({}), function () { return Graphics._new(_this._root, {\r\n                themeTags: $utils.mergeTags(axisRange.fills.template.get(\"themeTags\", []), [\"line\", \"series\", \"fill\"]),\r\n            }, [_this.fills.template, axisRange.fills.template]); });\r\n            axisRange.strokes = new ListTemplate(Template.new({}), function () { return Graphics._new(_this._root, {\r\n                themeTags: $utils.mergeTags(axisRange.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"stroke\"]),\r\n            }, [_this.strokes.template, axisRange.strokes.template]); });\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(LineSeries.prototype, \"createLegendMarker\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (_dataItem) {\r\n            var legendDataItem = this.get(\"legendDataItem\");\r\n            if (legendDataItem) {\r\n                var marker = legendDataItem.get(\"marker\");\r\n                var markerRectangle = legendDataItem.get(\"markerRectangle\");\r\n                if (markerRectangle) {\r\n                    markerRectangle.setPrivate(\"visible\", false);\r\n                }\r\n                marker.set(\"background\", Rectangle.new(marker._root, { fillOpacity: 0, fill: color(0x000000) }));\r\n                var legendStroke = marker.children.push(Graphics._new(marker._root, {\r\n                    themeTags: [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"], interactive: false\r\n                }, [this.strokes.template]));\r\n                this._legendStroke = legendStroke;\r\n                var legendFill = marker.children.push(Graphics._new(marker._root, {\r\n                    themeTags: [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]\r\n                }, [this.fills.template]));\r\n                this._legendFill = legendFill;\r\n                var disabledColor = this._root.interfaceColors.get(\"disabled\");\r\n                legendStroke.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\r\n                legendFill.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\r\n                if (this.bullets.length > 0) {\r\n                    var bulletFunction = this.bullets.getIndex(0);\r\n                    if (bulletFunction) {\r\n                        var bullet = bulletFunction(marker._root, this, new DataItem(this, {}, {}));\r\n                        if (bullet) {\r\n                            var sprite = bullet.get(\"sprite\");\r\n                            if (sprite instanceof Graphics) {\r\n                                sprite.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\r\n                            }\r\n                            if (sprite) {\r\n                                sprite.set(\"tooltipText\", undefined);\r\n                                sprite.set(\"tooltipHTML\", undefined);\r\n                                marker.children.push(sprite);\r\n                                sprite.setAll({ x: marker.width() / 2, y: marker.height() / 2 });\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(LineSeries, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"LineSeries\"\r\n    });\r\n    Object.defineProperty(LineSeries, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: XYSeries.classNames.concat([LineSeries.className])\r\n    });\r\n    return LineSeries;\r\n}(XYSeries));\r\nexport { LineSeries };\r\n//# sourceMappingURL=LineSeries.js.map","import { __extends } from \"tslib\";\r\nimport { Candlestick } from \"./Candlestick\";\r\nvar OHLC = /** @class */ (function (_super) {\r\n    __extends(OHLC, _super);\r\n    function OHLC() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(OHLC.prototype, \"_draw\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var display = this._display;\r\n            display.moveTo(this.get(\"lowX1\", 0), this.get(\"lowY1\", 0));\r\n            display.lineTo(this.get(\"highX1\", 0), this.get(\"highY1\", 0));\r\n            var w = this.width();\r\n            var h = this.height();\r\n            if (this.get(\"orientation\") == \"vertical\") {\r\n                var lY = h;\r\n                var hY = 0;\r\n                display.moveTo(0, lY);\r\n                display.lineTo(w / 2, lY);\r\n                display.moveTo(w / 2, hY);\r\n                display.lineTo(w, hY);\r\n            }\r\n            else {\r\n                var lX = 0;\r\n                var hX = w;\r\n                display.moveTo(lX, 0);\r\n                display.lineTo(lX, h / 2);\r\n                display.moveTo(hX, h / 2);\r\n                display.lineTo(hX, h);\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(OHLC, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"OHLC\"\r\n    });\r\n    Object.defineProperty(OHLC, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: Candlestick.classNames.concat([OHLC.className])\r\n    });\r\n    return OHLC;\r\n}(Candlestick));\r\nexport { OHLC };\r\n//# sourceMappingURL=OHLC.js.map","import { __extends } from \"tslib\";\r\nimport { CandlestickSeries } from \"./CandlestickSeries\";\r\nimport { OHLC } from \"./OHLC\";\r\nimport { Template } from \"../../../core/util/Template\";\r\nimport { ListTemplate } from \"../../../core/util/List\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n/**\r\n * OHLC series.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\r\n * @important\r\n */\r\nvar OHLCSeries = /** @class */ (function (_super) {\r\n    __extends(OHLCSeries, _super);\r\n    function OHLCSeries() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * A list of OHLC bars in the series.\r\n         *\r\n         * `columns.template` can be used to configure OHLC bars.\r\n         *\r\n         * @default new ListTemplate<OHLC>\r\n         */\r\n        Object.defineProperty(_this, \"columns\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({\r\n                themeTags: [\"autocolor\"]\r\n            }), function () { return OHLC._new(_this._root, {\r\n                themeTags: $utils.mergeTags(_this.columns.template.get(\"themeTags\", []), [\"ohlc\", \"series\", \"column\"])\r\n            }, [_this.columns.template]); })\r\n        });\r\n        return _this;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(OHLCSeries.prototype, \"makeColumn\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem, listTemplate) {\r\n            var column = this.mainContainer.children.push(listTemplate.make());\r\n            column._setDataItem(dataItem);\r\n            listTemplate.push(column);\r\n            return column;\r\n        }\r\n    });\r\n    Object.defineProperty(OHLCSeries.prototype, \"_processAxisRange\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (axisRange) {\r\n            var _this = this;\r\n            _super.prototype._processAxisRange.call(this, axisRange);\r\n            axisRange.columns = new ListTemplate(Template.new({}), function () { return OHLC._new(_this._root, {\r\n                themeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"ohlc\", \"series\", \"column\"]),\r\n            }, [_this.columns.template, axisRange.columns.template]); });\r\n        }\r\n    });\r\n    Object.defineProperty(OHLCSeries, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"OHLCSeries\"\r\n    });\r\n    Object.defineProperty(OHLCSeries, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: CandlestickSeries.classNames.concat([OHLCSeries.className])\r\n    });\r\n    return OHLCSeries;\r\n}(CandlestickSeries));\r\nexport { OHLCSeries };\r\n//# sourceMappingURL=OHLCSeries.js.map","import { __extends } from \"tslib\";\r\nimport { LineSeries } from \"./LineSeries\";\r\nimport { curveMonotoneXTension } from \"../../../core/render/MonotoneXTension\";\r\n/**\r\n * Smoothed line series suitable for horizontal plots.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\r\n */\r\nvar SmoothedXLineSeries = /** @class */ (function (_super) {\r\n    __extends(SmoothedXLineSeries, _super);\r\n    function SmoothedXLineSeries() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(SmoothedXLineSeries.prototype, \"_afterNew\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this._setDefault(\"curveFactory\", curveMonotoneXTension(this.get(\"tension\", 0.5)));\r\n            _super.prototype._afterNew.call(this);\r\n        }\r\n    });\r\n    Object.defineProperty(SmoothedXLineSeries.prototype, \"_updateChildren\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            if (this.isDirty(\"tension\")) {\r\n                this.set(\"curveFactory\", curveMonotoneXTension(this.get(\"tension\", 0.5)));\r\n                this._valuesDirty = true;\r\n            }\r\n            _super.prototype._updateChildren.call(this);\r\n        }\r\n    });\r\n    Object.defineProperty(SmoothedXLineSeries, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"SmoothedXLineSeries\"\r\n    });\r\n    Object.defineProperty(SmoothedXLineSeries, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: LineSeries.classNames.concat([SmoothedXLineSeries.className])\r\n    });\r\n    return SmoothedXLineSeries;\r\n}(LineSeries));\r\nexport { SmoothedXLineSeries };\r\n//# sourceMappingURL=SmoothedXLineSeries.js.map","import { __extends } from \"tslib\";\r\nimport { LineSeries } from \"./LineSeries\";\r\nimport { curveCardinal } from \"d3-shape\";\r\n/**\r\n * Smoothed line series suitable for XY (scatter) charts\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\r\n */\r\nvar SmoothedXYLineSeries = /** @class */ (function (_super) {\r\n    __extends(SmoothedXYLineSeries, _super);\r\n    function SmoothedXYLineSeries() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(SmoothedXYLineSeries.prototype, \"_afterNew\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this._setDefault(\"curveFactory\", curveCardinal.tension(this.get(\"tension\", 0.5)));\r\n            _super.prototype._afterNew.call(this);\r\n        }\r\n    });\r\n    Object.defineProperty(SmoothedXYLineSeries.prototype, \"_updateChildren\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            if (this.isDirty(\"tension\")) {\r\n                this.set(\"curveFactory\", curveCardinal.tension(this.get(\"tension\", 0.5)));\r\n                this._valuesDirty = true;\r\n            }\r\n            _super.prototype._updateChildren.call(this);\r\n        }\r\n    });\r\n    Object.defineProperty(SmoothedXYLineSeries, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"SmoothedXYLineSeries\"\r\n    });\r\n    Object.defineProperty(SmoothedXYLineSeries, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: LineSeries.classNames.concat([SmoothedXYLineSeries.className])\r\n    });\r\n    return SmoothedXYLineSeries;\r\n}(LineSeries));\r\nexport { SmoothedXYLineSeries };\r\n//# sourceMappingURL=SmoothedXYLineSeries.js.map","import { __extends } from \"tslib\";\r\nimport { LineSeries } from \"./LineSeries\";\r\nimport { curveMonotoneYTension } from \"../../../core/render/MonotoneYTension\";\r\n/**\r\n * Smoothed line series suitable for vertical plots.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\r\n */\r\nvar SmoothedYLineSeries = /** @class */ (function (_super) {\r\n    __extends(SmoothedYLineSeries, _super);\r\n    function SmoothedYLineSeries() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(SmoothedYLineSeries.prototype, \"_afterNew\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this._setDefault(\"curveFactory\", curveMonotoneYTension(this.get(\"tension\", 0.5)));\r\n            _super.prototype._afterNew.call(this);\r\n        }\r\n    });\r\n    Object.defineProperty(SmoothedYLineSeries.prototype, \"_updateChildren\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            if (this.isDirty(\"tension\")) {\r\n                this.set(\"curveFactory\", curveMonotoneYTension(this.get(\"tension\", 0.5)));\r\n                this._valuesDirty = true;\r\n            }\r\n            _super.prototype._updateChildren.call(this);\r\n        }\r\n    });\r\n    Object.defineProperty(SmoothedYLineSeries, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"SmoothedYLineSeries\"\r\n    });\r\n    Object.defineProperty(SmoothedYLineSeries, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: LineSeries.classNames.concat([SmoothedYLineSeries.className])\r\n    });\r\n    return SmoothedYLineSeries;\r\n}(LineSeries));\r\nexport { SmoothedYLineSeries };\r\n//# sourceMappingURL=SmoothedYLineSeries.js.map","import { __extends } from \"tslib\";\r\nimport { LineSeries } from \"./LineSeries\";\r\nimport { p100 } from \"../../../core/util/Percent\";\r\nimport { curveStepAfter } from \"d3-shape\";\r\nvar StepLineSeries = /** @class */ (function (_super) {\r\n    __extends(StepLineSeries, _super);\r\n    function StepLineSeries() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(StepLineSeries.prototype, \"_afterNew\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this._setDefault(\"curveFactory\", curveStepAfter);\r\n            _super.prototype._afterNew.call(this);\r\n        }\r\n    });\r\n    Object.defineProperty(StepLineSeries.prototype, \"_getPoints\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem, o) {\r\n            var points = o.points;\r\n            var width = this.get(\"stepWidth\", p100).value / 2;\r\n            var itemLocationX0 = dataItem.get(\"locationX\", o.locationX);\r\n            var itemLocationY0 = dataItem.get(\"locationY\", o.locationY);\r\n            var itemLocationX1 = itemLocationX0;\r\n            var itemLocationY1 = itemLocationY0;\r\n            if (o.baseAxis === o.xAxis) {\r\n                itemLocationX0 -= width;\r\n                itemLocationX1 += width;\r\n            }\r\n            else if (o.baseAxis === o.yAxis) {\r\n                itemLocationY0 -= width;\r\n                itemLocationY1 += width;\r\n            }\r\n            var xPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX0, o.vcx);\r\n            var yPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY0, o.vcy);\r\n            var xPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX1, o.vcx);\r\n            var yPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY1, o.vcy);\r\n            if (this._shouldInclude(xPos0)) {\r\n                var iPoint0 = this.getPoint(xPos0, yPos0);\r\n                var point0 = [iPoint0.x, iPoint0.y];\r\n                var iPoint1 = this.getPoint(xPos1, yPos1);\r\n                var point1 = [iPoint1.x, iPoint1.y];\r\n                if (o.fillVisible) {\r\n                    var xOpenPos0 = xPos0;\r\n                    var yOpenPos0 = yPos0;\r\n                    var xOpenPos1 = xPos1;\r\n                    var yOpenPos1 = yPos1;\r\n                    if (o.baseAxis === o.xAxis) {\r\n                        yOpenPos0 = o.basePosY;\r\n                        yOpenPos1 = o.basePosY;\r\n                    }\r\n                    else if (o.baseAxis === o.yAxis) {\r\n                        xOpenPos0 = o.basePosX;\r\n                        xOpenPos1 = o.basePosX;\r\n                    }\r\n                    if (o.getOpen) {\r\n                        var valueX = dataItem.get(o.xOpenField);\r\n                        var valueY = dataItem.get(o.yOpenField);\r\n                        if (valueX != null && valueY != null) {\r\n                            itemLocationX0 = dataItem.get(\"openLocationX\", o.openLocationX);\r\n                            itemLocationY0 = dataItem.get(\"openLocationY\", o.openLocationY);\r\n                            itemLocationX1 = itemLocationX0;\r\n                            itemLocationY1 = itemLocationY0;\r\n                            if (o.baseAxis === o.xAxis) {\r\n                                itemLocationX0 -= width;\r\n                                itemLocationX1 += width;\r\n                            }\r\n                            else if (o.baseAxis === o.yAxis) {\r\n                                itemLocationY0 -= width;\r\n                                itemLocationY1 += width;\r\n                            }\r\n                            if (o.stacked) {\r\n                                var stackToItemX = dataItem.get(\"stackToItemX\");\r\n                                var stackToItemY = dataItem.get(\"stackToItemY\");\r\n                                if (stackToItemX) {\r\n                                    xOpenPos0 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX0, stackToItemX.component.get(\"vcx\"));\r\n                                    xOpenPos1 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX1, stackToItemX.component.get(\"vcx\"));\r\n                                }\r\n                                else {\r\n                                    if (o.yAxis === o.baseAxis) {\r\n                                        xOpenPos0 = o.basePosX;\r\n                                        xOpenPos1 = o.basePosX;\r\n                                    }\r\n                                    else if (o.baseAxis === o.yAxis) {\r\n                                        xOpenPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX0, o.vcx);\r\n                                        xOpenPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX1, o.vcx);\r\n                                    }\r\n                                }\r\n                                if (stackToItemY) {\r\n                                    yOpenPos0 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY0, stackToItemY.component.get(\"vcy\"));\r\n                                    yOpenPos1 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY1, stackToItemY.component.get(\"vcy\"));\r\n                                }\r\n                                else {\r\n                                    if (o.xAxis === o.baseAxis) {\r\n                                        yOpenPos0 = o.basePosY;\r\n                                        yOpenPos1 = o.basePosY;\r\n                                    }\r\n                                    else if (o.baseAxis === o.yAxis) {\r\n                                        yOpenPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY0, o.vcy);\r\n                                        yOpenPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY1, o.vcy);\r\n                                    }\r\n                                }\r\n                            }\r\n                            else {\r\n                                xOpenPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX0, o.vcx);\r\n                                yOpenPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY0, o.vcy);\r\n                                xOpenPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX1, o.vcx);\r\n                                yOpenPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY1, o.vcy);\r\n                            }\r\n                        }\r\n                    }\r\n                    var closeIPoint0 = this.getPoint(xOpenPos0, yOpenPos0);\r\n                    var closeIPoint1 = this.getPoint(xOpenPos1, yOpenPos1);\r\n                    point0[2] = closeIPoint0.x;\r\n                    point0[3] = closeIPoint0.y;\r\n                    point1[2] = closeIPoint1.x;\r\n                    point1[3] = closeIPoint1.y;\r\n                }\r\n                points.push(point0);\r\n                points.push(point1);\r\n                dataItem.set(\"point\", { x: point0[0] + (point1[0] - point0[0]) / 2, y: point0[1] + (point1[1] - point0[1]) / 2 });\r\n            }\r\n            if (this.get(\"noRisers\")) {\r\n                o.points = [];\r\n                o.segments.push(points);\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(StepLineSeries, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"StepLineSeries\"\r\n    });\r\n    Object.defineProperty(StepLineSeries, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: LineSeries.classNames.concat([StepLineSeries.className])\r\n    });\r\n    return StepLineSeries;\r\n}(LineSeries));\r\nexport { StepLineSeries };\r\n//# sourceMappingURL=StepLineSeries.js.map","import { __awaiter, __extends, __generator } from \"tslib\";\r\nimport { DataItem } from \"../../../core/render/Component\";\r\nimport { Series } from \"../../../core/render/Series\";\r\nimport { List } from \"../../../core/util/List\";\r\nimport { Container } from \"../../../core/render/Container\";\r\nimport { Graphics } from \"../../../core/render/Graphics\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $object from \"../../../core/util/Object\";\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n/**\r\n * @ignore\r\n */\r\nfunction min(left, right) {\r\n    if (left == null) {\r\n        return right;\r\n    }\r\n    else if (right == null) {\r\n        return left;\r\n    }\r\n    else if (right < left) {\r\n        return right;\r\n    }\r\n    else {\r\n        return left;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction max(left, right) {\r\n    if (left == null) {\r\n        return right;\r\n    }\r\n    else if (right == null) {\r\n        return left;\r\n    }\r\n    else if (right > left) {\r\n        return right;\r\n    }\r\n    else {\r\n        return left;\r\n    }\r\n}\r\n/**\r\n * A base class for all XY chart series.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/} for more info\r\n */\r\nvar XYSeries = /** @class */ (function (_super) {\r\n    __extends(XYSeries, _super);\r\n    function XYSeries() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        Object.defineProperty(_this, \"_xField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_yField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_xOpenField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_yOpenField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_xLowField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_xHighField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_yLowField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_yHighField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_axesDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(_this, \"_stackDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(_this, \"_selectionProcessed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(_this, \"_dataSets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(_this, \"_mainContainerMask\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(_this, \"_y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        /**\r\n         * A [[Container]] that us used to put series' elements in.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(_this, \"mainContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: _this.children.push(Container.new(_this._root, {}))\r\n        });\r\n        /**\r\n         * A list of axis ranges that affect the series.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\r\n         */\r\n        Object.defineProperty(_this, \"axisRanges\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new List()\r\n        });\r\n        Object.defineProperty(_this, \"_skipped\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(_this, \"_couldStackTo\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(_this, \"_reallyStackedTo\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(_this, \"_stackedSeries\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(_this, \"_aLocationX0\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(_this, \"_aLocationX1\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(_this, \"_aLocationY0\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(_this, \"_aLocationY1\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(_this, \"_showBullets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(_this, \"valueXFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\r\n                \"valueX\",\r\n                \"openValueX\",\r\n                \"lowValueX\",\r\n                \"highValueX\"\r\n            ]\r\n        });\r\n        Object.defineProperty(_this, \"valueYFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\r\n                \"valueY\",\r\n                \"openValueY\",\r\n                \"lowValueY\",\r\n                \"highValueY\"\r\n            ]\r\n        });\r\n        Object.defineProperty(_this, \"_valueXFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_valueYFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // used for full min/max\r\n        Object.defineProperty(_this, \"_valueXShowFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_valueYShowFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // used for selection (uses working)\r\n        Object.defineProperty(_this, \"__valueXShowFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"__valueYShowFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_emptyDataItem\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new DataItem(_this, undefined, {})\r\n        });\r\n        Object.defineProperty(_this, \"_dataSetId\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_tooltipFieldX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_tooltipFieldY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(XYSeries.prototype, \"_afterNew\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            this.fields.push(\"categoryX\", \"categoryY\", \"openCategoryX\", \"openCategoryY\");\r\n            this.valueFields.push(\"valueX\", \"valueY\", \"openValueX\", \"openValueY\", \"lowValueX\", \"lowValueY\", \"highValueX\", \"highValueY\");\r\n            this._setRawDefault(\"vcx\", 1);\r\n            this._setRawDefault(\"vcy\", 1);\r\n            // this can't go to themes, as data might be parsed before theme\r\n            this._setRawDefault(\"valueXShow\", \"valueXWorking\");\r\n            this._setRawDefault(\"valueYShow\", \"valueYWorking\");\r\n            this._setRawDefault(\"openValueXShow\", \"openValueXWorking\");\r\n            this._setRawDefault(\"openValueYShow\", \"openValueYWorking\");\r\n            this._setRawDefault(\"lowValueXShow\", \"lowValueXWorking\");\r\n            this._setRawDefault(\"lowValueYShow\", \"lowValueYWorking\");\r\n            this._setRawDefault(\"highValueXShow\", \"highValueXWorking\");\r\n            this._setRawDefault(\"highValueYShow\", \"highValueYWorking\");\r\n            this._setRawDefault(\"lowValueXGrouped\", \"low\");\r\n            this._setRawDefault(\"lowValueYGrouped\", \"low\");\r\n            this._setRawDefault(\"highValueXGrouped\", \"high\");\r\n            this._setRawDefault(\"highValueYGrouped\", \"high\");\r\n            _super.prototype._afterNew.call(this);\r\n            this._settings.xAxis.series.push(this);\r\n            this._settings.yAxis.series.push(this);\r\n            this.set(\"maskContent\", true);\r\n            this._disposers.push(this.axisRanges.events.onAll(function (change) {\r\n                if (change.type === \"clear\") {\r\n                    $array.each(change.oldValues, function (axisRange) {\r\n                        _this._removeAxisRange(axisRange);\r\n                    });\r\n                }\r\n                else if (change.type === \"push\") {\r\n                    _this._processAxisRange(change.newValue);\r\n                }\r\n                else if (change.type === \"setIndex\") {\r\n                    _this._processAxisRange(change.newValue);\r\n                }\r\n                else if (change.type === \"insertIndex\") {\r\n                    _this._processAxisRange(change.newValue);\r\n                }\r\n                else if (change.type === \"removeIndex\") {\r\n                    _this._removeAxisRange(change.oldValue);\r\n                }\r\n                else if (change.type === \"moveIndex\") {\r\n                    _this._processAxisRange(change.value);\r\n                }\r\n                else {\r\n                    throw new Error(\"Unknown IStreamEvent type\");\r\n                }\r\n            }));\r\n            if (!this.get(\"baseAxis\")) {\r\n                var xAxis = this.get(\"xAxis\");\r\n                var yAxis = this.get(\"yAxis\");\r\n                if (yAxis.isType(\"CategoryAxis\") || yAxis.isType(\"DateAxis\")) {\r\n                    this.set(\"baseAxis\", yAxis);\r\n                }\r\n                else {\r\n                    this.set(\"baseAxis\", xAxis);\r\n                }\r\n            }\r\n            this.states.create(\"hidden\", { opacity: 1, visible: false });\r\n            this._makeFieldNames();\r\n        }\r\n    });\r\n    Object.defineProperty(XYSeries.prototype, \"_processAxisRange\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (axisRange) {\r\n            var container = Container.new(this._root, {});\r\n            axisRange.container = container;\r\n            this.children.push(container);\r\n            axisRange.series = this;\r\n            var axisDataItem = axisRange.axisDataItem;\r\n            axisDataItem.setRaw(\"isRange\", true);\r\n            var axis = axisDataItem.component;\r\n            if (axis) {\r\n                axis._processAxisRange(axisDataItem, [\"range\", \"series\"]);\r\n                var bullet = axisDataItem.get(\"bullet\");\r\n                if (bullet) {\r\n                    var sprite = bullet.get(\"sprite\");\r\n                    if (sprite) {\r\n                        sprite.setPrivate(\"visible\", false);\r\n                    }\r\n                }\r\n                var axisFill = axisDataItem.get(\"axisFill\");\r\n                if (axisFill) {\r\n                    container.set(\"mask\", axisFill);\r\n                }\r\n                axis._seriesAxisRanges.push(axisDataItem);\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(XYSeries.prototype, \"_removeAxisRange\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (axisRange) {\r\n            var axisDataItem = axisRange.axisDataItem;\r\n            var axis = axisDataItem.component;\r\n            axis.disposeDataItem(axisDataItem);\r\n            $array.remove(axis._seriesAxisRanges, axisDataItem);\r\n            var container = axisRange.container;\r\n            if (container) {\r\n                container.dispose();\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(XYSeries.prototype, \"_updateFields\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            _super.prototype._updateFields.call(this);\r\n            this._valueXFields = [];\r\n            this._valueYFields = [];\r\n            this._valueXShowFields = [];\r\n            this._valueYShowFields = [];\r\n            this.__valueXShowFields = [];\r\n            this.__valueYShowFields = [];\r\n            if (this.valueXFields) {\r\n                $array.each(this.valueXFields, function (key) {\r\n                    var field = _this.get((key + \"Field\"));\r\n                    if (field) {\r\n                        _this._valueXFields.push(key);\r\n                        var field_1 = _this.get((key + \"Show\"));\r\n                        _this.__valueXShowFields.push(field_1);\r\n                        if (field_1.indexOf(\"Working\") != -1) {\r\n                            _this._valueXShowFields.push(field_1.split(\"Working\")[0]);\r\n                        }\r\n                        else {\r\n                            _this._valueYShowFields.push(field_1);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            if (this.valueYFields) {\r\n                $array.each(this.valueYFields, function (key) {\r\n                    var field = _this.get((key + \"Field\"));\r\n                    if (field) {\r\n                        _this._valueYFields.push(key);\r\n                        var field_2 = _this.get((key + \"Show\"));\r\n                        _this.__valueYShowFields.push(field_2);\r\n                        if (field_2.indexOf(\"Working\") != -1) {\r\n                            _this._valueYShowFields.push(field_2.split(\"Working\")[0]);\r\n                        }\r\n                        else {\r\n                            _this._valueYShowFields.push(field_2);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(XYSeries.prototype, \"_dispose\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._dispose.call(this);\r\n            var chart = this.chart;\r\n            if (chart) {\r\n                chart.series.removeValue(this);\r\n            }\r\n            $array.removeFirst(this.get(\"xAxis\").series, this);\r\n            $array.removeFirst(this.get(\"yAxis\").series, this);\r\n        }\r\n    });\r\n    // TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\r\n    Object.defineProperty(XYSeries.prototype, \"_min\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key, value) {\r\n            var newValue = min(this.getPrivate(key), value);\r\n            this.setPrivate(key, newValue);\r\n        }\r\n    });\r\n    // TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\r\n    Object.defineProperty(XYSeries.prototype, \"_max\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key, value) {\r\n            var newValue = max(this.getPrivate(key), value);\r\n            this.setPrivate(key, newValue);\r\n        }\r\n    });\r\n    Object.defineProperty(XYSeries.prototype, \"_shouldMakeBullet\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem) {\r\n            if (!this.get(\"xAxis\").inited || !this.get(\"yAxis\").inited) {\r\n                return false;\r\n            }\r\n            if (dataItem.get(this._xField) != null && dataItem.get(this._yField) != null) {\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n    });\r\n    Object.defineProperty(XYSeries.prototype, \"_makeFieldNames\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var xAxis = this.get(\"xAxis\");\r\n            var yAxis = this.get(\"yAxis\");\r\n            var xName = xAxis.getPrivate(\"name\");\r\n            var xCapName = $utils.capitalizeFirst(xName);\r\n            var yName = yAxis.getPrivate(\"name\");\r\n            var yCapName = $utils.capitalizeFirst(yName);\r\n            var xLetter = xAxis.get(\"renderer\").getPrivate(\"letter\");\r\n            var yLetter = yAxis.get(\"renderer\").getPrivate(\"letter\");\r\n            var open = \"open\";\r\n            var low = \"low\";\r\n            var high = \"high\";\r\n            var show = \"Show\";\r\n            if (xAxis.className === \"ValueAxis\") {\r\n                this._xField = this.get((xName + xLetter + show));\r\n                this._xOpenField = this.get((open + xCapName + xLetter + show));\r\n                this._xLowField = this.get((low + xCapName + xLetter + show));\r\n                this._xHighField = this.get((high + xCapName + xLetter + show));\r\n            }\r\n            else {\r\n                this._xField = (xName + xLetter);\r\n                this._xOpenField = (open + xCapName + xLetter);\r\n                this._xLowField = (low + xCapName + xLetter);\r\n                this._xHighField = (high + xCapName + xLetter);\r\n            }\r\n            if (yAxis.className === \"ValueAxis\") {\r\n                this._yField = this.get((yName + yLetter + show));\r\n                this._yOpenField = this.get((open + yCapName + yLetter + show));\r\n                this._yLowField = this.get((low + yCapName + yLetter + show));\r\n                this._yHighField = this.get((high + yCapName + yLetter + show));\r\n            }\r\n            else {\r\n                this._yField = (yName + yLetter);\r\n                this._yOpenField = (open + yCapName + yLetter);\r\n                this._yLowField = (low + yCapName + yLetter);\r\n                this._yHighField = (high + yCapName + yLetter);\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(XYSeries.prototype, \"_fixVC\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var xAxis = this.get(\"xAxis\");\r\n            var yAxis = this.get(\"yAxis\");\r\n            var baseAxis = this.get(\"baseAxis\");\r\n            var hiddenState = this.states.lookup(\"hidden\");\r\n            var sequencedInterpolation = this.get(\"sequencedInterpolation\");\r\n            if (hiddenState) {\r\n                var value = 0;\r\n                if (sequencedInterpolation) {\r\n                    value = 0.999999999999; // makes animate, good for stacked\r\n                }\r\n                if (xAxis === baseAxis) {\r\n                    hiddenState.set(\"vcy\", value);\r\n                }\r\n                else if (yAxis === baseAxis) {\r\n                    hiddenState.set(\"vcx\", value);\r\n                }\r\n                else {\r\n                    hiddenState.set(\"vcy\", value);\r\n                    hiddenState.set(\"vcx\", value);\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(XYSeries.prototype, \"_handleMaskBullets\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            if (this.isDirty(\"maskBullets\")) {\r\n                this.bulletsContainer.set(\"maskContent\", this.get(\"maskBullets\"));\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(XYSeries.prototype, \"_prepareChildren\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            _super.prototype._prepareChildren.call(this);\r\n            if (this.isDirty(\"valueYShow\") || this.isDirty(\"valueXShow\" || this.isDirty(\"openValueYShow\") || this.isDirty(\"openValueXShow\") || this.isDirty(\"lowValueYShow\") || this.isDirty(\"lowValueXShow\") || this.isDirty(\"highValueYShow\") || this.isDirty(\"highValueXShow\"))) {\r\n                this._updateFields();\r\n                this._makeFieldNames();\r\n                this._valuesDirty = true;\r\n            }\r\n            this.set(\"width\", this.get(\"xAxis\").width());\r\n            this.set(\"height\", this.get(\"yAxis\").height());\r\n            this._handleMaskBullets();\r\n            var xAxis = this.get(\"xAxis\");\r\n            var yAxis = this.get(\"yAxis\");\r\n            var baseAxis = this.get(\"baseAxis\");\r\n            var tooltipPositionX = this.get(\"tooltipPositionX\");\r\n            var tooltipFieldX;\r\n            switch (tooltipPositionX) {\r\n                case \"open\":\r\n                    tooltipFieldX = this._xOpenField;\r\n                    break;\r\n                case \"low\":\r\n                    tooltipFieldX = this._xLowField;\r\n                    break;\r\n                case \"high\":\r\n                    tooltipFieldX = this._xHighField;\r\n                    break;\r\n                default:\r\n                    tooltipFieldX = this._xField;\r\n            }\r\n            this._tooltipFieldX = tooltipFieldX;\r\n            var tooltipPositionY = this.get(\"tooltipPositionY\");\r\n            var tooltipFieldY;\r\n            switch (tooltipPositionY) {\r\n                case \"open\":\r\n                    tooltipFieldY = this._yOpenField;\r\n                    break;\r\n                case \"low\":\r\n                    tooltipFieldY = this._yLowField;\r\n                    break;\r\n                case \"high\":\r\n                    tooltipFieldY = this._yHighField;\r\n                    break;\r\n                default:\r\n                    tooltipFieldY = this._yField;\r\n            }\r\n            this._tooltipFieldY = tooltipFieldY;\r\n            if (this.isDirty(\"baseAxis\")) {\r\n                this._fixVC();\r\n            }\r\n            this.set(\"x\", xAxis.x() - $utils.relativeToValue(xAxis.get(\"centerX\", 0), xAxis.width()) - xAxis.parent.get(\"paddingLeft\", 0));\r\n            this.set(\"y\", yAxis.y() - $utils.relativeToValue(yAxis.get(\"centerY\", 0), yAxis.height()) - yAxis.parent.get(\"paddingTop\", 0));\r\n            this.bulletsContainer.set(\"y\", this.y());\r\n            this.bulletsContainer.set(\"x\", this.x());\r\n            var stacked = this.get(\"stacked\");\r\n            if (this.isDirty(\"stacked\")) {\r\n                if (stacked) {\r\n                    if (this._valuesDirty && !this._dataProcessed) {\r\n                    }\r\n                    else {\r\n                        this._stack();\r\n                    }\r\n                }\r\n                else {\r\n                    this._unstack();\r\n                }\r\n            }\r\n            if (this._valuesDirty && !this._dataProcessed) {\r\n                this._dataProcessed = true;\r\n                if (stacked) {\r\n                    this._stack();\r\n                }\r\n                $array.each(this.dataItems, function (dataItem) {\r\n                    $array.each(_this._valueXShowFields, function (key) {\r\n                        var value = dataItem.get(key);\r\n                        if (value != null) {\r\n                            if (stacked) {\r\n                                value += _this.getStackedXValue(dataItem, key);\r\n                            }\r\n                            _this._min(\"minX\", value);\r\n                            _this._max(\"maxX\", value);\r\n                        }\r\n                    });\r\n                    $array.each(_this._valueYShowFields, function (key) {\r\n                        var value = dataItem.get(key);\r\n                        if (value != null) {\r\n                            if (stacked) {\r\n                                value += _this.getStackedYValue(dataItem, key);\r\n                            }\r\n                            _this._min(\"minY\", value);\r\n                            _this._max(\"maxY\", value);\r\n                        }\r\n                    });\r\n                    xAxis.processSeriesDataItem(dataItem, _this._valueXFields);\r\n                    yAxis.processSeriesDataItem(dataItem, _this._valueYFields);\r\n                });\r\n                xAxis._seriesValuesDirty = true;\r\n                yAxis._seriesValuesDirty = true;\r\n                if (!this.get(\"ignoreMinMax\")) {\r\n                    if (this.isPrivateDirty(\"minX\") || this.isPrivateDirty(\"maxX\")) {\r\n                        xAxis.markDirtyExtremes();\r\n                    }\r\n                    if (this.isPrivateDirty(\"minY\") || this.isPrivateDirty(\"maxY\")) {\r\n                        yAxis.markDirtyExtremes();\r\n                    }\r\n                }\r\n                this._markStakedDirtyStack();\r\n                //this.updateLegendMarker(undefined); // causes legend marker to change color instantly when on\r\n                this.updateLegendValue(undefined);\r\n            }\r\n            if (this.isDirty(\"vcx\") || this.isDirty(\"vcy\")) {\r\n                this._markStakedDirtyStack();\r\n            }\r\n            if (!this._dataGrouped) {\r\n                xAxis._groupSeriesData(this);\r\n                yAxis._groupSeriesData(this);\r\n                this._dataGrouped = true;\r\n            }\r\n            if (this._valuesDirty || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"endIndex\") || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty) {\r\n                var startIndex = this.startIndex();\r\n                var endIndex = this.endIndex();\r\n                var minBulletDistance = this.get(\"minBulletDistance\", 0);\r\n                if (minBulletDistance > 0 && baseAxis) {\r\n                    if (baseAxis.get(\"renderer\").axisLength() / (endIndex - startIndex) > minBulletDistance) {\r\n                        this._showBullets = true;\r\n                    }\r\n                    else {\r\n                        this._showBullets = false;\r\n                    }\r\n                }\r\n                if ((this._psi != startIndex || this._pei != endIndex || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty || this._valuesDirty) && !this._selectionProcessed) {\r\n                    this._selectionProcessed = true;\r\n                    var vcx = this.get(\"vcx\", 1);\r\n                    var vcy = this.get(\"vcy\", 1);\r\n                    var stacked_1 = this.get(\"stacked\", false);\r\n                    var outOfSelection = this.getPrivate(\"outOfSelection\");\r\n                    if (baseAxis === xAxis) {\r\n                        yAxis._calculateTotals();\r\n                        this.setPrivateRaw(\"selectionMinY\", undefined);\r\n                        this.setPrivateRaw(\"selectionMaxY\", undefined);\r\n                        if (!outOfSelection) {\r\n                            for (var i = startIndex; i < endIndex; i++) {\r\n                                this.processYSelectionDataItem(this.dataItems[i], vcy, stacked_1);\r\n                            }\r\n                        }\r\n                        else {\r\n                            yAxis.markDirtySelectionExtremes();\r\n                        }\r\n                    }\r\n                    else if (baseAxis === yAxis) {\r\n                        xAxis._calculateTotals();\r\n                        this.setPrivateRaw(\"selectionMinX\", undefined);\r\n                        this.setPrivateRaw(\"selectionMaxX\", undefined);\r\n                        if (!outOfSelection) {\r\n                            for (var i = startIndex; i < endIndex; i++) {\r\n                                this.processXSelectionDataItem(this.dataItems[i], vcx, stacked_1);\r\n                            }\r\n                        }\r\n                        else {\r\n                            yAxis.markDirtySelectionExtremes();\r\n                        }\r\n                    }\r\n                    if (baseAxis === xAxis) {\r\n                        if (this.get(\"valueYShow\") !== \"valueYWorking\") {\r\n                            var selectionMinY = this.getPrivate(\"selectionMinY\");\r\n                            if (selectionMinY != null) {\r\n                                this.setPrivateRaw(\"minY\", selectionMinY);\r\n                                yAxis.markDirtyExtremes();\r\n                            }\r\n                            var selectionMaxY = this.getPrivate(\"selectionMaxY\");\r\n                            if (selectionMaxY != null) {\r\n                                this.setPrivateRaw(\"maxY\", selectionMaxY);\r\n                                yAxis.markDirtyExtremes();\r\n                            }\r\n                        }\r\n                    }\r\n                    else if (baseAxis === yAxis) {\r\n                        if (this.get(\"valueXShow\") !== \"valueXWorking\") {\r\n                            var selectionMinX = this.getPrivate(\"selectionMinX\");\r\n                            if (selectionMinX != null) {\r\n                                this.setPrivateRaw(\"minX\", selectionMinX);\r\n                                yAxis.markDirtyExtremes();\r\n                            }\r\n                            var selectionMaxX = this.getPrivate(\"selectionMaxX\");\r\n                            if (selectionMaxX != null) {\r\n                                this.setPrivateRaw(\"maxX\", selectionMaxX);\r\n                                xAxis.markDirtyExtremes();\r\n                            }\r\n                        }\r\n                    }\r\n                    if (this.isPrivateDirty(\"selectionMinX\") || this.isPrivateDirty(\"selectionMaxX\")) {\r\n                        xAxis.markDirtySelectionExtremes();\r\n                    }\r\n                    if (this.isPrivateDirty(\"selectionMinY\") || this.isPrivateDirty(\"selectionMaxY\")) {\r\n                        yAxis.markDirtySelectionExtremes();\r\n                    }\r\n                    // this.updateLegendValue(undefined); flickers while panning\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(XYSeries.prototype, \"_makeRangeMask\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            if (this.axisRanges.length > 0) {\r\n                var mainContainerMask_1 = this._mainContainerMask;\r\n                if (mainContainerMask_1 == null) {\r\n                    mainContainerMask_1 = this.children.push(Graphics.new(this._root, {}));\r\n                    this._mainContainerMask = mainContainerMask_1;\r\n                    mainContainerMask_1.set(\"draw\", function (display, target) {\r\n                        var parent = _this.parent;\r\n                        if (parent) {\r\n                            var w = _this._root.container.width();\r\n                            var h = _this._root.container.height();\r\n                            display.moveTo(-w, -h);\r\n                            display.lineTo(-w, h * 2);\r\n                            display.lineTo(w * 2, h * 2);\r\n                            display.lineTo(w * 2, -h);\r\n                            display.lineTo(-w, -h);\r\n                            _this.axisRanges.each(function (axisRange) {\r\n                                var fill = axisRange.axisDataItem.get(\"axisFill\");\r\n                                if (parent) {\r\n                                    if (fill) {\r\n                                        var draw = fill.get(\"draw\");\r\n                                        if (draw) {\r\n                                            draw(display, target);\r\n                                        }\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n                        _this.mainContainer._display.mask = mainContainerMask_1._display;\r\n                    });\r\n                }\r\n                mainContainerMask_1.markDirty();\r\n                mainContainerMask_1._markDirtyKey(\"fill\");\r\n            }\r\n            else {\r\n                this.mainContainer._display.mask = null;\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(XYSeries.prototype, \"_updateChildren\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._updateChildren.call(this);\r\n            // save for performance\r\n            this._x = this.x();\r\n            this._y = this.y();\r\n            this._makeRangeMask();\r\n        }\r\n    });\r\n    Object.defineProperty(XYSeries.prototype, \"_stack\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var chart = this.chart;\r\n            if (chart) {\r\n                var seriesIndex = chart.series.indexOf(this);\r\n                this._couldStackTo = [];\r\n                if (seriesIndex > 0) {\r\n                    var series = void 0;\r\n                    for (var i = seriesIndex - 1; i >= 0; i--) {\r\n                        series = chart.series.getIndex(i);\r\n                        if (series.get(\"xAxis\") === this.get(\"xAxis\") && series.get(\"yAxis\") === this.get(\"yAxis\") && series.className === this.className) {\r\n                            this._couldStackTo.push(series);\r\n                            if (!series.get(\"stacked\")) {\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                this._stackDataItems();\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(XYSeries.prototype, \"_unstack\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            $object.each(this._reallyStackedTo, function (_key, value) {\r\n                delete (value._stackedSeries[_this.uid]);\r\n            });\r\n            this._reallyStackedTo = {};\r\n            $array.each(this.dataItems, function (dataItem) {\r\n                dataItem.setRaw(\"stackToItemY\", undefined);\r\n                dataItem.setRaw(\"stackToItemX\", undefined);\r\n            });\r\n        }\r\n    });\r\n    Object.defineProperty(XYSeries.prototype, \"_stackDataItems\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            // this works only with the same number of data @todo: search by date/category?\r\n            var baseAxis = this.get(\"baseAxis\");\r\n            var xAxis = this.get(\"xAxis\");\r\n            var yAxis = this.get(\"yAxis\");\r\n            var field;\r\n            var stackToItemKey;\r\n            if (baseAxis === xAxis) {\r\n                field = \"valueY\";\r\n                stackToItemKey = \"stackToItemY\";\r\n            }\r\n            else if (baseAxis === yAxis) {\r\n                field = \"valueX\";\r\n                stackToItemKey = \"stackToItemX\";\r\n            }\r\n            var len = this._couldStackTo.length;\r\n            var index = 0;\r\n            var stackToNegative = this.get(\"stackToNegative\");\r\n            this._reallyStackedTo = {};\r\n            $array.each(this.dataItems, function (dataItem) {\r\n                for (var s = 0; s < len; s++) {\r\n                    var stackToSeries = _this._couldStackTo[s];\r\n                    var stackToItem = stackToSeries.dataItems[index];\r\n                    var value = dataItem.get(field);\r\n                    if (stackToItem) {\r\n                        var stackValue = stackToItem.get(field);\r\n                        if (stackToNegative) {\r\n                            if ($type.isNumber(value)) {\r\n                                if ($type.isNumber(stackValue)) {\r\n                                    if (value >= 0 && stackValue >= 0) {\r\n                                        dataItem.setRaw(stackToItemKey, stackToItem);\r\n                                        _this._reallyStackedTo[stackToSeries.uid] = stackToSeries;\r\n                                        stackToSeries._stackedSeries[_this.uid] = _this;\r\n                                        break;\r\n                                    }\r\n                                    if (value < 0 && stackValue < 0) {\r\n                                        dataItem.setRaw(stackToItemKey, stackToItem);\r\n                                        _this._reallyStackedTo[stackToSeries.uid] = stackToSeries;\r\n                                        stackToSeries._stackedSeries[_this.uid] = _this;\r\n                                        break;\r\n                                    }\r\n                                }\r\n                            }\r\n                            else {\r\n                                break;\r\n                            }\r\n                        }\r\n                        else {\r\n                            if ($type.isNumber(value) && $type.isNumber(stackValue)) {\r\n                                dataItem.setRaw(stackToItemKey, stackToItem);\r\n                                _this._reallyStackedTo[stackToSeries.uid] = stackToSeries;\r\n                                stackToSeries._stackedSeries[_this.uid] = _this;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                index++;\r\n            });\r\n        }\r\n    });\r\n    Object.defineProperty(XYSeries.prototype, \"processXSelectionDataItem\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem, vcx, stacked) {\r\n            var _this = this;\r\n            $array.each(this.__valueXShowFields, function (key) {\r\n                var value = dataItem.get(key);\r\n                if (value != null) {\r\n                    if (stacked) {\r\n                        value += _this.getStackedXValueWorking(dataItem, key);\r\n                    }\r\n                    _this._min(\"selectionMinX\", value);\r\n                    _this._max(\"selectionMaxX\", value * vcx);\r\n                }\r\n            });\r\n        }\r\n    });\r\n    Object.defineProperty(XYSeries.prototype, \"processYSelectionDataItem\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem, vcy, stacked) {\r\n            var _this = this;\r\n            $array.each(this.__valueYShowFields, function (key) {\r\n                var value = dataItem.get(key);\r\n                if (value != null) {\r\n                    if (stacked) {\r\n                        value += _this.getStackedYValueWorking(dataItem, key);\r\n                    }\r\n                    _this._min(\"selectionMinY\", value);\r\n                    _this._max(\"selectionMaxY\", value * vcy);\r\n                }\r\n            });\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(XYSeries.prototype, \"getStackedYValueWorking\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem, key) {\r\n            var stackToItem = dataItem.get(\"stackToItemY\");\r\n            if (stackToItem) {\r\n                var stackedToSeries = stackToItem.component;\r\n                return stackToItem.get(key, 0) * stackedToSeries.get(\"vcy\", 1) + this.getStackedYValueWorking(stackToItem, key);\r\n            }\r\n            return 0;\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(XYSeries.prototype, \"getStackedXValueWorking\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem, key) {\r\n            var stackToItem = dataItem.get(\"stackToItemX\");\r\n            if (stackToItem) {\r\n                var stackedToSeries = stackToItem.component;\r\n                return stackToItem.get(key, 0) * stackedToSeries.get(\"vcx\", 1) + this.getStackedXValueWorking(stackToItem, key);\r\n            }\r\n            return 0;\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(XYSeries.prototype, \"getStackedYValue\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem, key) {\r\n            var stackToItem = dataItem.get(\"stackToItemY\");\r\n            if (stackToItem) {\r\n                return stackToItem.get(key, 0) + this.getStackedYValue(stackToItem, key);\r\n            }\r\n            return 0;\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(XYSeries.prototype, \"getStackedXValue\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem, key) {\r\n            var stackToItem = dataItem.get(\"stackToItemX\");\r\n            if (stackToItem) {\r\n                return stackToItem.get(key, 0) + this.getStackedXValue(stackToItem, key);\r\n            }\r\n            return 0;\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(XYSeries.prototype, \"createLegendMarker\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (_dataItem) {\r\n            this.updateLegendMarker();\r\n        }\r\n    });\r\n    Object.defineProperty(XYSeries.prototype, \"_markDirtyAxes\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this._axesDirty = true;\r\n            this.markDirty();\r\n        }\r\n    });\r\n    Object.defineProperty(XYSeries.prototype, \"_markDataSetDirty\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this._afterDataChange();\r\n            this._valuesDirty = true;\r\n            this._dataProcessed = false;\r\n            this._aggregatesCalculated = false;\r\n            this.markDirty();\r\n        }\r\n    });\r\n    Object.defineProperty(XYSeries.prototype, \"_clearDirty\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._clearDirty.call(this);\r\n            this._axesDirty = false;\r\n            this._selectionProcessed = false;\r\n            this._stackDirty = false;\r\n            this._dataProcessed = false;\r\n        }\r\n    });\r\n    Object.defineProperty(XYSeries.prototype, \"_positionBullet\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (bullet) {\r\n            var sprite = bullet.get(\"sprite\");\r\n            if (sprite) {\r\n                var dataItem = sprite.dataItem;\r\n                var locationX = bullet.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\r\n                var locationY = bullet.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\r\n                var xAxis = this.get(\"xAxis\");\r\n                var yAxis = this.get(\"yAxis\");\r\n                var positionX = xAxis.getDataItemPositionX(dataItem, this._xField, locationX, this.get(\"vcx\", 1));\r\n                var positionY = yAxis.getDataItemPositionY(dataItem, this._yField, locationY, this.get(\"vcy\", 1));\r\n                var point = this.getPoint(positionX, positionY);\r\n                var left = dataItem.get(\"left\", point.x);\r\n                var right = dataItem.get(\"right\", point.x);\r\n                var top_1 = dataItem.get(\"top\", point.y);\r\n                var bottom = dataItem.get(\"bottom\", point.y);\r\n                if (this._shouldShowBullet(positionX, positionY)) {\r\n                    if (!bullet.getPrivate(\"hidden\")) {\r\n                        sprite.setPrivate(\"visible\", true);\r\n                    }\r\n                    else {\r\n                        sprite.setPrivate(\"visible\", false);\r\n                    }\r\n                    var w = right - left;\r\n                    var h = bottom - top_1;\r\n                    if (sprite.isType(\"Label\")) {\r\n                        sprite.setPrivate(\"maxWidth\", Math.abs(w));\r\n                        sprite.setPrivate(\"maxHeight\", Math.abs(h));\r\n                    }\r\n                    var x = left + w * locationX;\r\n                    var y = bottom - h * locationY;\r\n                    sprite.set(\"x\", x);\r\n                    sprite.set(\"y\", y);\r\n                }\r\n                else {\r\n                    sprite.setPrivate(\"visible\", false);\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(XYSeries.prototype, \"_shouldShowBullet\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (_positionX, _positionY) {\r\n            return this._showBullets;\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(XYSeries.prototype, \"setDataSet\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (id) {\r\n            if (this._dataSets[id]) {\r\n                this._handleDataSetChange();\r\n                this._dataItems = this._dataSets[id];\r\n                this._markDataSetDirty();\r\n                this._dataSetId = id;\r\n                var type = \"datasetchanged\";\r\n                if (this.events.isEnabled(type)) {\r\n                    this.events.dispatch(type, { type: type, target: this, id: id });\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(XYSeries.prototype, \"_handleDataSetChange\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            if (this.bullets.length > 0) {\r\n                $array.each(this._dataItems, function (dataItem) {\r\n                    var bullets = dataItem.bullets;\r\n                    if (bullets) {\r\n                        $array.each(bullets, function (bullet) {\r\n                            var sprite = bullet.get(\"sprite\");\r\n                            if (sprite) {\r\n                                sprite.setPrivate(\"visible\", false);\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n            this._selectionProcessed = false; // for totals to be calculated\r\n        }\r\n    });\r\n    /**\r\n     * Shows hidden series.\r\n     *\r\n     * @param   duration  Duration of animation in milliseconds\r\n     * @return            Animation promise\r\n     */\r\n    Object.defineProperty(XYSeries.prototype, \"show\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (duration) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var promises;\r\n                var _this = this;\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0:\r\n                            this._fixVC();\r\n                            promises = [];\r\n                            promises.push(_super.prototype.show.call(this, duration).then(function () {\r\n                                _this._isShowing = false;\r\n                                var xAxis = _this.get(\"xAxis\");\r\n                                var yAxis = _this.get(\"yAxis\");\r\n                                var baseAxis = _this.get(\"baseAxis\");\r\n                                if (yAxis !== baseAxis) {\r\n                                    yAxis.markDirtySelectionExtremes();\r\n                                }\r\n                                if (xAxis !== baseAxis) {\r\n                                    xAxis.markDirtySelectionExtremes();\r\n                                }\r\n                            }));\r\n                            promises.push(this.bulletsContainer.show(duration));\r\n                            promises.push(this._sequencedShowHide(true, duration));\r\n                            return [4 /*yield*/, Promise.all(promises)];\r\n                        case 1:\r\n                            _a.sent();\r\n                            return [2 /*return*/];\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    });\r\n    /**\r\n     * Hides series.\r\n     *\r\n     * @param   duration  Duration of animation in milliseconds\r\n     * @return            Animation promise\r\n     */\r\n    Object.defineProperty(XYSeries.prototype, \"hide\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (duration) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var promises;\r\n                var _this = this;\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0:\r\n                            this._fixVC();\r\n                            promises = [];\r\n                            promises.push(_super.prototype.hide.call(this, duration).then(function () {\r\n                                _this._isHiding = false;\r\n                            }));\r\n                            promises.push(this.bulletsContainer.hide(duration));\r\n                            promises.push(this._sequencedShowHide(false, duration));\r\n                            return [4 /*yield*/, Promise.all(promises)];\r\n                        case 1:\r\n                            _a.sent();\r\n                            return [2 /*return*/];\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    });\r\n    /**\r\n     * Shows series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    Object.defineProperty(XYSeries.prototype, \"showDataItem\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem, duration) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var promises, easing;\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0:\r\n                            promises = [_super.prototype.showDataItem.call(this, dataItem, duration)];\r\n                            if (!$type.isNumber(duration)) {\r\n                                duration = this.get(\"stateAnimationDuration\", 0);\r\n                            }\r\n                            easing = this.get(\"stateAnimationEasing\");\r\n                            $array.each(this._valueFields, function (key) {\r\n                                promises.push(dataItem.animate({ key: key + \"Working\", to: dataItem.get(key), duration: duration, easing: easing }).waitForStop());\r\n                            });\r\n                            return [4 /*yield*/, Promise.all(promises)];\r\n                        case 1:\r\n                            _a.sent();\r\n                            return [2 /*return*/];\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    });\r\n    /**\r\n     * Hides series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    Object.defineProperty(XYSeries.prototype, \"hideDataItem\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem, duration) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var promises, hiddenState, easing, xAxis, yAxis, baseAxis, stacked, min_1, baseValue_1;\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0:\r\n                            promises = [_super.prototype.hideDataItem.call(this, dataItem, duration)];\r\n                            hiddenState = this.states.create(\"hidden\", {});\r\n                            if (!$type.isNumber(duration)) {\r\n                                duration = hiddenState.get(\"stateAnimationDuration\", this.get(\"stateAnimationDuration\", 0));\r\n                            }\r\n                            easing = hiddenState.get(\"stateAnimationEasing\", this.get(\"stateAnimationEasing\"));\r\n                            xAxis = this.get(\"xAxis\");\r\n                            yAxis = this.get(\"yAxis\");\r\n                            baseAxis = this.get(\"baseAxis\");\r\n                            stacked = this.get(\"stacked\");\r\n                            if (baseAxis === xAxis || !baseAxis) {\r\n                                $array.each(this._valueYFields, function (key) {\r\n                                    var min = yAxis.getPrivate(\"min\");\r\n                                    var baseValue = yAxis.baseValue();\r\n                                    if ($type.isNumber(min) && min > baseValue) {\r\n                                        baseValue = min;\r\n                                    }\r\n                                    if (stacked) {\r\n                                        baseValue = 0;\r\n                                    }\r\n                                    var value = dataItem.get(key);\r\n                                    if (value != null) {\r\n                                        promises.push(dataItem.animate({ key: key + \"Working\", to: baseValue, duration: duration, easing: easing }).waitForStop());\r\n                                    }\r\n                                });\r\n                            }\r\n                            if (baseAxis === yAxis || !baseAxis) {\r\n                                min_1 = xAxis.getPrivate(\"min\");\r\n                                baseValue_1 = xAxis.baseValue();\r\n                                if ($type.isNumber(min_1) && min_1 > baseValue_1) {\r\n                                    baseValue_1 = min_1;\r\n                                }\r\n                                if (stacked) {\r\n                                    baseValue_1 = 0;\r\n                                }\r\n                                $array.each(this._valueXFields, function (key) {\r\n                                    var value = dataItem.get(key);\r\n                                    if (value != null) {\r\n                                        promises.push(dataItem.animate({ key: key + \"Working\", to: baseValue_1, duration: duration, easing: easing }).waitForStop());\r\n                                    }\r\n                                });\r\n                            }\r\n                            return [4 /*yield*/, Promise.all(promises)];\r\n                        case 1:\r\n                            _a.sent();\r\n                            return [2 /*return*/];\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    });\r\n    Object.defineProperty(XYSeries.prototype, \"_markDirtyStack\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this._stackDirty = true;\r\n            this.markDirty();\r\n            this._markStakedDirtyStack();\r\n        }\r\n    });\r\n    Object.defineProperty(XYSeries.prototype, \"_markStakedDirtyStack\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var stackedSeries = this._stackedSeries;\r\n            if (stackedSeries) {\r\n                $object.each(stackedSeries, function (_key, value) {\r\n                    if (!value._stackDirty) {\r\n                        value._markDirtyStack();\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(XYSeries.prototype, \"_afterChanged\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._afterChanged.call(this);\r\n            if (this._skipped) {\r\n                this._markDirtyAxes();\r\n                this._skipped = false;\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * Shows a tooltip for specific data item.\r\n     *\r\n     * @param  dataItem  Data item\r\n     */\r\n    Object.defineProperty(XYSeries.prototype, \"showDataItemTooltip\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem) {\r\n            this.updateLegendMarker(dataItem);\r\n            this.updateLegendValue(dataItem);\r\n            var tooltip = this.get(\"tooltip\");\r\n            if (tooltip) {\r\n                if (!this.isHidden()) {\r\n                    tooltip._setDataItem(dataItem);\r\n                    if (dataItem) {\r\n                        var locationX = this.get(\"locationX\", 0);\r\n                        var locationY = this.get(\"locationY\", 1);\r\n                        var itemLocationX = dataItem.get(\"locationX\", locationX);\r\n                        var itemLocationY = dataItem.get(\"locationY\", locationY);\r\n                        var xAxis = this.get(\"xAxis\");\r\n                        var yAxis = this.get(\"yAxis\");\r\n                        var vcx = this.get(\"vcx\", 1);\r\n                        var vcy = this.get(\"vcy\", 1);\r\n                        var xPos = xAxis.getDataItemPositionX(dataItem, this._tooltipFieldX, this._aLocationX0 + (this._aLocationX1 - this._aLocationX0) * itemLocationX, vcx);\r\n                        var yPos = yAxis.getDataItemPositionY(dataItem, this._tooltipFieldY, this._aLocationY0 + (this._aLocationY1 - this._aLocationY0) * itemLocationY, vcy);\r\n                        var point = this.getPoint(xPos, yPos);\r\n                        var show_1 = true;\r\n                        $array.each(this._valueFields, function (field) {\r\n                            if (dataItem.get(field) == null) {\r\n                                show_1 = false;\r\n                            }\r\n                        });\r\n                        if (show_1) {\r\n                            var chart = this.chart;\r\n                            if (chart && chart.inPlot(point)) {\r\n                                tooltip.label.text.markDirtyText();\r\n                                tooltip.set(\"tooltipTarget\", this._getTooltipTarget(dataItem));\r\n                                tooltip.set(\"pointTo\", this._display.toGlobal({ x: point.x, y: point.y }));\r\n                            }\r\n                            else {\r\n                                tooltip._setDataItem(undefined);\r\n                            }\r\n                        }\r\n                        else {\r\n                            tooltip._setDataItem(undefined);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    this.hideTooltip();\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(XYSeries.prototype, \"_getTooltipTarget\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem) {\r\n            if (this.get(\"seriesTooltipTarget\") == \"bullet\") {\r\n                var bullets = dataItem.bullets;\r\n                if (bullets && bullets.length > 0) {\r\n                    var bullet = bullets[0];\r\n                    var sprite = bullet.get(\"sprite\");\r\n                    if (sprite) {\r\n                        return sprite;\r\n                    }\r\n                }\r\n            }\r\n            return this;\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(XYSeries.prototype, \"updateLegendValue\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem) {\r\n            var legendDataItem = this.get(\"legendDataItem\");\r\n            if (legendDataItem) {\r\n                var label = legendDataItem.get(\"label\");\r\n                if (label) {\r\n                    var txt = \"\";\r\n                    if (dataItem) {\r\n                        label._setDataItem(dataItem);\r\n                        txt = this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\")));\r\n                    }\r\n                    else {\r\n                        label._setDataItem(this._emptyDataItem);\r\n                        txt = this.get(\"legendRangeLabelText\", this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\"))));\r\n                    }\r\n                    label.set(\"text\", txt);\r\n                }\r\n                var valueLabel = legendDataItem.get(\"valueLabel\");\r\n                if (valueLabel) {\r\n                    var txt = \"\";\r\n                    if (dataItem) {\r\n                        valueLabel._setDataItem(dataItem);\r\n                        txt = this.get(\"legendValueText\", valueLabel.get(\"text\", \"\"));\r\n                    }\r\n                    else {\r\n                        valueLabel._setDataItem(this._emptyDataItem);\r\n                        txt = this.get(\"legendRangeValueText\", valueLabel.get(\"text\", \"\"));\r\n                    }\r\n                    valueLabel.set(\"text\", txt);\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(XYSeries.prototype, \"_getItemReaderLabel\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var text = \"X: {\" + this._xField;\r\n            if (this.get(\"xAxis\").isType(\"DateAxis\")) {\r\n                text += \".formatDate()\";\r\n            }\r\n            text += \"}; Y: {\" + this._yField;\r\n            if (this.get(\"yAxis\").isType(\"DateAxis\")) {\r\n                text += \".formatDate()\";\r\n            }\r\n            text += \"}\";\r\n            return text;\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(XYSeries.prototype, \"getPoint\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (positionX, positionY) {\r\n            var x = this.get(\"xAxis\").get(\"renderer\").positionToCoordinate(positionX);\r\n            var y = this.get(\"yAxis\").get(\"renderer\").positionToCoordinate(positionY);\r\n            // if coordinate is super big, canvas fails to draw line, capping to some big number (won't make any visual difference)\r\n            var max = 999999999;\r\n            if (y < -max) {\r\n                y = -max;\r\n            }\r\n            if (y > max) {\r\n                y = max;\r\n            }\r\n            if (x < -max) {\r\n                x = -max;\r\n            }\r\n            if (x > max) {\r\n                x = max;\r\n            }\r\n            return { x: x, y: y };\r\n        }\r\n    });\r\n    Object.defineProperty(XYSeries.prototype, \"_shouldInclude\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (_position) {\r\n            return true;\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(XYSeries.prototype, \"handleCursorHide\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this.hideTooltip();\r\n            this.updateLegendValue(undefined);\r\n            this.updateLegendMarker(undefined);\r\n        }\r\n    });\r\n    Object.defineProperty(XYSeries.prototype, \"_afterDataChange\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._afterDataChange.call(this);\r\n            this.get(\"xAxis\")._markDirtyKey(\"start\");\r\n            this.get(\"yAxis\")._markDirtyKey(\"start\");\r\n            this.resetExtremes();\r\n        }\r\n    });\r\n    // todo description\r\n    Object.defineProperty(XYSeries.prototype, \"resetExtremes\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this.setPrivate(\"selectionMinX\", undefined);\r\n            this.setPrivate(\"selectionMaxX\", undefined);\r\n            this.setPrivate(\"selectionMinY\", undefined);\r\n            this.setPrivate(\"selectionMaxY\", undefined);\r\n            this.setPrivate(\"minX\", undefined);\r\n            this.setPrivate(\"minY\", undefined);\r\n            this.setPrivate(\"maxX\", undefined);\r\n            this.setPrivate(\"maxY\", undefined);\r\n        }\r\n    });\r\n    /**\r\n     * Creates and returns an axis range object.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\r\n     * @param   axisDataItem  Axis data item\r\n     * @return                Axis range\r\n     */\r\n    Object.defineProperty(XYSeries.prototype, \"createAxisRange\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (axisDataItem) {\r\n            return this.axisRanges.push({\r\n                axisDataItem: axisDataItem\r\n            });\r\n        }\r\n    });\r\n    Object.defineProperty(XYSeries, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"XYSeries\"\r\n    });\r\n    Object.defineProperty(XYSeries, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: Series.classNames.concat([XYSeries.className])\r\n    });\r\n    return XYSeries;\r\n}(Series));\r\nexport { XYSeries };\r\n//# sourceMappingURL=XYSeries.js.map","/**\r\n * @ignore\r\n */\r\nvar Registry = /** @class */ (function () {\r\n    function Registry() {\r\n        /**\r\n         * List of applied licenses.\r\n         * @ignore\r\n         */\r\n        Object.defineProperty(this, \"licenses\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        /**\r\n         * Entities that have their `id` setting set.\r\n         */\r\n        Object.defineProperty(this, \"entitiesById\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        /**\r\n         * All created [[Root]] elements.\r\n         */\r\n        Object.defineProperty(this, \"rootElements\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n    }\r\n    return Registry;\r\n}());\r\nexport { Registry };\r\n/**\r\n    * @ignore\r\n */\r\nexport var registry = new Registry();\r\n/**\r\n * Adds a license, e.g.:\r\n *\r\n * ```TypeScript\r\n * am5.addLicense(\"xxxxxxxx\");\r\n * ```\r\n * ```JavaScript\r\n * am5.addLicense(\"xxxxxxxx\");\r\n * ```\r\n *\r\n * Multiple licenses can be added to cover for multiple products.\r\n *\r\n * @param  license  License key\r\n */\r\nexport function addLicense(license) {\r\n    registry.licenses.push(license);\r\n}\r\n/**\r\n * Disposes all [[Root]] elements.\r\n */\r\nexport function disposeAllRootElements() {\r\n    var root;\r\n    while (root = registry.rootElements.pop()) {\r\n        root.dispose();\r\n    }\r\n}\r\n//# sourceMappingURL=Registry.js.map","import { Container } from \"./render/Container\";\r\nimport { Text } from \"./render/Text\";\r\nimport { HorizontalLayout } from \"./render/HorizontalLayout\";\r\nimport { VerticalLayout } from \"./render/VerticalLayout\";\r\nimport { GridLayout } from \"./render/GridLayout\";\r\nimport { Disposer } from \"./util/Disposer\";\r\nimport { ResizeSensor } from \"./util/ResizeSensor\";\r\nimport { InterfaceColors } from \"./util/InterfaceColors\";\r\nimport { Graphics } from \"./render/Graphics\";\r\nimport { Rectangle } from \"./render/Rectangle\";\r\nimport { Tooltip } from \"./render/Tooltip\";\r\nimport { NumberFormatter } from \"./util/NumberFormatter\";\r\nimport { DateFormatter } from \"./util/DateFormatter\";\r\nimport { DurationFormatter } from \"./util/DurationFormatter\";\r\nimport { Language } from \"./util/Language\";\r\nimport { EventDispatcher } from \"./util/EventDispatcher\";\r\nimport { DefaultTheme } from \"../themes/DefaultTheme\";\r\nimport { CanvasRenderer } from \"./render/backend/CanvasRenderer\";\r\nimport { p100, percent } from \"./util/Percent\";\r\nimport { color } from \"./util/Color\";\r\nimport { populateString } from \"./util/PopulateString\";\r\nimport { registry } from \"./Registry\";\r\nimport * as $order from \"./util/Order\";\r\nimport * as $array from \"./util/Array\";\r\nimport * as $object from \"./util/Object\";\r\nimport * as $utils from \"./util/Utils\";\r\nimport * as $type from \"./util/Type\";\r\nimport en from \"../../locales/en\";\r\nfunction rAF(fps, callback) {\r\n    if (fps == null) {\r\n        requestAnimationFrame(callback);\r\n    }\r\n    else {\r\n        setTimeout(function () {\r\n            requestAnimationFrame(callback);\r\n        }, 1000 / fps);\r\n    }\r\n}\r\n// TODO implement Disposer\r\n/**\r\n * Root element of the chart.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/getting-started/#Root_element} for more info\r\n */\r\nvar Root = /** @class */ (function () {\r\n    function Root(id, settings, isReal) {\r\n        if (settings === void 0) { settings = {}; }\r\n        /**\r\n         * A reference to original chart container (div element).\r\n         */\r\n        Object.defineProperty(this, \"dom\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_inner\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_isDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_isDirtyParents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_dirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_dirtyParents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_dirtyBounds\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_dirtyPositions\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_ticker\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"_tickers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        /**\r\n         * Root's event dispatcher.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/events/} for more info\r\n         */\r\n        Object.defineProperty(this, \"events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new EventDispatcher()\r\n        });\r\n        /**\r\n         * @ignore\r\n         * @todo needs description\r\n         */\r\n        Object.defineProperty(this, \"animationTime\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"_animations\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_renderer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_rootContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Main content container.\r\n         */\r\n        Object.defineProperty(this, \"container\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A [[Container]] used to display tooltips in.\r\n         */\r\n        Object.defineProperty(this, \"tooltipContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltip\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // Locale-related\r\n        /**\r\n         * @ignore\r\n         */\r\n        Object.defineProperty(this, \"language\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Language.new(this, {})\r\n        });\r\n        /**\r\n         * Locale used by the chart.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/locales/}\r\n         */\r\n        Object.defineProperty(this, \"locale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: en\r\n        });\r\n        // Date-time related\r\n        /**\r\n         * Use UTC when formatting date/time.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/#UTC_and_time_zones} for more info\r\n         */\r\n        Object.defineProperty(this, \"utc\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * If set, will format date/time in specific time zone.\r\n         *\r\n         * The value should be named time zone, e.g.:\r\n         * `\"America/Vancouver\"`, `\"Australia/Sydney\"`, `\"UTC\"`.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/getting-started/root-element/#Time_zone} for more info\r\n         * @since 5.1.0\r\n         */\r\n        Object.defineProperty(this, \"timezone\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * The maximum FPS that the Root will run at.\r\n         *\r\n         * If `undefined` it will run at the highest FPS.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/getting-started/root-element/#Performance} for more info\r\n         */\r\n        Object.defineProperty(this, \"fps\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Number formatter.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/} for more info\r\n         */\r\n        Object.defineProperty(this, \"numberFormatter\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: NumberFormatter.new(this, {})\r\n        });\r\n        /**\r\n         * Date/time formatter.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\r\n         */\r\n        Object.defineProperty(this, \"dateFormatter\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: DateFormatter.new(this, {})\r\n        });\r\n        /**\r\n         * Duration formatter.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\r\n         */\r\n        Object.defineProperty(this, \"durationFormatter\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: DurationFormatter.new(this, {})\r\n        });\r\n        // Accessibility\r\n        /**\r\n         * Global tab index for using for the whole chart\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/accessibility/} for more info\r\n         */\r\n        Object.defineProperty(this, \"tabindex\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        //@todo maybe make this better\r\n        Object.defineProperty(this, \"_tabindexes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_focusElementDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_focusElementContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_focusedSprite\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_isShift\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_keyboardDragPoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipElementContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_readerAlertElement\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_logo\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipDiv\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Used for dynamically-created CSS and JavaScript with strict source policies.\r\n         */\r\n        Object.defineProperty(this, \"nonce\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Special color set to be used for various controls.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/#Interface_colors} for more info\r\n         */\r\n        Object.defineProperty(this, \"interfaceColors\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * An instance of vertical layout object that can be used to set `layout` setting\r\n         * of a [[Container]].\r\n         *\r\n         * @default VerticalLayout.new()\r\n         */\r\n        Object.defineProperty(this, \"verticalLayout\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: VerticalLayout.new(this, {})\r\n        });\r\n        /**\r\n         * An instance of horizontal layout object that can be used to set `layout` setting\r\n         * of a [[Container]].\r\n         *\r\n         * @default HorizontalLayout.new()\r\n         */\r\n        Object.defineProperty(this, \"horizontalLayout\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: HorizontalLayout.new(this, {})\r\n        });\r\n        /**\r\n         * An instance of grid layout object that can be used to set `layout` setting\r\n         * of a [[Container]].\r\n         *\r\n         * @default VerticalLayout.new()\r\n         */\r\n        Object.defineProperty(this, \"gridLayout\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: GridLayout.new(this, {})\r\n        });\r\n        /**\r\n         * Indicates whether chart should resized automatically when parent container\r\n         * width and/or height changes.\r\n         *\r\n         * If disabled (`autoResize = false`) you can make the chart resize manually\r\n         * by calling root element's `resize()` method.\r\n         */\r\n        Object.defineProperty(this, \"autoResize\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"_fontHash\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"\"\r\n        });\r\n        Object.defineProperty(this, \"_isDisposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_disposers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_resizeSensorDisposer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltips\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_htmlElementContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_htmlEnabledContainers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"tooltipRoot\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        if (!isReal) {\r\n            throw new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\r\n        }\r\n        if (settings.useSafeResolution == null) {\r\n            settings.useSafeResolution = true;\r\n        }\r\n        var resolution;\r\n        if (settings.useSafeResolution) {\r\n            resolution = $utils.getSafeResolution();\r\n        }\r\n        this._renderer = new CanvasRenderer(resolution);\r\n        var dom;\r\n        if (id instanceof HTMLElement) {\r\n            dom = id;\r\n        }\r\n        else {\r\n            dom = document.getElementById(id);\r\n        }\r\n        $array.each(registry.rootElements, function (root) {\r\n            if (root.dom === dom) {\r\n                throw new Error(\"You cannot have multiple Roots on the same DOM node\");\r\n            }\r\n        });\r\n        this.interfaceColors = InterfaceColors.new(this, {});\r\n        if (dom === null) {\r\n            throw new Error(\"Could not find HTML element with id `\" + id + \"`\");\r\n        }\r\n        this.dom = dom;\r\n        var inner = document.createElement(\"div\");\r\n        inner.style.position = \"relative\";\r\n        inner.style.height = \"100%\";\r\n        dom.appendChild(inner);\r\n        var tooltipContainerBounds = settings.tooltipContainerBounds;\r\n        if (tooltipContainerBounds) {\r\n            var tooltipDiv = document.createElement(\"div\");\r\n            $utils.setInteractive(tooltipDiv, false);\r\n            var tooltipDivStyle = tooltipDiv.style;\r\n            tooltipDivStyle.position = \"absolute\";\r\n            tooltipDivStyle.top = -tooltipContainerBounds.top + \"px\";\r\n            tooltipDivStyle.left = -tooltipContainerBounds.left + \"px\";\r\n            tooltipDivStyle.width = \"calc(100% + \" + (tooltipContainerBounds.left + tooltipContainerBounds.right) + \"px)\";\r\n            tooltipDivStyle.height = \"calc(100% + \" + (tooltipContainerBounds.top + tooltipContainerBounds.bottom) + \"px)\";\r\n            tooltipDivStyle.zIndex = \"1\";\r\n            inner.appendChild(tooltipDiv);\r\n            this.tooltipRoot = new Root(tooltipDiv, {}, true);\r\n            this.tooltipRoot._init();\r\n            this.tooltipRoot.tooltipContainer.setAll({ x: tooltipContainerBounds.left, y: tooltipContainerBounds.top });\r\n        }\r\n        this._inner = inner;\r\n        this._updateComputedStyles();\r\n        registry.rootElements.push(this);\r\n    }\r\n    Object.defineProperty(Root, \"new\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (id, settings) {\r\n            var root = new Root(id, settings, true);\r\n            root._init();\r\n            return root;\r\n        }\r\n    });\r\n    Object.defineProperty(Root.prototype, \"moveDOM\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (id) {\r\n            var dom;\r\n            if (id instanceof HTMLElement) {\r\n                dom = id;\r\n            }\r\n            else {\r\n                dom = document.getElementById(id);\r\n            }\r\n            if (dom) {\r\n                while (this.dom.childNodes.length > 0) {\r\n                    dom.appendChild(this.dom.childNodes[0]);\r\n                }\r\n                this.dom = dom;\r\n                this._initResizeSensor();\r\n                this.resize();\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Root.prototype, \"_handleLogo\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            if (this._logo) {\r\n                var w = this.dom.offsetWidth;\r\n                var h = this.dom.offsetHeight;\r\n                if ((w <= 150) || (h <= 60)) {\r\n                    this._logo.hide();\r\n                }\r\n                else {\r\n                    this._logo.show();\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Root.prototype, \"_showBranding\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            if (!this._logo) {\r\n                var logo = this.tooltipContainer.children.push(Container.new(this, {\r\n                    interactive: true,\r\n                    interactiveChildren: false,\r\n                    position: \"absolute\",\r\n                    setStateOnChildren: true,\r\n                    paddingTop: 9,\r\n                    paddingRight: 9,\r\n                    paddingBottom: 9,\r\n                    paddingLeft: 9,\r\n                    scale: .6,\r\n                    y: percent(100),\r\n                    centerY: p100,\r\n                    tooltipText: \"Created using amCharts 5\",\r\n                    tooltipX: p100,\r\n                    cursorOverStyle: \"pointer\",\r\n                    background: Rectangle.new(this, {\r\n                        fill: color(0x474758),\r\n                        fillOpacity: 0,\r\n                        tooltipY: 5\r\n                    })\r\n                }));\r\n                var tooltipRoot = this.tooltipRoot;\r\n                if (!tooltipRoot) {\r\n                    tooltipRoot = this;\r\n                }\r\n                var tooltip = Tooltip.new(tooltipRoot, {\r\n                    pointerOrientation: \"horizontal\",\r\n                    paddingTop: 4,\r\n                    paddingRight: 7,\r\n                    paddingBottom: 4,\r\n                    paddingLeft: 7\r\n                });\r\n                tooltip.label.setAll({\r\n                    fontSize: 12\r\n                });\r\n                tooltip.get(\"background\").setAll({\r\n                    fill: this.interfaceColors.get(\"background\"),\r\n                    stroke: this.interfaceColors.get(\"grid\"),\r\n                    strokeOpacity: 0.3\r\n                });\r\n                logo.set(\"tooltip\", tooltip);\r\n                logo.events.on(\"click\", function () {\r\n                    window.open(\"https://www.amcharts.com/\", \"_blank\");\r\n                });\r\n                logo.states.create(\"hover\", {});\r\n                var m = logo.children.push(Graphics.new(this, {\r\n                    stroke: color(0xcccccc),\r\n                    strokeWidth: 3,\r\n                    svgPath: \"M5 25 L13 25h13.6c3.4 0 6 0 10.3-4.3s5.2-12 8.6-12c3.4 0 4.3 8.6 7.7 8.6M83.4 25H79.8c-3.4 0-6 0-10.3-4.3s-5.2-12-8.6-12-4.3 8.6-7.7 8.6\"\r\n                }));\r\n                m.states.create(\"hover\", { stroke: color(0x3CABFF) });\r\n                var a = logo.children.push(Graphics.new(this, {\r\n                    stroke: color(0x888888),\r\n                    strokeWidth: 3,\r\n                    svgPath: \"M83.4 25h-31C37 25 39.5 4.4 28.4 4.4S18.9 24.2 4.3 25H0\"\r\n                }));\r\n                a.states.create(\"hover\", { stroke: color(0x474758) });\r\n                //logo.set(\"tooltip\", this._tooltip);\r\n                //logo.setPrivate(\"tooltipTarget\", logo.get(\"background\"));\r\n                this._logo = logo;\r\n                this._handleLogo();\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Root.prototype, \"_init\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            var renderer = this._renderer;\r\n            var rect = this.dom.getBoundingClientRect();\r\n            var width = Math.floor(rect.width);\r\n            var height = Math.floor(rect.height);\r\n            var rootContainer = Container.new(this, { visible: true, width: width, height: height });\r\n            this._rootContainer = rootContainer;\r\n            this._rootContainer._defaultThemes.push(DefaultTheme.new(this));\r\n            var container = rootContainer.children.push(Container.new(this, { visible: true, width: p100, height: p100 }));\r\n            this.container = container;\r\n            renderer.resize(width, height);\r\n            //@todo: better appendChild - refer\r\n            this._inner.appendChild(renderer.view);\r\n            // TODO: TMP TMP TMP for testing only, remove\r\n            //document.body.appendChild((<any>renderer)._ghostView);\r\n            this._initResizeSensor();\r\n            // HTML content holder\r\n            this._htmlElementContainer = document.createElement(\"div\");\r\n            this._htmlElementContainer.style.position = \"absolute\";\r\n            this._htmlElementContainer.style.pointerEvents = \"none\";\r\n            this._htmlElementContainer.style.overflow = \"hidden\";\r\n            this._inner.appendChild(this._htmlElementContainer);\r\n            // Create element which is used to make announcements to screen reader\r\n            var readerAlertElement = document.createElement(\"div\");\r\n            readerAlertElement.setAttribute(\"role\", \"alert\");\r\n            readerAlertElement.style.zIndex = \"-100000\";\r\n            readerAlertElement.style.opacity = \"0\";\r\n            readerAlertElement.style.position = \"absolute\";\r\n            readerAlertElement.style.top = \"0\";\r\n            this._readerAlertElement = readerAlertElement;\r\n            this._inner.appendChild(this._readerAlertElement);\r\n            var focusElementContainer = document.createElement(\"div\");\r\n            focusElementContainer.style.position = \"absolute\";\r\n            focusElementContainer.style.pointerEvents = \"none\";\r\n            focusElementContainer.style.top = \"0px\";\r\n            focusElementContainer.style.left = \"0px\";\r\n            focusElementContainer.style.overflow = \"hidden\";\r\n            focusElementContainer.style.width = width + \"px\";\r\n            focusElementContainer.style.height = height + \"px\";\r\n            focusElementContainer.setAttribute(\"role\", \"application\");\r\n            $utils.setInteractive(focusElementContainer, false);\r\n            this._focusElementContainer = focusElementContainer;\r\n            this._inner.appendChild(this._focusElementContainer);\r\n            this._tooltipElementContainer = document.createElement(\"div\");\r\n            this._inner.appendChild(this._tooltipElementContainer);\r\n            // Add keyboard events for accessibility, e.g. simulating drag with arrow\r\n            // keys and click with ENTER\r\n            if ($utils.supports(\"keyboardevents\")) {\r\n                this._disposers.push($utils.addEventListener(window, \"keydown\", function (ev) {\r\n                    if (ev.keyCode == 16) {\r\n                        _this._isShift = true;\r\n                    }\r\n                }));\r\n                this._disposers.push($utils.addEventListener(window, \"keyup\", function (ev) {\r\n                    if (ev.keyCode == 16) {\r\n                        _this._isShift = false;\r\n                    }\r\n                }));\r\n                this._disposers.push($utils.addEventListener(focusElementContainer, \"keydown\", function (ev) {\r\n                    var focusedSprite = _this._focusedSprite;\r\n                    if (focusedSprite) {\r\n                        if (ev.keyCode == 27) {\r\n                            // ESC pressed - lose current focus\r\n                            $utils.blur();\r\n                            _this._focusedSprite = undefined;\r\n                        }\r\n                        var dragOffsetX = 0;\r\n                        var dragOffsetY = 0;\r\n                        // TODO: figure out if using bogus MouseEvent is fine, or it will\r\n                        // fail on some platforms\r\n                        switch (ev.keyCode) {\r\n                            case 13:\r\n                                ev.preventDefault();\r\n                                var downEvent = renderer.getEvent(new MouseEvent(\"click\"));\r\n                                focusedSprite.events.dispatch(\"click\", {\r\n                                    type: \"click\",\r\n                                    originalEvent: downEvent.event,\r\n                                    point: downEvent.point,\r\n                                    simulated: true,\r\n                                    target: focusedSprite\r\n                                });\r\n                                return;\r\n                            case 37:\r\n                                dragOffsetX = -6;\r\n                                break;\r\n                            case 39:\r\n                                dragOffsetX = 6;\r\n                                break;\r\n                            case 38:\r\n                                dragOffsetY = -6;\r\n                                break;\r\n                            case 40:\r\n                                dragOffsetY = 6;\r\n                                break;\r\n                            default:\r\n                                return;\r\n                        }\r\n                        if (dragOffsetX != 0 || dragOffsetY != 0) {\r\n                            ev.preventDefault();\r\n                            if (!focusedSprite.isDragging()) {\r\n                                // Start dragging\r\n                                _this._keyboardDragPoint = {\r\n                                    x: 0,\r\n                                    y: 0\r\n                                };\r\n                                var downEvent = renderer.getEvent(new MouseEvent(\"mousedown\", {\r\n                                    clientX: 0,\r\n                                    clientY: 0\r\n                                }));\r\n                                if (focusedSprite.events.isEnabled(\"pointerdown\")) {\r\n                                    focusedSprite.events.dispatch(\"pointerdown\", {\r\n                                        type: \"pointerdown\",\r\n                                        originalEvent: downEvent.event,\r\n                                        point: downEvent.point,\r\n                                        simulated: true,\r\n                                        target: focusedSprite\r\n                                    });\r\n                                }\r\n                            }\r\n                            else {\r\n                                // Move focus marker\r\n                                //this._positionFocusElement(focusedSprite);\r\n                            }\r\n                            // Move incrementally\r\n                            var dragPoint = _this._keyboardDragPoint;\r\n                            dragPoint.x += dragOffsetX;\r\n                            dragPoint.y += dragOffsetY;\r\n                            var moveEvent = renderer.getEvent(new MouseEvent(\"mousemove\", {\r\n                                clientX: dragPoint.x,\r\n                                clientY: dragPoint.y\r\n                            }), false);\r\n                            if (focusedSprite.events.isEnabled(\"globalpointermove\")) {\r\n                                focusedSprite.events.dispatch(\"globalpointermove\", {\r\n                                    type: \"globalpointermove\",\r\n                                    originalEvent: moveEvent.event,\r\n                                    point: moveEvent.point,\r\n                                    simulated: true,\r\n                                    target: focusedSprite\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                }));\r\n                this._disposers.push($utils.addEventListener(focusElementContainer, \"keyup\", function (ev) {\r\n                    if (_this._focusedSprite) {\r\n                        var focusedSprite = _this._focusedSprite;\r\n                        var keyCode = ev.keyCode;\r\n                        switch (keyCode) {\r\n                            case 37:\r\n                            case 39:\r\n                            case 38:\r\n                            case 40:\r\n                                if (focusedSprite.isDragging()) {\r\n                                    // Simulate drag stop\r\n                                    var dragPoint = _this._keyboardDragPoint;\r\n                                    var upEvent = renderer.getEvent(new MouseEvent(\"mouseup\", {\r\n                                        clientX: dragPoint.x,\r\n                                        clientY: dragPoint.y\r\n                                    }));\r\n                                    if (focusedSprite.events.isEnabled(\"globalpointerup\")) {\r\n                                        focusedSprite.events.dispatch(\"globalpointerup\", {\r\n                                            type: \"globalpointerup\",\r\n                                            originalEvent: upEvent.event,\r\n                                            point: upEvent.point,\r\n                                            simulated: true,\r\n                                            target: focusedSprite\r\n                                        });\r\n                                    }\r\n                                    //this._positionFocusElement(focusedSprite);\r\n                                    _this._keyboardDragPoint = undefined;\r\n                                    // @todo dispatch mouseup event instead of calling dragStop?\r\n                                    // this._dispatchEvent(\"globalpointerup\", target, upEvent);\r\n                                    return;\r\n                                }\r\n                                else if (focusedSprite.get(\"focusableGroup\")) {\r\n                                    // Find next item in focusable group\r\n                                    var group_1 = focusedSprite.get(\"focusableGroup\");\r\n                                    var items = _this._tabindexes.filter(function (item) { return item.get(\"focusableGroup\") == group_1; });\r\n                                    var index = items.indexOf(focusedSprite);\r\n                                    var lastIndex = items.length - 1;\r\n                                    index += (keyCode == 39 || keyCode == 40) ? 1 : -1;\r\n                                    if (index < 0) {\r\n                                        index = lastIndex;\r\n                                    }\r\n                                    else if (index > lastIndex) {\r\n                                        index = 0;\r\n                                    }\r\n                                    $utils.focus(items[index].getPrivate(\"focusElement\").dom);\r\n                                }\r\n                                break;\r\n                        }\r\n                    }\r\n                }));\r\n            }\r\n            this._startTicker();\r\n            this.setThemes([]);\r\n            this._addTooltip();\r\n            if (!this._hasLicense()) {\r\n                this._showBranding();\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Root.prototype, \"_initResizeSensor\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            if (this._resizeSensorDisposer) {\r\n                this._resizeSensorDisposer.dispose();\r\n            }\r\n            this._resizeSensorDisposer = new ResizeSensor(this.dom, function () {\r\n                if (_this.autoResize) {\r\n                    _this.resize();\r\n                }\r\n            });\r\n            this._disposers.push(this._resizeSensorDisposer);\r\n        }\r\n    });\r\n    /**\r\n     * If automatic resizing of char is disabled (`root.autoResize = false`), it\r\n     * can be resized manually by calling this method.\r\n     */\r\n    Object.defineProperty(Root.prototype, \"resize\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var dom = this.dom;\r\n            var rect = dom.getBoundingClientRect();\r\n            var w = Math.floor(rect.width);\r\n            var h = Math.floor(rect.height);\r\n            if (w > 0 && h > 0) {\r\n                var htmlElementContainer = this._htmlElementContainer;\r\n                htmlElementContainer.style.width = w + \"px\";\r\n                htmlElementContainer.style.height = h + \"px\";\r\n                var focusElementContainer = this._focusElementContainer;\r\n                focusElementContainer.style.width = w + \"px\";\r\n                focusElementContainer.style.height = h + \"px\";\r\n                this._renderer.resize(w, h);\r\n                var rootContainer = this._rootContainer;\r\n                rootContainer.setPrivate(\"width\", w);\r\n                rootContainer.setPrivate(\"height\", h);\r\n                this._render();\r\n                this._handleLogo();\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Root.prototype, \"_render\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this._renderer.render(this._rootContainer._display);\r\n            if (this._focusElementDirty) {\r\n                this._updateCurrentFocus();\r\n                this._focusElementDirty = false;\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Root.prototype, \"_runTickers\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (currentTime) {\r\n            $array.each(this._tickers, function (f) {\r\n                f(currentTime);\r\n            });\r\n        }\r\n    });\r\n    Object.defineProperty(Root.prototype, \"_runAnimations\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (currentTime) {\r\n            $array.keepIf(this._animations, function (animation) {\r\n                return animation._runAnimation(currentTime);\r\n            });\r\n        }\r\n    });\r\n    Object.defineProperty(Root.prototype, \"_runDirties\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            //console.log(\"tick **************************************************************\");\r\n            var allParents = {};\r\n            while (this._isDirtyParents) {\r\n                // This must be before calling _prepareChildren\r\n                this._isDirtyParents = false;\r\n                $object.keys(this._dirtyParents).forEach(function (key) {\r\n                    var parent = _this._dirtyParents[key];\r\n                    delete _this._dirtyParents[key];\r\n                    if (!parent.isDisposed()) {\r\n                        allParents[parent.uid] = parent;\r\n                        parent._prepareChildren();\r\n                    }\r\n                });\r\n            }\r\n            $object.keys(allParents).forEach(function (key) {\r\n                allParents[key]._updateChildren();\r\n            });\r\n            var objects = [];\r\n            //\t\tconsole.log(\"_beforeChanged\")\r\n            $object.keys(this._dirty).forEach(function (key) {\r\n                var entity = _this._dirty[key];\r\n                if (entity.isDisposed()) {\r\n                    delete _this._dirty[entity.uid];\r\n                }\r\n                else {\r\n                    objects.push(entity);\r\n                    entity._beforeChanged();\r\n                }\r\n            });\r\n            //\t\tconsole.log(\"_changed\")\r\n            objects.forEach(function (entity) {\r\n                entity._changed();\r\n                delete _this._dirty[entity.uid];\r\n                entity._clearDirty();\r\n            });\r\n            this._isDirty = false;\r\n            var depths = {};\r\n            var bounds = [];\r\n            $object.keys(this._dirtyBounds).forEach(function (key) {\r\n                var entity = _this._dirtyBounds[key];\r\n                delete _this._dirtyBounds[key];\r\n                if (!entity.isDisposed()) {\r\n                    depths[entity.uid] = entity.depth();\r\n                    bounds.push(entity);\r\n                }\r\n            });\r\n            // High depth -> low depth\r\n            bounds.sort(function (x, y) {\r\n                return $order.compare(depths[y.uid], depths[x.uid]);\r\n            });\r\n            //\t\tconsole.log(\"_updateBounds\")\r\n            bounds.forEach(function (entity) {\r\n                entity._updateBounds();\r\n            });\r\n            //\t\tconsole.log(\"_updatePosition\")\r\n            var dirtyPositions = this._dirtyPositions;\r\n            $object.keys(dirtyPositions).forEach(function (key) {\r\n                var sprite = dirtyPositions[key];\r\n                delete dirtyPositions[key];\r\n                if (!sprite.isDisposed()) {\r\n                    sprite._updatePosition();\r\n                }\r\n            });\r\n            //\t\tconsole.log(\"_afterChanged\")\r\n            objects.forEach(function (entity) {\r\n                entity._afterChanged();\r\n            });\r\n        }\r\n    });\r\n    Object.defineProperty(Root.prototype, \"_renderFrame\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (currentTime) {\r\n            if (this.events.isEnabled(\"framestarted\")) {\r\n                this.events.dispatch(\"framestarted\", {\r\n                    type: \"framestarted\",\r\n                    target: this,\r\n                    timestamp: currentTime,\r\n                });\r\n            }\r\n            this._checkComputedStyles();\r\n            this._runTickers(currentTime);\r\n            this._runAnimations(currentTime);\r\n            this._runDirties();\r\n            this._render();\r\n            this._positionHTMLElements();\r\n            if (this.events.isEnabled(\"frameended\")) {\r\n                this.events.dispatch(\"frameended\", {\r\n                    type: \"frameended\",\r\n                    target: this,\r\n                    timestamp: currentTime,\r\n                });\r\n            }\r\n            return this._tickers.length === 0 &&\r\n                this._animations.length === 0 &&\r\n                !this._isDirty;\r\n        }\r\n    });\r\n    Object.defineProperty(Root.prototype, \"_runTicker\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (currentTime) {\r\n            if (!this.isDisposed()) {\r\n                this.animationTime = currentTime;\r\n                var done = this._renderFrame(currentTime);\r\n                // No more work to do\r\n                if (done) {\r\n                    this._ticker = null;\r\n                    this.animationTime = null;\r\n                }\r\n                else {\r\n                    rAF(this.fps, this._ticker);\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Root.prototype, \"_runTickerNow\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            if (!this.isDisposed()) {\r\n                for (;;) {\r\n                    var currentTime = performance.now();\r\n                    this.animationTime = currentTime;\r\n                    var done = this._renderFrame(currentTime);\r\n                    if (done) {\r\n                        this.animationTime = null;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Root.prototype, \"_startTicker\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            if (this._ticker === null) {\r\n                this.animationTime = null;\r\n                this._ticker = function (currentTime) {\r\n                    _this._runTicker(currentTime);\r\n                };\r\n                rAF(this.fps, this._ticker);\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Root.prototype, \"_addDirtyEntity\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (entity) {\r\n            if (this._dirty[entity.uid] === undefined) {\r\n                this._isDirty = true;\r\n                this._dirty[entity.uid] = entity;\r\n                this._startTicker();\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Root.prototype, \"_addDirtyParent\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (parent) {\r\n            if (this._dirtyParents[parent.uid] === undefined) {\r\n                this._isDirty = true;\r\n                this._isDirtyParents = true;\r\n                this._dirtyParents[parent.uid] = parent;\r\n                this._startTicker();\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Root.prototype, \"_addDirtyBounds\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (entity) {\r\n            if (this._dirtyBounds[entity.uid] === undefined) {\r\n                this._isDirty = true;\r\n                this._dirtyBounds[entity.uid] = entity;\r\n                this._startTicker();\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Root.prototype, \"_addDirtyPosition\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (sprite) {\r\n            if (this._dirtyPositions[sprite.uid] === undefined) {\r\n                this._isDirty = true;\r\n                this._dirtyPositions[sprite.uid] = sprite;\r\n                this._startTicker();\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Root.prototype, \"_addAnimation\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (animation) {\r\n            // TODO use numeric id instead\r\n            if (this._animations.indexOf(animation) === -1) {\r\n                this._animations.push(animation);\r\n                this._startTicker();\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Root.prototype, \"_markDirty\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this._isDirty = true;\r\n        }\r\n    });\r\n    Object.defineProperty(Root.prototype, \"_markDirtyRedraw\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            this.events.once(\"frameended\", function () {\r\n                _this._isDirty = true;\r\n                _this._startTicker();\r\n            });\r\n        }\r\n    });\r\n    Object.defineProperty(Root.prototype, \"eachFrame\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (f) {\r\n            var _this = this;\r\n            this._tickers.push(f);\r\n            this._startTicker();\r\n            return new Disposer(function () {\r\n                $array.removeFirst(_this._tickers, f);\r\n            });\r\n        }\r\n    });\r\n    Object.defineProperty(Root.prototype, \"markDirtyGlobal\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (container) {\r\n            var _this = this;\r\n            if (!container) {\r\n                container = this.container;\r\n            }\r\n            console.log(this.width());\r\n            container.walkChildren(function (child) {\r\n                if (child instanceof Container) {\r\n                    _this.markDirtyGlobal(child);\r\n                }\r\n                child.markDirty();\r\n                child.markDirtyBounds();\r\n            });\r\n        }\r\n    });\r\n    /**\r\n     * Returns width of the target container, in pixels.\r\n     *\r\n     * @return Width\r\n     */\r\n    Object.defineProperty(Root.prototype, \"width\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            // TODO make this more efficient, maybe just return the renderer's width ?\r\n            return Math.floor(this.dom.getBoundingClientRect().width);\r\n        }\r\n    });\r\n    /**\r\n     * Returns height of the target container, in pixels.\r\n     *\r\n     * @return Height\r\n     */\r\n    Object.defineProperty(Root.prototype, \"height\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            // TODO make this more efficient, maybe just return the renderer's height ?\r\n            return Math.floor(this.dom.getBoundingClientRect().height);\r\n        }\r\n    });\r\n    /**\r\n     * Disposes root and all the content in it.\r\n     */\r\n    Object.defineProperty(Root.prototype, \"dispose\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            if (!this._isDisposed) {\r\n                this._isDisposed = true;\r\n                this._rootContainer.dispose();\r\n                this._renderer.dispose();\r\n                this.horizontalLayout.dispose();\r\n                this.verticalLayout.dispose();\r\n                this.interfaceColors.dispose();\r\n                $array.each(this._disposers, function (x) {\r\n                    x.dispose();\r\n                });\r\n                if (this._inner) {\r\n                    $utils.removeElement(this._inner);\r\n                }\r\n                var tooltipRoot = this.tooltipRoot;\r\n                if (tooltipRoot) {\r\n                    tooltipRoot.dispose();\r\n                }\r\n                $array.remove(registry.rootElements, this);\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * Returns `true` if root element is disposed.\r\n     *\r\n     * @return Disposed?\r\n     */\r\n    Object.defineProperty(Root.prototype, \"isDisposed\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            return this._isDisposed;\r\n        }\r\n    });\r\n    /**\r\n     * Triggers screen reader read out a message.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/accessibility/} for more info\r\n     * @param  text  Alert text\r\n     */\r\n    Object.defineProperty(Root.prototype, \"readerAlert\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (text) {\r\n            this._readerAlertElement.innerHTML = $utils.stripTags(text);\r\n        }\r\n    });\r\n    /**\r\n     * Sets themes to be used for the chart.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/themes/} for more info\r\n     * @param  themes  A list of themes\r\n     */\r\n    Object.defineProperty(Root.prototype, \"setThemes\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (themes) {\r\n            this._rootContainer.set(\"themes\", themes);\r\n            var tooltipRoot = this.tooltipRoot;\r\n            if (tooltipRoot) {\r\n                tooltipRoot._rootContainer.set(\"themes\", themes);\r\n                tooltipRoot.tooltipContainer._applyThemes();\r\n            }\r\n            // otherwise new themes are not applied\r\n            var tooltipContainer = this.tooltipContainer;\r\n            if (tooltipContainer) {\r\n                tooltipContainer._applyThemes();\r\n            }\r\n            // @todo review this\r\n            var interfaceColors = this.interfaceColors;\r\n            if (interfaceColors) {\r\n                interfaceColors._applyThemes();\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Root.prototype, \"_addTooltip\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            if (!this.tooltipContainer) {\r\n                var tooltipContainer = this._rootContainer.children.push(Container.new(this, { position: \"absolute\", isMeasured: false, width: p100, height: p100, layer: 30 }));\r\n                this.tooltipContainer = tooltipContainer;\r\n                var tooltipRoot = this.tooltipRoot;\r\n                if (!tooltipRoot) {\r\n                    tooltipRoot = this;\r\n                }\r\n                var tooltip = Tooltip.new(tooltipRoot, {});\r\n                this.container.set(\"tooltip\", tooltip);\r\n                tooltip.hide(0);\r\n                this._tooltip = tooltip;\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * Accesibility\r\n     */\r\n    Object.defineProperty(Root.prototype, \"_registerTabindexOrder\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (target) {\r\n            if (target.get(\"focusable\")) {\r\n                $array.pushOne(this._tabindexes, target);\r\n            }\r\n            else {\r\n                $array.remove(this._tabindexes, target);\r\n            }\r\n            this._invalidateTabindexes();\r\n        }\r\n    });\r\n    Object.defineProperty(Root.prototype, \"_unregisterTabindexOrder\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (target) {\r\n            $array.remove(this._tabindexes, target);\r\n            this._invalidateTabindexes();\r\n        }\r\n    });\r\n    Object.defineProperty(Root.prototype, \"_invalidateTabindexes\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            this._tabindexes.sort(function (a, b) {\r\n                var aindex = a.get(\"tabindexOrder\", 0);\r\n                var bindex = b.get(\"tabindexOrder\", 0);\r\n                if (aindex == bindex) {\r\n                    return 0;\r\n                }\r\n                else if (aindex > bindex) {\r\n                    return 1;\r\n                }\r\n                else {\r\n                    return -1;\r\n                }\r\n            });\r\n            var groups = [];\r\n            $array.each(this._tabindexes, function (item, index) {\r\n                if (!item.getPrivate(\"focusElement\")) {\r\n                    _this._makeFocusElement(index, item);\r\n                }\r\n                else {\r\n                    _this._moveFocusElement(index, item);\r\n                }\r\n                var group = item.get(\"focusableGroup\");\r\n                if (group) {\r\n                    if (groups.indexOf(group) !== -1) {\r\n                        // Non-first element in the group, make it not directly focusable\r\n                        item.getPrivate(\"focusElement\").dom.setAttribute(\"tabindex\", \"-1\");\r\n                    }\r\n                    else {\r\n                        groups.push(group);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    });\r\n    Object.defineProperty(Root.prototype, \"_updateCurrentFocus\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            if (this._focusedSprite) {\r\n                this._decorateFocusElement(this._focusedSprite);\r\n                this._positionFocusElement(this._focusedSprite);\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Root.prototype, \"_decorateFocusElement\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (target, focusElement) {\r\n            // Decorate with proper accessibility attributes\r\n            if (!focusElement) {\r\n                focusElement = target.getPrivate(\"focusElement\").dom;\r\n            }\r\n            if (!focusElement) {\r\n                return;\r\n            }\r\n            if (target.get(\"visible\") && target.get(\"role\") != \"tooltip\" && !target.isHidden()) {\r\n                if (focusElement.getAttribute(\"tabindex\") != \"-1\") {\r\n                    focusElement.setAttribute(\"tabindex\", \"\" + this.tabindex);\r\n                }\r\n            }\r\n            else {\r\n                focusElement.removeAttribute(\"tabindex\");\r\n            }\r\n            var role = target.get(\"role\");\r\n            if (role) {\r\n                focusElement.setAttribute(\"role\", role);\r\n            }\r\n            else {\r\n                focusElement.removeAttribute(\"role\");\r\n            }\r\n            var ariaLabel = target.get(\"ariaLabel\");\r\n            if (ariaLabel) {\r\n                var label = populateString(target, ariaLabel);\r\n                focusElement.setAttribute(\"aria-label\", label);\r\n            }\r\n            else {\r\n                focusElement.removeAttribute(\"aria-label\");\r\n            }\r\n            var ariaLive = target.get(\"ariaLive\");\r\n            if (ariaLive) {\r\n                focusElement.setAttribute(\"aria-live\", ariaLive);\r\n            }\r\n            else {\r\n                focusElement.removeAttribute(\"aria-live\");\r\n            }\r\n            var ariaChecked = target.get(\"ariaChecked\");\r\n            if (ariaChecked != null) {\r\n                focusElement.setAttribute(\"aria-checked\", ariaChecked ? \"true\" : \"false\");\r\n            }\r\n            else {\r\n                focusElement.removeAttribute(\"aria-checked\");\r\n            }\r\n            if (target.get(\"ariaHidden\")) {\r\n                focusElement.setAttribute(\"aria-hidden\", \"hidden\");\r\n            }\r\n            else {\r\n                focusElement.removeAttribute(\"aria-hidden\");\r\n            }\r\n            var ariaOrientation = target.get(\"ariaOrientation\");\r\n            if (ariaOrientation) {\r\n                focusElement.setAttribute(\"aria-orientation\", ariaOrientation);\r\n            }\r\n            else {\r\n                focusElement.removeAttribute(\"aria-orientation\");\r\n            }\r\n            var ariaValueNow = target.get(\"ariaValueNow\");\r\n            if (ariaValueNow) {\r\n                focusElement.setAttribute(\"aria-valuenow\", ariaValueNow);\r\n            }\r\n            else {\r\n                focusElement.removeAttribute(\"aria-valuenow\");\r\n            }\r\n            var ariaValueMin = target.get(\"ariaValueMin\");\r\n            if (ariaValueMin) {\r\n                focusElement.setAttribute(\"aria-valuemin\", ariaValueMin);\r\n            }\r\n            else {\r\n                focusElement.removeAttribute(\"aria-valuemin\");\r\n            }\r\n            var ariaValueMax = target.get(\"ariaValueMax\");\r\n            if (ariaValueMax) {\r\n                focusElement.setAttribute(\"aria-valuemax\", ariaValueMax);\r\n            }\r\n            else {\r\n                focusElement.removeAttribute(\"aria-valuemax\");\r\n            }\r\n            var ariaValueText = target.get(\"ariaValueText\");\r\n            if (ariaValueText) {\r\n                focusElement.setAttribute(\"aria-valuetext\", ariaValueText);\r\n            }\r\n            else {\r\n                focusElement.removeAttribute(\"aria-valuetext\");\r\n            }\r\n            var ariaControls = target.get(\"ariaControls\");\r\n            if (ariaControls) {\r\n                focusElement.setAttribute(\"aria-controls\", ariaControls);\r\n            }\r\n            else {\r\n                focusElement.removeAttribute(\"aria-controls\");\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Root.prototype, \"_makeFocusElement\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (index, target) {\r\n            var _this = this;\r\n            if (target.getPrivate(\"focusElement\")) {\r\n                return;\r\n            }\r\n            // Init\r\n            var focusElement = document.createElement(\"div\");\r\n            if (target.get(\"role\") != \"tooltip\") {\r\n                focusElement.tabIndex = this.tabindex;\r\n            }\r\n            focusElement.style.position = \"absolute\";\r\n            $utils.setInteractive(focusElement, false);\r\n            var disposers = [];\r\n            target.setPrivate(\"focusElement\", {\r\n                dom: focusElement,\r\n                disposers: disposers,\r\n            });\r\n            this._decorateFocusElement(target);\r\n            disposers.push($utils.addEventListener(focusElement, \"focus\", function (ev) {\r\n                _this._handleFocus(ev, index);\r\n            }));\r\n            disposers.push($utils.addEventListener(focusElement, \"blur\", function (ev) {\r\n                _this._handleBlur(ev, index);\r\n            }));\r\n            this._moveFocusElement(index, target);\r\n        }\r\n    });\r\n    Object.defineProperty(Root.prototype, \"_removeFocusElement\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (target) {\r\n            $array.remove(this._tabindexes, target);\r\n            var focusElement = target.getPrivate(\"focusElement\");\r\n            if (focusElement) {\r\n                var container = this._focusElementContainer;\r\n                container.removeChild(focusElement.dom);\r\n                $array.each(focusElement.disposers, function (x) {\r\n                    x.dispose();\r\n                });\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Root.prototype, \"_hideFocusElement\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (target) {\r\n            var focusElement = target.getPrivate(\"focusElement\");\r\n            focusElement.dom.style.display = \"none\";\r\n        }\r\n    });\r\n    Object.defineProperty(Root.prototype, \"_moveFocusElement\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (index, target) {\r\n            // Get container\r\n            var container = this._focusElementContainer;\r\n            var focusElement = target.getPrivate(\"focusElement\").dom;\r\n            if (focusElement === this._focusElementContainer.children[index]) {\r\n                // Nothing to do\r\n                return;\r\n            }\r\n            var next = this._focusElementContainer.children[index + 1];\r\n            if (next) {\r\n                container.insertBefore(focusElement, next);\r\n            }\r\n            else {\r\n                container.append(focusElement);\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Root.prototype, \"_positionFocusElement\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (target) {\r\n            var bounds = target.globalBounds();\r\n            var width = bounds.right == bounds.left ? target.width() : bounds.right - bounds.left;\r\n            var height = bounds.top == bounds.bottom ? target.height() : bounds.bottom - bounds.top;\r\n            var focusElement = target.getPrivate(\"focusElement\").dom;\r\n            focusElement.style.top = (bounds.top - 2) + \"px\";\r\n            focusElement.style.left = (bounds.left - 2) + \"px\";\r\n            focusElement.style.width = (width + 4) + \"px\";\r\n            focusElement.style.height = (height + 4) + \"px\";\r\n        }\r\n    });\r\n    Object.defineProperty(Root.prototype, \"_handleFocus\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (ev, index) {\r\n            // Get element\r\n            var focused = this._tabindexes[index];\r\n            // Jump over hidden elements\r\n            if (!focused.isVisibleDeep()) {\r\n                this._focusNext(ev.target, this._isShift ? -1 : 1);\r\n                return;\r\n            }\r\n            // Size and position\r\n            this._positionFocusElement(focused);\r\n            //this._decorateFocusElement(focused);\r\n            this._focusedSprite = focused;\r\n            if (focused.events.isEnabled(\"focus\")) {\r\n                focused.events.dispatch(\"focus\", {\r\n                    type: \"focus\",\r\n                    originalEvent: ev,\r\n                    target: focused\r\n                });\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Root.prototype, \"_focusNext\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (el, direction) {\r\n            var focusableElements = Array.from(document.querySelectorAll([\r\n                'a[href]',\r\n                'area[href]',\r\n                'button:not([disabled])',\r\n                'details',\r\n                'input:not([disabled])',\r\n                'iframe:not([disabled])',\r\n                'select:not([disabled])',\r\n                'textarea:not([disabled])',\r\n                '[contentEditable=\"\"]',\r\n                '[contentEditable=\"true\"]',\r\n                '[contentEditable=\"TRUE\"]',\r\n                '[tabindex]:not([tabindex^=\"-\"])',\r\n                //':not([disabled])'\r\n            ].join(',')));\r\n            var index = focusableElements.indexOf(el) + direction;\r\n            if (index < 0) {\r\n                index = focusableElements.length - 1;\r\n            }\r\n            else if (index >= focusableElements.length) {\r\n                index = 0;\r\n            }\r\n            focusableElements[index].focus();\r\n        }\r\n    });\r\n    Object.defineProperty(Root.prototype, \"_handleBlur\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (ev, _index) {\r\n            var focused = this._focusedSprite;\r\n            if (focused && focused.events.isEnabled(\"blur\")) {\r\n                focused.events.dispatch(\"blur\", {\r\n                    type: \"blur\",\r\n                    originalEvent: ev,\r\n                    target: focused\r\n                });\r\n            }\r\n            this._focusedSprite = undefined;\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(Root.prototype, \"updateTooltip\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (target) {\r\n            var text = $utils.stripTags(target._getText());\r\n            var tooltipElement = target.getPrivate(\"tooltipElement\");\r\n            if (target.get(\"role\") == \"tooltip\" && text != \"\") {\r\n                if (!tooltipElement) {\r\n                    tooltipElement = this._makeTooltipElement(target);\r\n                }\r\n                if (tooltipElement.innerHTML != text) {\r\n                    tooltipElement.innerHTML = text;\r\n                }\r\n            }\r\n            else if (tooltipElement) {\r\n                tooltipElement.remove();\r\n                target.removePrivate(\"tooltipElement\");\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Root.prototype, \"_makeTooltipElement\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (target) {\r\n            var container = this._tooltipElementContainer;\r\n            var tooltipElement = document.createElement(\"div\");\r\n            tooltipElement.style.position = \"absolute\";\r\n            tooltipElement.style.top = \"-1000000px\";\r\n            tooltipElement.style.opacity = \"0.0000001\";\r\n            $utils.setInteractive(tooltipElement, false);\r\n            this._decorateFocusElement(target, tooltipElement);\r\n            container.append(tooltipElement);\r\n            target.setPrivate(\"tooltipElement\", tooltipElement);\r\n            return tooltipElement;\r\n        }\r\n    });\r\n    Object.defineProperty(Root.prototype, \"_invalidateAccessibility\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (target) {\r\n            this._focusElementDirty = true;\r\n            var focusElement = target.getPrivate(\"focusElement\");\r\n            if (target.get(\"focusable\")) {\r\n                if (focusElement) {\r\n                    this._decorateFocusElement(target);\r\n                    this._positionFocusElement(target);\r\n                }\r\n                // else {\r\n                // \tthis._renderer._makeFocusElement(0, this);\r\n                // }\r\n            }\r\n            else if (focusElement) {\r\n                this._removeFocusElement(target);\r\n            }\r\n            //this.updateCurrentFocus();\r\n        }\r\n    });\r\n    /**\r\n     * Returns `true` if `target` is currently focused.\r\n     *\r\n     * @param   target  Target\r\n     * @return          Focused?\r\n     */\r\n    Object.defineProperty(Root.prototype, \"focused\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (target) {\r\n            return this._focusedSprite === target;\r\n        }\r\n    });\r\n    /**\r\n     * Converts document coordinates to coordinates withing root element.\r\n     *\r\n     * @param   point  Document point\r\n     * @return         Root point\r\n     */\r\n    Object.defineProperty(Root.prototype, \"documentPointToRoot\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (point) {\r\n            var bbox = this.dom.getBoundingClientRect();\r\n            return {\r\n                x: point.x - bbox.left,\r\n                y: point.y - bbox.top\r\n            };\r\n        }\r\n    });\r\n    /**\r\n     * Converts root coordinates to document\r\n     *\r\n     * @param   point  Document point\r\n     * @return         Root point\r\n     */\r\n    Object.defineProperty(Root.prototype, \"rootPointToDocument\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (point) {\r\n            var bbox = this.dom.getBoundingClientRect();\r\n            return {\r\n                x: point.x + bbox.left,\r\n                y: point.y + bbox.top\r\n            };\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(Root.prototype, \"addDisposer\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (disposer) {\r\n            this._disposers.push(disposer);\r\n            return disposer;\r\n        }\r\n    });\r\n    Object.defineProperty(Root.prototype, \"_updateComputedStyles\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var styles = window.getComputedStyle(this.dom);\r\n            var fontHash = \"\";\r\n            $object.each(styles, function (key, val) {\r\n                if ($type.isString(key) && key.match(/^font/)) {\r\n                    fontHash += val;\r\n                }\r\n            });\r\n            var changed = fontHash != this._fontHash;\r\n            if (changed) {\r\n                this._fontHash = fontHash;\r\n            }\r\n            return changed;\r\n        }\r\n    });\r\n    Object.defineProperty(Root.prototype, \"_checkComputedStyles\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            if (this._updateComputedStyles()) {\r\n                this._invalidateLabelBounds(this.container);\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Root.prototype, \"_invalidateLabelBounds\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (target) {\r\n            var _this = this;\r\n            if (target instanceof Container) {\r\n                target.children.each(function (child) {\r\n                    _this._invalidateLabelBounds(child);\r\n                });\r\n            }\r\n            else if (target instanceof Text) {\r\n                target.markDirtyBounds();\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * To all the clever heads out there. Yes, we did not make any attempts to\r\n     * scramble this.\r\n     *\r\n     * This is a part of a tool meant for our users to manage their commercial\r\n     * licenses for removal of amCharts branding from charts.\r\n     *\r\n     * The only legit way to do so is to purchase a commercial license for amCharts:\r\n     * https://www.amcharts.com/online-store/\r\n     *\r\n     * Removing or altering this code, or disabling amCharts branding in any other\r\n     * way is against the license and thus illegal.\r\n     */\r\n    Object.defineProperty(Root.prototype, \"_hasLicense\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            for (var i = 0; i < registry.licenses.length; i++) {\r\n                if (registry.licenses[i].match(/^AM5C.{5,}/i)) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n    });\r\n    Object.defineProperty(Root.prototype, \"_licenseApplied\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            if (this._logo) {\r\n                this._logo.set(\"forceHidden\", true);\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Root.prototype, \"debugGhostView\", {\r\n        /**\r\n         * @ignore\r\n         */\r\n        get: function () {\r\n            return this._renderer.debugGhostView;\r\n        },\r\n        /**\r\n         * @ignore\r\n         */\r\n        set: function (value) {\r\n            this._renderer.debugGhostView = value;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Root.prototype, \"tapToActivate\", {\r\n        /**\r\n         * @return Needs a tap to activate touch functions\r\n         */\r\n        get: function () {\r\n            return this._renderer.tapToActivate;\r\n        },\r\n        /**\r\n         * Set this to `true` if you need chart to require first a tap onto it before\r\n         * touch gesture related functionality like zoom/pan is turned on.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/getting-started/root-element/#Touch_related_options} for more info\r\n         * @default false\r\n         * @since 5.2.9\r\n         * @param  value  Needs a tap to activate touch functions\r\n         */\r\n        set: function (value) {\r\n            this._renderer.tapToActivate = value;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Root.prototype, \"tapToActivateTimeout\", {\r\n        /**\r\n         * @return Timeout\r\n         */\r\n        get: function () {\r\n            return this._renderer.tapToActivateTimeout;\r\n        },\r\n        /**\r\n         * If `tapToActivate` is set to `true`, this setting will determine number\r\n         * of milliseconds the chart will stay \"active\", before releasing the\r\n         * controls back to the page.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/getting-started/root-element/#Touch_related_options} for more info\r\n         * @default 3000\r\n         * @since 5.2.9\r\n         * @param  value  Timeout\r\n         */\r\n        set: function (value) {\r\n            this._renderer.tapToActivateTimeout = value;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Root.prototype, \"_makeHTMLElement\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (target) {\r\n            var _this = this;\r\n            // Get container\r\n            var container = this._htmlElementContainer;\r\n            // Init\r\n            var htmlElement = document.createElement(\"div\");\r\n            target.setPrivate(\"htmlElement\", htmlElement);\r\n            //htmlElement.tabIndex = this.tabindex;\r\n            htmlElement.style.position = \"absolute\";\r\n            htmlElement.style.overflow = \"auto\";\r\n            htmlElement.style.boxSizing = \"border-box\";\r\n            $utils.setInteractive(htmlElement, true);\r\n            // Translate events\r\n            if (target.events.isEnabled(\"click\")) {\r\n                this._disposers.push($utils.addEventListener(htmlElement, \"click\", function (ev) {\r\n                    var downEvent = _this._renderer.getEvent(ev);\r\n                    target.events.dispatch(\"click\", {\r\n                        type: \"click\",\r\n                        originalEvent: downEvent.event,\r\n                        point: downEvent.point,\r\n                        simulated: false,\r\n                        target: target\r\n                    });\r\n                }));\r\n            }\r\n            this._positionHTMLElement(target);\r\n            container.append(htmlElement);\r\n            $array.pushOne(this._htmlEnabledContainers, target);\r\n            return htmlElement;\r\n        }\r\n    });\r\n    Object.defineProperty(Root.prototype, \"_positionHTMLElements\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            $array.each(this._htmlEnabledContainers, function (target) {\r\n                _this._positionHTMLElement(target);\r\n            });\r\n        }\r\n    });\r\n    Object.defineProperty(Root.prototype, \"_positionHTMLElement\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (target) {\r\n            var htmlElement = target.getPrivate(\"htmlElement\");\r\n            if (htmlElement) {\r\n                // Translate settings\r\n                var visualSettings = [\"paddingTop\", \"paddingRight\", \"paddingBottom\", \"paddingLeft\", \"minWidth\", \"minHeight\", \"maxWidth\", \"maxHeight\"];\r\n                $array.each(visualSettings, function (setting) {\r\n                    var value = target.get(setting);\r\n                    if (value) {\r\n                        htmlElement.style[setting] = value + \"px\";\r\n                    }\r\n                    else {\r\n                        htmlElement.style[setting] = \"\";\r\n                    }\r\n                });\r\n                // Deal with opacity\r\n                var opacity_1 = target.compositeOpacity();\r\n                setTimeout(function () {\r\n                    htmlElement.style.opacity = opacity_1 + \"\";\r\n                }, 10);\r\n                var visible = target.isVisibleDeep();\r\n                if (visible) {\r\n                    htmlElement.style.display = \"block\";\r\n                }\r\n                // Deal with position\r\n                var bounds = target.globalBounds();\r\n                htmlElement.style.top = (bounds.top) + \"px\";\r\n                htmlElement.style.left = (bounds.left) + \"px\";\r\n                // Use width/height if those are set\r\n                var width = target.get(\"width\");\r\n                var height = target.get(\"height\");\r\n                var w = 0;\r\n                var h = 0;\r\n                if (width) {\r\n                    w = target.width();\r\n                }\r\n                if (height) {\r\n                    h = target.height();\r\n                }\r\n                if (!width || !height) {\r\n                    htmlElement.style.width = \"\";\r\n                    htmlElement.style.height = \"\";\r\n                    var bbox = htmlElement.getBoundingClientRect();\r\n                    w = bbox.width;\r\n                    h = bbox.height;\r\n                    target._adjustedLocalBounds = { left: 0, right: 0, top: 0, bottom: 0 };\r\n                    target.setPrivate(\"minWidth\", w);\r\n                    target.setPrivate(\"minHeight\", h);\r\n                }\r\n                else {\r\n                    target.removePrivate(\"minWidth\");\r\n                    target.removePrivate(\"minHeight\");\r\n                }\r\n                if (w > 0) {\r\n                    htmlElement.style.minWidth = (w) + \"px\";\r\n                }\r\n                if (h > 0) {\r\n                    htmlElement.style.minHeight = (h) + \"px\";\r\n                }\r\n                // Hide or show\r\n                if (!visible || opacity_1 == 0) {\r\n                    htmlElement.style.display = \"none\";\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Root.prototype, \"_setHTMLContent\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (target, html) {\r\n            var htmlElement = target.getPrivate(\"htmlElement\");\r\n            if (!htmlElement) {\r\n                htmlElement = this._makeHTMLElement(target);\r\n            }\r\n            if (htmlElement.innerHTML != html) {\r\n                htmlElement.innerHTML = html;\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Root.prototype, \"_removeHTMLContent\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (target) {\r\n            var htmlElement = target.getPrivate(\"htmlElement\");\r\n            if (htmlElement) {\r\n                this._htmlElementContainer.removeChild(htmlElement);\r\n            }\r\n            $array.remove(this._htmlEnabledContainers, target);\r\n        }\r\n    });\r\n    return Root;\r\n}());\r\nexport { Root };\r\n//# sourceMappingURL=Root.js.map","import { Template } from \"./util/Template\";\r\nimport * as $order from \"./util/Order\";\r\nimport * as $array from \"./util/Array\";\r\n/**\r\n * A base class for an amCharts theme.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/themes/} for more info\r\n * @important\r\n */\r\nvar Theme = /** @class */ (function () {\r\n    function Theme(root, isReal) {\r\n        Object.defineProperty(this, \"_root\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_rules\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        this._root = root;\r\n        if (!isReal) {\r\n            throw new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\r\n        }\r\n    }\r\n    /**\r\n     * Use this method to create an instance of this class.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n     * @param   root      Root element\r\n     * @param   settings  Settings\r\n     * @param   template  Template\r\n     * @return            Instantiated object\r\n     */\r\n    Object.defineProperty(Theme, \"new\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (root) {\r\n            var x = (new this(root, true));\r\n            x.setupDefaultRules();\r\n            return x;\r\n        }\r\n    });\r\n    Object.defineProperty(Theme.prototype, \"setupDefaultRules\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () { }\r\n    });\r\n    /**\r\n     * Looks up the rules for a specific theme class.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/themes/} for more info\r\n     * @param   themeClass Theme class\r\n     * @return             Array<IRule<A>>\r\n     */\r\n    Object.defineProperty(Theme.prototype, \"_lookupRules\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (themeClass) {\r\n            return this._rules[themeClass];\r\n        }\r\n    });\r\n    /**\r\n     * Creates a [[Template]] for specific theme class and tags.\r\n     *\r\n     * NOTE: the difference from `rule()` is that `ruleRaw()` does not do any\r\n     * type checks.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/themes/} for more info\r\n     * @param   themeClass Theme class\r\n     * @param   themeTags  Theme tags\r\n     * @return             Template\r\n     */\r\n    Object.defineProperty(Theme.prototype, \"ruleRaw\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (themeClass, themeTags) {\r\n            if (themeTags === void 0) { themeTags = []; }\r\n            var rules = this._rules[themeClass];\r\n            if (!rules) {\r\n                rules = this._rules[themeClass] = [];\r\n            }\r\n            themeTags.sort($order.compare);\r\n            var _a = $array.getSortedIndex(rules, function (x) {\r\n                var order = $order.compare(x.tags.length, themeTags.length);\r\n                if (order === 0) {\r\n                    return $order.compareArray(x.tags, themeTags, $order.compare);\r\n                }\r\n                else {\r\n                    return order;\r\n                }\r\n            }), index = _a.index, found = _a.found;\r\n            if (found) {\r\n                return rules[index].template;\r\n            }\r\n            else {\r\n                var template = Template.new({});\r\n                rules.splice(index, 0, {\r\n                    tags: themeTags,\r\n                    template: template,\r\n                });\r\n                return template;\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * Creates a [[Template]] for specific theme class and tags.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/themes/} for more info\r\n     * @param   themeClass Theme class\r\n     * @param   themeTags  Theme tags\r\n     * @return             Template\r\n     */\r\n    Object.defineProperty(Theme.prototype, \"rule\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (themeClass, themeTags) {\r\n            if (themeTags === void 0) { themeTags = []; }\r\n            return this.ruleRaw(themeClass, themeTags);\r\n        }\r\n    });\r\n    return Theme;\r\n}());\r\nexport { Theme };\r\n//# sourceMappingURL=Theme.js.map","import { __extends } from \"tslib\";\r\nimport { Entity } from \"../../core/util/Entity\";\r\n/**\r\n * A universal placeholder for bullet elements.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/bullets/} for more info\r\n */\r\nvar Bullet = /** @class */ (function (_super) {\r\n    __extends(Bullet, _super);\r\n    function Bullet() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        // used by MapPolygons where one data item can have multiple bullets of the same kind\r\n        Object.defineProperty(_this, \"_index\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Target series object if it's a bullet for series.\r\n         */\r\n        Object.defineProperty(_this, \"series\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Bullet.prototype, \"_afterNew\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            // Applying themes because bullet will not have parent\r\n            _super.prototype._afterNewApplyThemes.call(this);\r\n        }\r\n    });\r\n    Object.defineProperty(Bullet.prototype, \"_beforeChanged\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._beforeChanged.call(this);\r\n            if (this.isDirty(\"sprite\")) {\r\n                var sprite = this.get(\"sprite\");\r\n                if (sprite) {\r\n                    sprite.setAll({ position: \"absolute\", role: \"figure\" });\r\n                    this._disposers.push(sprite);\r\n                }\r\n            }\r\n            if (this.isDirty(\"locationX\") || this.isDirty(\"locationY\")) {\r\n                if (this.series) {\r\n                    this.series._positionBullet(this);\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Bullet, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"Bullet\"\r\n    });\r\n    Object.defineProperty(Bullet, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: Entity.classNames.concat([Bullet.className])\r\n    });\r\n    return Bullet;\r\n}(Entity));\r\nexport { Bullet };\r\n//# sourceMappingURL=Bullet.js.map","import { __extends } from \"tslib\";\r\nimport { RoundedRectangle } from \"../render/RoundedRectangle\";\r\nimport { Container } from \"./Container\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\n/**\r\n * Draws an interactive button.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/buttons/} for more info\r\n * @important\r\n */\r\nvar Button = /** @class */ (function (_super) {\r\n    __extends(Button, _super);\r\n    function Button() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Button.prototype, \"_afterNew\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"button\"]);\r\n            _super.prototype._afterNew.call(this);\r\n            if (!this._settings.background) {\r\n                this.set(\"background\", RoundedRectangle.new(this._root, {\r\n                    themeTags: $utils.mergeTags(this._settings.themeTags, [\"background\"])\r\n                }));\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Button.prototype, \"_prepareChildren\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._prepareChildren.call(this);\r\n            if (this.isDirty(\"icon\")) {\r\n                var previous = this._prevSettings.icon;\r\n                var icon = this.get(\"icon\");\r\n                if (icon !== previous) {\r\n                    this._disposeProperty(\"icon\");\r\n                    if (previous) {\r\n                        previous.dispose();\r\n                    }\r\n                    if (icon) {\r\n                        this.children.push(icon);\r\n                    }\r\n                    this._prevSettings.icon = icon;\r\n                }\r\n            }\r\n            if (this.isDirty(\"label\")) {\r\n                var previous = this._prevSettings.label;\r\n                var label = this.get(\"label\");\r\n                if (label !== previous) {\r\n                    this._disposeProperty(\"label\");\r\n                    if (previous) {\r\n                        previous.dispose();\r\n                    }\r\n                    if (label) {\r\n                        this.children.push(label);\r\n                    }\r\n                    this._prevSettings.label = label;\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Button, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"Button\"\r\n    });\r\n    Object.defineProperty(Button, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: Container.classNames.concat([Button.className])\r\n    });\r\n    return Button;\r\n}(Container));\r\nexport { Button };\r\n//# sourceMappingURL=Button.js.map","import { __extends } from \"tslib\";\r\nimport { Container } from \"../../core/render/Container\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\n/**\r\n * A base class for all charts.\r\n */\r\nvar Chart = /** @class */ (function (_super) {\r\n    __extends(Chart, _super);\r\n    function Chart() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * A [[Container]] chart places its elements in.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(_this, \"chartContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: _this.children.push(Container.new(_this._root, { width: p100, height: p100, interactiveChildren: false }))\r\n        });\r\n        /**\r\n         * A [[Container]] chart places its bullets in.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(_this, \"bulletsContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Container.new(_this._root, { interactiveChildren: false, isMeasured: false, position: \"absolute\", width: p100, height: p100 })\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Chart, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"Chart\"\r\n    });\r\n    Object.defineProperty(Chart, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: Container.classNames.concat([Chart.className])\r\n    });\r\n    return Chart;\r\n}(Container));\r\nexport { Chart };\r\n//# sourceMappingURL=Chart.js.map","import { __extends } from \"tslib\";\r\nimport { Graphics } from \"./Graphics\";\r\n/**\r\n * Draws a circle.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nvar Circle = /** @class */ (function (_super) {\r\n    __extends(Circle, _super);\r\n    function Circle() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Circle.prototype, \"_beforeChanged\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._beforeChanged.call(this);\r\n            if (this.isDirty(\"radius\")) {\r\n                this._clear = true;\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Circle.prototype, \"_changed\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._changed.call(this);\r\n            if (this._clear) {\r\n                this._display.drawCircle(0, 0, this.get(\"radius\", 10));\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Circle, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"Circle\"\r\n    });\r\n    Object.defineProperty(Circle, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: Graphics.classNames.concat([Circle.className])\r\n    });\r\n    return Circle;\r\n}(Graphics));\r\nexport { Circle };\r\n//# sourceMappingURL=Circle.js.map","import { __awaiter, __extends, __generator } from \"tslib\";\r\nimport { Settings } from \"../util/Entity\";\r\nimport { Container } from \"./Container\";\r\nimport { ListData } from \"../util/Data\";\r\nimport * as $array from \"../util/Array\";\r\nimport * as $object from \"../util/Object\";\r\n/**\r\n * A base element that holds data bit (data item) for any [[Component]].\r\n */\r\nvar DataItem = /** @class */ (function (_super) {\r\n    __extends(DataItem, _super);\r\n    function DataItem(component, dataContext, settings) {\r\n        var _this = _super.call(this, settings) || this;\r\n        /**\r\n         * A data item's owener [[Component]].\r\n         */\r\n        Object.defineProperty(_this, \"component\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A reference to actual item in source data this item is based on.\r\n         */\r\n        Object.defineProperty(_this, \"dataContext\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * @todo requires description\r\n         */\r\n        Object.defineProperty(_this, \"bullets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A set of \"open\" values.\r\n         */\r\n        Object.defineProperty(_this, \"open\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A set of \"close\" values.\r\n         */\r\n        Object.defineProperty(_this, \"close\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        _this.dataContext = dataContext;\r\n        _this.component = component;\r\n        _this._settings.visible = true;\r\n        _this._checkDirty();\r\n        return _this;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(DataItem.prototype, \"markDirty\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this.component.markDirtyValues(this);\r\n        }\r\n    });\r\n    Object.defineProperty(DataItem.prototype, \"_startAnimation\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this.component._root._addAnimation(this);\r\n        }\r\n    });\r\n    Object.defineProperty(DataItem.prototype, \"_animationTime\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            return this.component._root.animationTime;\r\n        }\r\n    });\r\n    Object.defineProperty(DataItem.prototype, \"_dispose\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            if (this.component) {\r\n                this.component.disposeDataItem(this);\r\n            }\r\n            _super.prototype._dispose.call(this);\r\n        }\r\n    });\r\n    /**\r\n     * Shows a data item that's currently hidden.\r\n     */\r\n    Object.defineProperty(DataItem.prototype, \"show\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (duration) {\r\n            this.setRaw(\"visible\", true);\r\n            if (this.component) {\r\n                this.component.showDataItem(this, duration);\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * Hides a data item that's currently visible.\r\n     */\r\n    Object.defineProperty(DataItem.prototype, \"hide\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (duration) {\r\n            this.setRaw(\"visible\", false);\r\n            if (this.component) {\r\n                this.component.hideDataItem(this, duration);\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(DataItem.prototype, \"isHidden\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            return !this.get(\"visible\");\r\n        }\r\n    });\r\n    return DataItem;\r\n}(Settings));\r\nexport { DataItem };\r\n/**\r\n * A base class for elements that make use of data.\r\n */\r\nvar Component = /** @class */ (function (_super) {\r\n    __extends(Component, _super);\r\n    function Component() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        Object.defineProperty(_this, \"_data\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListData()\r\n        });\r\n        Object.defineProperty(_this, \"_dataItems\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(_this, \"_mainDataItems\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: _this._dataItems\r\n        });\r\n        Object.defineProperty(_this, \"valueFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(_this, \"fields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\"id\"]\r\n        });\r\n        Object.defineProperty(_this, \"_valueFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_valueFieldsF\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_fields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_fieldsF\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_valuesDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(_this, \"_dataChanged\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(_this, \"_dataGrouped\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * Indicates if the component has already been initialized.\r\n         */\r\n        Object.defineProperty(_this, \"inited\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Component.prototype, \"data\", {\r\n        /**\r\n         * @return  Data\r\n         */\r\n        get: function () {\r\n            return this._data;\r\n        },\r\n        /**\r\n         * Component's data.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/data/} for more info\r\n         */\r\n        set: function (data) {\r\n            data.incrementRef();\r\n            this._data.decrementRef();\r\n            this._data = data;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Component.prototype, \"_dispose\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._dispose.call(this);\r\n            this._data.decrementRef();\r\n        }\r\n    });\r\n    Object.defineProperty(Component.prototype, \"_onDataClear\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n        }\r\n    });\r\n    Object.defineProperty(Component.prototype, \"_afterNew\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            _super.prototype._afterNew.call(this);\r\n            this._data.incrementRef();\r\n            this._updateFields();\r\n            this._disposers.push(this.data.events.onAll(function (change) {\r\n                var dataItems = _this._mainDataItems;\r\n                _this.markDirtyValues();\r\n                _this._markDirtyGroup();\r\n                _this._dataChanged = true;\r\n                if (change.type === \"clear\") {\r\n                    $array.each(dataItems, function (dataItem) {\r\n                        dataItem.dispose();\r\n                    });\r\n                    dataItems.length = 0;\r\n                    _this._onDataClear();\r\n                }\r\n                else if (change.type === \"push\") {\r\n                    var dataItem = new DataItem(_this, change.newValue, _this._makeDataItem(change.newValue));\r\n                    dataItems.push(dataItem);\r\n                    _this.processDataItem(dataItem);\r\n                }\r\n                else if (change.type === \"setIndex\") {\r\n                    var dataItem_1 = dataItems[change.index];\r\n                    var properties_1 = _this._makeDataItem(change.newValue);\r\n                    $object.keys(properties_1).forEach(function (key) {\r\n                        dataItem_1.animate({\r\n                            key: key,\r\n                            to: properties_1[key],\r\n                            duration: _this.get(\"interpolationDuration\", 0),\r\n                            easing: _this.get(\"interpolationEasing\"),\r\n                        });\r\n                    });\r\n                    dataItem_1.dataContext = change.newValue;\r\n                }\r\n                else if (change.type === \"insertIndex\") {\r\n                    var dataItem = new DataItem(_this, change.newValue, _this._makeDataItem(change.newValue));\r\n                    dataItems.splice(change.index, 0, dataItem);\r\n                    _this.processDataItem(dataItem);\r\n                }\r\n                else if (change.type === \"removeIndex\") {\r\n                    var dataItem = dataItems[change.index];\r\n                    dataItem.dispose();\r\n                    dataItems.splice(change.index, 1);\r\n                }\r\n                else if (change.type === \"moveIndex\") {\r\n                    var dataItem = dataItems[change.oldIndex];\r\n                    dataItems.splice(change.oldIndex, 1);\r\n                    dataItems.splice(change.newIndex, 0, dataItem);\r\n                }\r\n                else {\r\n                    throw new Error(\"Unknown IStreamEvent type\");\r\n                }\r\n                _this._afterDataChange();\r\n            }));\r\n        }\r\n    });\r\n    Object.defineProperty(Component.prototype, \"_updateFields\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            if (this.valueFields) {\r\n                this._valueFields = [];\r\n                this._valueFieldsF = {};\r\n                $array.each(this.valueFields, function (key) {\r\n                    var field = _this.get((key + \"Field\"));\r\n                    if (field) {\r\n                        _this._valueFields.push(key);\r\n                        _this._valueFieldsF[key] = { fieldKey: key + \"Field\", workingKey: key + \"Working\" };\r\n                    }\r\n                });\r\n            }\r\n            if (this.fields) {\r\n                this._fields = [];\r\n                this._fieldsF = {};\r\n                $array.each(this.fields, function (key) {\r\n                    var field = _this.get((key + \"Field\"));\r\n                    if (field) {\r\n                        _this._fields.push(key);\r\n                        _this._fieldsF[key] = key + \"Field\";\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Component.prototype, \"dataItems\", {\r\n        /**\r\n         * A list of component's data items.\r\n         *\r\n         * @return  Data items\r\n         */\r\n        get: function () {\r\n            return this._dataItems;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Component.prototype, \"processDataItem\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (_dataItem) { }\r\n    });\r\n    Object.defineProperty(Component.prototype, \"_makeDataItem\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (data) {\r\n            var _this = this;\r\n            //const output: this[\"_dataItemSettings\"] = {};\r\n            var output = {}; // temporary to solve error\r\n            if (this._valueFields) {\r\n                $array.each(this._valueFields, function (key) {\r\n                    var field = _this.get((_this._valueFieldsF[key].fieldKey));\r\n                    output[key] = data[field];\r\n                    output[_this._valueFieldsF[key].workingKey] = output[key];\r\n                });\r\n            }\r\n            if (this._fields) {\r\n                $array.each(this._fields, function (key) {\r\n                    var field = _this.get((_this._fieldsF[key]));\r\n                    output[key] = data[field];\r\n                });\r\n            }\r\n            return output;\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(Component.prototype, \"makeDataItem\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (data) {\r\n            var dataItem = new DataItem(this, undefined, data);\r\n            this.processDataItem(dataItem);\r\n            return dataItem;\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(Component.prototype, \"pushDataItem\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (data) {\r\n            var dataItem = this.makeDataItem(data);\r\n            this._mainDataItems.push(dataItem);\r\n            return dataItem;\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(Component.prototype, \"disposeDataItem\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (_dataItem) {\r\n        }\r\n    });\r\n    /**\r\n     * Shows component's data item.\r\n     *\r\n     * @param   dataItem   Data item\r\n     * @param   _duration  Animation duration in milliseconds\r\n     * @return             Promise\r\n     */\r\n    Object.defineProperty(Component.prototype, \"showDataItem\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem, _duration) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    dataItem.set(\"visible\", true);\r\n                    return [2 /*return*/];\r\n                });\r\n            });\r\n        }\r\n    });\r\n    /**\r\n     * Hides component's data item.\r\n     *\r\n     * @param   dataItem   Data item\r\n     * @param   _duration  Animation duration in milliseconds\r\n     * @return             Promise\r\n     */\r\n    Object.defineProperty(Component.prototype, \"hideDataItem\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem, _duration) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    dataItem.set(\"visible\", false);\r\n                    return [2 /*return*/];\r\n                });\r\n            });\r\n        }\r\n    });\r\n    Object.defineProperty(Component.prototype, \"_clearDirty\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._clearDirty.call(this);\r\n            this._valuesDirty = false;\r\n        }\r\n    });\r\n    Object.defineProperty(Component.prototype, \"_afterDataChange\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n        }\r\n    });\r\n    Object.defineProperty(Component.prototype, \"_afterChanged\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._afterChanged.call(this);\r\n            if (this._dataChanged) {\r\n                var type = \"datavalidated\";\r\n                if (this.events.isEnabled(type)) {\r\n                    this.events.dispatch(type, { type: type, target: this });\r\n                }\r\n                this._dataChanged = false;\r\n            }\r\n            this.inited = true;\r\n        }\r\n    });\r\n    /**\r\n     * Forces a repaint of the element which relies on data.\r\n     *\r\n     * @since 5.0.21\r\n     */\r\n    Object.defineProperty(Component.prototype, \"markDirtyValues\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (_dataItem) {\r\n            this.markDirty();\r\n            this._valuesDirty = true;\r\n        }\r\n    });\r\n    Object.defineProperty(Component.prototype, \"_markDirtyGroup\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this._dataGrouped = false;\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(Component.prototype, \"markDirtySize\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this._sizeDirty = true;\r\n            this.markDirty();\r\n        }\r\n    });\r\n    Object.defineProperty(Component, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"Component\"\r\n    });\r\n    Object.defineProperty(Component, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: Container.classNames.concat([Component.className])\r\n    });\r\n    return Component;\r\n}(Container));\r\nexport { Component };\r\n//# sourceMappingURL=Component.js.map","import { __extends } from \"tslib\";\r\nimport { Children } from \"../util/Children\";\r\nimport { Percent } from \"../util/Percent\";\r\nimport { Sprite } from \"./Sprite\";\r\nimport { Rectangle } from \"./Rectangle\";\r\nimport { HorizontalLayout } from \"./HorizontalLayout\";\r\nimport { VerticalLayout } from \"./VerticalLayout\";\r\nimport { GridLayout } from \"./GridLayout\";\r\nimport { populateString } from \"../util/PopulateString\";\r\nimport * as $array from \"../util/Array\";\r\nimport * as $type from \"../util/Type\";\r\nimport * as $utils from \"../util/Utils\";\r\n/**\r\n * A basic element that can have child elements, maintain their layout, and\r\n * have a background.\r\n *\r\n * It can have any [[Sprite]] element as a child, from very basic shapes, to\r\n * full-fledged charts.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/} for more info\r\n * @important\r\n */\r\nvar Container = /** @class */ (function (_super) {\r\n    __extends(Container, _super);\r\n    function Container() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        Object.defineProperty(_this, \"_display\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: _this._root._renderer.makeContainer()\r\n        });\r\n        Object.defineProperty(_this, \"_childrenDisplay\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: _this._root._renderer.makeContainer()\r\n        });\r\n        /**\r\n         * List of Container's child elements.\r\n         */\r\n        Object.defineProperty(_this, \"children\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new Children(_this)\r\n        });\r\n        Object.defineProperty(_this, \"_percentageSizeChildren\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(_this, \"_percentagePositionChildren\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(_this, \"_prevWidth\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(_this, \"_prevHeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(_this, \"_contentWidth\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(_this, \"_contentHeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(_this, \"_contentMask\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_vsbd0\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_vsbd1\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Container.prototype, \"_afterNew\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._afterNew.call(this);\r\n            this._display.addChild(this._childrenDisplay);\r\n        }\r\n    });\r\n    Object.defineProperty(Container.prototype, \"_dispose\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            $array.eachReverse(this.allChildren(), function (child) {\r\n                child.dispose();\r\n            });\r\n            if (this.getPrivate(\"htmlElement\")) {\r\n                this._root._removeHTMLContent(this);\r\n            }\r\n            _super.prototype._dispose.call(this);\r\n        }\r\n    });\r\n    Object.defineProperty(Container.prototype, \"_changed\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._changed.call(this);\r\n            if (this.isDirty(\"interactiveChildren\")) {\r\n                this._display.interactiveChildren = this.get(\"interactiveChildren\", false);\r\n            }\r\n            if (this.isDirty(\"layout\")) {\r\n                this._prevWidth = 0;\r\n                this._prevHeight = 0;\r\n                this.markDirtyBounds();\r\n                if (this._prevSettings.layout) {\r\n                    this.children.each(function (child) {\r\n                        child.removePrivate(\"x\");\r\n                        child.removePrivate(\"y\");\r\n                    });\r\n                }\r\n            }\r\n            if (this.isDirty(\"paddingTop\") || this.isDirty(\"paddingBottom\") || this.isDirty(\"paddingLeft\") || this.isDirty(\"paddingRight\")) {\r\n                this.children.each(function (child) {\r\n                    child.markDirtyPosition();\r\n                });\r\n            }\r\n            if (this.isDirty(\"maskContent\")) {\r\n                var childrenDisplay = this._childrenDisplay;\r\n                var contentMask = this._contentMask;\r\n                if (this.get(\"maskContent\")) {\r\n                    if (!contentMask) {\r\n                        contentMask = Rectangle.new(this._root, {\r\n                            width: this.width(),\r\n                            height: this.height()\r\n                        });\r\n                        this._contentMask = contentMask;\r\n                        childrenDisplay.addChildAt(contentMask._display, 0);\r\n                        childrenDisplay.mask = contentMask._display;\r\n                    }\r\n                }\r\n                else {\r\n                    if (contentMask) {\r\n                        childrenDisplay.removeChild(contentMask._display);\r\n                        childrenDisplay.mask = null;\r\n                        contentMask.dispose();\r\n                        this._contentMask = undefined;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Container.prototype, \"_updateSize\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._updateSize.call(this);\r\n            $array.each(this._percentageSizeChildren, function (child) {\r\n                child._updateSize();\r\n            });\r\n            $array.each(this._percentagePositionChildren, function (child) {\r\n                child.markDirtyPosition();\r\n                child._updateSize();\r\n            });\r\n            this.updateBackground();\r\n        }\r\n    });\r\n    Object.defineProperty(Container.prototype, \"updateBackground\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var background = this.get(\"background\");\r\n            var bounds = this._localBounds;\r\n            if (bounds && !this.isHidden()) {\r\n                var x = bounds.left;\r\n                var y = bounds.top;\r\n                var w = bounds.right - x;\r\n                var h = bounds.bottom - y;\r\n                var maxWidth = this.get(\"maxWidth\");\r\n                var maxHeight = this.get(\"maxHeight\");\r\n                if (maxHeight) {\r\n                    if (h > maxHeight) {\r\n                        h = maxHeight;\r\n                    }\r\n                }\r\n                if (maxWidth) {\r\n                    if (w > maxWidth) {\r\n                        w = maxWidth;\r\n                    }\r\n                }\r\n                var width = this.width();\r\n                var height = this.height();\r\n                if (background) {\r\n                    background.setAll({ width: w, height: h, x: x, y: y });\r\n                    if (this._display.interactive) {\r\n                        background._display.interactive = true;\r\n                    }\r\n                }\r\n                var contentMask = this._contentMask;\r\n                if (contentMask) {\r\n                    contentMask.setAll({ width: width, height: height });\r\n                }\r\n                var verticalScrollbar = this.get(\"verticalScrollbar\");\r\n                if (verticalScrollbar) {\r\n                    verticalScrollbar.set(\"height\", height);\r\n                    verticalScrollbar.set(\"x\", width - verticalScrollbar.width() - verticalScrollbar.get(\"marginRight\", 0));\r\n                    verticalScrollbar.set(\"end\", verticalScrollbar.get(\"start\", 0) + height / this._contentHeight);\r\n                    var bg = verticalScrollbar.get(\"background\");\r\n                    if (bg) {\r\n                        bg.setAll({ width: verticalScrollbar.width(), height: height });\r\n                    }\r\n                    var visible = true;\r\n                    if (this._contentHeight <= height) {\r\n                        visible = false;\r\n                    }\r\n                    verticalScrollbar.setPrivate(\"visible\", visible);\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Container.prototype, \"_applyThemes\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            if (_super.prototype._applyThemes.call(this)) {\r\n                this.eachChildren(function (child) {\r\n                    child._applyThemes();\r\n                });\r\n                return true;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Container.prototype, \"_applyState\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (name) {\r\n            _super.prototype._applyState.call(this, name);\r\n            if (this.get(\"setStateOnChildren\")) {\r\n                this.eachChildren(function (child) {\r\n                    child.states.apply(name);\r\n                });\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Container.prototype, \"_applyStateAnimated\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (name, duration) {\r\n            _super.prototype._applyStateAnimated.call(this, name, duration);\r\n            if (this.get(\"setStateOnChildren\")) {\r\n                this.eachChildren(function (child) {\r\n                    child.states.applyAnimate(name, duration);\r\n                });\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * Returns container's inner width (width without padding) in pixels.\r\n     *\r\n     * @return Inner width (px)\r\n     */\r\n    Object.defineProperty(Container.prototype, \"innerWidth\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            return this.width() - this.get(\"paddingRight\", 0) - this.get(\"paddingLeft\", 0);\r\n        }\r\n    });\r\n    /**\r\n     * Returns container's inner height (height without padding) in pixels.\r\n     *\r\n     * @return Inner height (px)\r\n     */\r\n    Object.defineProperty(Container.prototype, \"innerHeight\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            return this.height() - this.get(\"paddingTop\", 0) - this.get(\"paddingBottom\", 0);\r\n        }\r\n    });\r\n    Object.defineProperty(Container.prototype, \"_getBounds\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var width = this.get(\"width\");\r\n            var height = this.get(\"height\");\r\n            var pWidth = this.getPrivate(\"width\");\r\n            var pHeight = this.getPrivate(\"height\");\r\n            var bounds = {\r\n                left: 0,\r\n                top: 0,\r\n                right: this.width(),\r\n                bottom: this.height(),\r\n            };\r\n            var layout = this.get(\"layout\");\r\n            var horizontal = false;\r\n            var vertical = false;\r\n            if (layout instanceof HorizontalLayout || layout instanceof GridLayout) {\r\n                horizontal = true;\r\n            }\r\n            if (layout instanceof VerticalLayout) {\r\n                vertical = true;\r\n            }\r\n            if ((width != null || pWidth != null) && (height != null || pHeight != null) && !this.get(\"verticalScrollbar\")) {\r\n                // void\r\n            }\r\n            else {\r\n                var m = Number.MAX_VALUE;\r\n                var l_1 = m;\r\n                var r_1 = -m;\r\n                var t_1 = m;\r\n                var b_1 = -m;\r\n                var paddingLeft = this.get(\"paddingLeft\", 0);\r\n                var paddingTop = this.get(\"paddingTop\", 0);\r\n                var paddingRight = this.get(\"paddingRight\", 0);\r\n                var paddingBottom = this.get(\"paddingBottom\", 0);\r\n                this.children.each(function (child) {\r\n                    if (child.get(\"position\") != \"absolute\" && child.get(\"isMeasured\")) {\r\n                        var childBounds = child.adjustedLocalBounds();\r\n                        var childX = child.x();\r\n                        var childY = child.y();\r\n                        var cl = childX + childBounds.left;\r\n                        var cr = childX + childBounds.right;\r\n                        var ct = childY + childBounds.top;\r\n                        var cb = childY + childBounds.bottom;\r\n                        if (horizontal) {\r\n                            cl -= child.get(\"marginLeft\", 0);\r\n                            cr += child.get(\"marginRight\", 0);\r\n                        }\r\n                        if (vertical) {\r\n                            ct -= child.get(\"marginTop\", 0);\r\n                            cb += child.get(\"marginBottom\", 0);\r\n                        }\r\n                        if (cl < l_1) {\r\n                            l_1 = cl;\r\n                        }\r\n                        if (cr > r_1) {\r\n                            r_1 = cr;\r\n                        }\r\n                        if (ct < t_1) {\r\n                            t_1 = ct;\r\n                        }\r\n                        if (cb > b_1) {\r\n                            b_1 = cb;\r\n                        }\r\n                    }\r\n                });\r\n                if (l_1 == m) {\r\n                    l_1 = 0;\r\n                }\r\n                if (r_1 == -m) {\r\n                    r_1 = 0;\r\n                }\r\n                if (t_1 == m) {\r\n                    t_1 = 0;\r\n                }\r\n                if (b_1 == -m) {\r\n                    b_1 = 0;\r\n                }\r\n                bounds.left = l_1 - paddingLeft;\r\n                bounds.top = t_1 - paddingTop;\r\n                bounds.right = r_1 + paddingRight;\r\n                bounds.bottom = b_1 + paddingBottom;\r\n            }\r\n            this._contentWidth = bounds.right - bounds.left;\r\n            this._contentHeight = bounds.bottom - bounds.top;\r\n            if ($type.isNumber(width)) {\r\n                bounds.left = 0;\r\n                bounds.right = width;\r\n            }\r\n            if ($type.isNumber(pWidth)) {\r\n                bounds.left = 0;\r\n                bounds.right = pWidth;\r\n            }\r\n            if ($type.isNumber(height)) {\r\n                bounds.top = 0;\r\n                bounds.bottom = height;\r\n            }\r\n            if ($type.isNumber(pHeight)) {\r\n                bounds.top = 0;\r\n                bounds.bottom = pHeight;\r\n            }\r\n            this._localBounds = bounds;\r\n        }\r\n    });\r\n    Object.defineProperty(Container.prototype, \"_updateBounds\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var layout = this.get(\"layout\");\r\n            if (layout) {\r\n                layout.updateContainer(this);\r\n            }\r\n            _super.prototype._updateBounds.call(this);\r\n            this.updateBackground();\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(Container.prototype, \"markDirty\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype.markDirty.call(this);\r\n            this._root._addDirtyParent(this);\r\n        }\r\n    });\r\n    Object.defineProperty(Container.prototype, \"_prepareChildren\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var innerWidth = this.innerWidth();\r\n            var innerHeight = this.innerHeight();\r\n            if (innerWidth != this._prevWidth || innerHeight != this._prevHeight) {\r\n                var layout = this.get(\"layout\");\r\n                var horizontal_1 = false;\r\n                var vertical_1 = false;\r\n                if (layout) {\r\n                    if (layout instanceof HorizontalLayout || layout instanceof GridLayout) {\r\n                        horizontal_1 = true;\r\n                    }\r\n                    if (layout instanceof VerticalLayout) {\r\n                        vertical_1 = true;\r\n                    }\r\n                }\r\n                $array.each(this._percentageSizeChildren, function (child) {\r\n                    if (!horizontal_1) {\r\n                        var width = child.get(\"width\");\r\n                        if (width instanceof Percent) {\r\n                            child.setPrivate(\"width\", width.value * innerWidth);\r\n                        }\r\n                    }\r\n                    if (!vertical_1) {\r\n                        var height = child.get(\"height\");\r\n                        if (height instanceof Percent) {\r\n                            child.setPrivate(\"height\", height.value * innerHeight);\r\n                        }\r\n                    }\r\n                });\r\n                $array.each(this._percentagePositionChildren, function (child) {\r\n                    child.markDirtyPosition();\r\n                    child.markDirtyBounds();\r\n                });\r\n                this._prevWidth = innerWidth;\r\n                this._prevHeight = innerHeight;\r\n                this._sizeDirty = true;\r\n                this.updateBackground();\r\n            }\r\n            this._handleStates();\r\n        }\r\n    });\r\n    Object.defineProperty(Container.prototype, \"_updateChildren\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            if (this.isDirty(\"html\")) {\r\n                var html = this.get(\"html\");\r\n                if (html && html !== \"\") {\r\n                    this._root._setHTMLContent(this, populateString(this, this.get(\"html\", \"\")));\r\n                }\r\n                else {\r\n                    this._root._removeHTMLContent(this);\r\n                }\r\n                this._root._positionHTMLElement(this);\r\n            }\r\n            if (this.isDirty(\"verticalScrollbar\")) {\r\n                var verticalScrollbar_1 = this.get(\"verticalScrollbar\");\r\n                if (verticalScrollbar_1) {\r\n                    verticalScrollbar_1._setParent(this);\r\n                    verticalScrollbar_1.children.removeValue(verticalScrollbar_1.startGrip);\r\n                    verticalScrollbar_1.children.removeValue(verticalScrollbar_1.endGrip);\r\n                    this.set(\"maskContent\", true);\r\n                    this.set(\"paddingRight\", verticalScrollbar_1.width() + verticalScrollbar_1.get(\"marginRight\", 0) + verticalScrollbar_1.get(\"marginLeft\", 0));\r\n                    var background = this.get(\"background\");\r\n                    if (!background) {\r\n                        background = this.set(\"background\", Rectangle.new(this._root, {\r\n                            themeTags: [\"background\"],\r\n                            fillOpacity: 0,\r\n                            fill: this._root.interfaceColors.get(\"alternativeBackground\")\r\n                        }));\r\n                    }\r\n                    this._vsbd0 = this.events.on(\"wheel\", function (event) {\r\n                        var wheelEvent = event.originalEvent;\r\n                        // Ignore wheel event if it is happening on a non-chart element, e.g. if\r\n                        // some page element is over the chart.\r\n                        if ($utils.isLocalEvent(wheelEvent, _this)) {\r\n                            wheelEvent.preventDefault();\r\n                        }\r\n                        else {\r\n                            return;\r\n                        }\r\n                        var shiftY = wheelEvent.deltaY / 5000;\r\n                        var start = verticalScrollbar_1.get(\"start\", 0);\r\n                        var end = verticalScrollbar_1.get(\"end\", 1);\r\n                        if (start + shiftY > 0 && end + shiftY < 1) {\r\n                            verticalScrollbar_1.set(\"start\", start + shiftY);\r\n                            verticalScrollbar_1.set(\"end\", end + shiftY);\r\n                        }\r\n                    });\r\n                    this._disposers.push(this._vsbd0);\r\n                    this._vsbd1 = verticalScrollbar_1.events.on(\"rangechanged\", function () {\r\n                        var h = _this._contentHeight;\r\n                        var childrenDisplay = _this._childrenDisplay;\r\n                        var contentMask = _this._contentMask;\r\n                        childrenDisplay.y = -verticalScrollbar_1.get(\"start\") * h;\r\n                        childrenDisplay.markDirtyLayer();\r\n                        if (contentMask) {\r\n                            contentMask._display.y = -childrenDisplay.y;\r\n                            childrenDisplay.mask = contentMask._display;\r\n                        }\r\n                    });\r\n                    this._disposers.push(this._vsbd1);\r\n                    this._display.addChild(verticalScrollbar_1._display);\r\n                }\r\n                else {\r\n                    var previous = this._prevSettings.verticalScrollbar;\r\n                    if (previous) {\r\n                        this._display.removeChild(previous._display);\r\n                        if (this._vsbd0) {\r\n                            this._vsbd0.dispose();\r\n                        }\r\n                        if (this._vsbd1) {\r\n                            this._vsbd1.dispose();\r\n                        }\r\n                        var childrenDisplay = this._childrenDisplay;\r\n                        childrenDisplay.y = 0;\r\n                        this.setPrivate(\"height\", undefined);\r\n                        this.set(\"maskContent\", false);\r\n                        this.set(\"paddingRight\", undefined);\r\n                    }\r\n                }\r\n            }\r\n            if (this.isDirty(\"background\")) {\r\n                // TODO maybe this should dispose ?\r\n                var previous = this._prevSettings[\"background\"];\r\n                if (previous) {\r\n                    this._display.removeChild(previous._display);\r\n                }\r\n                var background = this.get(\"background\");\r\n                if (background instanceof Sprite) {\r\n                    background.set(\"isMeasured\", false);\r\n                    background._setParent(this);\r\n                    this._display.addChildAt(background._display, 0);\r\n                }\r\n            }\r\n            if (this.isDirty(\"mask\")) {\r\n                var mask = this.get(\"mask\");\r\n                var previous = this._prevSettings[\"mask\"];\r\n                if (previous) {\r\n                    this._display.removeChild(previous._display);\r\n                    if (previous != mask) {\r\n                        previous.dispose();\r\n                    }\r\n                }\r\n                if (mask) {\r\n                    var parent = mask.parent;\r\n                    if (parent) {\r\n                        parent.children.removeValue(mask);\r\n                    }\r\n                    mask._setParent(this);\r\n                    this._display.addChildAt(mask._display, 0);\r\n                    this._childrenDisplay.mask = mask._display;\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Container.prototype, \"_processTemplateField\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._processTemplateField.call(this);\r\n            this.children.each(function (child) {\r\n                child._processTemplateField();\r\n            });\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(Container.prototype, \"walkChildren\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (f) {\r\n            this.children.each(function (child) {\r\n                if (child instanceof Container) {\r\n                    child.walkChildren(f);\r\n                }\r\n                f(child);\r\n            });\r\n        }\r\n    });\r\n    Object.defineProperty(Container.prototype, \"eachChildren\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (f) {\r\n            var background = this.get(\"background\");\r\n            if (background) {\r\n                f(background);\r\n            }\r\n            var verticalScrollbar = this.get(\"verticalScrollbar\");\r\n            if (verticalScrollbar) {\r\n                f(verticalScrollbar);\r\n            }\r\n            var mask = this.get(\"mask\");\r\n            if (mask) {\r\n                f(mask);\r\n            }\r\n            this.children.values.forEach(function (child) {\r\n                f(child);\r\n            });\r\n        }\r\n    });\r\n    Object.defineProperty(Container.prototype, \"allChildren\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var output = [];\r\n            this.eachChildren(function (x) {\r\n                output.push(x);\r\n            });\r\n            return output;\r\n        }\r\n    });\r\n    Object.defineProperty(Container.prototype, \"_setDataItem\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem) {\r\n            var updated = (dataItem !== this._dataItem);\r\n            _super.prototype._setDataItem.call(this, dataItem);\r\n            var html = this.get(\"html\", \"\");\r\n            if (html && html !== \"\" && updated) {\r\n                this._root._setHTMLContent(this, populateString(this, html));\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Container, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"Container\"\r\n    });\r\n    Object.defineProperty(Container, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: Sprite.classNames.concat([Container.className])\r\n    });\r\n    return Container;\r\n}(Sprite));\r\nexport { Container };\r\n//# sourceMappingURL=Container.js.map","import { __extends } from \"tslib\";\r\nimport { Graphics } from \"./Graphics\";\r\n/**\r\n * Draws a Ellipse.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nvar Ellipse = /** @class */ (function (_super) {\r\n    __extends(Ellipse, _super);\r\n    function Ellipse() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Ellipse.prototype, \"_beforeChanged\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._beforeChanged.call(this);\r\n            if (this.isDirty(\"radiusX\") || this.isDirty(\"radiusY\") || this.isDirty(\"rotation\")) {\r\n                this._clear = true;\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Ellipse.prototype, \"_changed\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._changed.call(this);\r\n            if (this._clear) {\r\n                this._display.drawEllipse(0, 0, Math.abs(this.get(\"radiusX\")), Math.abs(this.get(\"radiusY\")));\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Ellipse, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"Ellipse\"\r\n    });\r\n    Object.defineProperty(Ellipse, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: Graphics.classNames.concat([Ellipse.className])\r\n    });\r\n    return Ellipse;\r\n}(Graphics));\r\nexport { Ellipse };\r\n//# sourceMappingURL=Ellipse.js.map","import { __extends } from \"tslib\";\r\nimport { PicturePattern } from \"../render/patterns/PicturePattern\";\r\nimport { Sprite } from \"./Sprite\";\r\nimport { BlendMode } from \"./backend/Renderer\";\r\nimport * as $type from \"../util/Type\";\r\nimport * as $array from \"../util/Array\";\r\nexport var visualSettings = [\"fill\", \"fillOpacity\", \"stroke\", \"strokeWidth\", \"strokeOpacity\", \"fillPattern\", \"strokePattern\", \"fillGradient\", \"strokeGradient\", \"strokeDasharray\", \"strokeDashoffset\"];\r\n/**\r\n * Base class used for drawing shapes.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nvar Graphics = /** @class */ (function (_super) {\r\n    __extends(Graphics, _super);\r\n    function Graphics() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        Object.defineProperty(_this, \"_display\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: _this._root._renderer.makeGraphics()\r\n        });\r\n        Object.defineProperty(_this, \"_clear\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Graphics.prototype, \"_beforeChanged\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            _super.prototype._beforeChanged.call(this);\r\n            if (this.isDirty(\"draw\") || this.isDirty(\"svgPath\")) {\r\n                this.markDirtyBounds();\r\n            }\r\n            if (this.isDirty(\"fill\") || this.isDirty(\"stroke\") || this.isDirty(\"visible\") || this.isDirty(\"forceHidden\") || this.isDirty(\"fillGradient\") || this.isDirty(\"strokeGradient\") || this.isDirty(\"fillPattern\") || this.isDirty(\"strokePattern\") || this.isDirty(\"fillOpacity\") || this.isDirty(\"strokeOpacity\") || this.isDirty(\"strokeWidth\") || this.isDirty(\"draw\") || this.isDirty(\"blendMode\") || this.isDirty(\"strokeDasharray\") || this.isDirty(\"strokeDashoffset\") || this.isDirty(\"svgPath\") || this.isDirty(\"lineJoin\") || this.isDirty(\"shadowColor\") || this.isDirty(\"shadowBlur\") || this.isDirty(\"shadowOffsetX\") || this.isDirty(\"shadowOffsetY\")) {\r\n                this._clear = true;\r\n            }\r\n            if (this.isDirty(\"fillGradient\")) {\r\n                var gradient = this.get(\"fillGradient\");\r\n                if (gradient) {\r\n                    this._display.isMeasured = true;\r\n                    var gradientTarget = gradient.get(\"target\");\r\n                    if (gradientTarget) {\r\n                        this._disposers.push(gradientTarget.events.on(\"boundschanged\", function () {\r\n                            _this._markDirtyKey(\"fill\");\r\n                        }));\r\n                        this._disposers.push(gradientTarget.events.on(\"positionchanged\", function () {\r\n                            _this._markDirtyKey(\"fill\");\r\n                        }));\r\n                    }\r\n                }\r\n            }\r\n            if (this.isDirty(\"strokeGradient\")) {\r\n                var gradient = this.get(\"strokeGradient\");\r\n                if (gradient) {\r\n                    this._display.isMeasured = true;\r\n                    var gradientTarget = gradient.get(\"target\");\r\n                    if (gradientTarget) {\r\n                        this._disposers.push(gradientTarget.events.on(\"boundschanged\", function () {\r\n                            _this._markDirtyKey(\"stroke\");\r\n                        }));\r\n                        this._disposers.push(gradientTarget.events.on(\"positionchanged\", function () {\r\n                            _this._markDirtyKey(\"stroke\");\r\n                        }));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Graphics.prototype, \"_changed\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._changed.call(this);\r\n            if (this._clear) {\r\n                this.markDirtyBounds();\r\n                this.markDirtyLayer();\r\n                this._display.clear();\r\n                var strokeDasharray = this.get(\"strokeDasharray\");\r\n                if ($type.isNumber(strokeDasharray)) {\r\n                    if (strokeDasharray < 0.5) {\r\n                        strokeDasharray = [0];\r\n                    }\r\n                    else {\r\n                        strokeDasharray = [strokeDasharray];\r\n                    }\r\n                }\r\n                this._display.setLineDash(strokeDasharray);\r\n                var strokeDashoffset = this.get(\"strokeDashoffset\");\r\n                if (strokeDashoffset) {\r\n                    this._display.setLineDashOffset(strokeDashoffset);\r\n                }\r\n                var blendMode = this.get(\"blendMode\", BlendMode.NORMAL);\r\n                this._display.blendMode = blendMode;\r\n                var draw = this.get(\"draw\");\r\n                if (draw) {\r\n                    draw(this._display, this);\r\n                }\r\n                var svgPath = this.get(\"svgPath\");\r\n                if (svgPath != null) {\r\n                    this._display.svgPath(svgPath);\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Graphics.prototype, \"_afterChanged\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            _super.prototype._afterChanged.call(this);\r\n            if (this._clear) {\r\n                var fill_1 = this.get(\"fill\");\r\n                var fillGradient = this.get(\"fillGradient\");\r\n                var fillPattern = this.get(\"fillPattern\");\r\n                var fillOpacity_1 = this.get(\"fillOpacity\");\r\n                var stroke_1 = this.get(\"stroke\");\r\n                var strokeGradient = this.get(\"strokeGradient\");\r\n                var strokePattern = this.get(\"strokePattern\");\r\n                var shadowColor = this.get(\"shadowColor\");\r\n                var shadowBlur = this.get(\"shadowBlur\");\r\n                var shadowOffsetX = this.get(\"shadowOffsetX\");\r\n                var shadowOffsetY = this.get(\"shadowOffsetY\");\r\n                var shadowOpacity = this.get(\"shadowOpacity\");\r\n                //const bounds = this._display.getLocalBounds();\r\n                if (shadowColor && (shadowBlur || shadowOffsetX || shadowOffsetY)) {\r\n                    this._display.shadow(shadowColor, shadowBlur, shadowOffsetX, shadowOffsetY, shadowOpacity);\r\n                }\r\n                if (fillPattern) {\r\n                    var changed = false;\r\n                    if (fill_1 && (!fillPattern.get(\"fill\") || fillPattern.get(\"fillInherited\"))) {\r\n                        fillPattern.set(\"fill\", fill_1);\r\n                        fillPattern.set(\"fillInherited\", true);\r\n                        changed = true;\r\n                    }\r\n                    if (stroke_1 && (!fillPattern.get(\"color\") || fillPattern.get(\"colorInherited\"))) {\r\n                        fillPattern.set(\"color\", stroke_1);\r\n                        fillPattern.set(\"colorInherited\", true);\r\n                        changed = true;\r\n                    }\r\n                    if (changed) {\r\n                        // @todo: is this OK?\r\n                        fillPattern._changed();\r\n                    }\r\n                    var pattern = fillPattern.pattern;\r\n                    if (pattern) {\r\n                        this._display.beginFill(pattern, fillOpacity_1);\r\n                        this._display.endFill();\r\n                        if (fillPattern instanceof PicturePattern) {\r\n                            fillPattern.events.once(\"loaded\", function () {\r\n                                _this._clear = true;\r\n                                _this.markDirty();\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n                else if (fillGradient) {\r\n                    if (fill_1) {\r\n                        var stops = fillGradient.get(\"stops\", []);\r\n                        if (stops.length) {\r\n                            $array.each(stops, function (stop) {\r\n                                if ((!stop.color || stop.colorInherited) && fill_1) {\r\n                                    stop.color = fill_1;\r\n                                    stop.colorInherited = true;\r\n                                }\r\n                                if (stop.opacity == null || stop.opacityInherited) {\r\n                                    stop.opacity = fillOpacity_1;\r\n                                    stop.opacityInherited = true;\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                    var gradient = fillGradient.getFill(this);\r\n                    if (gradient) {\r\n                        this._display.beginFill(gradient, fillOpacity_1);\r\n                        this._display.endFill();\r\n                    }\r\n                }\r\n                else if (fill_1) {\r\n                    this._display.beginFill(fill_1, fillOpacity_1);\r\n                    this._display.endFill();\r\n                }\r\n                if (stroke_1 || strokeGradient || strokePattern) {\r\n                    var strokeOpacity_1 = this.get(\"strokeOpacity\");\r\n                    var strokeWidth = this.get(\"strokeWidth\", 1);\r\n                    var lineJoin = this.get(\"lineJoin\");\r\n                    if (strokePattern) {\r\n                        var changed = false;\r\n                        if (stroke_1 && (!strokePattern.get(\"color\") || strokePattern.get(\"colorInherited\"))) {\r\n                            strokePattern.set(\"color\", stroke_1);\r\n                            strokePattern.set(\"colorInherited\", true);\r\n                            changed = true;\r\n                        }\r\n                        if (changed) {\r\n                            // @todo: is this OK?\r\n                            strokePattern._changed();\r\n                        }\r\n                        var pattern = strokePattern.pattern;\r\n                        if (pattern) {\r\n                            this._display.lineStyle(strokeWidth, pattern, strokeOpacity_1, lineJoin);\r\n                            this._display.endStroke();\r\n                            if (strokePattern instanceof PicturePattern) {\r\n                                strokePattern.events.once(\"loaded\", function () {\r\n                                    _this._clear = true;\r\n                                    _this.markDirty();\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                    else if (strokeGradient) {\r\n                        var stops = strokeGradient.get(\"stops\", []);\r\n                        if (stops.length) {\r\n                            $array.each(stops, function (stop) {\r\n                                if ((!stop.color || stop.colorInherited) && stroke_1) {\r\n                                    stop.color = stroke_1;\r\n                                    stop.colorInherited = true;\r\n                                }\r\n                                if (stop.opacity == null || stop.opacityInherited) {\r\n                                    stop.opacity = strokeOpacity_1;\r\n                                    stop.opacityInherited = true;\r\n                                }\r\n                            });\r\n                        }\r\n                        var gradient = strokeGradient.getFill(this);\r\n                        if (gradient) {\r\n                            this._display.lineStyle(strokeWidth, gradient, strokeOpacity_1, lineJoin);\r\n                            this._display.endStroke();\r\n                        }\r\n                    }\r\n                    else if (stroke_1) {\r\n                        this._display.lineStyle(strokeWidth, stroke_1, strokeOpacity_1, lineJoin);\r\n                        this._display.endStroke();\r\n                    }\r\n                }\r\n            }\r\n            this._clear = false;\r\n        }\r\n    });\r\n    Object.defineProperty(Graphics, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"Graphics\"\r\n    });\r\n    Object.defineProperty(Graphics, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: Sprite.classNames.concat([Graphics.className])\r\n    });\r\n    return Graphics;\r\n}(Sprite));\r\nexport { Graphics };\r\n//# sourceMappingURL=Graphics.js.map","import { __extends } from \"tslib\";\r\nimport { Layout, eachChildren } from \"./Layout\";\r\nimport * as $array from \"../util/Array\";\r\nimport * as $math from \"../util/Math\";\r\n/**\r\n * A grid children layout for [[Container]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/#Layout} for more info\r\n */\r\nvar GridLayout = /** @class */ (function (_super) {\r\n    __extends(GridLayout, _super);\r\n    function GridLayout() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(GridLayout.prototype, \"_afterNew\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this._setRawDefault(\"maxColumns\", Number.MAX_VALUE);\r\n            _super.prototype._afterNew.call(this);\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(GridLayout.prototype, \"updateContainer\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (container) {\r\n            var paddingLeft = container.get(\"paddingLeft\", 0);\r\n            var paddingRight = container.get(\"paddingRight\", 0);\r\n            var paddingTop = container.get(\"paddingTop\", 0);\r\n            var availableWidth = container.maxWidth() - paddingLeft - paddingRight;\r\n            var minCellWidth = availableWidth;\r\n            var maxCellWidth = 1;\r\n            eachChildren(container, function (child) {\r\n                if (child.get(\"visible\") && child.getPrivate(\"visible\") && !child.get(\"forceHidden\")) {\r\n                    if (child.get(\"position\") != \"absolute\") {\r\n                        var childWidth = child.width();\r\n                        if (childWidth < minCellWidth) {\r\n                            minCellWidth = childWidth;\r\n                        }\r\n                        if (childWidth > maxCellWidth) {\r\n                            maxCellWidth = childWidth;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            minCellWidth = $math.fitToRange(minCellWidth, 1, availableWidth);\r\n            maxCellWidth = $math.fitToRange(maxCellWidth, 1, availableWidth);\r\n            var columnCount = 1;\r\n            if (this.get(\"fixedWidthGrid\")) {\r\n                columnCount = availableWidth / maxCellWidth;\r\n            }\r\n            else {\r\n                columnCount = availableWidth / minCellWidth;\r\n            }\r\n            columnCount = Math.max(1, Math.floor(columnCount));\r\n            columnCount = Math.min(this.get(\"maxColumns\", Number.MAX_VALUE), columnCount);\r\n            var columnWidths = this.getColumnWidths(container, columnCount, maxCellWidth, availableWidth);\r\n            var prevY = paddingTop;\r\n            var column = 0;\r\n            var maxColumnHeight = 0;\r\n            columnCount = columnWidths.length;\r\n            var prevX = paddingLeft;\r\n            eachChildren(container, function (child) {\r\n                if (child.get(\"position\") == \"relative\" && child.isVisible()) {\r\n                    var marginTop = child.get(\"marginTop\", 0);\r\n                    var marginBottom = child.get(\"marginBottom\", 0);\r\n                    var bounds = child.adjustedLocalBounds();\r\n                    var marginLeft = child.get(\"marginLeft\", 0);\r\n                    var marginRight = child.get(\"marginRight\", 0);\r\n                    var x = prevX + marginLeft - bounds.left;\r\n                    var y = prevY + marginTop - bounds.top;\r\n                    child.setPrivate(\"x\", x);\r\n                    child.setPrivate(\"y\", y);\r\n                    prevX += columnWidths[column] + marginRight;\r\n                    maxColumnHeight = Math.max(maxColumnHeight, child.height() + marginTop + marginBottom);\r\n                    column++;\r\n                    if (column >= columnCount) {\r\n                        column = 0;\r\n                        prevX = paddingLeft;\r\n                        prevY += maxColumnHeight;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(GridLayout.prototype, \"getColumnWidths\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (container, columnCount, maxCellWidth, availableWidth) {\r\n            var _this = this;\r\n            var totalWidth = 0;\r\n            var columnWidths = [];\r\n            var column = 0;\r\n            eachChildren(container, function (child) {\r\n                var bounds = child.adjustedLocalBounds();\r\n                if (child.get(\"position\") != \"absolute\" && child.isVisible()) {\r\n                    if (_this.get(\"fixedWidthGrid\")) {\r\n                        columnWidths[column] = maxCellWidth;\r\n                    }\r\n                    else {\r\n                        columnWidths[column] = Math.max(columnWidths[column] | 0, bounds.right - bounds.left + child.get(\"marginLeft\", 0) + child.get(\"marginRight\", 0));\r\n                    }\r\n                    if (column < container.children.length - 1) {\r\n                        column++;\r\n                        if (column == columnCount) {\r\n                            column = 0;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            $array.each(columnWidths, function (w) {\r\n                totalWidth += w;\r\n            });\r\n            if (totalWidth > availableWidth) {\r\n                if (columnCount > 2) {\r\n                    columnCount -= 1;\r\n                    return this.getColumnWidths(container, columnCount, maxCellWidth, availableWidth);\r\n                }\r\n                else {\r\n                    return [availableWidth];\r\n                }\r\n            }\r\n            return columnWidths;\r\n        }\r\n    });\r\n    Object.defineProperty(GridLayout, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"GridLayout\"\r\n    });\r\n    Object.defineProperty(GridLayout, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: Layout.classNames.concat([GridLayout.className])\r\n    });\r\n    return GridLayout;\r\n}(Layout));\r\nexport { GridLayout };\r\n//# sourceMappingURL=GridLayout.js.map","import { __extends } from \"tslib\";\r\nimport { Container } from \"./Container\";\r\nimport { Label } from \"../../core/render/Label\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\nimport { RoundedRectangle } from \"../../core/render/RoundedRectangle\";\r\nimport { Template } from \"../../core/util/Template\";\r\nimport { ListTemplate } from \"../../core/util/List\";\r\nimport { Color } from \"../../core/util/Color\";\r\nimport { Tooltip } from \"../../core/render/Tooltip\";\r\nimport { LinearGradient } from \"../../core/render/gradients/LinearGradient\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\nimport * as $type from \"../../core/util/Type\";\r\n/**\r\n * Heat legend.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/legend/heat-legend/} for more info\r\n */\r\nvar HeatLegend = /** @class */ (function (_super) {\r\n    __extends(HeatLegend, _super);\r\n    function HeatLegend() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * A [[Container]] that all labels are placed in.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(_this, \"labelContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: _this.children.push(Container.new(_this._root, {}))\r\n        });\r\n        /**\r\n         * A [[Container]] that all markers are placed in.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(_this, \"markerContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: _this.children.push(Container.new(_this._root, {}))\r\n        });\r\n        /**\r\n         * A start [[Label]].\r\n         *\r\n         * @default Label.new()\r\n         */\r\n        Object.defineProperty(_this, \"startLabel\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: _this.labelContainer.children.push(Label.new(_this._root, { themeTags: [\"start\"] }))\r\n        });\r\n        /**\r\n         * An end [[Label]].\r\n         *\r\n         * @default Label.new()\r\n         */\r\n        Object.defineProperty(_this, \"endLabel\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: _this.labelContainer.children.push(Label.new(_this._root, { themeTags: [\"end\"] }))\r\n        });\r\n        /**\r\n         * List of rectangle elements used for default legend markers.\r\n         *\r\n         * @default new ListTemplate<RoundedRectangle>\r\n         */\r\n        Object.defineProperty(_this, \"markers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), function () { return RoundedRectangle._new(_this._root, {\r\n                themeTags: $utils.mergeTags(_this.markers.template.get(\"themeTags\", []), [_this.get(\"orientation\"), \"heatlegend\", \"marker\"])\r\n            }, [_this.markers.template]); })\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(HeatLegend.prototype, \"_afterNew\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"heatlegend\", this._settings.orientation]);\r\n            _super.prototype._afterNew.call(this);\r\n            this.set(\"tooltip\", Tooltip.new(this._root, {\r\n                themeTags: [\"heatlegend\"]\r\n            }));\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(HeatLegend.prototype, \"makeMarker\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var marker = this.markers.make();\r\n            marker.states.create(\"disabled\", {});\r\n            return marker;\r\n        }\r\n    });\r\n    /**\r\n     * Moves and shows tooltip at specific value.\r\n     *\r\n     * Can also specify optional text to show in tooltip, as well as the color.\r\n     *\r\n     * @param  value  Value\r\n     * @param  text   Text\r\n     * @param  color  Color\r\n     */\r\n    Object.defineProperty(HeatLegend.prototype, \"showValue\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (value, text, color) {\r\n            var tooltip = this.getTooltip();\r\n            if (tooltip && $type.isNumber(value)) {\r\n                var startValue = this.get(\"startValue\", 0);\r\n                var endValue = this.get(\"endValue\", 1);\r\n                var c = (value - startValue) / (endValue - startValue);\r\n                var startColor = this.get(\"startColor\");\r\n                var endColor = this.get(\"endColor\");\r\n                if (!text) {\r\n                    text = this.getNumberFormatter().format(value);\r\n                }\r\n                if (!color) {\r\n                    color = Color.interpolate(c, startColor, endColor);\r\n                }\r\n                tooltip.label.set(\"text\", text);\r\n                var p = void 0;\r\n                if (this.get(\"orientation\") == \"vertical\") {\r\n                    p = this.markerContainer.toGlobal({ x: 0, y: this.innerHeight() * (1 - c) });\r\n                }\r\n                else {\r\n                    p = this.markerContainer.toGlobal({ x: this.innerWidth() * c, y: 0 });\r\n                }\r\n                var background = tooltip.get(\"background\");\r\n                if (background) {\r\n                    background.set(\"fill\", Color.interpolate(c, startColor, endColor));\r\n                }\r\n                tooltip.set(\"pointTo\", p);\r\n                tooltip.show();\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(HeatLegend.prototype, \"_prepareChildren\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._prepareChildren.call(this);\r\n            var labelContainer = this.labelContainer;\r\n            var orientation = this.get(\"orientation\");\r\n            var startLabel = this.startLabel;\r\n            var endLabel = this.endLabel;\r\n            var tooltip = this.getTooltip();\r\n            if (this.isDirty(\"orientation\")) {\r\n                if (orientation == \"vertical\") {\r\n                    this.markerContainer.setAll({ layout: this._root.verticalLayout, height: p100 });\r\n                    this.set(\"layout\", this._root.horizontalLayout);\r\n                    startLabel.setAll({ y: p100, x: undefined, centerY: p100, centerX: p100 });\r\n                    endLabel.setAll({ y: 0, x: undefined, centerY: 0, centerX: p100 });\r\n                    labelContainer.setAll({ height: p100, width: undefined });\r\n                    if (tooltip) {\r\n                        tooltip.set(\"pointerOrientation\", \"horizontal\");\r\n                    }\r\n                }\r\n                else {\r\n                    this.markerContainer.setAll({ layout: this._root.horizontalLayout, width: p100 });\r\n                    this.set(\"layout\", this._root.verticalLayout);\r\n                    startLabel.setAll({ x: 0, y: undefined, centerX: 0, centerY: 0 });\r\n                    endLabel.setAll({ x: p100, y: undefined, centerX: p100, centerY: 0 });\r\n                    labelContainer.setAll({ width: p100, height: undefined });\r\n                    if (tooltip) {\r\n                        tooltip.set(\"pointerOrientation\", \"vertical\");\r\n                    }\r\n                }\r\n            }\r\n            if (this.isDirty(\"stepCount\")) {\r\n                var stepCount = this.get(\"stepCount\", 1);\r\n                var startColor = this.get(\"startColor\");\r\n                var endColor = this.get(\"endColor\");\r\n                this.markerContainer.children.clear();\r\n                if (stepCount > 1) {\r\n                    for (var i = 0; i < stepCount; i++) {\r\n                        var marker = this.makeMarker();\r\n                        if (orientation == \"vertical\") {\r\n                            this.markerContainer.children.moveValue(marker, 0);\r\n                        }\r\n                        else {\r\n                            this.markerContainer.children.push(marker);\r\n                        }\r\n                        if (startColor && endColor) {\r\n                            marker.set(\"fill\", Color.interpolate(i / stepCount, startColor, endColor));\r\n                        }\r\n                    }\r\n                }\r\n                else if (stepCount == 1) {\r\n                    var marker = this.makeMarker();\r\n                    this.markerContainer.children.push(marker);\r\n                    var gradient = LinearGradient.new(this._root, { stops: [{ color: startColor }, { color: endColor }] });\r\n                    if (orientation == \"vertical\") {\r\n                        gradient.set(\"rotation\", 90);\r\n                        var stops = gradient.get(\"stops\");\r\n                        if (stops) {\r\n                            stops.reverse();\r\n                        }\r\n                    }\r\n                    else {\r\n                        gradient.set(\"rotation\", 0);\r\n                    }\r\n                    if (startColor && endColor) {\r\n                        marker.set(\"fillGradient\", gradient);\r\n                    }\r\n                }\r\n            }\r\n            if (this.isDirty(\"startText\") || this.isDirty(\"startValue\")) {\r\n                startLabel.set(\"text\", this.get(\"startText\", this.getNumberFormatter().format(this.get(\"startValue\", 0))));\r\n            }\r\n            if (this.isDirty(\"endText\") || this.isDirty(\"endValue\")) {\r\n                endLabel.set(\"text\", this.get(\"endText\", this.getNumberFormatter().format(this.get(\"endValue\", 1))));\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(HeatLegend, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"HeatLegend\"\r\n    });\r\n    Object.defineProperty(HeatLegend, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: Container.classNames.concat([HeatLegend.className])\r\n    });\r\n    return HeatLegend;\r\n}(Container));\r\nexport { HeatLegend };\r\n//# sourceMappingURL=HeatLegend.js.map","import { __extends } from \"tslib\";\r\nimport { Layout, eachChildren } from \"./Layout\";\r\nimport * as $type from \"../util/Type\";\r\nimport { Percent } from \"../util/Percent\";\r\n/**\r\n * A horizontal children layout for [[Container]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/#Layout} for more info\r\n */\r\nvar HorizontalLayout = /** @class */ (function (_super) {\r\n    __extends(HorizontalLayout, _super);\r\n    function HorizontalLayout() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(HorizontalLayout.prototype, \"updateContainer\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (container) {\r\n            var paddingLeft = container.get(\"paddingLeft\", 0);\r\n            var availableWidth = container.innerWidth();\r\n            var totalPercent = 0;\r\n            eachChildren(container, function (child) {\r\n                if (child.isVisible()) {\r\n                    if (child.get(\"position\") == \"relative\") {\r\n                        var childWidth = child.get(\"width\");\r\n                        if (childWidth instanceof Percent) {\r\n                            totalPercent += childWidth.value;\r\n                            var w = availableWidth * childWidth.value;\r\n                            var minWidth = child.get(\"minWidth\", child.getPrivate(\"minWidth\", -Infinity));\r\n                            if (minWidth > w) {\r\n                                availableWidth -= minWidth;\r\n                                totalPercent -= childWidth.value;\r\n                            }\r\n                            var maxWidth = child.get(\"maxWidth\", child.getPrivate(\"maxWidth\", Infinity));\r\n                            if (w > maxWidth) {\r\n                                availableWidth -= maxWidth;\r\n                                totalPercent -= childWidth.value;\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (!$type.isNumber(childWidth)) {\r\n                                childWidth = child.width();\r\n                            }\r\n                            availableWidth -= childWidth + child.get(\"marginLeft\", 0) + child.get(\"marginRight\", 0);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            if (availableWidth < 0) {\r\n                availableWidth = 0.01;\r\n            }\r\n            //if (availableWidth > 0) {\r\n            eachChildren(container, function (child) {\r\n                if (child.isVisible()) {\r\n                    if (child.get(\"position\") == \"relative\") {\r\n                        var childWidth = child.get(\"width\");\r\n                        if (childWidth instanceof Percent) {\r\n                            var privateWidth = availableWidth * childWidth.value / totalPercent - child.get(\"marginLeft\", 0) - child.get(\"marginRight\", 0);\r\n                            var minWidth = child.get(\"minWidth\", child.getPrivate(\"minWidth\", -Infinity));\r\n                            var maxWidth = child.get(\"maxWidth\", child.getPrivate(\"maxWidth\", Infinity));\r\n                            privateWidth = Math.min(Math.max(minWidth, privateWidth), maxWidth);\r\n                            child.setPrivate(\"width\", privateWidth);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            //}\r\n            var prevX = paddingLeft;\r\n            eachChildren(container, function (child) {\r\n                if (child.get(\"position\") == \"relative\") {\r\n                    if (child.isVisible()) {\r\n                        var bounds = child.adjustedLocalBounds();\r\n                        var marginLeft = child.get(\"marginLeft\", 0);\r\n                        var marginRight = child.get(\"marginRight\", 0);\r\n                        var maxWidth = child.get(\"maxWidth\");\r\n                        var left = bounds.left;\r\n                        var right = bounds.right;\r\n                        if (maxWidth) {\r\n                            if (right - left > maxWidth) {\r\n                                right = left + maxWidth;\r\n                            }\r\n                        }\r\n                        var x = prevX + marginLeft - left;\r\n                        child.setPrivate(\"x\", x);\r\n                        prevX = x + right + marginRight;\r\n                    }\r\n                    else {\r\n                        child.setPrivate(\"x\", undefined);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    });\r\n    Object.defineProperty(HorizontalLayout, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"HorizontalLayout\"\r\n    });\r\n    Object.defineProperty(HorizontalLayout, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: Layout.classNames.concat([HorizontalLayout.className])\r\n    });\r\n    return HorizontalLayout;\r\n}(Layout));\r\nexport { HorizontalLayout };\r\n//# sourceMappingURL=HorizontalLayout.js.map","import { __extends } from \"tslib\";\r\nimport { Text } from \"../render/Text\";\r\nimport { p50, p100 } from \"../util/Percent\";\r\nimport { Container } from \"./Container\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $type from \"../../core/util/Type\";\r\n/**\r\n * Creates a label with support for in-line styling and data bindings.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/labels/} for more info\r\n */\r\nvar Label = /** @class */ (function (_super) {\r\n    __extends(Label, _super);\r\n    function Label() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        Object.defineProperty(_this, \"_text\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_textKeys\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\r\n                \"text\",\r\n                \"fill\",\r\n                \"textAlign\",\r\n                \"fontFamily\",\r\n                \"fontSize\",\r\n                \"fontStyle\",\r\n                \"fontWeight\",\r\n                \"fontStyle\",\r\n                \"fontVariant\",\r\n                \"textDecoration\",\r\n                \"shadowColor\",\r\n                \"shadowBlur\",\r\n                \"shadowOffsetX\",\r\n                \"shadowOffsetY\",\r\n                \"shadowOpacity\",\r\n                // \"leading\",\r\n                // \"letterSpacing\",\r\n                \"lineHeight\",\r\n                \"baselineRatio\",\r\n                //\"padding\",\r\n                // \"stroke\",\r\n                // \"strokeThickness\",\r\n                // \"trim\",\r\n                // \"wordWrap\",\r\n                \"direction\",\r\n                \"textBaseline\",\r\n                \"oversizedBehavior\",\r\n                \"breakWords\",\r\n                \"ellipsis\",\r\n                \"minScale\",\r\n                \"populateText\",\r\n                \"role\",\r\n                \"ignoreFormatting\"\r\n            ]\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Label.prototype, \"text\", {\r\n        /**\r\n         * @ignore Text is not to be used directly\r\n         */\r\n        get: function () {\r\n            return this._text;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Label.prototype, \"_afterNew\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            _super.prototype._afterNew.call(this);\r\n            this._makeText();\r\n            $array.each(this._textKeys, function (property) {\r\n                var propValue = _this.get(property);\r\n                if (propValue != undefined) {\r\n                    _this._text.set(property, propValue);\r\n                }\r\n            });\r\n            if (this.get(\"html\", \"\") !== \"\") {\r\n                this._text.set(\"text\", \"\");\r\n            }\r\n            this.onPrivate(\"maxWidth\", function () {\r\n                _this._setMaxDimentions();\r\n            });\r\n            this.onPrivate(\"maxHeight\", function () {\r\n                _this._setMaxDimentions();\r\n            });\r\n        }\r\n    });\r\n    Object.defineProperty(Label.prototype, \"_makeText\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this._text = this.children.push(Text.new(this._root, {}));\r\n        }\r\n    });\r\n    Object.defineProperty(Label.prototype, \"_updateChildren\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            _super.prototype._updateChildren.call(this);\r\n            $array.each(this._textKeys, function (property) {\r\n                _this._text.set(property, _this.get(property));\r\n            });\r\n            if (this.isDirty(\"maxWidth\")) {\r\n                this._setMaxDimentions();\r\n            }\r\n            if (this.isDirty(\"maxHeight\")) {\r\n                this._setMaxDimentions();\r\n            }\r\n            if (this.isDirty(\"rotation\")) {\r\n                this._setMaxDimentions();\r\n            }\r\n            // Do not show regular text if HTML is used\r\n            if (this.get(\"html\", \"\") !== \"\") {\r\n                this._text.set(\"text\", \"\");\r\n            }\r\n            else {\r\n                this._text.set(\"text\", this.get(\"text\"));\r\n            }\r\n            if (this.isDirty(\"textAlign\") || this.isDirty(\"width\")) {\r\n                var textAlign = this.get(\"textAlign\");\r\n                var x = void 0;\r\n                if (this.get(\"width\") != null) {\r\n                    if (textAlign == \"right\") {\r\n                        x = p100;\r\n                    }\r\n                    else if (textAlign == \"center\") {\r\n                        x = p50;\r\n                    }\r\n                    else {\r\n                        x = 0;\r\n                    }\r\n                }\r\n                else {\r\n                    if (textAlign == \"left\" || textAlign == \"start\") {\r\n                        x = this.get(\"paddingLeft\");\r\n                    }\r\n                    else if (textAlign == \"right\" || textAlign == \"end\") {\r\n                        x = -this.get(\"paddingRight\");\r\n                    }\r\n                }\r\n                this.text.set(\"x\", x);\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Label.prototype, \"_setMaxDimentions\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var rotation = this.get(\"rotation\");\r\n            var vertical = rotation == 90 || rotation == 270 || rotation == -90;\r\n            var maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\", Infinity));\r\n            if ($type.isNumber(maxWidth)) {\r\n                this.text.set(vertical ? \"maxHeight\" : \"maxWidth\", maxWidth - this.get(\"paddingLeft\", 0) - this.get(\"paddingRight\", 0));\r\n            }\r\n            else {\r\n                this.text.set(vertical ? \"maxHeight\" : \"maxWidth\", undefined);\r\n            }\r\n            var maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\", Infinity));\r\n            if ($type.isNumber(maxHeight)) {\r\n                this.text.set(vertical ? \"maxWidth\" : \"maxHeight\", maxHeight - this.get(\"paddingTop\", 0) - this.get(\"paddingBottom\", 0));\r\n            }\r\n            else {\r\n                this.text.set(vertical ? \"maxWidth\" : \"maxHeight\", undefined);\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Label.prototype, \"_setDataItem\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem) {\r\n            _super.prototype._setDataItem.call(this, dataItem);\r\n            this._markDirtyKey(\"text\");\r\n            if (this.text.get(\"populateText\")) {\r\n                this.text.markDirtyText();\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * Returns text with populated placeholders and formatting if `populateText` is\r\n     * set to `true`.\r\n     *\r\n     * @return Populated text\r\n     */\r\n    Object.defineProperty(Label.prototype, \"getText\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            return this._text._getText();\r\n        }\r\n    });\r\n    Object.defineProperty(Label, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"Label\"\r\n    });\r\n    Object.defineProperty(Label, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: Container.classNames.concat([Label.className])\r\n    });\r\n    return Label;\r\n}(Container));\r\nexport { Label };\r\n//# sourceMappingURL=Label.js.map","import { __extends } from \"tslib\";\r\nimport { Entity } from \"../util/Entity\";\r\nexport function eachChildren(container, f) {\r\n    if (container.get(\"reverseChildren\", false)) {\r\n        container.children.eachReverse(f);\r\n    }\r\n    else {\r\n        container.children.each(f);\r\n    }\r\n}\r\n/**\r\n * Base class for [[Container]] layouts.\r\n */\r\nvar Layout = /** @class */ (function (_super) {\r\n    __extends(Layout, _super);\r\n    function Layout() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Layout, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"Layout\"\r\n    });\r\n    Object.defineProperty(Layout, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: Entity.classNames.concat([Layout.className])\r\n    });\r\n    return Layout;\r\n}(Entity));\r\nexport { Layout };\r\n//# sourceMappingURL=Layout.js.map","import { __extends } from \"tslib\";\r\nimport { Series } from \"./Series\";\r\nimport { Container } from \"../../core/render/Container\";\r\nimport { Label } from \"../../core/render/Label\";\r\nimport { RoundedRectangle } from \"../../core/render/RoundedRectangle\";\r\nimport { Template } from \"../../core/util/Template\";\r\nimport { ListTemplate } from \"../../core/util/List\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\n/**\r\n * A universal legend control.\r\n *\r\n * @important\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/legend/} for more info\r\n */\r\nvar Legend = /** @class */ (function (_super) {\r\n    __extends(Legend, _super);\r\n    function Legend() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * List of all [[Container]] elements for legend items.\r\n         *\r\n         * @default new ListTemplate<Container>\r\n         */\r\n        Object.defineProperty(_this, \"itemContainers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), function () { return Container._new(_this._root, {\r\n                themeTags: $utils.mergeTags(_this.itemContainers.template.get(\"themeTags\", []), [\"legend\", \"item\"]),\r\n                themeTagsSelf: $utils.mergeTags(_this.itemContainers.template.get(\"themeTagsSelf\", []), [\"itemcontainer\"]),\r\n                background: RoundedRectangle.new(_this._root, {\r\n                    themeTags: $utils.mergeTags(_this.itemContainers.template.get(\"themeTags\", []), [\"legend\", \"item\", \"background\"]),\r\n                    themeTagsSelf: $utils.mergeTags(_this.itemContainers.template.get(\"themeTagsSelf\", []), [\"itemcontainer\"])\r\n                })\r\n            }, [_this.itemContainers.template]); })\r\n        });\r\n        /**\r\n         * List of legend marker elements.\r\n         *\r\n         * @default new ListTemplate<Container>\r\n         */\r\n        Object.defineProperty(_this, \"markers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), function () { return Container._new(_this._root, {\r\n                themeTags: $utils.mergeTags(_this.markers.template.get(\"themeTags\", []), [\"legend\", \"marker\"])\r\n            }, [_this.markers.template]); })\r\n        });\r\n        /**\r\n         * List of legend label elements.\r\n         *\r\n         * @default new ListTemplate<Label>\r\n         */\r\n        Object.defineProperty(_this, \"labels\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), function () { return Label._new(_this._root, {\r\n                themeTags: $utils.mergeTags(_this.labels.template.get(\"themeTags\", []), [\"legend\", \"label\"])\r\n            }, [_this.labels.template]); })\r\n        });\r\n        /**\r\n         * List of legend value label elements.\r\n         *\r\n         * @default new ListTemplate<label>\r\n         */\r\n        Object.defineProperty(_this, \"valueLabels\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), function () { return Label._new(_this._root, {\r\n                themeTags: $utils.mergeTags(_this.valueLabels.template.get(\"themeTags\", []), [\"legend\", \"label\", \"value\"])\r\n            }, [_this.valueLabels.template]); })\r\n        });\r\n        /**\r\n         * List of rectangle elements used for default legend markers.\r\n         *\r\n         * @default new ListTemplate<RoundedRectangle>\r\n         */\r\n        Object.defineProperty(_this, \"markerRectangles\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), function () { return RoundedRectangle._new(_this._root, {\r\n                themeTags: $utils.mergeTags(_this.markerRectangles.template.get(\"themeTags\", []), [\"legend\", \"marker\", \"rectangle\"])\r\n            }, [_this.markerRectangles.template]); })\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Legend.prototype, \"_afterNew\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"legend\"]);\r\n            this.fields.push(\"name\", \"stroke\", \"fill\");\r\n            _super.prototype._afterNew.call(this);\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(Legend.prototype, \"makeItemContainer\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem) {\r\n            var itemContainer = this.children.push(this.itemContainers.make());\r\n            itemContainer._setDataItem(dataItem);\r\n            this.itemContainers.push(itemContainer);\r\n            itemContainer.states.create(\"disabled\", {});\r\n            return itemContainer;\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(Legend.prototype, \"makeMarker\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var marker = this.markers.make();\r\n            this.markers.push(marker);\r\n            marker.states.create(\"disabled\", {});\r\n            return marker;\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(Legend.prototype, \"makeLabel\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var label = this.labels.make();\r\n            label.states.create(\"disabled\", {});\r\n            return label;\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(Legend.prototype, \"makeValueLabel\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var valueLabel = this.valueLabels.make();\r\n            valueLabel.states.create(\"disabled\", {});\r\n            return valueLabel;\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(Legend.prototype, \"makeMarkerRectangle\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var markerRectangle = this.markerRectangles.make();\r\n            markerRectangle.states.create(\"disabled\", {});\r\n            return markerRectangle;\r\n        }\r\n    });\r\n    Object.defineProperty(Legend.prototype, \"processDataItem\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem) {\r\n            var _this = this;\r\n            _super.prototype.processDataItem.call(this, dataItem);\r\n            var itemContainer = this.makeItemContainer(dataItem);\r\n            var nameField = this.get(\"nameField\");\r\n            var fillField = this.get(\"fillField\");\r\n            var strokeField = this.get(\"strokeField\");\r\n            if (itemContainer) {\r\n                var clickTarget = this.get(\"clickTarget\", \"itemContainer\");\r\n                var item_1 = dataItem.dataContext;\r\n                if (item_1 && item_1.set) {\r\n                    item_1.set(\"legendDataItem\", dataItem);\r\n                }\r\n                itemContainer._setDataItem(dataItem);\r\n                dataItem.set(\"itemContainer\", itemContainer);\r\n                var marker = this.makeMarker();\r\n                if (marker) {\r\n                    itemContainer.children.push(marker);\r\n                    marker._setDataItem(dataItem);\r\n                    dataItem.set(\"marker\", marker);\r\n                    var useDefaultMarker = this.get(\"useDefaultMarker\");\r\n                    var markerRectangle_1 = marker.children.push(this.makeMarkerRectangle());\r\n                    var fill = dataItem.get(\"fill\");\r\n                    var stroke = dataItem.get(\"stroke\");\r\n                    dataItem.set(\"markerRectangle\", markerRectangle_1);\r\n                    if (item_1 && item_1.get) {\r\n                        fill = item_1.get(fillField, fill);\r\n                        stroke = item_1.get(strokeField, stroke);\r\n                    }\r\n                    if (!stroke) {\r\n                        stroke = fill;\r\n                    }\r\n                    if (!useDefaultMarker) {\r\n                        if (item_1 && item_1.createLegendMarker) {\r\n                            item_1.createLegendMarker();\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (item_1.on) {\r\n                            item_1.on(fillField, function () {\r\n                                markerRectangle_1.set(\"fill\", item_1.get(fillField));\r\n                            });\r\n                            item_1.on(strokeField, function () {\r\n                                markerRectangle_1.set(\"stroke\", item_1.get(strokeField));\r\n                            });\r\n                        }\r\n                    }\r\n                    markerRectangle_1.setAll({ fill: fill, stroke: stroke });\r\n                    // this solves if template field is set on slice\r\n                    var component = item_1.component;\r\n                    if (component && component.updateLegendMarker) {\r\n                        component.updateLegendMarker(item_1);\r\n                    }\r\n                }\r\n                var label_1 = this.makeLabel();\r\n                if (label_1) {\r\n                    itemContainer.children.push(label_1);\r\n                    label_1._setDataItem(dataItem);\r\n                    dataItem.set(\"label\", label_1);\r\n                    label_1.text.on(\"text\", function () {\r\n                        itemContainer.set(\"ariaLabel\", label_1.text._getText() + \"; \" + _this._t(\"Press ENTER to toggle\"));\r\n                    });\r\n                    if (item_1 && item_1.get) {\r\n                        dataItem.set(\"name\", item_1.get(nameField));\r\n                    }\r\n                    var name_1 = dataItem.get(\"name\");\r\n                    if (name_1) {\r\n                        label_1.set(\"text\", name_1);\r\n                    }\r\n                }\r\n                var valueLabel = this.makeValueLabel();\r\n                if (valueLabel) {\r\n                    itemContainer.children.push(valueLabel);\r\n                    valueLabel._setDataItem(dataItem);\r\n                    dataItem.set(\"valueLabel\", valueLabel);\r\n                }\r\n                if (item_1 && item_1.show) {\r\n                    this._disposers.push(item_1.on(\"visible\", function (visible) {\r\n                        itemContainer.set(\"disabled\", !visible);\r\n                    }));\r\n                    if (!item_1.get(\"visible\")) {\r\n                        itemContainer.set(\"disabled\", true);\r\n                    }\r\n                    if (clickTarget != \"none\") {\r\n                        var clickContainer = itemContainer;\r\n                        if (clickTarget == \"marker\") {\r\n                            clickContainer = marker;\r\n                        }\r\n                        this._addClickEvents(clickContainer, item_1, dataItem);\r\n                    }\r\n                }\r\n                // Sort children\r\n                this.children.values.sort(function (a, b) {\r\n                    var targetA = a.dataItem.dataContext;\r\n                    var targetB = b.dataItem.dataContext;\r\n                    if (targetA && targetB) {\r\n                        var indexA = _this.data.indexOf(targetA);\r\n                        var indexB = _this.data.indexOf(targetB);\r\n                        if (indexA > indexB) {\r\n                            return 1;\r\n                        }\r\n                        else if (indexA < indexB) {\r\n                            return -1;\r\n                        }\r\n                    }\r\n                    return 0;\r\n                });\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Legend.prototype, \"_addClickEvents\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (container, item, dataItem) {\r\n            var _this = this;\r\n            container.set(\"cursorOverStyle\", \"pointer\");\r\n            container.events.on(\"pointerover\", function () {\r\n                var component = item.component;\r\n                if (component && component.hoverDataItem) {\r\n                    component.hoverDataItem(item);\r\n                }\r\n            });\r\n            container.events.on(\"pointerout\", function () {\r\n                var component = item.component;\r\n                if (component && component.hoverDataItem) {\r\n                    component.unhoverDataItem(item);\r\n                }\r\n            });\r\n            container.events.on(\"click\", function () {\r\n                var labelText = dataItem.get(\"label\").text._getText();\r\n                if (item.show && item.isHidden && (item.isHidden() || item.get(\"visible\") === false)) {\r\n                    item.show();\r\n                    container.set(\"disabled\", false);\r\n                    _this._root.readerAlert(_this._t(\"%1 shown\", _this._root.locale, labelText));\r\n                }\r\n                else if (item.hide) {\r\n                    item.hide();\r\n                    container.set(\"disabled\", true);\r\n                    _this._root.readerAlert(_this._t(\"%1 hidden\", _this._root.locale, labelText));\r\n                }\r\n            });\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(Legend.prototype, \"disposeDataItem\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem) {\r\n            _super.prototype.disposeDataItem.call(this, dataItem);\r\n            var dataContext = dataItem.dataContext;\r\n            if (dataContext && dataContext.get) {\r\n                var di = dataContext.get(\"legendDataItem\");\r\n                if (di == dataItem) {\r\n                    dataContext.set(\"legendDataItem\", undefined);\r\n                }\r\n            }\r\n            var itemContainer = dataItem.get(\"itemContainer\");\r\n            if (itemContainer) {\r\n                this.itemContainers.removeValue(itemContainer);\r\n                itemContainer.dispose();\r\n            }\r\n            var marker = dataItem.get(\"marker\");\r\n            if (marker) {\r\n                this.markers.removeValue(marker);\r\n                marker.dispose();\r\n            }\r\n            var markerRectangle = dataItem.get(\"markerRectangle\");\r\n            if (markerRectangle) {\r\n                this.markerRectangles.removeValue(markerRectangle);\r\n                markerRectangle.dispose();\r\n            }\r\n            var label = dataItem.get(\"label\");\r\n            if (label) {\r\n                this.labels.removeValue(label);\r\n                label.dispose();\r\n            }\r\n            var valueLabel = dataItem.get(\"valueLabel\");\r\n            if (valueLabel) {\r\n                this.valueLabels.removeValue(valueLabel);\r\n                valueLabel.dispose();\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Legend, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"Legend\"\r\n    });\r\n    Object.defineProperty(Legend, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: Series.classNames.concat([Legend.className])\r\n    });\r\n    return Legend;\r\n}(Series));\r\nexport { Legend };\r\n//# sourceMappingURL=Legend.js.map","import { __extends } from \"tslib\";\r\nimport { Graphics } from \"./Graphics\";\r\nimport * as $draw from \"../util/Draw\";\r\n/**\r\n * Draws a line.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nvar Line = /** @class */ (function (_super) {\r\n    __extends(Line, _super);\r\n    function Line() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Line.prototype, \"_beforeChanged\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._beforeChanged.call(this);\r\n            if (this.isDirty(\"points\") || this.isDirty(\"segments\") || this._sizeDirty || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\r\n                this._clear = true;\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Line.prototype, \"_changed\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._changed.call(this);\r\n            if (this._clear) {\r\n                var points = this.get(\"points\");\r\n                var segments = this.get(\"segments\");\r\n                if (points && points.length > 0) {\r\n                    var point = points[0];\r\n                    this._display.moveTo(point.x, point.y);\r\n                    $draw.segmentedLine(this._display, [[points]]);\r\n                }\r\n                else if (segments) {\r\n                    $draw.segmentedLine(this._display, segments);\r\n                }\r\n                else if (!this.get(\"draw\")) {\r\n                    var w = this.width();\r\n                    var h = this.height();\r\n                    this._display.moveTo(0, 0);\r\n                    this._display.lineTo(w, h);\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Line, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"Line\"\r\n    });\r\n    Object.defineProperty(Line, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: Graphics.classNames.concat([Line.className])\r\n    });\r\n    return Line;\r\n}(Graphics));\r\nexport { Line };\r\n//# sourceMappingURL=Line.js.map","/**\r\n * @ignore\r\n */\r\nvar MonotoneXTension = /** @class */ (function () {\r\n    function MonotoneXTension(context, tension) {\r\n        Object.defineProperty(this, \"_line\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_point\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_context\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_x0\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_x1\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_y0\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_y1\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_t0\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_tension\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        this._context = context;\r\n        this._tension = tension;\r\n    }\r\n    Object.defineProperty(MonotoneXTension.prototype, \"areaStart\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this._line = 0;\r\n        }\r\n    });\r\n    Object.defineProperty(MonotoneXTension.prototype, \"areaEnd\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this._line = NaN;\r\n        }\r\n    });\r\n    Object.defineProperty(MonotoneXTension.prototype, \"lineStart\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this._x0 = this._x1 =\r\n                this._y0 = this._y1 =\r\n                    this._t0 = NaN;\r\n            this._point = 0;\r\n        }\r\n    });\r\n    Object.defineProperty(MonotoneXTension.prototype, \"lineEnd\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            switch (this._point) {\r\n                case 2:\r\n                    this._context.lineTo(this._x1, this._y1);\r\n                    break;\r\n                case 3:\r\n                    point(this, this._t0, slope2(this, this._t0));\r\n                    break;\r\n            }\r\n            if (this._line || (this._line !== 0 && this._point === 1))\r\n                this._context.closePath();\r\n            this._line = 1 - this._line;\r\n        }\r\n    });\r\n    Object.defineProperty(MonotoneXTension.prototype, \"point\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (x, y) {\r\n            var t1 = NaN;\r\n            x = +x, y = +y;\r\n            if (x === this._x1 && y === this._y1)\r\n                return; // Ignore coincident points.\r\n            switch (this._point) {\r\n                case 0:\r\n                    this._point = 1;\r\n                    this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);\r\n                    break;\r\n                case 1:\r\n                    this._point = 2;\r\n                    break;\r\n                case 2:\r\n                    this._point = 3;\r\n                    point(this, slope2(this, t1 = slope3(this, x, y)), t1);\r\n                    break;\r\n                default:\r\n                    point(this, this._t0, t1 = slope3(this, x, y));\r\n                    break;\r\n            }\r\n            this._x0 = this._x1, this._x1 = x;\r\n            this._y0 = this._y1, this._y1 = y;\r\n            this._t0 = t1;\r\n        }\r\n    });\r\n    return MonotoneXTension;\r\n}());\r\nexport { MonotoneXTension };\r\n/**\r\n * @ignore\r\n */\r\nexport function curveMonotoneXTension(tension) {\r\n    function monotoneXTension(context) {\r\n        return new MonotoneXTension(context, tension);\r\n    }\r\n    return monotoneXTension;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction sign(x) {\r\n    return x < 0 ? -1 : 1;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction slope3(that, x2, y2) {\r\n    var h0 = (that._x1 - that._x0);\r\n    var h1 = (x2 - that._x1);\r\n    var s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0);\r\n    var s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0);\r\n    var p = (s0 * h1 + s1 * h0) / (h0 + h1);\r\n    return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction slope2(that, t) {\r\n    var h = that._x1 - that._x0;\r\n    return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction point(that, t0, t1) {\r\n    var x0 = that._x0, y0 = that._y0, x1 = that._x1, y1 = that._y1, dx = (x1 - x0) / 1.5 * (1 - that._tension);\r\n    that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\r\n}\r\n//# sourceMappingURL=MonotoneXTension.js.map","import { __read } from \"tslib\";\r\n/**\r\n * @ignore\r\n */\r\nvar MonotoneYTension = /** @class */ (function () {\r\n    function MonotoneYTension(context, tension) {\r\n        Object.defineProperty(this, \"_line\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_point\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_context\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_x0\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_x1\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_y0\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_y1\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_t0\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_tension\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        this._context = context;\r\n        this._tension = tension;\r\n    }\r\n    Object.defineProperty(MonotoneYTension.prototype, \"areaStart\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this._line = 0;\r\n        }\r\n    });\r\n    Object.defineProperty(MonotoneYTension.prototype, \"areaEnd\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this._line = NaN;\r\n        }\r\n    });\r\n    Object.defineProperty(MonotoneYTension.prototype, \"lineStart\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this._x0 = this._x1 =\r\n                this._y0 = this._y1 =\r\n                    this._t0 = NaN;\r\n            this._point = 0;\r\n        }\r\n    });\r\n    Object.defineProperty(MonotoneYTension.prototype, \"lineEnd\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            switch (this._point) {\r\n                case 2:\r\n                    this._context.lineTo(this._x1, this._y1);\r\n                    break;\r\n                case 3:\r\n                    point(this, this._t0, slope2(this, this._t0));\r\n                    break;\r\n            }\r\n            if (this._line || (this._line !== 0 && this._point === 1))\r\n                this._context.closePath();\r\n            this._line = 1 - this._line;\r\n        }\r\n    });\r\n    Object.defineProperty(MonotoneYTension.prototype, \"point\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (x, y) {\r\n            var _a;\r\n            _a = __read([y, x], 2), x = _a[0], y = _a[1];\r\n            var t1 = NaN;\r\n            x = +x, y = +y;\r\n            if (x === this._x1 && y === this._y1)\r\n                return; // Ignore coincident points.\r\n            switch (this._point) {\r\n                case 0:\r\n                    this._point = 1;\r\n                    this._line ? this._context.lineTo(y, x) : this._context.moveTo(y, x);\r\n                    break;\r\n                case 1:\r\n                    this._point = 2;\r\n                    break;\r\n                case 2:\r\n                    this._point = 3;\r\n                    point(this, slope2(this, t1 = slope3(this, x, y)), t1);\r\n                    break;\r\n                default:\r\n                    point(this, this._t0, t1 = slope3(this, x, y));\r\n                    break;\r\n            }\r\n            this._x0 = this._x1, this._x1 = x;\r\n            this._y0 = this._y1, this._y1 = y;\r\n            this._t0 = t1;\r\n        }\r\n    });\r\n    return MonotoneYTension;\r\n}());\r\nexport { MonotoneYTension };\r\n/**\r\n * @ignore\r\n */\r\nexport function curveMonotoneYTension(tension) {\r\n    function monotoneYTension(context) {\r\n        return new MonotoneYTension(context, tension);\r\n    }\r\n    monotoneYTension.tension = function (tension) {\r\n        return curveMonotoneYTension(+tension);\r\n    };\r\n    return monotoneYTension;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction sign(x) {\r\n    return x < 0 ? -1 : 1;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction slope3(that, x2, y2) {\r\n    var h0 = (that._x1 - that._x0);\r\n    var h1 = (x2 - that._x1);\r\n    var s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0);\r\n    var s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0);\r\n    var p = (s0 * h1 + s1 * h0) / (h0 + h1);\r\n    return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction slope2(that, t) {\r\n    var h = that._x1 - that._x0;\r\n    return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction point(that, t0, t1) {\r\n    var x0 = that._x0, y0 = that._y0, x1 = that._x1, y1 = that._y1, dx = (x1 - x0) / 1.5 * (1 - that._tension);\r\n    that._context.bezierCurveTo(y0 + dx * t0, x0 + dx, y1 - dx * t1, x1 - dx, y1, x1);\r\n}\r\n//# sourceMappingURL=MonotoneYTension.js.map","import { __extends } from \"tslib\";\r\nimport { Sprite } from \"./Sprite\";\r\nimport * as $type from \"../util/Type\";\r\n/**\r\n * Displays an image.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/images/} for more info\r\n * @important\r\n */\r\nvar Picture = /** @class */ (function (_super) {\r\n    __extends(Picture, _super);\r\n    function Picture() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        Object.defineProperty(_this, \"_display\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: _this._root._renderer.makePicture(undefined)\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Picture.prototype, \"_changed\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._changed.call(this);\r\n            if (this.isDirty(\"width\")) {\r\n                var width = this.get(\"width\");\r\n                this._display.width = $type.isNumber(width) ? width : undefined;\r\n            }\r\n            if (this.isDirty(\"height\")) {\r\n                var height = this.get(\"height\");\r\n                this._display.height = $type.isNumber(height) ? height : undefined;\r\n            }\r\n            if (this.isDirty(\"shadowColor\")) {\r\n                this._display.clear();\r\n                var shadowColor = this.get(\"shadowColor\");\r\n                this._display.shadowColor = shadowColor == null ? undefined : shadowColor;\r\n            }\r\n            if (this.isDirty(\"shadowBlur\")) {\r\n                this._display.clear();\r\n                this._display.shadowBlur = this.get(\"shadowBlur\");\r\n            }\r\n            if (this.isDirty(\"shadowOffsetX\")) {\r\n                this._display.clear();\r\n                this._display.shadowOffsetX = this.get(\"shadowOffsetX\");\r\n            }\r\n            if (this.isDirty(\"shadowOffsetY\")) {\r\n                this._display.clear();\r\n                this._display.shadowOffsetY = this.get(\"shadowOffsetY\");\r\n            }\r\n            if (this.isDirty(\"shadowOpacity\")) {\r\n                this._display.clear();\r\n                this._display.shadowOpacity = this.get(\"shadowOpacity\");\r\n            }\r\n            if (this.isDirty(\"src\")) {\r\n                this._display.clear();\r\n                this._load();\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Picture.prototype, \"_load\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            var src = this.get(\"src\");\r\n            if (src) {\r\n                var image_1 = new Image();\r\n                //image.crossOrigin = \"Anonymous\";\r\n                image_1.src = src;\r\n                image_1.decode().then(function () {\r\n                    _this._display.image = image_1;\r\n                    _this._updateSize();\r\n                }).catch(function (_error) {\r\n                    // TODO: maybe raise error?\r\n                });\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Picture.prototype, \"_updateSize\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._updateSize.call(this);\r\n            var image = this._display.image;\r\n            if (image) {\r\n                var w = this.getPrivate(\"width\", this.get(\"width\"));\r\n                var h = this.getPrivate(\"height\", this.get(\"height\"));\r\n                var r = image.width && image.height ? image.width / image.height : 0;\r\n                if ($type.isNumber(w) && $type.isNumber(h)) {\r\n                    this._display.width = w;\r\n                    this._display.height = h;\r\n                }\r\n                else if ($type.isNumber(w) && r) {\r\n                    h = w / r;\r\n                }\r\n                else if ($type.isNumber(h) && r) {\r\n                    w = h * r;\r\n                }\r\n                else {\r\n                    w = image.width;\r\n                    h = image.height;\r\n                }\r\n                if ($type.isNumber(w)) {\r\n                    this._display.width = w;\r\n                }\r\n                if ($type.isNumber(h)) {\r\n                    this._display.height = h;\r\n                }\r\n                this.markDirtyBounds();\r\n                this.markDirty();\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Picture, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"Picture\"\r\n    });\r\n    Object.defineProperty(Picture, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: Sprite.classNames.concat([Picture.className])\r\n    });\r\n    return Picture;\r\n}(Sprite));\r\nexport { Picture };\r\n//# sourceMappingURL=Picture.js.map","import { __extends } from \"tslib\";\r\nimport { Graphics } from \"./Graphics\";\r\nimport * as $math from \"../util/Math\";\r\n/**\r\n * Draws a rectangle with a pointer.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nvar PointedRectangle = /** @class */ (function (_super) {\r\n    __extends(PointedRectangle, _super);\r\n    function PointedRectangle() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(PointedRectangle.prototype, \"_beforeChanged\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._beforeChanged.call(this);\r\n            if (this.isDirty(\"pointerBaseWidth\") || this.isDirty(\"cornerRadius\") || this.isDirty(\"pointerLength\") || this.isDirty(\"pointerX\") || this.isDirty(\"pointerY\") || this.isDirty(\"width\") || this.isDirty(\"height\")) {\r\n                this._clear = true;\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(PointedRectangle.prototype, \"_changed\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._changed.call(this);\r\n            if (this._clear) {\r\n                this.markDirtyBounds();\r\n                var w = this.width();\r\n                var h = this.height();\r\n                if (w > 0 && h > 0) {\r\n                    var cr = this.get(\"cornerRadius\", 8);\r\n                    cr = $math.fitToRange(cr, 0, Math.min(w / 2, h / 2));\r\n                    var x = this.get(\"pointerX\", 0);\r\n                    var y = this.get(\"pointerY\", 0);\r\n                    var bwh = this.get(\"pointerBaseWidth\", 15) / 2;\r\n                    // corner coordinates\r\n                    // top left\r\n                    var xtl = 0;\r\n                    var ytl = 0;\r\n                    // top right\r\n                    var xtr = w;\r\n                    var ytr = 0;\r\n                    // bottom right\r\n                    var xbr = w;\r\n                    var ybr = h;\r\n                    // bottom left\r\n                    var xbl = 0;\r\n                    var ybl = h;\r\n                    // find stem base side: http://$math.stackexchange.com/questions/274712/calculate-on-which-side-of-straign-line-is-dot-located\r\n                    // d=(x−x1)(y2−y1)−(y−y1)(x2−x1)\r\n                    var d1 = (x - xtl) * (ybr - ytl) - (y - ytl) * (xbr - xtl);\r\n                    var d2 = (x - xbl) * (ytr - ybl) - (y - ybl) * (xtr - xbl);\r\n                    var display = this._display;\r\n                    // top\r\n                    display.moveTo(cr, 0);\r\n                    if (d1 > 0 && d2 > 0) {\r\n                        var stemX = Math.round($math.fitToRange(x, cr + bwh, w - bwh - cr));\r\n                        y = $math.fitToRange(y, -Infinity, 0);\r\n                        display.lineTo(stemX - bwh, 0);\r\n                        display.lineTo(x, y);\r\n                        display.lineTo(stemX + bwh, 0);\r\n                    }\r\n                    display.lineTo(w - cr, 0);\r\n                    display.arcTo(w, 0, w, cr, cr);\r\n                    // right\r\n                    if (d1 > 0 && d2 < 0) {\r\n                        var stemY = Math.round($math.fitToRange(y, cr + bwh, h - bwh - cr));\r\n                        x = $math.fitToRange(x, w, Infinity);\r\n                        display.lineTo(w, cr);\r\n                        display.lineTo(w, Math.max(stemY - bwh, cr));\r\n                        display.lineTo(x, y);\r\n                        display.lineTo(w, stemY + bwh);\r\n                    }\r\n                    display.lineTo(w, h - cr);\r\n                    display.arcTo(w, h, w - cr, h, cr);\r\n                    // bottom\r\n                    if (d1 < 0 && d2 < 0) {\r\n                        var stemX = Math.round($math.fitToRange(x, cr + bwh, w - bwh - cr));\r\n                        y = $math.fitToRange(y, h, Infinity);\r\n                        display.lineTo(w - cr, h);\r\n                        display.lineTo(stemX + bwh, h);\r\n                        display.lineTo(x, y);\r\n                        display.lineTo(stemX - bwh, h);\r\n                    }\r\n                    display.lineTo(cr, h);\r\n                    display.arcTo(0, h, 0, h - cr, cr);\r\n                    // left\r\n                    if (d1 < 0 && d2 > 0) {\r\n                        var stemY = Math.round($math.fitToRange(y, cr + bwh, h - cr - bwh));\r\n                        x = $math.fitToRange(x, -Infinity, 0);\r\n                        display.lineTo(0, h - cr);\r\n                        display.lineTo(0, stemY + bwh);\r\n                        display.lineTo(x, y);\r\n                        display.lineTo(0, Math.max(stemY - bwh, cr));\r\n                    }\r\n                    display.lineTo(0, cr);\r\n                    display.arcTo(0, 0, cr, 0, cr);\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(PointedRectangle, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"PointedRectangle\"\r\n    });\r\n    Object.defineProperty(PointedRectangle, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: Graphics.classNames.concat([PointedRectangle.className])\r\n    });\r\n    return PointedRectangle;\r\n}(Graphics));\r\nexport { PointedRectangle };\r\n//# sourceMappingURL=PointedRectangle.js.map","import { __extends } from \"tslib\";\r\n// import * as $object from \"../util/Object\";\r\nimport { p50, Percent } from \"../util/Percent\";\r\nimport { Label } from \"./Label\";\r\nimport { RadialText } from \"./RadialText\";\r\nimport * as $math from \"../util/Math\";\r\nimport * as $utils from \"../util/Utils\";\r\nvar RadialLabel = /** @class */ (function (_super) {\r\n    __extends(RadialLabel, _super);\r\n    function RadialLabel() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        Object.defineProperty(_this, \"_flipped\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(RadialLabel.prototype, \"_afterNew\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this._textKeys.push(\"textType\", \"kerning\");\r\n            _super.prototype._afterNew.call(this);\r\n        }\r\n    });\r\n    Object.defineProperty(RadialLabel.prototype, \"_makeText\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this._text = this.children.push(RadialText.new(this._root, {}));\r\n        }\r\n    });\r\n    /**\r\n     * Returns base radius in pixels.\r\n     *\r\n     * @return Base radius\r\n     */\r\n    Object.defineProperty(RadialLabel.prototype, \"baseRadius\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var radiusPrivate = this.getPrivate(\"radius\", 0);\r\n            var innerRadiusPrivate = this.getPrivate(\"innerRadius\", 0);\r\n            var baseRadius = this.get(\"baseRadius\", 0);\r\n            return innerRadiusPrivate + $utils.relativeToValue(baseRadius, radiusPrivate - innerRadiusPrivate);\r\n        }\r\n    });\r\n    /**\r\n     * Returns radius adjustment in pixels.\r\n     *\r\n     * @return Radius\r\n     */\r\n    Object.defineProperty(RadialLabel.prototype, \"radius\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var inside = this.get(\"inside\", false);\r\n            return this.baseRadius() + this.get(\"radius\", 0) * (inside ? -1 : 1);\r\n        }\r\n    });\r\n    Object.defineProperty(RadialLabel.prototype, \"_updateChildren\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._updateChildren.call(this);\r\n            if (this.isDirty(\"baseRadius\") || this.isPrivateDirty(\"radius\") || this.isPrivateDirty(\"innerRadius\") || this.isDirty(\"labelAngle\") || this.isDirty(\"radius\") || this.isDirty(\"inside\") || this.isDirty(\"orientation\") || this.isDirty(\"textType\")) {\r\n                var textType = this.get(\"textType\", \"adjusted\");\r\n                var inside = this.get(\"inside\", false);\r\n                var orientation_1 = this.get(\"orientation\");\r\n                var labelAngle = $math.normalizeAngle(this.get(\"labelAngle\", 0));\r\n                this._text.set(\"startAngle\", this.get(\"labelAngle\", 0));\r\n                this._text.set(\"inside\", inside);\r\n                var sin = $math.sin(labelAngle);\r\n                var cos = $math.cos(labelAngle);\r\n                var baseRadius = this.baseRadius();\r\n                var radius = this.radius();\r\n                this._display.angle = 0;\r\n                if (textType == \"circular\") {\r\n                    this.setAll({\r\n                        paddingTop: 0,\r\n                        paddingBottom: 0,\r\n                        paddingLeft: 0,\r\n                        paddingRight: 0\r\n                    });\r\n                    // Circular labels are handled and positioned differently\r\n                    this._text.set(\"orientation\", orientation_1);\r\n                    this._text.set(\"radius\", radius);\r\n                }\r\n                else {\r\n                    if (baseRadius == 0) {\r\n                        labelAngle = 0;\r\n                        radius = 0;\r\n                    }\r\n                    // Positioning of radial/regular labels are teh same\r\n                    var x = radius * cos;\r\n                    var y = radius * sin;\r\n                    if (textType == \"radial\") {\r\n                        this.setRaw(\"x\", x);\r\n                        this.setRaw(\"y\", y);\r\n                        if ((labelAngle < 90) || (labelAngle > 270) || orientation_1 != \"auto\") {\r\n                            this._display.angle = labelAngle; // + 90;\r\n                            this._flipped = false;\r\n                        }\r\n                        else {\r\n                            this._display.angle = labelAngle + 180;\r\n                            this._flipped = true;\r\n                        }\r\n                        this._dirty.rotation = false;\r\n                    }\r\n                    else if (textType == \"adjusted\") {\r\n                        this.setRaw(\"centerX\", p50);\r\n                        this.setRaw(\"centerY\", p50);\r\n                        this.setRaw(\"x\", x);\r\n                        this.setRaw(\"y\", y);\r\n                    }\r\n                    else if (textType == \"regular\") {\r\n                        this.setRaw(\"x\", x);\r\n                        this.setRaw(\"y\", y);\r\n                    }\r\n                }\r\n                this.markDirtyPosition();\r\n                this.markDirtyBounds();\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(RadialLabel.prototype, \"_updatePosition\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var textType = this.get(\"textType\", \"regular\");\r\n            var inside = this.get(\"inside\", false);\r\n            var dx = 0;\r\n            var dy = 0;\r\n            var labelAngle = this.get(\"labelAngle\", 0);\r\n            var bounds = this.localBounds();\r\n            var w = bounds.right - bounds.left;\r\n            var h = bounds.bottom - bounds.top;\r\n            if (textType == \"radial\") {\r\n                if (this._flipped) {\r\n                    var centerX = this.get(\"centerX\");\r\n                    if (centerX instanceof Percent) {\r\n                        w = w * (1 - centerX.value * 2);\r\n                    }\r\n                    dx = w * $math.cos(labelAngle);\r\n                    dy = w * $math.sin(labelAngle);\r\n                }\r\n            }\r\n            else if (!inside && textType == \"adjusted\") {\r\n                dx = w / 2 * $math.cos(labelAngle);\r\n                dy = h / 2 * $math.sin(labelAngle);\r\n            }\r\n            this.setRaw(\"dx\", dx);\r\n            this.setRaw(\"dy\", dy);\r\n            _super.prototype._updatePosition.call(this);\r\n        }\r\n    });\r\n    Object.defineProperty(RadialLabel.prototype, \"text\", {\r\n        /**\r\n         * @ignore\r\n         */\r\n        get: function () {\r\n            return this._text;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RadialLabel, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"RadialLabel\"\r\n    });\r\n    Object.defineProperty(RadialLabel, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: Label.classNames.concat([RadialLabel.className])\r\n    });\r\n    return RadialLabel;\r\n}(Label));\r\nexport { RadialLabel };\r\n//# sourceMappingURL=RadialLabel.js.map","import { __extends } from \"tslib\";\r\nimport { Text } from \"./Text\";\r\nimport * as $math from \"../util/Math\";\r\n/**\r\n * @ignore\r\n */\r\nvar RadialText = /** @class */ (function (_super) {\r\n    __extends(RadialText, _super);\r\n    function RadialText() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        Object.defineProperty(_this, \"_display\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: _this._root._renderer.makeRadialText(\"\", _this.textStyle)\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(RadialText.prototype, \"_afterNew\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._afterNew.call(this);\r\n        }\r\n    });\r\n    Object.defineProperty(RadialText.prototype, \"_beforeChanged\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._beforeChanged.call(this);\r\n            this._display.clear();\r\n            if (this.isDirty(\"textType\")) {\r\n                this._display.textType = this.get(\"textType\");\r\n                this.markDirtyBounds();\r\n            }\r\n            if (this.isDirty(\"radius\")) {\r\n                this._display.radius = this.get(\"radius\");\r\n                this.markDirtyBounds();\r\n            }\r\n            if (this.isDirty(\"startAngle\")) {\r\n                this._display.startAngle = (this.get(\"startAngle\", 0) + 90) * $math.RADIANS;\r\n                this.markDirtyBounds();\r\n            }\r\n            if (this.isDirty(\"inside\")) {\r\n                this._display.inside = this.get(\"inside\");\r\n                this.markDirtyBounds();\r\n            }\r\n            if (this.isDirty(\"orientation\")) {\r\n                this._display.orientation = this.get(\"orientation\");\r\n                this.markDirtyBounds();\r\n            }\r\n            if (this.isDirty(\"kerning\")) {\r\n                this._display.kerning = this.get(\"kerning\");\r\n                this.markDirtyBounds();\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(RadialText, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"RadialText\"\r\n    });\r\n    Object.defineProperty(RadialText, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: Text.classNames.concat([RadialText.className])\r\n    });\r\n    return RadialText;\r\n}(Text));\r\nexport { RadialText };\r\n//# sourceMappingURL=RadialText.js.map","import { __extends } from \"tslib\";\r\nimport { Graphics } from \"./Graphics\";\r\n/**\r\n * Draws a rectangle.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nvar Rectangle = /** @class */ (function (_super) {\r\n    __extends(Rectangle, _super);\r\n    function Rectangle() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Rectangle.prototype, \"_beforeChanged\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._beforeChanged.call(this);\r\n            if (this.isDirty(\"width\") || this.isDirty(\"height\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\r\n                this._clear = true;\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Rectangle.prototype, \"_changed\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._changed.call(this);\r\n            if (this._clear && !this.get(\"draw\")) {\r\n                this._draw();\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Rectangle.prototype, \"_draw\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this._display.drawRect(0, 0, this.width(), this.height());\r\n        }\r\n    });\r\n    Object.defineProperty(Rectangle.prototype, \"_updateSize\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this.markDirty();\r\n            this._clear = true;\r\n        }\r\n    });\r\n    Object.defineProperty(Rectangle, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"Rectangle\"\r\n    });\r\n    Object.defineProperty(Rectangle, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: Graphics.classNames.concat([Rectangle.className])\r\n    });\r\n    return Rectangle;\r\n}(Graphics));\r\nexport { Rectangle };\r\n//# sourceMappingURL=Rectangle.js.map","import { __extends } from \"tslib\";\r\nimport * as $type from \"../util/Type\";\r\nimport * as $math from \"../util/Math\";\r\nimport * as $utils from \"../util/Utils\";\r\nimport { Rectangle } from \"./Rectangle\";\r\n/**\r\n * Draws a rectangle with rounded corners.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nvar RoundedRectangle = /** @class */ (function (_super) {\r\n    __extends(RoundedRectangle, _super);\r\n    function RoundedRectangle() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(RoundedRectangle.prototype, \"_beforeChanged\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._beforeChanged.call(this);\r\n            if (this.isDirty(\"cornerRadiusTL\") || this.isDirty(\"cornerRadiusTR\") || this.isDirty(\"cornerRadiusBR\") || this.isDirty(\"cornerRadiusBL\")) {\r\n                this._clear = true;\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(RoundedRectangle.prototype, \"_draw\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var width = this.width();\r\n            var height = this.height();\r\n            var w = width;\r\n            var h = height;\r\n            var wSign = w / Math.abs(width);\r\n            var hSign = h / Math.abs(height);\r\n            if ($type.isNumber(w) && $type.isNumber(h)) {\r\n                var minSide = Math.min(w, h) / 2;\r\n                var crtl = $utils.relativeToValue(this.get(\"cornerRadiusTL\", 8), minSide);\r\n                var crtr = $utils.relativeToValue(this.get(\"cornerRadiusTR\", 8), minSide);\r\n                var crbr = $utils.relativeToValue(this.get(\"cornerRadiusBR\", 8), minSide);\r\n                var crbl = $utils.relativeToValue(this.get(\"cornerRadiusBL\", 8), minSide);\r\n                var maxcr = Math.min(Math.abs(w / 2), Math.abs(h / 2));\r\n                crtl = $math.fitToRange(crtl, 0, maxcr);\r\n                crtr = $math.fitToRange(crtr, 0, maxcr);\r\n                crbr = $math.fitToRange(crbr, 0, maxcr);\r\n                crbl = $math.fitToRange(crbl, 0, maxcr);\r\n                this._display.moveTo(crtl * wSign, 0);\r\n                this._display.lineTo(w - crtr * wSign, 0);\r\n                if (crtr > 0) {\r\n                    this._display.arcTo(w, 0, w, crtr * hSign, crtr);\r\n                }\r\n                this._display.lineTo(w, h - crbr * hSign);\r\n                if (crbr > 0) {\r\n                    this._display.arcTo(w, h, w - crbr * wSign, h, crbr);\r\n                }\r\n                this._display.lineTo(crbl * wSign, h);\r\n                if (crbl > 0) {\r\n                    this._display.arcTo(0, h, 0, h - crbl * hSign, crbl);\r\n                }\r\n                this._display.lineTo(0, crtl * hSign);\r\n                if (crtl > 0) {\r\n                    this._display.arcTo(0, 0, crtl * wSign, 0, crtl);\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(RoundedRectangle, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"RoundedRectangle\"\r\n    });\r\n    Object.defineProperty(RoundedRectangle, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: Rectangle.classNames.concat([RoundedRectangle.className])\r\n    });\r\n    return RoundedRectangle;\r\n}(Rectangle));\r\nexport { RoundedRectangle };\r\n//# sourceMappingURL=RoundedRectangle.js.map","import { __extends } from \"tslib\";\r\nimport { RoundedRectangle } from \"../render/RoundedRectangle\";\r\nimport { Container } from \"./Container\";\r\nimport { Graphics } from \"./Graphics\";\r\nimport { Button } from \"./Button\";\r\nimport * as $type from \"../util/Type\";\r\nimport * as $utils from \"../util/Utils\";\r\n/**\r\n * A control that allows zooming chart's axes, or other uses requiring range\r\n * selection.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/} for more info\r\n */\r\nvar Scrollbar = /** @class */ (function (_super) {\r\n    __extends(Scrollbar, _super);\r\n    function Scrollbar() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * A thumb elment - a draggable square between the grips, used for panning\r\n         * the selection.\r\n         */\r\n        Object.defineProperty(_this, \"thumb\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: _this._makeThumb()\r\n        });\r\n        /**\r\n         * Start grip button.\r\n         */\r\n        Object.defineProperty(_this, \"startGrip\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: _this._makeButton()\r\n        });\r\n        /**\r\n         * End grip button.\r\n         */\r\n        Object.defineProperty(_this, \"endGrip\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: _this._makeButton()\r\n        });\r\n        Object.defineProperty(_this, \"_thumbBusy\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(_this, \"_startDown\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(_this, \"_endDown\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(_this, \"_thumbDown\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(_this, \"_gripDown\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Scrollbar.prototype, \"_addOrientationClass\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"scrollbar\", this._settings.orientation]);\r\n            if (!this._settings.background) {\r\n                this._settings.background = RoundedRectangle.new(this._root, {\r\n                    themeTags: $utils.mergeTags(this._settings.themeTags, [\"main\", \"background\"])\r\n                });\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Scrollbar.prototype, \"_makeButton\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            return this.children.push(Button.new(this._root, {\r\n                themeTags: [\"resize\", \"button\", this.get(\"orientation\")], icon: Graphics.new(this._root, {\r\n                    themeTags: [\"icon\"]\r\n                })\r\n            }));\r\n        }\r\n    });\r\n    Object.defineProperty(Scrollbar.prototype, \"_makeThumb\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            return this.children.push(RoundedRectangle.new(this._root, {\r\n                themeTags: [\"thumb\", this.get(\"orientation\")]\r\n            }));\r\n        }\r\n    });\r\n    Object.defineProperty(Scrollbar.prototype, \"_handleAnimation\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (animation) {\r\n            var _this = this;\r\n            if (animation) {\r\n                this._disposers.push(animation.events.on(\"stopped\", function () {\r\n                    _this.setPrivateRaw(\"isBusy\", false);\r\n                    _this._thumbBusy = false;\r\n                }));\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Scrollbar.prototype, \"_afterNew\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            this._addOrientationClass();\r\n            _super.prototype._afterNew.call(this);\r\n            var startGrip = this.startGrip;\r\n            var endGrip = this.endGrip;\r\n            var thumb = this.thumb;\r\n            var background = this.get(\"background\");\r\n            if (background) {\r\n                this._disposers.push(background.events.on(\"click\", function (event) {\r\n                    _this.setPrivateRaw(\"isBusy\", true);\r\n                    var point = _this._display.toLocal(event.point);\r\n                    var w = _this.width();\r\n                    var h = _this.height();\r\n                    var orientation = _this.get(\"orientation\");\r\n                    var newMiddle;\r\n                    if (orientation == \"vertical\") {\r\n                        newMiddle = (point.y - thumb.height() / 2) / h;\r\n                    }\r\n                    else {\r\n                        newMiddle = (point.x - thumb.width() / 2) / w;\r\n                    }\r\n                    var newCoordinate;\r\n                    var key;\r\n                    if (orientation == \"vertical\") {\r\n                        newCoordinate = newMiddle * h;\r\n                        key = \"y\";\r\n                    }\r\n                    else {\r\n                        newCoordinate = newMiddle * w;\r\n                        key = \"x\";\r\n                    }\r\n                    var duration = _this.get(\"animationDuration\", 0);\r\n                    if (duration > 0) {\r\n                        _this._thumbBusy = true;\r\n                        _this._handleAnimation(_this.thumb.animate({ key: key, to: newCoordinate, duration: duration, easing: _this.get(\"animationEasing\") }));\r\n                    }\r\n                    else {\r\n                        _this.thumb.set(key, newCoordinate);\r\n                        _this._root.events.once(\"frameended\", function () {\r\n                            _this.setPrivateRaw(\"isBusy\", false);\r\n                        });\r\n                    }\r\n                }));\r\n            }\r\n            this._disposers.push(thumb.events.on(\"dblclick\", function (event) {\r\n                if (!$utils.isLocalEvent(event.originalEvent, _this)) {\r\n                    return;\r\n                }\r\n                var duration = _this.get(\"animationDuration\", 0);\r\n                var easing = _this.get(\"animationEasing\");\r\n                _this.animate({ key: \"start\", to: 0, duration: duration, easing: easing });\r\n                _this.animate({ key: \"end\", to: 1, duration: duration, easing: easing });\r\n            }));\r\n            this._disposers.push(startGrip.events.on(\"pointerdown\", function () {\r\n                _this.setPrivateRaw(\"isBusy\", true);\r\n                _this._startDown = true;\r\n                _this._gripDown = \"start\";\r\n            }));\r\n            this._disposers.push(endGrip.events.on(\"pointerdown\", function () {\r\n                _this.setPrivateRaw(\"isBusy\", true);\r\n                _this._endDown = true;\r\n                _this._gripDown = \"end\";\r\n            }));\r\n            this._disposers.push(thumb.events.on(\"pointerdown\", function () {\r\n                _this.setPrivateRaw(\"isBusy\", true);\r\n                _this._thumbDown = true;\r\n                _this._gripDown = undefined;\r\n            }));\r\n            this._disposers.push(startGrip.events.on(\"globalpointerup\", function () {\r\n                if (_this._startDown) {\r\n                    _this.setPrivateRaw(\"isBusy\", false);\r\n                }\r\n                _this._startDown = false;\r\n            }));\r\n            this._disposers.push(endGrip.events.on(\"globalpointerup\", function () {\r\n                if (_this._endDown) {\r\n                    _this.setPrivateRaw(\"isBusy\", false);\r\n                }\r\n                _this._endDown = false;\r\n            }));\r\n            this._disposers.push(thumb.events.on(\"globalpointerup\", function () {\r\n                if (_this._thumbDown) {\r\n                    _this.setPrivateRaw(\"isBusy\", false);\r\n                }\r\n                _this._thumbDown = false;\r\n            }));\r\n            this._disposers.push(startGrip.on(\"x\", function () {\r\n                _this._updateThumb();\r\n            }));\r\n            this._disposers.push(endGrip.on(\"x\", function () {\r\n                _this._updateThumb();\r\n            }));\r\n            this._disposers.push(startGrip.on(\"y\", function () {\r\n                _this._updateThumb();\r\n            }));\r\n            this._disposers.push(endGrip.on(\"y\", function () {\r\n                _this._updateThumb();\r\n            }));\r\n            this._disposers.push(thumb.events.on(\"positionchanged\", function () {\r\n                _this._updateGripsByThumb();\r\n            }));\r\n            if (this.get(\"orientation\") == \"vertical\") {\r\n                startGrip.set(\"x\", 0);\r\n                endGrip.set(\"x\", 0);\r\n                this._disposers.push(thumb.adapters.add(\"y\", function (value) {\r\n                    return Math.max(Math.min(Number(value), _this.height() - thumb.height()), 0);\r\n                }));\r\n                this._disposers.push(thumb.adapters.add(\"x\", function (_value) {\r\n                    return _this.width() / 2;\r\n                }));\r\n                this._disposers.push(startGrip.adapters.add(\"x\", function (_value) {\r\n                    return _this.width() / 2;\r\n                }));\r\n                this._disposers.push(endGrip.adapters.add(\"x\", function (_value) {\r\n                    return _this.width() / 2;\r\n                }));\r\n                this._disposers.push(startGrip.adapters.add(\"y\", function (value) {\r\n                    return Math.max(Math.min(Number(value), _this.height()), 0);\r\n                }));\r\n                this._disposers.push(endGrip.adapters.add(\"y\", function (value) {\r\n                    return Math.max(Math.min(Number(value), _this.height()), 0);\r\n                }));\r\n            }\r\n            else {\r\n                startGrip.set(\"y\", 0);\r\n                endGrip.set(\"y\", 0);\r\n                this._disposers.push(thumb.adapters.add(\"x\", function (value) {\r\n                    return Math.max(Math.min(Number(value), _this.width() - thumb.width()), 0);\r\n                }));\r\n                this._disposers.push(thumb.adapters.add(\"y\", function (_value) {\r\n                    return _this.height() / 2;\r\n                }));\r\n                this._disposers.push(startGrip.adapters.add(\"y\", function (_value) {\r\n                    return _this.height() / 2;\r\n                }));\r\n                this._disposers.push(endGrip.adapters.add(\"y\", function (_value) {\r\n                    return _this.height() / 2;\r\n                }));\r\n                this._disposers.push(startGrip.adapters.add(\"x\", function (value) {\r\n                    return Math.max(Math.min(Number(value), _this.width()), 0);\r\n                }));\r\n                this._disposers.push(endGrip.adapters.add(\"x\", function (value) {\r\n                    return Math.max(Math.min(Number(value), _this.width()), 0);\r\n                }));\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Scrollbar.prototype, \"_updateChildren\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._updateChildren.call(this);\r\n            if (this.isDirty(\"end\") || this.isDirty(\"start\") || this._sizeDirty) {\r\n                this.updateGrips();\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Scrollbar.prototype, \"_changed\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._changed.call(this);\r\n            if (this.isDirty(\"start\") || this.isDirty(\"end\")) {\r\n                var eventType = \"rangechanged\";\r\n                if (this.events.isEnabled(eventType)) {\r\n                    this.events.dispatch(eventType, { type: eventType, target: this, start: this.get(\"start\", 0), end: this.get(\"end\", 1), grip: this._gripDown });\r\n                }\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(Scrollbar.prototype, \"updateGrips\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var startGrip = this.startGrip;\r\n            var endGrip = this.endGrip;\r\n            var orientation = this.get(\"orientation\");\r\n            var height = this.height();\r\n            var width = this.width();\r\n            if (orientation == \"vertical\") {\r\n                startGrip.set(\"y\", height * this.get(\"start\", 0));\r\n                endGrip.set(\"y\", height * this.get(\"end\", 1));\r\n            }\r\n            else {\r\n                startGrip.set(\"x\", width * this.get(\"start\", 0));\r\n                endGrip.set(\"x\", width * this.get(\"end\", 1));\r\n            }\r\n            var valueFunction = this.getPrivate(\"positionTextFunction\");\r\n            var from = Math.round(this.get(\"start\", 0) * 100);\r\n            var to = Math.round(this.get(\"end\", 0) * 100);\r\n            var fromValue;\r\n            var toValue;\r\n            if (valueFunction) {\r\n                fromValue = valueFunction.call(this, this.get(\"start\", 0));\r\n                toValue = valueFunction.call(this, this.get(\"end\", 0));\r\n            }\r\n            else {\r\n                fromValue = from + \"%\";\r\n                toValue = to + \"%\";\r\n            }\r\n            startGrip.set(\"ariaLabel\", this._t(\"From %1\", undefined, fromValue));\r\n            startGrip.set(\"ariaValueNow\", \"\" + from);\r\n            startGrip.set(\"ariaValueText\", from + \"%\");\r\n            startGrip.set(\"ariaValueMin\", \"0\");\r\n            startGrip.set(\"ariaValueMax\", \"100\");\r\n            endGrip.set(\"ariaLabel\", this._t(\"To %1\", undefined, toValue));\r\n            endGrip.set(\"ariaValueNow\", \"\" + to);\r\n            endGrip.set(\"ariaValueText\", to + \"%\");\r\n            endGrip.set(\"ariaValueMin\", \"0\");\r\n            endGrip.set(\"ariaValueMax\", \"100\");\r\n        }\r\n    });\r\n    Object.defineProperty(Scrollbar.prototype, \"_updateThumb\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var thumb = this.thumb;\r\n            var startGrip = this.startGrip;\r\n            var endGrip = this.endGrip;\r\n            var height = this.height();\r\n            var width = this.width();\r\n            var x0 = startGrip.x();\r\n            var x1 = endGrip.x();\r\n            var y0 = startGrip.y();\r\n            var y1 = endGrip.y();\r\n            var start = 0;\r\n            var end = 1;\r\n            if (this.get(\"orientation\") == \"vertical\") {\r\n                if ($type.isNumber(y0) && $type.isNumber(y1)) {\r\n                    if (!this._thumbBusy && !thumb.isDragging()) {\r\n                        thumb.set(\"height\", y1 - y0);\r\n                        thumb.set(\"y\", y0);\r\n                    }\r\n                    start = y0 / height;\r\n                    end = y1 / height;\r\n                }\r\n            }\r\n            else {\r\n                if ($type.isNumber(x0) && $type.isNumber(x1)) {\r\n                    if (!this._thumbBusy && !thumb.isDragging()) {\r\n                        thumb.set(\"width\", x1 - x0);\r\n                        thumb.set(\"x\", x0);\r\n                    }\r\n                    start = x0 / width;\r\n                    end = x1 / width;\r\n                }\r\n            }\r\n            if (this.getPrivate(\"isBusy\") && (this.get(\"start\") != start || this.get(\"end\") != end)) {\r\n                this.set(\"start\", start);\r\n                this.set(\"end\", end);\r\n            }\r\n            var valueFunction = this.getPrivate(\"positionTextFunction\");\r\n            var from = Math.round(this.get(\"start\", 0) * 100);\r\n            var to = Math.round(this.get(\"end\", 0) * 100);\r\n            var fromValue;\r\n            var toValue;\r\n            if (valueFunction) {\r\n                fromValue = valueFunction.call(this, this.get(\"start\", 0));\r\n                toValue = valueFunction.call(this, this.get(\"end\", 0));\r\n            }\r\n            else {\r\n                fromValue = from + \"%\";\r\n                toValue = to + \"%\";\r\n            }\r\n            thumb.set(\"ariaLabel\", this._t(\"From %1 to %2\", undefined, fromValue, toValue));\r\n            thumb.set(\"ariaValueNow\", \"\" + from);\r\n            thumb.set(\"ariaValueText\", from + \"%\");\r\n        }\r\n    });\r\n    Object.defineProperty(Scrollbar.prototype, \"_updateGripsByThumb\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var thumb = this.thumb;\r\n            var startGrip = this.startGrip;\r\n            var endGrip = this.endGrip;\r\n            if (this.get(\"orientation\") == \"vertical\") {\r\n                var thumbSize = thumb.height();\r\n                startGrip.set(\"y\", thumb.y());\r\n                endGrip.set(\"y\", thumb.y() + thumbSize);\r\n            }\r\n            else {\r\n                var thumbSize = thumb.width();\r\n                startGrip.set(\"x\", thumb.x());\r\n                endGrip.set(\"x\", thumb.x() + thumbSize);\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Scrollbar, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"Scrollbar\"\r\n    });\r\n    Object.defineProperty(Scrollbar, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: Container.classNames.concat([Scrollbar.className])\r\n    });\r\n    return Scrollbar;\r\n}(Container));\r\nexport { Scrollbar };\r\n//# sourceMappingURL=Scrollbar.js.map","import { __extends } from \"tslib\";\r\nimport { Chart } from \"./Chart\";\r\nimport { Container } from \"../../core/render/Container\";\r\nimport { ListAutoDispose } from \"../../core/util/List\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\nimport * as $array from \"../../core/util/Array\";\r\n/**\r\n * A base class for all series-based charts.\r\n */\r\nvar SerialChart = /** @class */ (function (_super) {\r\n    __extends(SerialChart, _super);\r\n    function SerialChart() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * A [[Container]] where chart will store all series.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(_this, \"seriesContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Container.new(_this._root, { width: p100, height: p100, isMeasured: false })\r\n        });\r\n        /**\r\n         * A list of chart's series.\r\n         */\r\n        Object.defineProperty(_this, \"series\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListAutoDispose()\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(SerialChart.prototype, \"_afterNew\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            _super.prototype._afterNew.call(this);\r\n            this._disposers.push(this.series);\r\n            var children = this.seriesContainer.children;\r\n            this._disposers.push(this.series.events.onAll(function (change) {\r\n                if (change.type === \"clear\") {\r\n                    $array.each(change.oldValues, function (series) {\r\n                        _this._removeSeries(series);\r\n                    });\r\n                    var colors = _this.get(\"colors\");\r\n                    if (colors) {\r\n                        colors.reset();\r\n                    }\r\n                }\r\n                else if (change.type === \"push\") {\r\n                    children.moveValue(change.newValue);\r\n                    _this._processSeries(change.newValue);\r\n                }\r\n                else if (change.type === \"setIndex\") {\r\n                    children.setIndex(change.index, change.newValue);\r\n                    _this._processSeries(change.newValue);\r\n                }\r\n                else if (change.type === \"insertIndex\") {\r\n                    children.insertIndex(change.index, change.newValue);\r\n                    _this._processSeries(change.newValue);\r\n                }\r\n                else if (change.type === \"removeIndex\") {\r\n                    _this._removeSeries(change.oldValue);\r\n                }\r\n                else if (change.type === \"moveIndex\") {\r\n                    children.moveValue(change.value, change.newIndex);\r\n                    _this._processSeries(change.value);\r\n                }\r\n                else {\r\n                    throw new Error(\"Unknown IListEvent type\");\r\n                }\r\n            }));\r\n        }\r\n    });\r\n    Object.defineProperty(SerialChart.prototype, \"_processSeries\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (series) {\r\n            series.chart = this;\r\n            series._placeBulletsContainer(this);\r\n        }\r\n    });\r\n    Object.defineProperty(SerialChart.prototype, \"_removeSeries\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (series) {\r\n            if (!series.isDisposed()) {\r\n                this.seriesContainer.children.removeValue(series);\r\n                series._removeBulletsContainer();\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(SerialChart, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"SerialChart\"\r\n    });\r\n    Object.defineProperty(SerialChart, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: Chart.classNames.concat([SerialChart.className])\r\n    });\r\n    return SerialChart;\r\n}(Chart));\r\nexport { SerialChart };\r\n//# sourceMappingURL=SerialChart.js.map","import { __awaiter, __extends, __generator } from \"tslib\";\r\nimport { Component } from \"../../core/render/Component\";\r\nimport { List } from \"../../core/util/List\";\r\nimport { Color } from \"../../core/util/Color\";\r\nimport { percentInterpolate } from \"../../core/util/Animation\";\r\nimport { Percent } from \"../../core/util/Percent\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $time from \"../../core/util/Time\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\nimport { Container } from \"../../core/render/Container\";\r\nimport { Label } from \"../../core/render/Label\";\r\n/**\r\n * A base class for all series.\r\n */\r\nvar Series = /** @class */ (function (_super) {\r\n    __extends(Series, _super);\r\n    function Series() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        Object.defineProperty(_this, \"_aggregatesCalculated\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(_this, \"_selectionAggregatesCalculated\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(_this, \"_dataProcessed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(_this, \"_psi\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_pei\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A chart series belongs to.\r\n         */\r\n        Object.defineProperty(_this, \"chart\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * List of bullets to use for the series.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/bullets/} for more info\r\n         */\r\n        Object.defineProperty(_this, \"bullets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new List()\r\n        });\r\n        /**\r\n         * A [[Container]] series' bullets are stored in.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(_this, \"bulletsContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Container.new(_this._root, { width: p100, height: p100, position: \"absolute\" })\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Series.prototype, \"_afterNew\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            this.valueFields.push(\"value\");\r\n            _super.prototype._afterNew.call(this);\r\n            this.setPrivate(\"customData\", {});\r\n            this._disposers.push(this.bullets.events.onAll(function (change) {\r\n                if (change.type === \"clear\") {\r\n                    _this._handleBullets(_this.dataItems);\r\n                }\r\n                else if (change.type === \"push\") {\r\n                    _this._handleBullets(_this.dataItems);\r\n                }\r\n                else if (change.type === \"setIndex\") {\r\n                    _this._handleBullets(_this.dataItems);\r\n                }\r\n                else if (change.type === \"insertIndex\") {\r\n                    _this._handleBullets(_this.dataItems);\r\n                }\r\n                else if (change.type === \"removeIndex\") {\r\n                    _this._handleBullets(_this.dataItems);\r\n                }\r\n                else if (change.type === \"moveIndex\") {\r\n                    _this._handleBullets(_this.dataItems);\r\n                }\r\n                else {\r\n                    throw new Error(\"Unknown IListEvent type\");\r\n                }\r\n            }));\r\n        }\r\n    });\r\n    Object.defineProperty(Series.prototype, \"_dispose\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this.bulletsContainer.dispose(); // can be in a different parent\r\n            _super.prototype._dispose.call(this);\r\n        }\r\n    });\r\n    Object.defineProperty(Series.prototype, \"startIndex\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var len = this.dataItems.length;\r\n            return Math.min(this.getPrivate(\"startIndex\", 0), len);\r\n        }\r\n    });\r\n    Object.defineProperty(Series.prototype, \"endIndex\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var len = this.dataItems.length;\r\n            return Math.min(this.getPrivate(\"endIndex\", len), len);\r\n        }\r\n    });\r\n    Object.defineProperty(Series.prototype, \"_handleBullets\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItems) {\r\n            $array.each(dataItems, function (dataItem) {\r\n                var bullets = dataItem.bullets;\r\n                if (bullets) {\r\n                    $array.each(bullets, function (bullet) {\r\n                        bullet.dispose();\r\n                    });\r\n                    dataItem.bullets = undefined;\r\n                }\r\n            });\r\n            this.markDirtyValues();\r\n        }\r\n    });\r\n    /**\r\n     * Looks up and returns a data item by its ID.\r\n     *\r\n     * @param   id  ID\r\n     * @return      Data item\r\n     */\r\n    Object.defineProperty(Series.prototype, \"getDataItemById\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (id) {\r\n            return $array.find(this.dataItems, function (dataItem) {\r\n                return dataItem.get(\"id\") == id;\r\n            });\r\n        }\r\n    });\r\n    Object.defineProperty(Series.prototype, \"_makeBullets\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem) {\r\n            var _this = this;\r\n            if (this._shouldMakeBullet(dataItem)) {\r\n                dataItem.bullets = [];\r\n                this.bullets.each(function (bulletFunction) {\r\n                    _this._makeBullet(dataItem, bulletFunction);\r\n                });\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Series.prototype, \"_shouldMakeBullet\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (_dataItem) {\r\n            return true;\r\n        }\r\n    });\r\n    Object.defineProperty(Series.prototype, \"_makeBullet\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem, bulletFunction, index) {\r\n            var bullet = bulletFunction(this._root, this, dataItem);\r\n            if (bullet) {\r\n                var sprite = bullet.get(\"sprite\");\r\n                if (sprite) {\r\n                    sprite._setDataItem(dataItem);\r\n                    sprite.setRaw(\"position\", \"absolute\");\r\n                    this.bulletsContainer.children.push(sprite);\r\n                }\r\n                bullet._index = index;\r\n                bullet.series = this;\r\n                dataItem.bullets.push(bullet);\r\n            }\r\n            return bullet;\r\n        }\r\n    });\r\n    Object.defineProperty(Series.prototype, \"_clearDirty\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._clearDirty.call(this);\r\n            this._aggregatesCalculated = false;\r\n            this._selectionAggregatesCalculated = false;\r\n        }\r\n    });\r\n    Object.defineProperty(Series.prototype, \"_prepareChildren\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            _super.prototype._prepareChildren.call(this);\r\n            var startIndex = this.startIndex();\r\n            var endIndex = this.endIndex();\r\n            if (this.isPrivateDirty(\"baseValueSeries\")) {\r\n                var baseValueSeries = this.getPrivate(\"baseValueSeries\");\r\n                if (baseValueSeries) {\r\n                    this._disposers.push(baseValueSeries.onPrivate(\"startIndex\", function () {\r\n                        _this.markDirtyValues();\r\n                    }));\r\n                }\r\n            }\r\n            var calculateAggregates = this.get(\"calculateAggregates\");\r\n            if (calculateAggregates) {\r\n                if (this._valuesDirty && !this._dataProcessed) {\r\n                    if (!this._aggregatesCalculated) {\r\n                        this._calculateAggregates(0, this.dataItems.length);\r\n                        this._aggregatesCalculated = true;\r\n                    }\r\n                }\r\n                if ((this._psi != startIndex || this._pei != endIndex) && !this._selectionAggregatesCalculated) {\r\n                    if (startIndex === 0 && endIndex === this.dataItems.length && this._aggregatesCalculated) {\r\n                        // void\r\n                    }\r\n                    else {\r\n                        this._calculateAggregates(startIndex, endIndex);\r\n                    }\r\n                    this._selectionAggregatesCalculated = true;\r\n                }\r\n            }\r\n            if (this.isDirty(\"tooltip\")) {\r\n                var tooltip = this.get(\"tooltip\");\r\n                if (tooltip) {\r\n                    tooltip.hide(0);\r\n                    tooltip.set(\"tooltipTarget\", this);\r\n                }\r\n            }\r\n            if (this.isDirty(\"fill\") || this.isDirty(\"stroke\")) {\r\n                var markerRectangle = void 0;\r\n                var legendDataItem = this.get(\"legendDataItem\");\r\n                if (legendDataItem) {\r\n                    markerRectangle = legendDataItem.get(\"markerRectangle\");\r\n                    if (markerRectangle) {\r\n                        if (this.isVisible()) {\r\n                            if (this.isDirty(\"stroke\")) {\r\n                                var stroke = this.get(\"stroke\");\r\n                                markerRectangle.set(\"stroke\", stroke);\r\n                            }\r\n                            if (this.isDirty(\"fill\")) {\r\n                                var fill = this.get(\"fill\");\r\n                                markerRectangle.set(\"fill\", fill);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                this.updateLegendMarker(undefined);\r\n            }\r\n            if (this.bullets.length > 0) {\r\n                var startIndex_1 = this.startIndex();\r\n                var endIndex_1 = this.endIndex();\r\n                if (endIndex_1 < this.dataItems.length) {\r\n                    endIndex_1++;\r\n                }\r\n                for (var i = startIndex_1; i < endIndex_1; i++) {\r\n                    var dataItem = this.dataItems[i];\r\n                    if (!dataItem.bullets) {\r\n                        this._makeBullets(dataItem);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Series.prototype, \"_calculateAggregates\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (startIndex, endIndex) {\r\n            var _this = this;\r\n            var fields = this._valueFields;\r\n            if (!fields) {\r\n                throw new Error(\"No value fields are set for the series.\");\r\n            }\r\n            var sum = {};\r\n            var absSum = {};\r\n            var count = {};\r\n            var low = {};\r\n            var high = {};\r\n            var open = {};\r\n            var close = {};\r\n            var average = {};\r\n            var previous = {};\r\n            $array.each(fields, function (key) {\r\n                sum[key] = 0;\r\n                absSum[key] = 0;\r\n                count[key] = 0;\r\n            });\r\n            $array.each(fields, function (key) {\r\n                var change = key + \"Change\";\r\n                var changePercent = key + \"ChangePercent\";\r\n                var changePrevious = key + \"ChangePrevious\";\r\n                var changePreviousPercent = key + \"ChangePreviousPercent\";\r\n                var changeSelection = key + \"ChangeSelection\";\r\n                var changeSelectionPercent = key + \"ChangeSelectionPercent\";\r\n                var openKey = \"valueY\";\r\n                if (key == \"valueX\" || key == \"openValueX\" || key == \"lowValueX\" || key == \"highValueX\") {\r\n                    openKey = \"valueX\";\r\n                }\r\n                var baseValueSeries = _this.getPrivate(\"baseValueSeries\");\r\n                for (var i = startIndex; i < endIndex; i++) {\r\n                    var dataItem = _this.dataItems[i];\r\n                    var value = dataItem.get(key);\r\n                    if (value != null) {\r\n                        count[key]++;\r\n                        sum[key] += value;\r\n                        absSum[key] += Math.abs(value);\r\n                        average[key] = sum[key] / count[key];\r\n                        if (low[key] > value || low[key] == null) {\r\n                            low[key] = value;\r\n                        }\r\n                        if (high[key] < value || high[key] == null) {\r\n                            high[key] = value;\r\n                        }\r\n                        close[key] = value;\r\n                        if (open[key] == null) {\r\n                            open[key] = value;\r\n                            previous[key] = value;\r\n                            if (baseValueSeries) {\r\n                                open[openKey] = baseValueSeries._getBase(openKey);\r\n                            }\r\n                        }\r\n                        if (startIndex === 0) {\r\n                            dataItem.setRaw((change), value - open[openKey]);\r\n                            dataItem.setRaw((changePercent), (value - open[openKey]) / open[openKey] * 100);\r\n                        }\r\n                        dataItem.setRaw((changePrevious), value - previous[openKey]);\r\n                        dataItem.setRaw((changePreviousPercent), (value - previous[openKey]) / previous[openKey] * 100);\r\n                        dataItem.setRaw((changeSelection), value - open[openKey]);\r\n                        dataItem.setRaw((changeSelectionPercent), (value - open[openKey]) / open[openKey] * 100);\r\n                        previous[key] = value;\r\n                    }\r\n                }\r\n            });\r\n            $array.each(fields, function (key) {\r\n                _this.setPrivate((key + \"AverageSelection\"), average[key]);\r\n                _this.setPrivate((key + \"CountSelection\"), count[key]);\r\n                _this.setPrivate((key + \"SumSelection\"), sum[key]);\r\n                _this.setPrivate((key + \"AbsoluteSumSelection\"), absSum[key]);\r\n                _this.setPrivate((key + \"LowSelection\"), low[key]);\r\n                _this.setPrivate((key + \"HighSelection\"), high[key]);\r\n                _this.setPrivate((key + \"OpenSelection\"), open[key]);\r\n                _this.setPrivate((key + \"CloseSelection\"), close[key]);\r\n            });\r\n            if (startIndex === 0 && endIndex === this.dataItems.length) {\r\n                $array.each(fields, function (key) {\r\n                    _this.setPrivate((key + \"Average\"), average[key]);\r\n                    _this.setPrivate((key + \"Count\"), count[key]);\r\n                    _this.setPrivate((key + \"Sum\"), sum[key]);\r\n                    _this.setPrivate((key + \"AbsoluteSum\"), absSum[key]);\r\n                    _this.setPrivate((key + \"Low\"), low[key]);\r\n                    _this.setPrivate((key + \"High\"), high[key]);\r\n                    _this.setPrivate((key + \"Open\"), open[key]);\r\n                    _this.setPrivate((key + \"Close\"), close[key]);\r\n                });\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Series.prototype, \"_updateChildren\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            _super.prototype._updateChildren.call(this);\r\n            this._psi = this.startIndex();\r\n            this._pei = this.endIndex();\r\n            if (this.isDirty(\"visible\")) {\r\n                this.bulletsContainer.set(\"visible\", this.get(\"visible\"));\r\n            }\r\n            // Apply heat rules\r\n            if (this._valuesDirty && this.get(\"heatRules\") != null) {\r\n                var rules = this.get(\"heatRules\", []);\r\n                $array.each(rules, function (rule) {\r\n                    var minValue = rule.minValue || _this.getPrivate((rule.dataField + \"Low\")) || 0;\r\n                    var maxValue = rule.maxValue || _this.getPrivate((rule.dataField + \"High\")) || 0;\r\n                    $array.each(rule.target._entities, function (target) {\r\n                        var value = target.dataItem.get(rule.dataField);\r\n                        if (!$type.isNumber(value)) {\r\n                            return;\r\n                        }\r\n                        var percent;\r\n                        if (rule.logarithmic) {\r\n                            percent = (Math.log(value) * Math.LOG10E - Math.log(minValue) * Math.LOG10E) / ((Math.log(maxValue) * Math.LOG10E - Math.log(minValue) * Math.LOG10E));\r\n                        }\r\n                        else {\r\n                            percent = (value - minValue) / (maxValue - minValue);\r\n                        }\r\n                        if ($type.isNumber(value) && (!$type.isNumber(percent) || Math.abs(percent) == Infinity)) {\r\n                            percent = 0.5;\r\n                        }\r\n                        // fixes problems if all values are the same\r\n                        var propertyValue;\r\n                        if ($type.isNumber(rule.min)) {\r\n                            propertyValue = rule.min + (rule.max - rule.min) * percent;\r\n                        }\r\n                        else if (rule.min instanceof Color) {\r\n                            propertyValue = Color.interpolate(percent, rule.min, rule.max);\r\n                        }\r\n                        else if (rule.min instanceof Percent) {\r\n                            propertyValue = percentInterpolate(percent, rule.min, rule.max);\r\n                        }\r\n                        if (rule.customFunction) {\r\n                            rule.customFunction.call(_this, target, minValue, maxValue, value);\r\n                        }\r\n                        else {\r\n                            target.set(rule.key, propertyValue);\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n            if (this.bullets.length > 0) {\r\n                var count = this.dataItems.length;\r\n                var startIndex = this.startIndex();\r\n                var endIndex = this.endIndex();\r\n                if (endIndex < count) {\r\n                    endIndex++;\r\n                }\r\n                if (startIndex > 0) {\r\n                    startIndex--;\r\n                }\r\n                for (var i = 0; i < startIndex; i++) {\r\n                    this._hideBullets(this.dataItems[i]);\r\n                }\r\n                for (var i = startIndex; i < endIndex; i++) {\r\n                    this._positionBullets(this.dataItems[i]);\r\n                }\r\n                for (var i = endIndex; i < count; i++) {\r\n                    this._hideBullets(this.dataItems[i]);\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Series.prototype, \"_positionBullets\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem) {\r\n            var _this = this;\r\n            if (dataItem.bullets) {\r\n                $array.each(dataItem.bullets, function (bullet) {\r\n                    _this._positionBullet(bullet);\r\n                    var sprite = bullet.get(\"sprite\");\r\n                    if (bullet.get(\"dynamic\")) {\r\n                        if (sprite) {\r\n                            sprite._markDirtyKey(\"fill\");\r\n                            sprite.markDirtySize();\r\n                        }\r\n                        if (sprite instanceof Container) {\r\n                            sprite.walkChildren(function (child) {\r\n                                child._markDirtyKey(\"fill\");\r\n                                child.markDirtySize();\r\n                                if (child instanceof Label) {\r\n                                    child.text.markDirtyText();\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                    if (sprite instanceof Label && sprite.get(\"populateText\")) {\r\n                        sprite.text.markDirtyText();\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Series.prototype, \"_hideBullets\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem) {\r\n            if (dataItem.bullets) {\r\n                $array.each(dataItem.bullets, function (bullet) {\r\n                    var sprite = bullet.get(\"sprite\");\r\n                    if (sprite) {\r\n                        sprite.setPrivate(\"visible\", false);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Series.prototype, \"_positionBullet\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (_bullet) {\r\n        }\r\n    });\r\n    Object.defineProperty(Series.prototype, \"_placeBulletsContainer\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (chart) {\r\n            chart.bulletsContainer.children.moveValue(this.bulletsContainer);\r\n        }\r\n    });\r\n    Object.defineProperty(Series.prototype, \"_removeBulletsContainer\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var bulletsContainer = this.bulletsContainer;\r\n            if (bulletsContainer.parent) {\r\n                bulletsContainer.parent.children.removeValue(bulletsContainer);\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(Series.prototype, \"disposeDataItem\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem) {\r\n            //super.disposeDataItem(dataItem); // does nothing\r\n            var bullets = dataItem.bullets;\r\n            if (bullets) {\r\n                $array.each(bullets, function (bullet) {\r\n                    bullet.dispose();\r\n                });\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Series.prototype, \"_getItemReaderLabel\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            return \"\";\r\n        }\r\n    });\r\n    /**\r\n     * Shows series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    Object.defineProperty(Series.prototype, \"showDataItem\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem, duration) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var promises, bullets;\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0:\r\n                            promises = [_super.prototype.showDataItem.call(this, dataItem, duration)];\r\n                            bullets = dataItem.bullets;\r\n                            if (bullets) {\r\n                                $array.each(bullets, function (bullet) {\r\n                                    promises.push(bullet.get(\"sprite\").show(duration));\r\n                                });\r\n                            }\r\n                            return [4 /*yield*/, Promise.all(promises)];\r\n                        case 1:\r\n                            _a.sent();\r\n                            return [2 /*return*/];\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    });\r\n    /**\r\n     * Hides series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    Object.defineProperty(Series.prototype, \"hideDataItem\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem, duration) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var promises, bullets;\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0:\r\n                            promises = [_super.prototype.hideDataItem.call(this, dataItem, duration)];\r\n                            bullets = dataItem.bullets;\r\n                            if (bullets) {\r\n                                $array.each(bullets, function (bullet) {\r\n                                    promises.push(bullet.get(\"sprite\").hide(duration));\r\n                                });\r\n                            }\r\n                            return [4 /*yield*/, Promise.all(promises)];\r\n                        case 1:\r\n                            _a.sent();\r\n                            return [2 /*return*/];\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    });\r\n    Object.defineProperty(Series.prototype, \"_sequencedShowHide\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (show, duration) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var startIndex_2, endIndex_2;\r\n                var _this = this;\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0:\r\n                            if (!this.get(\"sequencedInterpolation\")) return [3 /*break*/, 4];\r\n                            if (!$type.isNumber(duration)) {\r\n                                duration = this.get(\"interpolationDuration\", 0);\r\n                            }\r\n                            if (!(duration > 0)) return [3 /*break*/, 2];\r\n                            startIndex_2 = this.startIndex();\r\n                            endIndex_2 = this.endIndex();\r\n                            return [4 /*yield*/, Promise.all($array.map(this.dataItems, function (dataItem, i) { return __awaiter(_this, void 0, void 0, function () {\r\n                                    var realDuration, delay;\r\n                                    return __generator(this, function (_a) {\r\n                                        switch (_a.label) {\r\n                                            case 0:\r\n                                                realDuration = duration || 0;\r\n                                                if (i < startIndex_2 - 10 || i > endIndex_2 + 10) {\r\n                                                    realDuration = 0;\r\n                                                }\r\n                                                delay = this.get(\"sequencedDelay\", 0) + realDuration / (endIndex_2 - startIndex_2);\r\n                                                return [4 /*yield*/, $time.sleep(delay * (i - startIndex_2))];\r\n                                            case 1:\r\n                                                _a.sent();\r\n                                                if (!show) return [3 /*break*/, 3];\r\n                                                return [4 /*yield*/, this.showDataItem(dataItem, realDuration)];\r\n                                            case 2:\r\n                                                _a.sent();\r\n                                                return [3 /*break*/, 5];\r\n                                            case 3: return [4 /*yield*/, this.hideDataItem(dataItem, realDuration)];\r\n                                            case 4:\r\n                                                _a.sent();\r\n                                                _a.label = 5;\r\n                                            case 5: return [2 /*return*/];\r\n                                        }\r\n                                    });\r\n                                }); }))];\r\n                        case 1:\r\n                            _a.sent();\r\n                            return [3 /*break*/, 4];\r\n                        case 2: return [4 /*yield*/, Promise.all($array.map(this.dataItems, function (dataItem) {\r\n                                if (show) {\r\n                                    return _this.showDataItem(dataItem, 0);\r\n                                }\r\n                                else {\r\n                                    return _this.hideDataItem(dataItem, 0);\r\n                                }\r\n                            }))];\r\n                        case 3:\r\n                            _a.sent();\r\n                            _a.label = 4;\r\n                        case 4: return [2 /*return*/];\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(Series.prototype, \"updateLegendValue\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem) {\r\n            var legendDataItem = dataItem.get(\"legendDataItem\");\r\n            if (legendDataItem) {\r\n                var valueLabel = legendDataItem.get(\"valueLabel\");\r\n                if (valueLabel) {\r\n                    var text = valueLabel.text;\r\n                    var txt = \"\";\r\n                    valueLabel._setDataItem(dataItem);\r\n                    txt = this.get(\"legendValueText\", text.get(\"text\", \"\"));\r\n                    valueLabel.set(\"text\", txt);\r\n                    text.markDirtyText();\r\n                }\r\n                var label = legendDataItem.get(\"label\");\r\n                if (label) {\r\n                    var text = label.text;\r\n                    var txt = \"\";\r\n                    label._setDataItem(dataItem);\r\n                    txt = this.get(\"legendLabelText\", text.get(\"text\", \"\"));\r\n                    label.set(\"text\", txt);\r\n                    text.markDirtyText();\r\n                }\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(Series.prototype, \"updateLegendMarker\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (_dataItem) {\r\n        }\r\n    });\r\n    Object.defineProperty(Series.prototype, \"_onHide\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._onHide.call(this);\r\n            var tooltip = this.getTooltip();\r\n            if (tooltip) {\r\n                tooltip.hide();\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(Series.prototype, \"hoverDataItem\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (_dataItem) { }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(Series.prototype, \"unhoverDataItem\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (_dataItem) { }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(Series.prototype, \"_getBase\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key) {\r\n            var dataItem = this.dataItems[this.startIndex()];\r\n            if (dataItem) {\r\n                return dataItem.get(key);\r\n            }\r\n            return 0;\r\n        }\r\n    });\r\n    Object.defineProperty(Series, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"Series\"\r\n    });\r\n    Object.defineProperty(Series, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: Component.classNames.concat([Series.className])\r\n    });\r\n    return Series;\r\n}(Component));\r\nexport { Series };\r\n//# sourceMappingURL=Series.js.map","import { __extends } from \"tslib\";\r\nimport { Graphics } from \"./Graphics\";\r\nimport * as $type from \"../util/Type\";\r\nimport { Percent } from \"../util/Percent\";\r\nimport { arc } from \"d3-shape\";\r\nimport * as $math from \"../util/Math\";\r\n/**\r\n * Draws a slice shape.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n */\r\nvar Slice = /** @class */ (function (_super) {\r\n    __extends(Slice, _super);\r\n    function Slice() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * @ignore\r\n         */\r\n        Object.defineProperty(_this, \"ix\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        /**\r\n         * @ignore\r\n         */\r\n        Object.defineProperty(_this, \"iy\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(_this, \"_generator\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: arc()\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Slice.prototype, \"_getTooltipPoint\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var tooltipX = this.get(\"tooltipX\");\r\n            var tooltipY = this.get(\"tooltipY\");\r\n            var x = 0;\r\n            var y = 0;\r\n            if ($type.isNumber(tooltipX)) {\r\n                x = tooltipX;\r\n            }\r\n            if ($type.isNumber(tooltipY)) {\r\n                y = tooltipY;\r\n            }\r\n            var radius = this.get(\"radius\", 0);\r\n            var innerRadius = this.get(\"innerRadius\", 0);\r\n            var dRadius = this.get(\"dRadius\", 0);\r\n            var dInnerRadius = this.get(\"dInnerRadius\", 0);\r\n            radius += dRadius;\r\n            innerRadius += dInnerRadius;\r\n            if (innerRadius < 0) {\r\n                innerRadius = radius + innerRadius;\r\n            }\r\n            if (tooltipX instanceof Percent) {\r\n                x = this.ix * (innerRadius + (radius - innerRadius) * tooltipX.value);\r\n            }\r\n            if (tooltipY instanceof Percent) {\r\n                y = this.iy * (innerRadius + (radius - innerRadius) * tooltipY.value);\r\n            }\r\n            if (this.get(\"arc\") >= 360 && innerRadius == 0) {\r\n                x = 0;\r\n                y = 0;\r\n            }\r\n            return { x: x, y: y };\r\n        }\r\n    });\r\n    Object.defineProperty(Slice.prototype, \"_beforeChanged\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._beforeChanged.call(this);\r\n            if (this.isDirty(\"radius\") || this.isDirty(\"arc\") || this.isDirty(\"innerRadius\") || this.isDirty(\"startAngle\") || this.isDirty(\"dRadius\") || this.isDirty(\"dInnerRadius\") || this.isDirty(\"cornerRadius\")) {\r\n                this._clear = true;\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Slice.prototype, \"_changed\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._changed.call(this);\r\n            if (this._clear) {\r\n                var startAngle = this.get(\"startAngle\", 0);\r\n                var arc_1 = this.get(\"arc\", 0);\r\n                var generator = this._generator;\r\n                if (arc_1 < 0) {\r\n                    startAngle = startAngle + arc_1;\r\n                    arc_1 = arc_1 * -1;\r\n                }\r\n                if (arc_1 > 0.1) { // this fixes bug with full circle when arc is very small\r\n                    generator.cornerRadius(this.get(\"cornerRadius\", 0));\r\n                }\r\n                generator.context(this._display);\r\n                var radius = this.get(\"radius\", 0);\r\n                var innerRadius = this.get(\"innerRadius\", 0);\r\n                var dRadius = this.get(\"dRadius\", 0);\r\n                var dInnerRadius = this.get(\"dInnerRadius\", 0);\r\n                radius += dRadius;\r\n                innerRadius += dInnerRadius;\r\n                if (innerRadius < 0) {\r\n                    innerRadius = radius + innerRadius;\r\n                }\r\n                generator({ innerRadius: innerRadius, outerRadius: radius, startAngle: (startAngle + 90) * $math.RADIANS, endAngle: (startAngle + arc_1 + 90) * $math.RADIANS });\r\n                var middleAngle = startAngle + arc_1 / 2;\r\n                this.ix = $math.cos(middleAngle);\r\n                this.iy = $math.sin(middleAngle);\r\n            }\r\n            if (this.isDirty(\"shiftRadius\")) {\r\n                var shiftRadius = this.get(\"shiftRadius\", 0);\r\n                this.setRaw(\"dx\", this.ix * shiftRadius);\r\n                this.setRaw(\"dy\", this.iy * shiftRadius);\r\n                this.markDirtyPosition();\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Slice, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"Slice\"\r\n    });\r\n    Object.defineProperty(Slice, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: Graphics.classNames.concat([Slice.className])\r\n    });\r\n    return Slice;\r\n}(Graphics));\r\nexport { Slice };\r\n//# sourceMappingURL=Slice.js.map","import { __extends } from \"tslib\";\r\nimport { Scrollbar } from \"./Scrollbar\";\r\n/**\r\n * A control that allows zooming chart's axes, or other uses requiring range\r\n * selection.\r\n */\r\nvar Slider = /** @class */ (function (_super) {\r\n    __extends(Slider, _super);\r\n    function Slider() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Slider.prototype, \"_afterNew\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this._addOrientationClass();\r\n            _super.prototype._afterNew.call(this);\r\n            this.endGrip.setPrivate(\"visible\", false);\r\n            this.thumb.setPrivate(\"visible\", false);\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(Slider.prototype, \"updateGrips\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype.updateGrips.call(this);\r\n            var startGrip = this.startGrip;\r\n            this.endGrip.setAll({ x: startGrip.x(), y: startGrip.y() });\r\n            this.setRaw(\"end\", this.get(\"start\"));\r\n        }\r\n    });\r\n    Object.defineProperty(Slider, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"Slider\"\r\n    });\r\n    Object.defineProperty(Slider, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: Scrollbar.classNames.concat([Slider.className])\r\n    });\r\n    return Slider;\r\n}(Scrollbar));\r\nexport { Slider };\r\n//# sourceMappingURL=Slider.js.map","import { __awaiter, __extends, __generator } from \"tslib\";\r\nimport { Entity } from \"../util/Entity\";\r\nimport { Template } from \"../util/Template\";\r\nimport { Percent } from \"../util/Percent\";\r\nimport { EventDispatcher } from \"../util/EventDispatcher\";\r\nimport { MultiDisposer, CounterDisposer } from \"../util/Disposer\";\r\nimport { waitForAnimations } from \"../util/Animation\";\r\nimport * as $utils from \"../util/Utils\";\r\nimport * as $array from \"../util/Array\";\r\nimport * as $type from \"../util/Type\";\r\nimport * as $object from \"../util/Object\";\r\nimport * as $math from \"../util/Math\";\r\n//import { populateString } from \"../util/PopulateString\";\r\n/**\r\n * An [[EventDispatcher]] for [[Sprite]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/events/} for more info\r\n */\r\nvar SpriteEventDispatcher = /** @class */ (function (_super) {\r\n    __extends(SpriteEventDispatcher, _super);\r\n    function SpriteEventDispatcher(sprite) {\r\n        var _this = _super.call(this) || this;\r\n        Object.defineProperty(_this, \"_sprite\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_rendererDisposers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(_this, \"_dispatchParents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        _this._sprite = sprite;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(SpriteEventDispatcher.prototype, \"_makePointerEvent\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key, event) {\r\n            return {\r\n                type: key,\r\n                originalEvent: event.event,\r\n                point: event.point,\r\n                simulated: event.simulated,\r\n                native: event.native,\r\n                target: this._sprite\r\n            };\r\n        }\r\n    });\r\n    Object.defineProperty(SpriteEventDispatcher.prototype, \"_onRenderer\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key, dispatch) {\r\n            var _this = this;\r\n            // TODO: is this OK? it'd be good not to require to set this on each individual element\r\n            this._sprite.set(\"interactive\", true);\r\n            this._sprite._display.interactive = true;\r\n            var events = this._rendererDisposers[key];\r\n            if (events === undefined) {\r\n                var disposer_1 = this._sprite._display.on(key, function (e) {\r\n                    dispatch.call(_this, e);\r\n                });\r\n                events = this._rendererDisposers[key] = new CounterDisposer(function () {\r\n                    delete _this._rendererDisposers[key];\r\n                    disposer_1.dispose();\r\n                });\r\n            }\r\n            return events.increment();\r\n        }\r\n    });\r\n    Object.defineProperty(SpriteEventDispatcher.prototype, \"_on\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (once, type, callback, context, shouldClone, dispatch) {\r\n            var info = _super.prototype._on.call(this, once, type, callback, context, shouldClone, dispatch);\r\n            var rendererEvent = SpriteEventDispatcher.RENDERER_EVENTS[type];\r\n            if (rendererEvent !== undefined) {\r\n                info.disposer = new MultiDisposer([\r\n                    info.disposer,\r\n                    this._onRenderer(type, rendererEvent),\r\n                ]);\r\n            }\r\n            return info;\r\n        }\r\n    });\r\n    /**\r\n     * Will stop any bubbling up of the event to element's parents.\r\n     *\r\n     * Should be called in an event handler, e.g.:\r\n     *\r\n     * ```TypeScript\r\n     * element.events.on(\"pointerdown\", function(ev) {\r\n     *   // Do something here and prevent from \"pointerdown\" bubbling up\r\n     *   // ...\r\n     *   ev.target.events.stopParentDispatch();\r\n     * });\r\n     * ```\r\n     * ```JavaScript\r\n     * element.events.on(\"pointerdown\", function(ev) {\r\n     *   // Do something here and prevent from \"pointerdown\" bubbling up\r\n     *   // ...\r\n     *   ev.target.events.stopParentDispatch();\r\n     * });\r\n     * ```\r\n     */\r\n    Object.defineProperty(SpriteEventDispatcher.prototype, \"stopParentDispatch\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this._dispatchParents = false;\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(SpriteEventDispatcher.prototype, \"dispatchParents\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (type, event) {\r\n            var old = this._dispatchParents;\r\n            this._dispatchParents = true;\r\n            try {\r\n                this.dispatch(type, event);\r\n                if (this._dispatchParents && this._sprite.parent) {\r\n                    this._sprite.parent.events.dispatchParents(type, event);\r\n                }\r\n            }\r\n            finally {\r\n                this._dispatchParents = old;\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(SpriteEventDispatcher, \"RENDERER_EVENTS\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: {\r\n            \"click\": function (event) {\r\n                if (this.isEnabled(\"click\") && !this._sprite.isDragging() && this._sprite._hasDown() && !this._sprite._hasMoved(this._makePointerEvent(\"click\", event))) {\r\n                    this.dispatch(\"click\", this._makePointerEvent(\"click\", event));\r\n                }\r\n            },\r\n            \"rightclick\": function (event) {\r\n                if (this.isEnabled(\"rightclick\")) {\r\n                    this.dispatch(\"rightclick\", this._makePointerEvent(\"rightclick\", event));\r\n                }\r\n            },\r\n            \"middleclick\": function (event) {\r\n                if (this.isEnabled(\"middleclick\")) {\r\n                    this.dispatch(\"middleclick\", this._makePointerEvent(\"middleclick\", event));\r\n                }\r\n            },\r\n            \"dblclick\": function (event) {\r\n                this.dispatchParents(\"dblclick\", this._makePointerEvent(\"dblclick\", event));\r\n            },\r\n            \"pointerover\": function (event) {\r\n                if (this.isEnabled(\"pointerover\")) {\r\n                    this.dispatch(\"pointerover\", this._makePointerEvent(\"pointerover\", event));\r\n                }\r\n            },\r\n            \"pointerout\": function (event) {\r\n                if (this.isEnabled(\"pointerout\")) {\r\n                    this.dispatch(\"pointerout\", this._makePointerEvent(\"pointerout\", event));\r\n                }\r\n            },\r\n            \"pointerdown\": function (event) {\r\n                this.dispatchParents(\"pointerdown\", this._makePointerEvent(\"pointerdown\", event));\r\n            },\r\n            \"pointerup\": function (event) {\r\n                if (this.isEnabled(\"pointerup\")) {\r\n                    this.dispatch(\"pointerup\", this._makePointerEvent(\"pointerup\", event));\r\n                }\r\n            },\r\n            \"globalpointerup\": function (event) {\r\n                if (this.isEnabled(\"globalpointerup\")) {\r\n                    this.dispatch(\"globalpointerup\", this._makePointerEvent(\"globalpointerup\", event));\r\n                }\r\n            },\r\n            \"globalpointermove\": function (event) {\r\n                if (this.isEnabled(\"globalpointermove\")) {\r\n                    this.dispatch(\"globalpointermove\", this._makePointerEvent(\"globalpointermove\", event));\r\n                }\r\n            },\r\n            \"wheel\": function (event) {\r\n                this.dispatchParents(\"wheel\", {\r\n                    type: \"wheel\",\r\n                    target: this._sprite,\r\n                    originalEvent: event.event,\r\n                    point: event.point,\r\n                });\r\n            },\r\n        }\r\n    });\r\n    return SpriteEventDispatcher;\r\n}(EventDispatcher));\r\n/**\r\n * A base class for all visual elements.\r\n *\r\n * @important\r\n */\r\nvar Sprite = /** @class */ (function (_super) {\r\n    __extends(Sprite, _super);\r\n    function Sprite() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        Object.defineProperty(_this, \"_adjustedLocalBounds\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: { left: 0, right: 0, top: 0, bottom: 0 }\r\n        });\r\n        Object.defineProperty(_this, \"_localBounds\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: { left: 0, right: 0, top: 0, bottom: 0 }\r\n        });\r\n        Object.defineProperty(_this, \"_parent\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_dataItem\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_templateField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_sizeDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        // Will be true only when dragging\r\n        Object.defineProperty(_this, \"_isDragging\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        // The event when the dragging starts\r\n        Object.defineProperty(_this, \"_dragEvent\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // The position when dragging starts\r\n        Object.defineProperty(_this, \"_dragPoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_isHidden\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(_this, \"_isShowing\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(_this, \"_isHiding\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(_this, \"_isDown\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(_this, \"_downPoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_downPoints\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(_this, \"_toggleDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_dragDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_tooltipDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_hoverDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_focusDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_tooltipMoveDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_tooltipPointerDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_statesHandled\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Sprite.prototype, \"_afterNew\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this.setPrivateRaw(\"visible\", true);\r\n            _super.prototype._afterNew.call(this);\r\n        }\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"_markDirtyKey\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key) {\r\n            _super.prototype._markDirtyKey.call(this, key);\r\n            if (key == \"x\" || key == \"y\" || key == \"dx\" || key == \"dy\") {\r\n                this.markDirtyBounds();\r\n                this._addPercentagePositionChildren();\r\n                this.markDirtyPosition();\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"_markDirtyPrivateKey\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key) {\r\n            _super.prototype._markDirtyPrivateKey.call(this, key);\r\n            if (key == \"x\" || key == \"y\") {\r\n                this.markDirtyPosition();\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"_removeTemplateField\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            if (this._templateField) {\r\n                this._templateField._removeObjectTemplate(this);\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"_createEvents\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            return new SpriteEventDispatcher(this);\r\n        }\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"_processTemplateField\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var template;\r\n            var field = this.get(\"templateField\");\r\n            if (field) {\r\n                var dataItem = this.dataItem;\r\n                if (dataItem) {\r\n                    var context = dataItem.dataContext;\r\n                    if (context) {\r\n                        template = context[field];\r\n                        if (!(template instanceof Template) && template) {\r\n                            template = Template.new(template);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (this._templateField !== template) {\r\n                this._removeTemplateField();\r\n                this._templateField = template;\r\n                if (template) {\r\n                    template._setObjectTemplate(this);\r\n                }\r\n                this._applyTemplates();\r\n            }\r\n        }\r\n    });\r\n    // TODO change this to run before the element is added to the parent, so that way\r\n    //      it doesn't need to apply the themes twice\r\n    Object.defineProperty(Sprite.prototype, \"_setDataItem\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem) {\r\n            var oldDataItem = this._dataItem;\r\n            this._dataItem = dataItem;\r\n            this._processTemplateField();\r\n            var eventType = \"dataitemchanged\";\r\n            if (this.events.isEnabled(eventType)) {\r\n                this.events.dispatch(eventType, {\r\n                    type: eventType,\r\n                    target: this,\r\n                    oldDataItem: oldDataItem,\r\n                    newDataItem: dataItem\r\n                });\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"dataItem\", {\r\n        /**\r\n         * @return DataItem\r\n         */\r\n        get: function () {\r\n            if (this._dataItem) {\r\n                return this._dataItem;\r\n            }\r\n            else {\r\n                var parent_1 = this._parent;\r\n                while (parent_1) {\r\n                    if (parent_1._dataItem) {\r\n                        return parent_1._dataItem;\r\n                    }\r\n                    else {\r\n                        parent_1 = parent_1._parent;\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        /**\r\n         * A [[DataItem]] used for this element.\r\n         *\r\n         * NOTE: data item is being assigned automatically in most cases where it\r\n         * matters. Use this accessor to set data item only if you know what you're\r\n         * doing.\r\n         *\r\n         * @param  value  Data item\r\n         */\r\n        set: function (value) {\r\n            this._setDataItem(value);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"_addPercentageSizeChildren\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var parent = this.parent;\r\n            if (parent) {\r\n                if (this.get(\"width\") instanceof Percent || this.get(\"height\") instanceof Percent) {\r\n                    $array.pushOne(parent._percentageSizeChildren, this);\r\n                }\r\n                else {\r\n                    $array.removeFirst(parent._percentageSizeChildren, this);\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"_addPercentagePositionChildren\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var parent = this.parent;\r\n            if (parent) {\r\n                if (this.get(\"x\") instanceof Percent || this.get(\"y\") instanceof Percent) {\r\n                    $array.pushOne(parent._percentagePositionChildren, this);\r\n                }\r\n                else {\r\n                    $array.removeFirst(parent._percentagePositionChildren, this);\r\n                }\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(Sprite.prototype, \"markDirtyPosition\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this._root._addDirtyPosition(this);\r\n        }\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"updatePivotPoint\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var bounds = this._localBounds;\r\n            if (bounds) {\r\n                var centerX = this.get(\"centerX\");\r\n                if (centerX != null) {\r\n                    this._display.pivot.x = bounds.left + $utils.relativeToValue(centerX, bounds.right - bounds.left);\r\n                }\r\n                var centerY = this.get(\"centerY\");\r\n                if (centerY != null) {\r\n                    this._display.pivot.y = bounds.top + $utils.relativeToValue(centerY, bounds.bottom - bounds.top);\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"_beforeChanged\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            _super.prototype._beforeChanged.call(this);\r\n            // handling states in beforeChanged, otherwise states is not applied without animated theme\r\n            this._handleStates();\r\n            if (this.isDirty(\"tooltip\")) {\r\n                var previous = this._prevSettings.tooltip;\r\n                if (previous) {\r\n                    previous.dispose();\r\n                }\r\n            }\r\n            if (this.isDirty(\"layer\")) {\r\n                this._display.setLayer(this.get(\"layer\"));\r\n                this.markDirtyLayer();\r\n            }\r\n            if (this.isDirty(\"tooltipPosition\")) {\r\n                var tooltipMoveDp = this._tooltipMoveDp;\r\n                if (tooltipMoveDp) {\r\n                    tooltipMoveDp.dispose();\r\n                    this._tooltipMoveDp = undefined;\r\n                }\r\n                var tooltipPointerDp = this._tooltipPointerDp;\r\n                if (tooltipPointerDp) {\r\n                    tooltipPointerDp.dispose();\r\n                    this._tooltipPointerDp = undefined;\r\n                }\r\n                if (this.get(\"tooltipPosition\") == \"pointer\") {\r\n                    this._tooltipPointerDp = new MultiDisposer([\r\n                        this.events.on(\"pointerover\", function () {\r\n                            _this._tooltipMoveDp = _this.events.on(\"globalpointermove\", function (e) {\r\n                                _this.showTooltip(e.point);\r\n                            });\r\n                        }),\r\n                        this.events.on(\"pointerout\", function () {\r\n                            var tooltipMoveDp = _this._tooltipMoveDp;\r\n                            if (tooltipMoveDp) {\r\n                                tooltipMoveDp.dispose();\r\n                                _this._tooltipMoveDp = undefined;\r\n                            }\r\n                        })\r\n                    ]);\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"_handleStates\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            if (!this._statesHandled) {\r\n                if (this.isDirty(\"active\")) {\r\n                    if (this.get(\"active\")) {\r\n                        this.states.applyAnimate(\"active\");\r\n                        this.set(\"ariaChecked\", true);\r\n                    }\r\n                    else {\r\n                        if (!this.isHidden()) {\r\n                            this.states.applyAnimate(\"default\");\r\n                        }\r\n                        this.set(\"ariaChecked\", false);\r\n                    }\r\n                    this.markDirtyAccessibility();\r\n                }\r\n                if (this.isDirty(\"disabled\")) {\r\n                    if (this.get(\"disabled\")) {\r\n                        this.states.applyAnimate(\"disabled\");\r\n                        this.set(\"ariaChecked\", false);\r\n                    }\r\n                    else {\r\n                        if (!this.isHidden()) {\r\n                            this.states.applyAnimate(\"default\");\r\n                        }\r\n                        this.set(\"ariaChecked\", true);\r\n                    }\r\n                    this.markDirtyAccessibility();\r\n                }\r\n                this._statesHandled = true;\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"_changed\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            _super.prototype._changed.call(this);\r\n            var display = this._display;\r\n            var events = this.events;\r\n            if (this.isDirty(\"draggable\")) {\r\n                var draggable = this.get(\"draggable\");\r\n                if (draggable) {\r\n                    this.set(\"interactive\", true);\r\n                    this._dragDp = new MultiDisposer([\r\n                        events.on(\"pointerdown\", function (ev) {\r\n                            _this.dragStart(ev);\r\n                        }),\r\n                        events.on(\"globalpointermove\", function (ev) {\r\n                            _this.dragMove(ev);\r\n                        }),\r\n                        events.on(\"globalpointerup\", function (ev) {\r\n                            _this.dragStop(ev);\r\n                        })\r\n                    ]);\r\n                }\r\n                else {\r\n                    if (this._dragDp) {\r\n                        this._dragDp.dispose();\r\n                        this._dragDp = undefined;\r\n                    }\r\n                }\r\n                display.cancelTouch = draggable ? true : false;\r\n            }\r\n            if (this.isDirty(\"tooltipText\") || this.isDirty(\"tooltipHTML\") || this.isDirty(\"showTooltipOn\")) {\r\n                var tooltipText = this.get(\"tooltipText\");\r\n                var tooltipHTML = this.get(\"tooltipHTML\");\r\n                var showTooltipOn = this.get(\"showTooltipOn\", \"hover\");\r\n                if (this._tooltipDp) {\r\n                    this._tooltipDp.dispose();\r\n                    this._tooltipDp = undefined;\r\n                }\r\n                if (tooltipText || tooltipHTML) {\r\n                    if (showTooltipOn == \"click\") {\r\n                        this._tooltipDp = new MultiDisposer([\r\n                            events.on(\"click\", function () {\r\n                                _this.setTimeout(function () { return _this.showTooltip(); }, 10);\r\n                            }),\r\n                            $utils.addEventListener(document, \"click\", function (_ev) {\r\n                                _this.hideTooltip();\r\n                            })\r\n                        ]);\r\n                    }\r\n                    else if (showTooltipOn == \"always\") {\r\n                        // nothing\r\n                    }\r\n                    else {\r\n                        this._tooltipDp = new MultiDisposer([\r\n                            events.on(\"pointerover\", function () {\r\n                                _this.showTooltip();\r\n                            }),\r\n                            events.on(\"pointerout\", function () {\r\n                                _this.hideTooltip();\r\n                            })\r\n                        ]);\r\n                    }\r\n                }\r\n            }\r\n            if (this.isDirty(\"toggleKey\")) {\r\n                var toggleKey_1 = this.get(\"toggleKey\");\r\n                if (toggleKey_1 && toggleKey_1 != \"none\") {\r\n                    this._toggleDp = events.on(\"click\", function () {\r\n                        if (!_this._isDragging) {\r\n                            _this.set(toggleKey_1, !_this.get(toggleKey_1));\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    if (this._toggleDp) {\r\n                        this._toggleDp.dispose();\r\n                        this._toggleDp = undefined;\r\n                    }\r\n                }\r\n            }\r\n            if (this.isDirty(\"opacity\")) {\r\n                display.alpha = Math.max(0, this.get(\"opacity\", 1));\r\n            }\r\n            if (this.isDirty(\"rotation\")) {\r\n                this.markDirtyBounds();\r\n                display.angle = this.get(\"rotation\", 0);\r\n            }\r\n            if (this.isDirty(\"scale\")) {\r\n                this.markDirtyBounds();\r\n                display.scale = this.get(\"scale\", 0);\r\n            }\r\n            if (this.isDirty(\"centerX\") || this.isDirty(\"centerY\")) {\r\n                this.markDirtyBounds();\r\n                this.updatePivotPoint();\r\n            }\r\n            if (this.isDirty(\"visible\") || this.isPrivateDirty(\"visible\") || this.isDirty(\"forceHidden\")) {\r\n                if (!this.get(\"visible\") || !this.getPrivate(\"visible\") || this.get(\"forceHidden\")) {\r\n                    display.visible = false;\r\n                    this.hideTooltip();\r\n                }\r\n                else {\r\n                    display.visible = true;\r\n                }\r\n                this.markDirtyBounds();\r\n                if (this.get(\"focusable\")) {\r\n                    this.markDirtyAccessibility();\r\n                }\r\n            }\r\n            if (this.isDirty(\"width\") || this.isDirty(\"height\")) {\r\n                this.markDirtyBounds();\r\n                this._addPercentageSizeChildren();\r\n                var parent_2 = this.parent;\r\n                if (parent_2) {\r\n                    if ((this.isDirty(\"width\") && this.get(\"width\") instanceof Percent) || (this.isDirty(\"height\") && this.get(\"height\") instanceof Percent)) {\r\n                        parent_2.markDirty();\r\n                        parent_2._prevWidth = 0;\r\n                    }\r\n                }\r\n                this._sizeDirty = true;\r\n            }\r\n            if (this.isDirty(\"maxWidth\") || this.isDirty(\"maxHeight\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"minWidth\") || this.isDirty(\"minHeight\") || this.isPrivateDirty(\"maxWidth\") || this.isPrivateDirty(\"maxHeight\") || this.isPrivateDirty(\"minWidth\") || this.isPrivateDirty(\"minHeight\")) {\r\n                this.markDirtyBounds();\r\n                this._sizeDirty = true;\r\n            }\r\n            if (this._sizeDirty) {\r\n                this._updateSize();\r\n            }\r\n            if (this.isDirty(\"wheelable\")) {\r\n                var wheelable = this.get(\"wheelable\");\r\n                if (wheelable) {\r\n                    this.set(\"interactive\", true);\r\n                }\r\n                display.wheelable = wheelable ? true : false;\r\n            }\r\n            // Accessibility\r\n            if (this.isDirty(\"tabindexOrder\") || this.isDirty(\"focusableGroup\")) {\r\n                if (this.get(\"focusable\")) {\r\n                    this._root._registerTabindexOrder(this);\r\n                }\r\n                else {\r\n                    this._root._unregisterTabindexOrder(this);\r\n                }\r\n            }\r\n            if (this.isDirty(\"filter\")) {\r\n                //this.markDirtyBounds();\r\n                display.filter = this.get(\"filter\");\r\n            }\r\n            if (this.isDirty(\"cursorOverStyle\")) {\r\n                display.cursorOverStyle = this.get(\"cursorOverStyle\");\r\n            }\r\n            if (this.isDirty(\"hoverOnFocus\")) {\r\n                if (this.get(\"hoverOnFocus\")) {\r\n                    this._focusDp = new MultiDisposer([\r\n                        events.on(\"focus\", function () {\r\n                            // TODO: proper hover, not just tooltip\r\n                            _this.showTooltip();\r\n                        }),\r\n                        events.on(\"blur\", function () {\r\n                            // TODO: proper hover, not just tooltip\r\n                            _this.hideTooltip();\r\n                        })\r\n                    ]);\r\n                }\r\n                else {\r\n                    if (this._focusDp) {\r\n                        this._focusDp.dispose();\r\n                        this._focusDp = undefined;\r\n                    }\r\n                }\r\n            }\r\n            if (this.isDirty(\"focusable\")) {\r\n                if (this.get(\"focusable\")) {\r\n                    this._root._registerTabindexOrder(this);\r\n                }\r\n                else {\r\n                    this._root._unregisterTabindexOrder(this);\r\n                }\r\n                this.markDirtyAccessibility();\r\n            }\r\n            if (this.isDirty(\"role\") || this.isDirty(\"ariaLive\") || this.isDirty(\"ariaChecked\") || this.isDirty(\"ariaHidden\") || this.isDirty(\"ariaOrientation\") || this.isDirty(\"ariaValueNow\") || this.isDirty(\"ariaValueMin\") || this.isDirty(\"ariaValueMax\") || this.isDirty(\"ariaValueText\") || this.isDirty(\"ariaLabel\") || this.isDirty(\"ariaControls\")) {\r\n                // display.accessibility.ariaLabel = populateString(this, this.get(\"ariaLabel\", \"\"));\r\n                // @todo make sure ariaLabel gets populated in Root\r\n                this.markDirtyAccessibility();\r\n            }\r\n            if (this.isDirty(\"exportable\")) {\r\n                display.exportable = this.get(\"exportable\");\r\n            }\r\n            if (this.isDirty(\"interactive\")) {\r\n                var events_1 = this.events;\r\n                if (this.get(\"interactive\")) {\r\n                    this._hoverDp = new MultiDisposer([\r\n                        events_1.on(\"click\", function (ev) {\r\n                            if ($utils.isTouchEvent(ev.originalEvent)) {\r\n                                if (!_this.getPrivate(\"touchHovering\")) {\r\n                                    _this.setTimeout(function () {\r\n                                        _this._handleOver();\r\n                                        if (_this.get(\"tooltipText\") || _this.get(\"tooltipHTML\")) {\r\n                                            _this.showTooltip();\r\n                                        }\r\n                                        _this.setPrivateRaw(\"touchHovering\", true);\r\n                                        _this.events.dispatch(\"pointerover\", {\r\n                                            type: \"pointerover\",\r\n                                            target: ev.target,\r\n                                            originalEvent: ev.originalEvent,\r\n                                            point: ev.point,\r\n                                            simulated: ev.simulated\r\n                                        });\r\n                                    }, 10);\r\n                                }\r\n                            }\r\n                        }),\r\n                        events_1.on(\"globalpointerup\", function (ev) {\r\n                            if ($utils.isTouchEvent(ev.originalEvent)) {\r\n                                if (_this.getPrivate(\"touchHovering\")) {\r\n                                    _this._handleOut();\r\n                                    if (_this.get(\"tooltipText\") || _this.get(\"tooltipHTML\")) {\r\n                                        _this.hideTooltip();\r\n                                    }\r\n                                }\r\n                                _this.setPrivateRaw(\"touchHovering\", false);\r\n                                _this.events.dispatch(\"pointerout\", {\r\n                                    type: \"pointerout\",\r\n                                    target: ev.target,\r\n                                    originalEvent: ev.originalEvent,\r\n                                    point: ev.point,\r\n                                    simulated: ev.simulated\r\n                                });\r\n                            }\r\n                            if (_this._isDown) {\r\n                                _this._handleUp(ev);\r\n                            }\r\n                            //this._isDown = false;\r\n                        }),\r\n                        events_1.on(\"pointerover\", function () {\r\n                            _this._handleOver();\r\n                        }),\r\n                        events_1.on(\"pointerout\", function () {\r\n                            _this._handleOut();\r\n                        }),\r\n                        events_1.on(\"pointerdown\", function (e) {\r\n                            _this._handleDown(e);\r\n                        })\r\n                    ]);\r\n                }\r\n                else {\r\n                    this._display.interactive = false;\r\n                    if (this._hoverDp) {\r\n                        this._hoverDp.dispose();\r\n                        this._hoverDp = undefined;\r\n                    }\r\n                }\r\n            }\r\n            if (this.isDirty(\"forceInactive\")) {\r\n                this._display.inactive = this.get(\"forceInactive\", false);\r\n            }\r\n            if (this.get(\"showTooltipOn\") == \"always\" && this._display.visible) {\r\n                this.showTooltip();\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     * @todo should this be user-accessible?\r\n     */\r\n    Object.defineProperty(Sprite.prototype, \"dragStart\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (e) {\r\n            this._dragEvent = e;\r\n            this.events.stopParentDispatch();\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     * @todo should this be user-accessible?\r\n     */\r\n    Object.defineProperty(Sprite.prototype, \"dragStop\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (e) {\r\n            this._dragEvent = undefined;\r\n            this._dragPoint = undefined;\r\n            this.events.stopParentDispatch();\r\n            if (this._isDragging) {\r\n                this._isDragging = false;\r\n                var type = \"dragstop\";\r\n                if (this.events.isEnabled(type)) {\r\n                    this.events.dispatch(type, {\r\n                        type: type,\r\n                        target: this,\r\n                        originalEvent: e.originalEvent,\r\n                        point: e.point,\r\n                        simulated: e.simulated,\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"_handleOver\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            if (!this.isHidden()) {\r\n                if (this.get(\"active\") && this.states.lookup(\"hoverActive\")) {\r\n                    this.states.applyAnimate(\"hoverActive\");\r\n                }\r\n                else if (this.get(\"disabled\") && this.states.lookup(\"hoverDisabled\")) {\r\n                    this.states.applyAnimate(\"hoverDisabled\");\r\n                }\r\n                else {\r\n                    this.states.applyAnimate(\"hover\");\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"_handleOut\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            if (!this.isHidden()) {\r\n                if (this.get(\"active\") && this.states.lookup(\"active\")) {\r\n                    this.states.applyAnimate(\"active\");\r\n                }\r\n                else if (this.get(\"disabled\") && this.states.lookup(\"disabled\")) {\r\n                    this.states.applyAnimate(\"disabled\");\r\n                }\r\n                else {\r\n                    if (this.states.lookup(\"hover\") || this.states.lookup(\"hoverActive\")) {\r\n                        this.states.applyAnimate(\"default\");\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"_handleUp\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (e) {\r\n            if (!this.isHidden()) {\r\n                if (this.get(\"active\") && this.states.lookup(\"active\")) {\r\n                    this.states.applyAnimate(\"active\");\r\n                }\r\n                else if (this.get(\"disabled\") && this.states.lookup(\"disabled\")) {\r\n                    this.states.applyAnimate(\"disabled\");\r\n                }\r\n                else if (this.states.lookup(\"down\")) {\r\n                    if (this.isHover()) {\r\n                        this.states.applyAnimate(\"hover\");\r\n                    }\r\n                    else {\r\n                        this.states.applyAnimate(\"default\");\r\n                    }\r\n                }\r\n                // @todo remove this once migrated to _downPoints\r\n                this._downPoint = undefined;\r\n                var pointerId = $utils.getPointerId(e.originalEvent);\r\n                delete this._downPoints[pointerId];\r\n                if ($object.keys(this._downPoints).length == 0) {\r\n                    this._isDown = false;\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"_hasMoved\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (e) {\r\n            // @todo remove this once migrated to _downPoints\r\n            // if (this._downPoint) {\r\n            // \tconst x = Math.abs(this._downPoint.x - e.point.x);\r\n            // \tconst y = Math.abs(this._downPoint.y - e.point.y);\r\n            // \treturn (x > 5) || (y > 5);\r\n            // }\r\n            var pointerId = $utils.getPointerId(e.originalEvent);\r\n            var downPoint = this._downPoints[pointerId];\r\n            if (downPoint) {\r\n                var x = Math.abs(downPoint.x - e.point.x);\r\n                var y = Math.abs(downPoint.y - e.point.y);\r\n                return (x > 5) || (y > 5);\r\n            }\r\n            return false;\r\n        }\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"_hasDown\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            return $object.keys(this._downPoints).length > 0;\r\n        }\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"_handleDown\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (e) {\r\n            var parent = this.parent;\r\n            if (parent && !this.get(\"draggable\")) {\r\n                parent._handleDown(e);\r\n            }\r\n            if (this.get(\"interactive\") && !this.isHidden()) {\r\n                if (this.states.lookup(\"down\")) {\r\n                    this.states.applyAnimate(\"down\");\r\n                }\r\n                this._downPoint = {\r\n                    x: e.point.x,\r\n                    y: e.point.y\r\n                };\r\n                // @todo remove this once migrated to _downPoints\r\n                this._isDown = true;\r\n                var pointerId = $utils.getPointerId(e.originalEvent);\r\n                this._downPoints[pointerId] = {\r\n                    x: e.point.x,\r\n                    y: e.point.y\r\n                };\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     * @todo should this be user-accessible?\r\n     */\r\n    Object.defineProperty(Sprite.prototype, \"dragMove\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (e) {\r\n            var dragEvent = this._dragEvent;\r\n            if (dragEvent) {\r\n                if (dragEvent.simulated && !e.simulated) {\r\n                    return true;\r\n                }\r\n                var angle = 0;\r\n                var parent_3 = this.parent;\r\n                while (parent_3 != null) {\r\n                    angle += parent_3.get(\"rotation\", 0);\r\n                    parent_3 = parent_3.parent;\r\n                }\r\n                var x = e.point.x - dragEvent.point.x;\r\n                var y = e.point.y - dragEvent.point.y;\r\n                var events = this.events;\r\n                if (dragEvent.simulated && !this._isDragging) {\r\n                    this._isDragging = true;\r\n                    this._dragEvent = e;\r\n                    this._dragPoint = {\r\n                        x: this.x(),\r\n                        y: this.y()\r\n                    };\r\n                    var type = \"dragstart\";\r\n                    if (events.isEnabled(type)) {\r\n                        events.dispatch(type, {\r\n                            type: type,\r\n                            target: this,\r\n                            originalEvent: e.originalEvent,\r\n                            point: e.point,\r\n                            simulated: e.simulated,\r\n                        });\r\n                    }\r\n                }\r\n                if (this._isDragging) {\r\n                    var dragPoint = this._dragPoint;\r\n                    this.set(\"x\", dragPoint.x + x * $math.cos(angle) + y * $math.sin(angle));\r\n                    this.set(\"y\", dragPoint.y + y * $math.cos(angle) - x * $math.sin(angle));\r\n                    var type = \"dragged\";\r\n                    if (events.isEnabled(type)) {\r\n                        events.dispatch(type, {\r\n                            type: type,\r\n                            target: this,\r\n                            originalEvent: e.originalEvent,\r\n                            point: e.point,\r\n                            simulated: e.simulated,\r\n                        });\r\n                    }\r\n                }\r\n                else {\r\n                    if (Math.hypot(x, y) > 5) {\r\n                        this._isDragging = true;\r\n                        this._dragEvent = e;\r\n                        this._dragPoint = {\r\n                            x: this.x(),\r\n                            y: this.y()\r\n                        };\r\n                        var type = \"dragstart\";\r\n                        if (events.isEnabled(type)) {\r\n                            events.dispatch(type, {\r\n                                type: type,\r\n                                target: this,\r\n                                originalEvent: e.originalEvent,\r\n                                point: e.point,\r\n                                simulated: e.simulated\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"_updateSize\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n        }\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"_getBounds\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this._localBounds = this._display.getLocalBounds();\r\n        }\r\n    });\r\n    /**\r\n     * Returns depth (how deep in the hierachy of the content tree) of this\r\n     * element.\r\n     *\r\n     * @return Depth\r\n     */\r\n    Object.defineProperty(Sprite.prototype, \"depth\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var self = this.parent;\r\n            var depth = 0;\r\n            while (true) {\r\n                if (self) {\r\n                    ++depth;\r\n                    self = self.parent;\r\n                }\r\n                else {\r\n                    return depth;\r\n                }\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(Sprite.prototype, \"markDirtySize\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this._sizeDirty = true;\r\n            this.markDirty();\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(Sprite.prototype, \"markDirtyBounds\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var display = this._display;\r\n            if (this.get(\"isMeasured\")) {\r\n                this._root._addDirtyBounds(this);\r\n                display.isMeasured = true;\r\n                display.invalidateBounds();\r\n                var parent_4 = this.parent;\r\n                if (parent_4 && this.get(\"position\") != \"absolute\") {\r\n                    if (parent_4.get(\"width\") == null || parent_4.get(\"height\") == null || parent_4.get(\"layout\")) {\r\n                        parent_4.markDirtyBounds();\r\n                    }\r\n                }\r\n                if (this.get(\"focusable\") && this.isFocus()) {\r\n                    this.markDirtyAccessibility();\r\n                }\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(Sprite.prototype, \"markDirtyAccessibility\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            //if (this._root.focused(this)) {\r\n            this._root._invalidateAccessibility(this);\r\n            //}\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(Sprite.prototype, \"markDirtyLayer\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            //this._display.markDirtyLayer(this.isDirty(\"opacity\") || this.isDirty(\"visible\")); https://codepen.io/team/amcharts/pen/gOWZPmP <- problems\r\n            this._display.markDirtyLayer(true);\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(Sprite.prototype, \"markDirty\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype.markDirty.call(this);\r\n            this.markDirtyLayer();\r\n        }\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"_updateBounds\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var oldBounds = this._adjustedLocalBounds;\r\n            var newBounds;\r\n            // if display.visible == false, it still returns bounds\r\n            if (!this.get(\"visible\") || !this.getPrivate(\"visible\") || this.get(\"forceHidden\")) {\r\n                newBounds = {\r\n                    left: 0,\r\n                    right: 0,\r\n                    top: 0,\r\n                    bottom: 0\r\n                };\r\n                this._localBounds = newBounds;\r\n                this._adjustedLocalBounds = newBounds;\r\n            }\r\n            else {\r\n                this._getBounds();\r\n                this._fixMinBounds(this._localBounds);\r\n                this.updatePivotPoint();\r\n                this._adjustedLocalBounds = this._display.getAdjustedBounds(this._localBounds);\r\n                newBounds = this._adjustedLocalBounds;\r\n            }\r\n            if (!oldBounds || (oldBounds.left !== newBounds.left || oldBounds.top !== newBounds.top || oldBounds.right !== newBounds.right || oldBounds.bottom !== newBounds.bottom)) {\r\n                var eventType = \"boundschanged\";\r\n                if (this.events.isEnabled(eventType)) {\r\n                    this.events.dispatch(eventType, { type: eventType, target: this });\r\n                }\r\n                if (this.parent) {\r\n                    this.parent.markDirty();\r\n                    this.parent.markDirtyBounds();\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"_fixMinBounds\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (bounds) {\r\n            var minWidth = this.get(\"minWidth\", this.getPrivate(\"minWidth\"));\r\n            var minHeight = this.get(\"minHeight\", this.getPrivate(\"minHeight\"));\r\n            if ($type.isNumber(minWidth)) {\r\n                if (bounds.right - bounds.left < minWidth) {\r\n                    bounds.right = bounds.left + minWidth;\r\n                }\r\n            }\r\n            if ($type.isNumber(minHeight)) {\r\n                if (bounds.bottom - bounds.top < minHeight) {\r\n                    bounds.bottom = bounds.top + minHeight;\r\n                }\r\n            }\r\n            var privateWidth = this.getPrivate(\"width\");\r\n            var privateHeight = this.getPrivate(\"height\");\r\n            if ($type.isNumber(privateWidth)) {\r\n                bounds.right = bounds.left + privateWidth;\r\n            }\r\n            if ($type.isNumber(privateHeight)) {\r\n                bounds.bottom = bounds.top + privateHeight;\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"_removeParent\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (parent) {\r\n            if (parent) {\r\n                parent.children.removeValue(this);\r\n                $array.removeFirst(parent._percentageSizeChildren, this);\r\n                $array.removeFirst(parent._percentagePositionChildren, this);\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"_clearDirty\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._clearDirty.call(this);\r\n            this._sizeDirty = false;\r\n            this._statesHandled = false;\r\n        }\r\n    });\r\n    /**\r\n     * Simulate hover over element.\r\n     */\r\n    Object.defineProperty(Sprite.prototype, \"hover\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this.showTooltip();\r\n            this._handleOver();\r\n        }\r\n    });\r\n    /**\r\n     * Simulate unhover over element.\r\n     */\r\n    Object.defineProperty(Sprite.prototype, \"unhover\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this.hideTooltip();\r\n            this._handleOut();\r\n        }\r\n    });\r\n    /**\r\n     * Shows element's [[Tooltip]].\r\n     */\r\n    Object.defineProperty(Sprite.prototype, \"showTooltip\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (point) {\r\n            var tooltip = this.getTooltip();\r\n            var tooltipText = this.get(\"tooltipText\");\r\n            var tooltipHTML = this.get(\"tooltipHTML\");\r\n            if ((tooltipText || tooltipHTML) && tooltip) {\r\n                var tooltipPosition = this.get(\"tooltipPosition\");\r\n                var tooltipTarget = this.getPrivate(\"tooltipTarget\", this);\r\n                if (tooltipPosition == \"fixed\" || !point) {\r\n                    this._display._setMatrix();\r\n                    point = this.toGlobal(tooltipTarget._getTooltipPoint());\r\n                }\r\n                tooltip.set(\"pointTo\", point);\r\n                tooltip.set(\"tooltipTarget\", tooltipTarget);\r\n                if (!tooltip.get(\"x\")) {\r\n                    tooltip.set(\"x\", point.x);\r\n                }\r\n                if (!tooltip.get(\"y\")) {\r\n                    tooltip.set(\"y\", point.y);\r\n                }\r\n                if (tooltipText) {\r\n                    tooltip.label.set(\"text\", tooltipText);\r\n                }\r\n                if (tooltipHTML) {\r\n                    tooltip.label.set(\"html\", tooltipHTML);\r\n                }\r\n                var dataItem = this.dataItem;\r\n                if (dataItem) {\r\n                    tooltip.label._setDataItem(dataItem);\r\n                }\r\n                if (this.get(\"showTooltipOn\") == \"always\" && (point.x < 0 || point.x > this._root.width() || point.y < 0 || point.y > this._root.height())) {\r\n                    this.hideTooltip();\r\n                    return;\r\n                }\r\n                tooltip.label.text.markDirtyText();\r\n                var promise = tooltip.show();\r\n                this.setPrivateRaw(\"showingTooltip\", true);\r\n                return promise;\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * Hides element's [[Tooltip]].\r\n     */\r\n    Object.defineProperty(Sprite.prototype, \"hideTooltip\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var tooltip = this.getTooltip();\r\n            if (tooltip) {\r\n                var timeout = tooltip.get(\"keepTargetHover\") && tooltip.get(\"stateAnimationDuration\", 0) == 0 ? 400 : undefined;\r\n                var promise = tooltip.hide(timeout);\r\n                this.setPrivateRaw(\"showingTooltip\", false);\r\n                return promise;\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"_getTooltipPoint\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var bounds = this._localBounds;\r\n            if (bounds) {\r\n                var x = 0;\r\n                var y = 0;\r\n                if (!this.get(\"isMeasured\")) {\r\n                    x = $utils.relativeToValue(this.get(\"tooltipX\", 0), this.width());\r\n                    y = $utils.relativeToValue(this.get(\"tooltipY\", 0), this.height());\r\n                }\r\n                else {\r\n                    x = bounds.left + $utils.relativeToValue(this.get(\"tooltipX\", 0), bounds.right - bounds.left);\r\n                    y = bounds.top + $utils.relativeToValue(this.get(\"tooltipY\", 0), bounds.bottom - bounds.top);\r\n                }\r\n                return { x: x, y: y };\r\n            }\r\n            return { x: 0, y: 0 };\r\n        }\r\n    });\r\n    /**\r\n     * Returns [[Tooltip]] used for this element.\r\n     *\r\n     * @return Tooltip\r\n     */\r\n    Object.defineProperty(Sprite.prototype, \"getTooltip\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var tooltip = this.get(\"tooltip\");\r\n            if (!tooltip) {\r\n                var parent_5 = this.parent;\r\n                if (parent_5) {\r\n                    return parent_5.getTooltip();\r\n                }\r\n            }\r\n            else {\r\n                return tooltip;\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"_updatePosition\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var parent = this.parent;\r\n            var dx = this.get(\"dx\", 0);\r\n            var dy = this.get(\"dy\", 0);\r\n            var x = this.get(\"x\");\r\n            var _x = this.getPrivate(\"x\");\r\n            var xx = 0;\r\n            var yy = 0;\r\n            var position = this.get(\"position\");\r\n            if (x instanceof Percent) {\r\n                if (parent) {\r\n                    x = parent.innerWidth() * x.value + parent.get(\"paddingLeft\", 0);\r\n                }\r\n                else {\r\n                    x = 0;\r\n                }\r\n            }\r\n            if ($type.isNumber(x)) {\r\n                xx = x + dx;\r\n            }\r\n            else {\r\n                if (_x != null) {\r\n                    xx = _x;\r\n                }\r\n                else if (parent) {\r\n                    if (position == \"relative\") {\r\n                        xx = parent.get(\"paddingLeft\", 0) + dx;\r\n                    }\r\n                }\r\n            }\r\n            var y = this.get(\"y\");\r\n            var _y = this.getPrivate(\"y\");\r\n            if (y instanceof Percent) {\r\n                if (parent) {\r\n                    y = parent.innerHeight() * y.value + parent.get(\"paddingTop\", 0);\r\n                }\r\n                else {\r\n                    y = 0;\r\n                }\r\n            }\r\n            if ($type.isNumber(y)) {\r\n                yy = y + dy;\r\n            }\r\n            else {\r\n                if (_y != null) {\r\n                    yy = _y;\r\n                }\r\n                else if (parent) {\r\n                    if (position == \"relative\") {\r\n                        yy = parent.get(\"paddingTop\", 0) + dy;\r\n                    }\r\n                }\r\n            }\r\n            var display = this._display;\r\n            if (display.x != xx || display.y != yy) {\r\n                display.invalidateBounds();\r\n                display.x = xx;\r\n                display.y = yy;\r\n                var eventType = \"positionchanged\";\r\n                if (this.events.isEnabled(eventType)) {\r\n                    this.events.dispatch(eventType, { type: eventType, target: this });\r\n                }\r\n            }\r\n            // Update tooltip position together with the Sprite\r\n            if (this.getPrivate(\"showingTooltip\")) {\r\n                this.showTooltip();\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * Returns element's actual X position in pixels.\r\n     *\r\n     * @return X (px)\r\n     */\r\n    Object.defineProperty(Sprite.prototype, \"x\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var x = this.get(\"x\");\r\n            var _x = this.getPrivate(\"x\");\r\n            var parent = this.parent;\r\n            if (parent) {\r\n                if (x instanceof Percent) {\r\n                    return $utils.relativeToValue(x, parent.innerWidth()) + parent.get(\"paddingLeft\", 0);\r\n                }\r\n                else {\r\n                    if (!$type.isNumber(x)) {\r\n                        if (_x != null) {\r\n                            return _x;\r\n                        }\r\n                        else {\r\n                            return parent.get(\"paddingLeft\", this._display.x);\r\n                        }\r\n                    }\r\n                    else {\r\n                        return x;\r\n                    }\r\n                }\r\n            }\r\n            return this._display.x;\r\n        }\r\n    });\r\n    /**\r\n     * Returns element's actual Y position in pixels.\r\n     *\r\n     * @return Y (px)\r\n     */\r\n    Object.defineProperty(Sprite.prototype, \"y\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _y = this.getPrivate(\"y\");\r\n            if (_y != null) {\r\n                return _y;\r\n            }\r\n            var y = this.get(\"y\");\r\n            var parent = this.parent;\r\n            if (parent) {\r\n                if (y instanceof Percent) {\r\n                    return $utils.relativeToValue(y, parent.innerHeight()) + parent.get(\"paddingTop\", 0);\r\n                }\r\n                else {\r\n                    if (!$type.isNumber(y)) {\r\n                        if (_y != null) {\r\n                            return _y;\r\n                        }\r\n                        else {\r\n                            return parent.get(\"paddingTop\", this._display.y);\r\n                        }\r\n                    }\r\n                    else {\r\n                        return y;\r\n                    }\r\n                }\r\n            }\r\n            return this._display.y;\r\n        }\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"_dispose\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._dispose.call(this);\r\n            this._display.dispose();\r\n            this._removeTemplateField();\r\n            this._removeParent(this.parent);\r\n            this._root._removeFocusElement(this);\r\n            var tooltip = this.get(\"tooltip\");\r\n            if (tooltip) {\r\n                tooltip.dispose();\r\n            }\r\n            this.markDirty();\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(Sprite.prototype, \"adjustedLocalBounds\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this._fixMinBounds(this._adjustedLocalBounds);\r\n            return this._adjustedLocalBounds;\r\n        }\r\n    });\r\n    /**\r\n     * Returns local coordinates of the element's bounds.\r\n     *\r\n     * @ignore\r\n     * @return Global bounds\r\n     */\r\n    Object.defineProperty(Sprite.prototype, \"localBounds\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            return this._localBounds;\r\n        }\r\n    });\r\n    /**\r\n     * Returns adjusted local coordinates of the element's bounds.\r\n     *\r\n     * @ignore\r\n     * @return Global bounds\r\n     */\r\n    Object.defineProperty(Sprite.prototype, \"bounds\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var bounds = this._adjustedLocalBounds;\r\n            var x = this.x();\r\n            var y = this.y();\r\n            return { left: bounds.left + x, right: bounds.right + x, top: bounds.top + y, bottom: bounds.bottom + y };\r\n        }\r\n    });\r\n    /**\r\n     * Returns global coordinates of the element's bounds.\r\n     *\r\n     * @ignore\r\n     * @return Global bounds\r\n     */\r\n    Object.defineProperty(Sprite.prototype, \"globalBounds\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var bounds = this.localBounds();\r\n            var p0 = this.toGlobal({ x: bounds.left, y: bounds.top });\r\n            var p1 = this.toGlobal({ x: bounds.right, y: bounds.top });\r\n            var p2 = this.toGlobal({ x: bounds.right, y: bounds.bottom });\r\n            var p3 = this.toGlobal({ x: bounds.left, y: bounds.bottom });\r\n            return {\r\n                left: Math.min(p0.x, p1.x, p2.x, p3.x),\r\n                top: Math.min(p0.y, p1.y, p2.y, p3.y),\r\n                right: Math.max(p0.x, p1.x, p2.x, p3.x),\r\n                bottom: Math.max(p0.y, p1.y, p2.y, p3.y)\r\n            };\r\n        }\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"_onShow\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (_duration) {\r\n        }\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"_onHide\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (_duration) {\r\n        }\r\n    });\r\n    /**\r\n     * Plays initial reveal animation regardless if element is currently hidden\r\n     * or visible.\r\n     *\r\n     * @param   duration  Duration of the animation in milliseconds\r\n     * @param   delay     Delay showing of the element by X milliseconds\r\n     * @return            Promise\r\n     */\r\n    Object.defineProperty(Sprite.prototype, \"appear\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (duration, delay) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var _this = this;\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0: return [4 /*yield*/, this.hide(0)];\r\n                        case 1:\r\n                            _a.sent();\r\n                            if (delay) {\r\n                                return [2 /*return*/, new Promise(function (success, _error) {\r\n                                        _this.setTimeout(function () {\r\n                                            success(_this.show(duration));\r\n                                        }, delay);\r\n                                    })];\r\n                            }\r\n                            else {\r\n                                return [2 /*return*/, this.show(duration)];\r\n                            }\r\n                            return [2 /*return*/];\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    });\r\n    /**\r\n     * Shows currently hidden element and returns a `Promise` which completes\r\n     * when all showing animations are finished.\r\n     *\r\n     * ```TypeScript\r\n     * series.show().then(function(ev) {\r\n     *   console.log(\"Series is now fully visible\");\r\n     * })\r\n     * ```\r\n     * ```JavaScript\r\n     * series.show().then(function(ev) {\r\n     *   console.log(\"Series is now fully visible\");\r\n     * })\r\n     * ```\r\n     *\r\n     * @return Promise\r\n     */\r\n    Object.defineProperty(Sprite.prototype, \"show\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (duration) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var animations;\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0:\r\n                            if (!!this._isShowing) return [3 /*break*/, 2];\r\n                            this._isHidden = false;\r\n                            this._isShowing = true;\r\n                            this._isHiding = false;\r\n                            if (this.states.lookup(\"default\").get(\"visible\")) {\r\n                                this.set(\"visible\", true);\r\n                            }\r\n                            this._onShow(duration);\r\n                            animations = this.states.applyAnimate(\"default\", duration);\r\n                            return [4 /*yield*/, waitForAnimations(animations)];\r\n                        case 1:\r\n                            _a.sent();\r\n                            this._isShowing = false;\r\n                            _a.label = 2;\r\n                        case 2: return [2 /*return*/];\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    });\r\n    /**\r\n     * Hides the element and returns a `Promise` which completes when all hiding\r\n     * animations are finished.\r\n     *\r\n     * ```TypeScript\r\n     * series.hide().then(function(ev) {\r\n     *   console.log(\"Series finished hiding\");\r\n     * })\r\n     * ```\r\n     * ```JavaScript\r\n     * series.hide().then(function(ev) {\r\n     *   console.log(\"Series finished hiding\");\r\n     * })\r\n     * ```\r\n     *\r\n     * @return Promise\r\n     */\r\n    Object.defineProperty(Sprite.prototype, \"hide\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (duration) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var state, animations;\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0:\r\n                            if (!(!this._isHiding && !this._isHidden)) return [3 /*break*/, 2];\r\n                            this._isHiding = true;\r\n                            this._isShowing = false;\r\n                            state = this.states.lookup(\"hidden\");\r\n                            if (!state) {\r\n                                state = this.states.create(\"hidden\", {\r\n                                    \"opacity\": 0,\r\n                                    \"visible\": false\r\n                                });\r\n                            }\r\n                            this._isHidden = true;\r\n                            this._onHide(duration);\r\n                            animations = this.states.applyAnimate(\"hidden\", duration);\r\n                            return [4 /*yield*/, waitForAnimations(animations)];\r\n                        case 1:\r\n                            _a.sent();\r\n                            this._isHiding = false;\r\n                            _a.label = 2;\r\n                        case 2: return [2 /*return*/];\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    });\r\n    /**\r\n     * Returns `true` if this element is currently hidden.\r\n     *\r\n     * @return Is hidden?\r\n     */\r\n    Object.defineProperty(Sprite.prototype, \"isHidden\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            return this._isHidden;\r\n        }\r\n    });\r\n    /**\r\n     * Returns `true` if this element is currently animating to a default state.\r\n     *\r\n     * @return Is showing?\r\n     */\r\n    Object.defineProperty(Sprite.prototype, \"isShowing\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            return this._isShowing;\r\n        }\r\n    });\r\n    /**\r\n     * Returns `true` if this element is currently animating to a hidden state.\r\n     *\r\n     * @return Is hiding?\r\n     */\r\n    Object.defineProperty(Sprite.prototype, \"isHiding\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            return this._isHiding;\r\n        }\r\n    });\r\n    /**\r\n     * Returns `true` if this element is currently hovered by a pointer.\r\n     *\r\n     * @return Is hovered?\r\n     */\r\n    Object.defineProperty(Sprite.prototype, \"isHover\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            return this._display.hovering();\r\n        }\r\n    });\r\n    /**\r\n     * Returns `true` if this element does currently have focus.\r\n     *\r\n     * @return Is focused?\r\n     */\r\n    Object.defineProperty(Sprite.prototype, \"isFocus\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            return this._root.focused(this);\r\n        }\r\n    });\r\n    /**\r\n     * Returns `true` if this element is currently being dragged.\r\n     *\r\n     * @return Is dragged?\r\n     */\r\n    Object.defineProperty(Sprite.prototype, \"isDragging\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            return this._isDragging;\r\n        }\r\n    });\r\n    /**\r\n     * Returns `false` if if either public or private setting `visible` is set\r\n     * to `false`, or `forceHidden` is set to `true`.\r\n     *\r\n     * @return Visible?\r\n     */\r\n    Object.defineProperty(Sprite.prototype, \"isVisible\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            if (this.get(\"visible\") && this.getPrivate(\"visible\") && !this.get(\"forceHidden\")) {\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n    });\r\n    /**\r\n     * Same as `isVisible()`, except it checks all ascendants, too.\r\n     *\r\n     * @since 5.2.7\r\n     * @return Visible?\r\n     */\r\n    Object.defineProperty(Sprite.prototype, \"isVisibleDeep\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            return this._parent ? (this._parent.isVisibleDeep() && this.isVisible()) : this.isVisible();\r\n        }\r\n    });\r\n    /**\r\n     * Returns an actual opacity of the element, taking into account all parents.\r\n     *\r\n     * @return Opacity\r\n     * @since 5.2.11\r\n     */\r\n    Object.defineProperty(Sprite.prototype, \"compositeOpacity\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var opacity = this.get(\"opacity\", 1);\r\n            return this._parent ? (this._parent.compositeOpacity() * opacity) : opacity;\r\n        }\r\n    });\r\n    /**\r\n     * Returns width of this element in pixels.\r\n     *\r\n     * @return Width (px)\r\n     */\r\n    Object.defineProperty(Sprite.prototype, \"width\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var width = this.get(\"width\");\r\n            var maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\"));\r\n            var minWidth = this.get(\"minWidth\", this.getPrivate(\"minWidth\"));\r\n            var privateWidth = this.getPrivate(\"width\");\r\n            var w = 0;\r\n            if ($type.isNumber(privateWidth)) {\r\n                w = privateWidth;\r\n            }\r\n            else {\r\n                if (width == null) {\r\n                    if (this._adjustedLocalBounds) {\r\n                        w = this._adjustedLocalBounds.right - this._adjustedLocalBounds.left;\r\n                    }\r\n                }\r\n                else {\r\n                    if (width instanceof Percent) {\r\n                        var parent_6 = this.parent;\r\n                        if (parent_6) {\r\n                            w = parent_6.innerWidth() * width.value;\r\n                        }\r\n                        else {\r\n                            w = this._root.width() * width.value;\r\n                        }\r\n                    }\r\n                    else if ($type.isNumber(width)) {\r\n                        w = width;\r\n                    }\r\n                }\r\n            }\r\n            if ($type.isNumber(minWidth)) {\r\n                w = Math.max(minWidth, w);\r\n            }\r\n            if ($type.isNumber(maxWidth)) {\r\n                w = Math.min(maxWidth, w);\r\n            }\r\n            return w;\r\n        }\r\n    });\r\n    /**\r\n     * Returns maximum allowed width of this element in pixels.\r\n     *\r\n     * @return Maximum width (px)\r\n     */\r\n    Object.defineProperty(Sprite.prototype, \"maxWidth\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\"));\r\n            if ($type.isNumber(maxWidth)) {\r\n                return maxWidth;\r\n            }\r\n            else {\r\n                var width = this.get(\"width\");\r\n                if ($type.isNumber(width)) {\r\n                    return width;\r\n                }\r\n            }\r\n            var parent = this.parent;\r\n            if (parent) {\r\n                return parent.innerWidth();\r\n            }\r\n            return this._root.width();\r\n        }\r\n    });\r\n    /**\r\n     * Returns maximum allowed height of this element in pixels.\r\n     *\r\n     * @return Maximum height (px)\r\n     */\r\n    Object.defineProperty(Sprite.prototype, \"maxHeight\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\"));\r\n            if ($type.isNumber(maxHeight)) {\r\n                return maxHeight;\r\n            }\r\n            else {\r\n                var height = this.get(\"height\");\r\n                if ($type.isNumber(height)) {\r\n                    return height;\r\n                }\r\n            }\r\n            var parent = this.parent;\r\n            if (parent) {\r\n                return parent.innerHeight();\r\n            }\r\n            return this._root.height();\r\n        }\r\n    });\r\n    /**\r\n     * Returns height of this element in pixels.\r\n     *\r\n     * @return Height (px)\r\n     */\r\n    Object.defineProperty(Sprite.prototype, \"height\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var height = this.get(\"height\");\r\n            var maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\"));\r\n            var minHeight = this.get(\"minHeight\", this.getPrivate(\"minHeight\"));\r\n            var privateHeight = this.getPrivate(\"height\");\r\n            var h = 0;\r\n            if ($type.isNumber(privateHeight)) {\r\n                h = privateHeight;\r\n            }\r\n            else {\r\n                if (height == null) {\r\n                    if (this._adjustedLocalBounds) {\r\n                        h = this._adjustedLocalBounds.bottom - this._adjustedLocalBounds.top;\r\n                    }\r\n                }\r\n                else {\r\n                    if (height instanceof Percent) {\r\n                        var parent_7 = this.parent;\r\n                        if (parent_7) {\r\n                            h = parent_7.innerHeight() * height.value;\r\n                        }\r\n                        else {\r\n                            h = this._root.height() * height.value;\r\n                        }\r\n                    }\r\n                    else if ($type.isNumber(height)) {\r\n                        h = height;\r\n                    }\r\n                }\r\n            }\r\n            if ($type.isNumber(minHeight)) {\r\n                h = Math.max(minHeight, h);\r\n            }\r\n            if ($type.isNumber(maxHeight)) {\r\n                h = Math.min(maxHeight, h);\r\n            }\r\n            return h;\r\n        }\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"_findStaticTemplate\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (f) {\r\n            // templateField overrides template\r\n            if (this._templateField && f(this._templateField)) {\r\n                return this._templateField;\r\n            }\r\n            return _super.prototype._findStaticTemplate.call(this, f);\r\n        }\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"_walkParents\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (f) {\r\n            if (this._parent) {\r\n                this._walkParent(f);\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"_walkParent\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (f) {\r\n            if (this._parent) {\r\n                this._parent._walkParent(f);\r\n            }\r\n            f(this);\r\n        }\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"parent\", {\r\n        /**\r\n         * Parent [[Container]] of this element.\r\n         *\r\n         * @return Parent container\r\n         */\r\n        get: function () {\r\n            return this._parent;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"_setParent\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (parent, updateChildren) {\r\n            if (updateChildren === void 0) { updateChildren = false; }\r\n            var prevParent = this._parent;\r\n            if (parent !== prevParent) {\r\n                this.markDirtyBounds();\r\n                parent.markDirty();\r\n                this._parent = parent;\r\n                if (updateChildren) {\r\n                    this._removeParent(prevParent);\r\n                    if (parent) {\r\n                        this._addPercentageSizeChildren();\r\n                        this._addPercentagePositionChildren();\r\n                    }\r\n                }\r\n                this.markDirtyPosition();\r\n                this._applyThemes();\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * Returns an instance of [[NumberFormatter]] used in this element.\r\n     *\r\n     * If this element does not have it set, global one form [[Root]] is used.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\r\n     * @return NumberFormatter instace\r\n     */\r\n    Object.defineProperty(Sprite.prototype, \"getNumberFormatter\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            return this.get(\"numberFormatter\", this._root.numberFormatter);\r\n        }\r\n    });\r\n    /**\r\n     * Returns an instance of [[DateFormatter]] used in this element.\r\n     *\r\n     * If this element does not have it set, global one form [[Root]] is used.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\r\n     * @return DateFormatter instace\r\n     */\r\n    Object.defineProperty(Sprite.prototype, \"getDateFormatter\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            return this.get(\"dateFormatter\", this._root.dateFormatter);\r\n        }\r\n    });\r\n    /**\r\n     * Returns an instance of [[DurationFormatter]] used in this element.\r\n     *\r\n     * If this element does not have it set, global one form [[Root]] is used.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\r\n     * @return DurationFormatter instace\r\n     */\r\n    Object.defineProperty(Sprite.prototype, \"getDurationFormatter\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            return this.get(\"durationFormatter\", this._root.durationFormatter);\r\n        }\r\n    });\r\n    /**\r\n     * Converts X/Y coordinate within this element to a global coordinate.\r\n     *\r\n     * @param  point  Local coordinate\r\n     * @return        Global coordinate\r\n     */\r\n    Object.defineProperty(Sprite.prototype, \"toGlobal\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (point) {\r\n            return this._display.toGlobal(point);\r\n        }\r\n    });\r\n    /**\r\n     * Converts global X/Y coordinate to a coordinate within this element.\r\n     *\r\n     * @param  point  Global coordinate\r\n     * @return        Local coordinate\r\n     */\r\n    Object.defineProperty(Sprite.prototype, \"toLocal\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (point) {\r\n            return this._display.toLocal(point);\r\n        }\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"_getDownPoint\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var id = this._getDownPointId();\r\n            if (id) {\r\n                return this._downPoints[id];\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"_getDownPointId\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            if (this._downPoints) {\r\n                return $object.keysOrdered(this._downPoints, function (a, b) {\r\n                    if (a > b) {\r\n                        return 1;\r\n                    }\r\n                    if (a < b) {\r\n                        return -1;\r\n                    }\r\n                    return 0;\r\n                })[0];\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * Moves sprite to the end of the parent's children array.\r\n     *\r\n     * Depending on `layout` setting of the parten container, it may effect the\r\n     * positioning or overlapping order of the elements.\r\n     */\r\n    Object.defineProperty(Sprite.prototype, \"toFront\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var parent = this.parent;\r\n            if (parent) {\r\n                parent.children.moveValue(this, parent.children.length - 1);\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * Moves sprite to the beginning of the parent's children array.\r\n     *\r\n     * Depending on `layout` setting of the parten container, it may effect the\r\n     * positioning or overlapping order of the elements.\r\n     */\r\n    Object.defineProperty(Sprite.prototype, \"toBack\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var parent = this.parent;\r\n            if (parent) {\r\n                parent.children.moveValue(this, 0);\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Sprite, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"Sprite\"\r\n    });\r\n    Object.defineProperty(Sprite, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: Entity.classNames.concat([Sprite.className])\r\n    });\r\n    return Sprite;\r\n}(Entity));\r\nexport { Sprite };\r\n//# sourceMappingURL=Sprite.js.map","import { __extends } from \"tslib\";\r\nimport { Container } from \"./Container\";\r\nimport { p50, Percent } from \"../util/Percent\";\r\nimport { RoundedRectangle } from \"./RoundedRectangle\";\r\nimport { Rectangle } from \"./Rectangle\";\r\nimport { color } from \"../util/Color\";\r\nimport * as $math from \"../util/Math\";\r\nvar SpriteResizer = /** @class */ (function (_super) {\r\n    __extends(SpriteResizer, _super);\r\n    function SpriteResizer() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        Object.defineProperty(_this, \"rectangle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: _this.children.push(Rectangle.new(_this._root, { themeTags: [\"rectangle\"], fillOpacity: 0, fill: color(0xFFFFFF) }))\r\n        });\r\n        Object.defineProperty(_this, \"gripL\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: _this._createGrip(\"left\")\r\n        });\r\n        Object.defineProperty(_this, \"gripR\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: _this._createGrip(\"right\")\r\n        });\r\n        Object.defineProperty(_this, \"gripT\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: _this._createGrip(\"top\")\r\n        });\r\n        Object.defineProperty(_this, \"gripB\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: _this._createGrip(\"bottom\")\r\n        });\r\n        Object.defineProperty(_this, \"_is\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(_this, \"_ix\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(_this, \"_iw\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(_this, \"_positionDP\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_isHover\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(SpriteResizer.prototype, \"_afterNew\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            _super.prototype._afterNew.call(this);\r\n            this.addTag(\"resizer\");\r\n            this.set(\"visible\", false);\r\n            this.gripL.events.on(\"dragged\", function (e) {\r\n                _this._resize(e.target, -1);\r\n            });\r\n            this.gripR.events.on(\"dragged\", function (e) {\r\n                _this._resize(e.target, 1);\r\n            });\r\n            this.gripL.events.on(\"dragstart\", function (e) {\r\n                _this._resizeStart(e.target);\r\n            });\r\n            this.gripR.events.on(\"dragstart\", function (e) {\r\n                _this._resizeStart(e.target);\r\n            });\r\n            this.gripT.events.on(\"dragged\", function (e) {\r\n                _this._rotate(e, 90);\r\n            });\r\n            this.gripB.events.on(\"dragged\", function (e) {\r\n                _this._rotate(e, -90);\r\n            });\r\n            this.gripT.events.on(\"dragstart\", function (e) {\r\n                _this._resizeStart(e.target);\r\n            });\r\n            this.gripB.events.on(\"dragstart\", function (e) {\r\n                _this._resizeStart(e.target);\r\n            });\r\n        }\r\n    });\r\n    Object.defineProperty(SpriteResizer.prototype, \"_resizeStart\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (grip) {\r\n            var sprite = this.get(\"sprite\");\r\n            if (sprite) {\r\n                this._is = sprite.get(\"scale\", 1);\r\n                this._ix = grip.x();\r\n                this._iw = this.width() / 2;\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(SpriteResizer.prototype, \"_resize\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (grip, c) {\r\n            var sprite = this.get(\"sprite\");\r\n            if (sprite) {\r\n                sprite.set(\"scale\", Math.max(0.01, this._is * (1 + c * (grip.x() - this._ix) / this._iw)));\r\n                this._updatePositions();\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(SpriteResizer.prototype, \"_rotate\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (e, delta) {\r\n            var sprite = this.get(\"sprite\");\r\n            if (sprite) {\r\n                var parent_1 = this.parent;\r\n                if (parent_1) {\r\n                    var rotationStep = this.get(\"rotationStep\", 10);\r\n                    var angle = Math.round((($math.getAngle({ x: this.x(), y: this.y() }, parent_1.toLocal(e.point)) + delta) / rotationStep)) * rotationStep;\r\n                    sprite.set(\"rotation\", angle);\r\n                    this._updatePositions();\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(SpriteResizer.prototype, \"_createGrip\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (themeTag) {\r\n            var container = this.children.push(Container.new(this._root, {\r\n                themeTags: [\"grip\", themeTag],\r\n                setStateOnChildren: true,\r\n                draggable: true\r\n            }));\r\n            container.children.push(RoundedRectangle.new(this._root, {\r\n                themeTags: [\"outline\"],\r\n                centerX: p50,\r\n                centerY: p50\r\n            }));\r\n            container.children.push(RoundedRectangle.new(this._root, {\r\n                centerX: p50,\r\n                centerY: p50\r\n            }));\r\n            return container;\r\n        }\r\n    });\r\n    Object.defineProperty(SpriteResizer.prototype, \"_updateChildren\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            _super.prototype._updateChildren.call(this);\r\n            if (this.isDirty(\"sprite\")) {\r\n                var sprite = this.get(\"sprite\");\r\n                if (sprite) {\r\n                    this.show(0);\r\n                    this.setPrivate(\"visible\", true);\r\n                    this._updatePositions();\r\n                    var parent_2 = sprite.parent;\r\n                    if (parent_2) {\r\n                        parent_2.children.moveValue(this, 0);\r\n                    }\r\n                    this._positionDP = sprite.events.on(\"positionchanged\", function () {\r\n                        _this._updatePositions();\r\n                    });\r\n                }\r\n                else {\r\n                    this.hide(0);\r\n                    this.setPrivate(\"visible\", false);\r\n                    if (this._positionDP) {\r\n                        this._positionDP.dispose();\r\n                    }\r\n                }\r\n            }\r\n            if (this.isDirty(\"width\") || this.isDirty(\"height\") || this.isDirty(\"rotation\")) {\r\n                this._updatePositions();\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(SpriteResizer.prototype, \"_updatePositions\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var sprite = this.get(\"sprite\");\r\n            if (sprite) {\r\n                var bounds = sprite.localBounds();\r\n                var scale = sprite.get(\"scale\", 1);\r\n                var d = 20;\r\n                var w = (bounds.right - bounds.left) * scale + d;\r\n                var h = (bounds.bottom - bounds.top) * scale + d;\r\n                var a = sprite.get(\"rotation\", 0);\r\n                var rectangle = this.rectangle;\r\n                var cx = sprite.get(\"centerX\", p50);\r\n                var cy = sprite.get(\"centerY\", p50);\r\n                var cxr = 0;\r\n                if (cx instanceof Percent) {\r\n                    cxr = cx.value;\r\n                }\r\n                var cyr = 0;\r\n                if (cy instanceof Percent) {\r\n                    cyr = cy.value;\r\n                }\r\n                rectangle.setAll({ centerX: cx, centerY: cy, width: w, height: h });\r\n                this.setAll({ x: sprite.x() + d * (cxr - 0.5) * $math.cos(a) - d * (cyr - 0.5) * $math.sin(a), y: sprite.y() + d * (cyr - 0.5) * $math.cos(a) + d * (cxr - 0.5) * $math.sin(a), width: w, height: h, rotation: a });\r\n                this.gripT.setAll({ x: (0.5 - cxr) * w, y: -cyr * h });\r\n                this.gripB.setAll({ x: (0.5 - cxr) * w, y: (1 - cyr) * h });\r\n                this.gripL.setAll({ x: -cxr * w, y: (0.5 - cyr) * h });\r\n                this.gripR.setAll({ x: (1 - cxr) * w, y: (0.5 - cyr) * h });\r\n                this.rectangle.setAll({ width: w, height: h });\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(SpriteResizer, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"SpriteResizer\"\r\n    });\r\n    Object.defineProperty(SpriteResizer, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: Container.classNames.concat([SpriteResizer.className])\r\n    });\r\n    return SpriteResizer;\r\n}(Container));\r\nexport { SpriteResizer };\r\n//# sourceMappingURL=SpriteResizer.js.map","import { __extends } from \"tslib\";\r\nimport { Graphics } from \"./Graphics\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\n/**\r\n * Draws a Star.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nvar Star = /** @class */ (function (_super) {\r\n    __extends(Star, _super);\r\n    function Star() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Star.prototype, \"_beforeChanged\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._beforeChanged.call(this);\r\n            if (this.isDirty(\"radius\") || this.isDirty(\"innerRadius\") || this.isDirty(\"spikes\")) {\r\n                this._clear = true;\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Star.prototype, \"_changed\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._changed.call(this);\r\n            if (this._clear) {\r\n                var display = this._display;\r\n                var r = this.get(\"radius\", 0);\r\n                var ir = $utils.relativeToValue(this.get(\"innerRadius\", 0), r);\r\n                var spikes = this.get(\"spikes\", 0);\r\n                var step = Math.PI / spikes;\r\n                var angle = Math.PI / 2 * 3;\r\n                display.moveTo(0, -r);\r\n                for (var i = 0; i < spikes; i++) {\r\n                    display.lineTo(Math.cos(angle) * r, Math.sin(angle) * r);\r\n                    angle += step;\r\n                    display.lineTo(Math.cos(angle) * ir, Math.sin(angle) * ir);\r\n                    angle += step;\r\n                }\r\n                display.lineTo(0, -r);\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Star, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"Star\"\r\n    });\r\n    Object.defineProperty(Star, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: Graphics.classNames.concat([Star.className])\r\n    });\r\n    return Star;\r\n}(Graphics));\r\nexport { Star };\r\n//# sourceMappingURL=Star.js.map","import { __extends } from \"tslib\";\r\nimport { Sprite } from \"./Sprite\";\r\nimport { populateString } from \"../util/PopulateString\";\r\nimport * as $array from \"../util/Array\";\r\n/**\r\n * @ignore Text is an internal class. Use Label instead.\r\n */\r\nvar Text = /** @class */ (function (_super) {\r\n    __extends(Text, _super);\r\n    function Text() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        Object.defineProperty(_this, \"textStyle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: _this._root._renderer.makeTextStyle()\r\n        });\r\n        Object.defineProperty(_this, \"_display\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: _this._root._renderer.makeText(\"\", _this.textStyle)\r\n        });\r\n        Object.defineProperty(_this, \"_textStyles\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\r\n                \"textAlign\",\r\n                \"fontFamily\",\r\n                \"fontSize\",\r\n                \"fontStyle\",\r\n                \"fontWeight\",\r\n                \"fontStyle\",\r\n                \"fontVariant\",\r\n                \"textDecoration\",\r\n                \"shadowColor\",\r\n                \"shadowBlur\",\r\n                \"shadowOffsetX\",\r\n                \"shadowOffsetY\",\r\n                \"shadowOpacity\",\r\n                // \"leading\",\r\n                // \"letterSpacing\",\r\n                \"lineHeight\",\r\n                \"baselineRatio\",\r\n                //\"padding\",\r\n                // \"stroke\",\r\n                // \"strokeThickness\",\r\n                // \"trim\",\r\n                // \"wordWrap\",\r\n                \"direction\",\r\n                \"textBaseline\",\r\n                \"oversizedBehavior\",\r\n                \"breakWords\",\r\n                \"ellipsis\",\r\n                \"minScale\"\r\n            ]\r\n        });\r\n        Object.defineProperty(_this, \"_originalScale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Text.prototype, \"_updateBounds\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            if (!this.get(\"text\")) {\r\n                var newBounds = {\r\n                    left: 0,\r\n                    right: 0,\r\n                    top: 0,\r\n                    bottom: 0,\r\n                };\r\n                this._adjustedLocalBounds = newBounds;\r\n            }\r\n            else {\r\n                _super.prototype._updateBounds.call(this);\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Text.prototype, \"_changed\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            _super.prototype._changed.call(this);\r\n            this._display.clear();\r\n            var textStyle = this.textStyle;\r\n            if (this.isDirty(\"opacity\")) {\r\n                var opacity = this.get(\"opacity\", 1);\r\n                this._display.alpha = opacity;\r\n            }\r\n            if (this.isDirty(\"text\") || this.isDirty(\"populateText\")) {\r\n                this._display.text = this._getText();\r\n                this.markDirtyBounds();\r\n                if (this.get(\"role\") == \"tooltip\") {\r\n                    this._root.updateTooltip(this);\r\n                }\r\n            }\r\n            if (this.isDirty(\"width\")) {\r\n                textStyle.wordWrapWidth = this.width();\r\n                this.markDirtyBounds();\r\n            }\r\n            if (this.isDirty(\"oversizedBehavior\")) {\r\n                textStyle.oversizedBehavior = this.get(\"oversizedBehavior\", \"none\");\r\n                this.markDirtyBounds();\r\n            }\r\n            if (this.isDirty(\"breakWords\")) {\r\n                textStyle.breakWords = this.get(\"breakWords\", false);\r\n                this.markDirtyBounds();\r\n            }\r\n            if (this.isDirty(\"ellipsis\")) {\r\n                textStyle.ellipsis = this.get(\"ellipsis\");\r\n                this.markDirtyBounds();\r\n            }\r\n            if (this.isDirty(\"ignoreFormatting\")) {\r\n                textStyle.ignoreFormatting = this.get(\"ignoreFormatting\", false);\r\n                this.markDirtyBounds();\r\n            }\r\n            if (this.isDirty(\"minScale\")) {\r\n                textStyle.minScale = this.get(\"minScale\", 0);\r\n                this.markDirtyBounds();\r\n            }\r\n            if (this.isDirty(\"fill\")) {\r\n                var fill = this.get(\"fill\");\r\n                if (fill) {\r\n                    textStyle.fill = fill;\r\n                }\r\n            }\r\n            if (this.isDirty(\"maxWidth\") || this.isPrivateDirty(\"maxWidth\")) {\r\n                textStyle.maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\"));\r\n                this.markDirtyBounds();\r\n            }\r\n            if (this.isDirty(\"maxHeight\") || this.isPrivateDirty(\"maxHeight\")) {\r\n                textStyle.maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\"));\r\n                this.markDirtyBounds();\r\n            }\r\n            $array.each(this._textStyles, function (styleName) {\r\n                if (_this._dirty[styleName]) {\r\n                    textStyle[styleName] = _this.get(styleName);\r\n                    _this.markDirtyBounds();\r\n                }\r\n            });\r\n            textStyle[\"fontSize\"] = this.get(\"fontSize\");\r\n            textStyle[\"fontFamily\"] = this.get(\"fontFamily\");\r\n            this._display.style = textStyle;\r\n            if (this.isDirty(\"role\") && this.get(\"role\") == \"tooltip\") {\r\n                this._root.updateTooltip(this);\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Text.prototype, \"_getText\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var text = this.get(\"text\", \"\");\r\n            return this.get(\"populateText\") ? populateString(this, text) : text;\r\n        }\r\n    });\r\n    Object.defineProperty(Text.prototype, \"markDirtyText\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this._display.text = this._getText();\r\n            if (this.get(\"role\") == \"tooltip\") {\r\n                this._root.updateTooltip(this);\r\n            }\r\n            this.markDirtyBounds();\r\n            this.markDirty();\r\n        }\r\n    });\r\n    Object.defineProperty(Text.prototype, \"_setDataItem\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem) {\r\n            _super.prototype._setDataItem.call(this, dataItem);\r\n            if (this.get(\"populateText\")) {\r\n                this.markDirtyText();\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Text, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"Text\"\r\n    });\r\n    Object.defineProperty(Text, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: Sprite.classNames.concat([Text.className])\r\n    });\r\n    return Text;\r\n}(Sprite));\r\nexport { Text };\r\n//# sourceMappingURL=Text.js.map","import { __extends } from \"tslib\";\r\nimport { Line } from \"./Line\";\r\n/**\r\n * Draws a tick element (mostly used on axes).\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n */\r\nvar Tick = /** @class */ (function (_super) {\r\n    __extends(Tick, _super);\r\n    function Tick() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Tick, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"Tick\"\r\n    });\r\n    Object.defineProperty(Tick, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: Line.classNames.concat([Tick.className])\r\n    });\r\n    return Tick;\r\n}(Line));\r\nexport { Tick };\r\n//# sourceMappingURL=Tick.js.map","import { __extends } from \"tslib\";\r\nimport { MultiDisposer } from \"../util/Disposer\";\r\nimport { Label } from \"../render/Label\";\r\nimport { PointedRectangle } from \"../render/PointedRectangle\";\r\nimport { Container } from \"./Container\";\r\nimport { Percent } from \"../util/Percent\";\r\nimport { Color } from \"../util/Color\";\r\nimport * as $math from \"../util/Math\";\r\nimport * as $array from \"../util/Array\";\r\nimport * as $utils from \"../util/Utils\";\r\n/**\r\n * Creates a tooltip.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/tooltips/} for more info\r\n * @important\r\n */\r\nvar Tooltip = /** @class */ (function (_super) {\r\n    __extends(Tooltip, _super);\r\n    function Tooltip(root, settings, isReal, templates) {\r\n        if (templates === void 0) { templates = []; }\r\n        var _this = _super.call(this, root, settings, isReal, templates) || this;\r\n        Object.defineProperty(_this, \"_arrangeDisposer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_fx\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(_this, \"_fy\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(_this, \"_label\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_fillDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_strokeDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_labelDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_w\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(_this, \"_h\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(_this, \"_keepHoverDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        var tooltipRoot = root.tooltipRoot;\r\n        if (tooltipRoot) {\r\n            _this._root = tooltipRoot;\r\n        }\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Tooltip.prototype, \"_afterNew\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"tooltip\"]);\r\n            _super.prototype._afterNew.call(this);\r\n            this.set(\"background\", PointedRectangle.new(this._root, {\r\n                themeTags: [\"tooltip\", \"background\"]\r\n            }));\r\n            this._label = this.children.push(Label.new(this._root, {}));\r\n            this._disposers.push(this._label.events.on(\"boundschanged\", function () {\r\n                _this._updateBackground();\r\n            }));\r\n            this.on(\"bounds\", function () {\r\n                _this._updateBackground();\r\n            });\r\n            this._updateTextColor();\r\n            this._root.tooltipContainer.children.push(this);\r\n            this.hide(0);\r\n            this._root._tooltips.push(this);\r\n        }\r\n    });\r\n    Object.defineProperty(Tooltip.prototype, \"label\", {\r\n        /**\r\n         * A [[Label]] element for the tooltip.\r\n         *\r\n         * @readonly\r\n         * @return Label\r\n         */\r\n        get: function () {\r\n            return this._label;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Permanently disposes the tooltip.\r\n     */\r\n    Object.defineProperty(Tooltip.prototype, \"dispose\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype.dispose.call(this);\r\n            $array.remove(this._root._tooltips, this);\r\n        }\r\n    });\r\n    Object.defineProperty(Tooltip.prototype, \"_updateChildren\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._updateChildren.call(this);\r\n            var labelText = this.get(\"labelText\");\r\n            if (labelText != null) {\r\n                this.label.set(\"text\", this.get(\"labelText\"));\r\n            }\r\n            var labelHTML = this.get(\"labelHTML\");\r\n            if (labelHTML != null) {\r\n                this.label.set(\"html\", this.get(\"labelHTML\"));\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Tooltip.prototype, \"_changed\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            _super.prototype._changed.call(this);\r\n            if (this.isDirty(\"pointTo\")) {\r\n                // can't compare to previous, as sometimes pointTo is set twice (when pointer moves, so the position won't be udpated)\r\n                this._updateBackground();\r\n            }\r\n            if (this.isDirty(\"tooltipTarget\")) {\r\n                this.updateBackgroundColor();\r\n            }\r\n            if (this.isDirty(\"keepTargetHover\")) {\r\n                var keephover = this.get(\"keepTargetHover\");\r\n                if (keephover) {\r\n                    var bg = this.get(\"background\");\r\n                    this._keepHoverDp = new MultiDisposer([\r\n                        bg.events.on(\"pointerover\", function (_ev) {\r\n                            var target = _this.get(\"tooltipTarget\");\r\n                            if (target) {\r\n                                target.hover();\r\n                            }\r\n                        }),\r\n                        bg.events.on(\"pointerout\", function (_ev) {\r\n                            var target = _this.get(\"tooltipTarget\");\r\n                            if (target) {\r\n                                target.unhover();\r\n                            }\r\n                        })\r\n                    ]);\r\n                }\r\n                else {\r\n                    if (this._keepHoverDp) {\r\n                        this._keepHoverDp.dispose();\r\n                        this._keepHoverDp = undefined;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Tooltip.prototype, \"_onShow\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._onShow.call(this);\r\n            this.updateBackgroundColor();\r\n        }\r\n    });\r\n    Object.defineProperty(Tooltip.prototype, \"updateBackgroundColor\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            var tooltipTarget = this.get(\"tooltipTarget\");\r\n            var background = this.get(\"background\");\r\n            var fill;\r\n            var stroke;\r\n            if (tooltipTarget && background) {\r\n                fill = tooltipTarget.get(\"fill\");\r\n                stroke = tooltipTarget.get(\"stroke\");\r\n                if (fill == null) {\r\n                    fill = stroke;\r\n                }\r\n                if (this.get(\"getFillFromSprite\")) {\r\n                    if (this._fillDp) {\r\n                        this._fillDp.dispose();\r\n                    }\r\n                    if (fill != null) {\r\n                        background.set(\"fill\", fill);\r\n                    }\r\n                    this._fillDp = tooltipTarget.on(\"fill\", function (fill) {\r\n                        if (fill != null) {\r\n                            background.set(\"fill\", fill);\r\n                            _this._updateTextColor(fill);\r\n                        }\r\n                    });\r\n                }\r\n                if (this.get(\"getStrokeFromSprite\")) {\r\n                    if (this._strokeDp) {\r\n                        this._strokeDp.dispose();\r\n                    }\r\n                    if (fill != null) {\r\n                        background.set(\"stroke\", fill);\r\n                    }\r\n                    this._strokeDp = tooltipTarget.on(\"fill\", function (fill) {\r\n                        if (fill != null) {\r\n                            background.set(\"stroke\", fill);\r\n                        }\r\n                    });\r\n                }\r\n                if (this.get(\"getLabelFillFromSprite\")) {\r\n                    if (this._labelDp) {\r\n                        this._labelDp.dispose();\r\n                    }\r\n                    if (fill != null) {\r\n                        this.label.set(\"fill\", fill);\r\n                    }\r\n                    this._labelDp = tooltipTarget.on(\"fill\", function (fill) {\r\n                        if (fill != null) {\r\n                            _this.label.set(\"fill\", fill);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            this._updateTextColor(fill);\r\n        }\r\n    });\r\n    Object.defineProperty(Tooltip.prototype, \"_updateTextColor\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (fill) {\r\n            if (this.get(\"autoTextColor\")) {\r\n                if (fill == null) {\r\n                    fill = this.get(\"background\").get(\"fill\");\r\n                }\r\n                if (fill == null) {\r\n                    fill = this._root.interfaceColors.get(\"background\");\r\n                }\r\n                if (fill instanceof Color) {\r\n                    this.label.set(\"fill\", Color.alternative(fill, this._root.interfaceColors.get(\"alternativeText\"), this._root.interfaceColors.get(\"text\")));\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Tooltip.prototype, \"_setDataItem\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dataItem) {\r\n            _super.prototype._setDataItem.call(this, dataItem);\r\n            this.label._setDataItem(dataItem);\r\n        }\r\n    });\r\n    Object.defineProperty(Tooltip.prototype, \"_updateBackground\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype.updateBackground.call(this);\r\n            var parent = this._root.container;\r\n            if (parent) {\r\n                var cw = 0.5;\r\n                var ch = 0.5;\r\n                var centerX = this.get(\"centerX\");\r\n                if (centerX instanceof Percent) {\r\n                    cw = centerX.value;\r\n                }\r\n                var centerY = this.get(\"centerY\");\r\n                if (centerY instanceof Percent) {\r\n                    ch = centerY.value;\r\n                }\r\n                var parentW = parent.width();\r\n                var parentH = parent.height();\r\n                var tooltipContainer = this.parent;\r\n                var xx = 0;\r\n                var yy = 0;\r\n                if (tooltipContainer) {\r\n                    xx = tooltipContainer.x();\r\n                    yy = tooltipContainer.y();\r\n                }\r\n                var bounds = this.get(\"bounds\", { left: -xx, top: -yy, right: parentW - xx, bottom: parentH - yy });\r\n                this._updateBounds();\r\n                var w = this.width();\r\n                var h = this.height();\r\n                // use old w and h,as when tooltip is hidden, these are 0 and unneeded animation happens\r\n                if (w === 0) {\r\n                    w = this._w;\r\n                }\r\n                if (h === 0) {\r\n                    h = this._h;\r\n                }\r\n                var pointTo = this.get(\"pointTo\", { x: parentW / 2, y: parentH / 2 });\r\n                var x = pointTo.x;\r\n                var y = pointTo.y;\r\n                var pointerOrientation = this.get(\"pointerOrientation\");\r\n                var background = this.get(\"background\");\r\n                var pointerLength = 0;\r\n                var bgStrokeSizeY = 0;\r\n                var bgStrokeSizeX = 0;\r\n                if (background instanceof PointedRectangle) {\r\n                    pointerLength = background.get(\"pointerLength\", 0);\r\n                    bgStrokeSizeY = background.get(\"strokeWidth\", 0) / 2;\r\n                    bgStrokeSizeX = bgStrokeSizeY;\r\n                }\r\n                var pointerX = 0;\r\n                var pointerY = 0;\r\n                var boundsW = bounds.right - bounds.left;\r\n                var boundsH = bounds.bottom - bounds.top;\r\n                // horizontal\r\n                if (pointerOrientation == \"horizontal\" || pointerOrientation == \"left\" || pointerOrientation == \"right\") {\r\n                    bgStrokeSizeY = 0;\r\n                    if (pointerOrientation == \"horizontal\") {\r\n                        if (x > bounds.left + boundsW / 2) {\r\n                            x -= (w * (1 - cw) + pointerLength);\r\n                            bgStrokeSizeX *= -1;\r\n                        }\r\n                        else {\r\n                            x += (w * cw + pointerLength);\r\n                        }\r\n                    }\r\n                    else if (pointerOrientation == \"left\") {\r\n                        x += (w * (1 - cw) + pointerLength);\r\n                    }\r\n                    else {\r\n                        x -= (w * cw + pointerLength);\r\n                        bgStrokeSizeX *= -1;\r\n                    }\r\n                }\r\n                // vertical pointer\r\n                else {\r\n                    bgStrokeSizeX = 0;\r\n                    if (pointerOrientation == \"vertical\") {\r\n                        if (y > bounds.top + h / 2 + pointerLength) {\r\n                            y -= (h * (1 - ch) + pointerLength);\r\n                        }\r\n                        else {\r\n                            y += (h * ch + pointerLength);\r\n                            bgStrokeSizeY *= -1;\r\n                        }\r\n                    }\r\n                    else if (pointerOrientation == \"down\") {\r\n                        y -= (h * (1 - ch) + pointerLength);\r\n                    }\r\n                    else {\r\n                        y += (h * ch + pointerLength);\r\n                        bgStrokeSizeY *= -1;\r\n                    }\r\n                }\r\n                x = $math.fitToRange(x, bounds.left + w * cw, bounds.left + boundsW - w * (1 - cw)) + bgStrokeSizeX;\r\n                y = $math.fitToRange(y, bounds.top + h * ch, bounds.top + boundsH - h * (1 - ch)) - bgStrokeSizeY;\r\n                pointerX = pointTo.x - x + w * cw + bgStrokeSizeX;\r\n                pointerY = pointTo.y - y + h * ch - bgStrokeSizeY;\r\n                this._fx = x;\r\n                this._fy = y;\r\n                var animationDuration = this.get(\"animationDuration\", 0);\r\n                if (animationDuration > 0 && this.get(\"visible\") && this.get(\"opacity\") > 0.1) {\r\n                    var animationEasing = this.get(\"animationEasing\");\r\n                    this.animate({ key: \"x\", to: x, duration: animationDuration, easing: animationEasing });\r\n                    this.animate({ key: \"y\", to: y, duration: animationDuration, easing: animationEasing });\r\n                }\r\n                else {\r\n                    this.set(\"x\", x);\r\n                    this.set(\"y\", y);\r\n                }\r\n                if (background instanceof PointedRectangle) {\r\n                    background.set(\"pointerX\", pointerX);\r\n                    background.set(\"pointerY\", pointerY);\r\n                }\r\n                if (w > 0) {\r\n                    this._w = w;\r\n                }\r\n                if (h > 0) {\r\n                    this._h = h;\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Tooltip, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"Tooltip\"\r\n    });\r\n    Object.defineProperty(Tooltip, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: Container.classNames.concat([Tooltip.className])\r\n    });\r\n    return Tooltip;\r\n}(Container));\r\nexport { Tooltip };\r\n//# sourceMappingURL=Tooltip.js.map","import { __extends } from \"tslib\";\r\nimport { Graphics } from \"./Graphics\";\r\n/**\r\n * Draws a triangle.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nvar Triangle = /** @class */ (function (_super) {\r\n    __extends(Triangle, _super);\r\n    function Triangle() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Triangle.prototype, \"_beforeChanged\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._beforeChanged.call(this);\r\n            if (this.isDirty(\"width\") || this.isDirty(\"height\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\r\n                this._clear = true;\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Triangle.prototype, \"_changed\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._changed.call(this);\r\n            if (this._clear && !this.get(\"draw\")) {\r\n                this._draw();\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Triangle.prototype, \"_draw\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var w = this.width();\r\n            var h = this.height();\r\n            var display = this._display;\r\n            display.moveTo(-w / 2, h / 2);\r\n            display.lineTo(0, -h / 2);\r\n            display.lineTo(w / 2, h / 2);\r\n            display.lineTo(-w / 2, h / 2);\r\n        }\r\n    });\r\n    Object.defineProperty(Triangle.prototype, \"_updateSize\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this.markDirty();\r\n            this._clear = true;\r\n        }\r\n    });\r\n    Object.defineProperty(Triangle, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"Triangle\"\r\n    });\r\n    Object.defineProperty(Triangle, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: Graphics.classNames.concat([Triangle.className])\r\n    });\r\n    return Triangle;\r\n}(Graphics));\r\nexport { Triangle };\r\n//# sourceMappingURL=Triangle.js.map","import { __extends } from \"tslib\";\r\nimport { Layout, eachChildren } from \"./Layout\";\r\nimport * as $type from \"../util/Type\";\r\nimport { Percent } from \"../util/Percent\";\r\n/**\r\n * A vertical children layout for [[Container]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/#Layout} for more info\r\n */\r\nvar VerticalLayout = /** @class */ (function (_super) {\r\n    __extends(VerticalLayout, _super);\r\n    function VerticalLayout() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(VerticalLayout.prototype, \"updateContainer\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (container) {\r\n            var paddingTop = container.get(\"paddingTop\", 0);\r\n            var availableHeight = container.innerHeight();\r\n            var totalPercent = 0;\r\n            eachChildren(container, function (child) {\r\n                if (child.isVisible()) {\r\n                    if (child.get(\"position\") == \"relative\") {\r\n                        var childHeight = child.get(\"height\");\r\n                        if (childHeight instanceof Percent) {\r\n                            totalPercent += childHeight.value;\r\n                            var h = availableHeight * childHeight.value;\r\n                            var minHeight = child.get(\"minHeight\", child.getPrivate(\"minHeight\", -Infinity));\r\n                            if (minHeight > h) {\r\n                                availableHeight -= minHeight;\r\n                                totalPercent -= childHeight.value;\r\n                            }\r\n                            var maxHeight = child.get(\"maxHeight\", child.getPrivate(\"maxHeight\", Infinity));\r\n                            if (h > maxHeight) {\r\n                                availableHeight -= maxHeight;\r\n                                totalPercent -= childHeight.value;\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (!$type.isNumber(childHeight)) {\r\n                                childHeight = child.height();\r\n                            }\r\n                            availableHeight -= childHeight + child.get(\"marginTop\", 0) + child.get(\"marginBottom\", 0);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            if (availableHeight < 0) {\r\n                availableHeight = 0.01;\r\n            }\r\n            //if (availableHeight > 0) {\r\n            eachChildren(container, function (child) {\r\n                if (child.isVisible()) {\r\n                    if (child.get(\"position\") == \"relative\") {\r\n                        var childHeight = child.get(\"height\");\r\n                        if (childHeight instanceof Percent) {\r\n                            var privateHeight = availableHeight * childHeight.value / totalPercent - child.get(\"marginTop\", 0) - child.get(\"marginBottom\", 0);\r\n                            var minHeight = child.get(\"minHeight\", child.getPrivate(\"minHeight\", -Infinity));\r\n                            var maxHeight = child.get(\"maxHeight\", child.getPrivate(\"maxHeight\", Infinity));\r\n                            privateHeight = Math.min(Math.max(minHeight, privateHeight), maxHeight);\r\n                            child.setPrivate(\"height\", privateHeight);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            //}\r\n            var prevY = paddingTop;\r\n            eachChildren(container, function (child) {\r\n                if (child.get(\"position\") == \"relative\") {\r\n                    if (child.isVisible()) {\r\n                        var bounds = child.adjustedLocalBounds();\r\n                        var marginTop = child.get(\"marginTop\", 0);\r\n                        var top_1 = bounds.top;\r\n                        var bottom = bounds.bottom;\r\n                        var maxHeight = child.get(\"maxHeight\");\r\n                        if (maxHeight) {\r\n                            if (bottom - top_1 > maxHeight) {\r\n                                bottom = top_1 + maxHeight;\r\n                            }\r\n                        }\r\n                        var marginBottom = child.get(\"marginBottom\", 0);\r\n                        var y = prevY + marginTop - top_1;\r\n                        child.setPrivate(\"y\", y);\r\n                        prevY = y + bottom + marginBottom;\r\n                    }\r\n                    else {\r\n                        child.setPrivate(\"y\", undefined);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    });\r\n    Object.defineProperty(VerticalLayout, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"VerticalLayout\"\r\n    });\r\n    Object.defineProperty(VerticalLayout, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: Layout.classNames.concat([VerticalLayout.className])\r\n    });\r\n    return VerticalLayout;\r\n}(Layout));\r\nexport { VerticalLayout };\r\n//# sourceMappingURL=VerticalLayout.js.map","/** @ignore */ /** */\r\nimport { __extends } from \"tslib\";\r\nimport { BlendMode } from \"./Renderer\";\r\nimport { Color } from \"../../util/Color\";\r\nimport { Matrix } from \"../../util/Matrix\";\r\nimport { Percent, percent } from \"../../util/Percent\";\r\n//import { Throttler } from \"../../util/Throttler\";\r\nimport { ArrayDisposer, Disposer, DisposerClass, CounterDisposer, MultiDisposer } from \"../../util/Disposer\";\r\nimport { TextFormatter } from \"../../util/TextFormatter\";\r\nimport * as $utils from \"../../util/Utils\";\r\nimport * as $array from \"../../util/Array\";\r\nimport * as $object from \"../../util/Object\";\r\nimport * as $type from \"../../util/Type\";\r\nimport * as $math from \"../../util/Math\";\r\nimport arcToBezier from 'svg-arc-to-cubic-bezier';\r\n/**\r\n * @ignore\r\n */\r\nfunction checkArgs(name, actual, expected) {\r\n    if (actual !== expected) {\r\n        throw new Error(\"Required \" + expected + \" arguments for \" + name + \" but got \" + actual);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction checkMinArgs(name, actual, expected) {\r\n    if (actual < expected) {\r\n        throw new Error(\"Required at least \" + expected + \" arguments for \" + name + \" but got \" + actual);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction checkEvenArgs(name, actual, expected) {\r\n    checkMinArgs(name, actual, expected);\r\n    if ((actual % expected) !== 0) {\r\n        throw new Error(\"Arguments for \" + name + \" must be in pairs of \" + expected);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction assertBinary(value) {\r\n    if (value === 0 || value === 1) {\r\n        return value;\r\n    }\r\n    else {\r\n        throw new Error(\"Flag must be 0 or 1\");\r\n    }\r\n}\r\n//  1 -> 0xffffff * (2 / 2)\r\n//  2 -> 0xffffff * (1 / 2)\r\n//\r\n//  3 -> 0xffffff * (3 / 4)\r\n//  4 -> 0xffffff * (1 / 4)\r\n//\r\n//  5 -> 0xffffff * (7 / 8)\r\n//  6 -> 0xffffff * (5 / 8)\r\n//  7 -> 0xffffff * (3 / 8)\r\n//  8 -> 0xffffff * (1 / 8)\r\n//\r\n//  9 -> 0xffffff * (15 / 16)\r\n// 10 -> 0xffffff * (13 / 16)\r\n// 11 -> 0xffffff * (11 / 16)\r\n// 12 -> 0xffffff *  (9 / 16)\r\n// 13 -> 0xffffff *  (7 / 16)\r\n// 14 -> 0xffffff *  (5 / 16)\r\n// 15 -> 0xffffff *  (3 / 16)\r\n// 16 -> 0xffffff *  (1 / 16)\r\n// @todo remove this old color distribution algo if the new one pans out\r\n// function distributeIdBAK(id: number): number {\r\n// \tif (id === 1) {\r\n// \t\treturn 0x000001;\r\n// \t} else {\r\n// \t\t// Finds the closest power of 2\r\n// \t\tconst base = Math.pow(2, Math.ceil(Math.log(id) / Math.log(2)));\r\n// \t\t// Translates the id into an odd fraction index\r\n// \t\tconst index = ((base - id) * 2) + 1;\r\n// \t\t// TODO is Math.round correct ?\r\n// \t\treturn Math.round(0xffffff * (index / base));\r\n// \t}\r\n// }\r\n/**\r\n * Function by smeans:\r\n * https://lowcode.life/generating-unique-contrasting-colors-in-javascript/\r\n * @ignore\r\n */\r\nfunction distributeId(id) {\r\n    var rgb = [0, 0, 0];\r\n    for (var i = 0; i < 24; i++) {\r\n        rgb[i % 3] <<= 1;\r\n        rgb[i % 3] |= id & 0x01;\r\n        id >>= 1;\r\n    }\r\n    return (rgb[2] | 0) + (rgb[1] << 8) + (rgb[0] << 16);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction eachTargets(hitTarget, f) {\r\n    for (;;) {\r\n        if (hitTarget.interactive) {\r\n            if (!f(hitTarget)) {\r\n                break;\r\n            }\r\n        }\r\n        if (hitTarget._parent) {\r\n            hitTarget = hitTarget._parent;\r\n        }\r\n        else {\r\n            break;\r\n        }\r\n    }\r\n}\r\n// TODO feature detection for mouse/touch/pointer\r\n/**\r\n * @ignore\r\n */\r\nfunction onPointerEvent(element, name, f) {\r\n    return $utils.addEventListener(element, $utils.getRendererEvent(name), function (event) {\r\n        var touches = event.touches;\r\n        if (touches) {\r\n            if (touches.length == 0) {\r\n                touches = event.changedTouches;\r\n            }\r\n            f($array.copy(touches));\r\n        }\r\n        else {\r\n            f([event]);\r\n        }\r\n    });\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction isTainted(image) {\r\n    var canvas = document.createElement(\"canvas\");\r\n    canvas.width = 1;\r\n    canvas.height = 1;\r\n    var context = canvas.getContext(\"2d\", { willReadFrequently: true });\r\n    context.drawImage(image, 0, 0, 1, 1);\r\n    try {\r\n        context.getImageData(0, 0, 1, 1);\r\n        return false;\r\n    }\r\n    catch (err) {\r\n        console.warn(\"Image \\\"\" + image.src + \"\\\" is loaded from different host and is not covered by CORS policy. For more information about the implications read here: https://www.amcharts.com/docs/v5/concepts/cors\");\r\n        return true;\r\n    }\r\n}\r\n/**\r\n * This is needed to workaround a bug in iOS which causes it to not GC canvas elements.\r\n *\r\n * @ignore\r\n */\r\nfunction clearCanvas(view) {\r\n    view.width = 0;\r\n    view.height = 0;\r\n    view.style.width = \"0px\";\r\n    view.style.height = \"0px\";\r\n}\r\n/**\r\n * @ignore\r\n */\r\nvar CanvasPivot = /** @class */ (function () {\r\n    function CanvasPivot() {\r\n        Object.defineProperty(this, \"_x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n    }\r\n    Object.defineProperty(CanvasPivot.prototype, \"x\", {\r\n        get: function () {\r\n            return this._x;\r\n        },\r\n        set: function (value) {\r\n            this._x = value;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CanvasPivot.prototype, \"y\", {\r\n        get: function () {\r\n            return this._y;\r\n        },\r\n        set: function (value) {\r\n            this._y = value;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return CanvasPivot;\r\n}());\r\nexport { CanvasPivot };\r\n/**\r\n * @ignore\r\n */\r\nvar CanvasDisplayObject = /** @class */ (function (_super) {\r\n    __extends(CanvasDisplayObject, _super);\r\n    function CanvasDisplayObject(renderer) {\r\n        var _this = _super.call(this) || this;\r\n        Object.defineProperty(_this, \"_layer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"mask\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(_this, \"visible\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(_this, \"exportable\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(_this, \"interactive\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(_this, \"inactive\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(_this, \"wheelable\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(_this, \"cancelTouch\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(_this, \"isMeasured\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(_this, \"buttonMode\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(_this, \"alpha\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(_this, \"compoundAlpha\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(_this, \"angle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(_this, \"scale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(_this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(_this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(_this, \"pivot\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new CanvasPivot()\r\n        });\r\n        Object.defineProperty(_this, \"filter\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"cursorOverStyle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_replacedCursorStyle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_localMatrix\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new Matrix()\r\n        });\r\n        Object.defineProperty(_this, \"_matrix\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new Matrix()\r\n        });\r\n        // TODO can this be replaced with _localMatrix ?\r\n        Object.defineProperty(_this, \"_uMatrix\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new Matrix()\r\n        });\r\n        Object.defineProperty(_this, \"_renderer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_parent\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_localBounds\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_bounds\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_colorId\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        _this._renderer = renderer;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(CanvasDisplayObject.prototype, \"_dispose\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this._renderer._removeObject(this);\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasDisplayObject.prototype, \"getCanvas\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            return this.getLayer().view;\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasDisplayObject.prototype, \"getLayer\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var self = this;\r\n            for (;;) {\r\n                if (self._layer) {\r\n                    return self._layer;\r\n                }\r\n                else if (self._parent) {\r\n                    self = self._parent;\r\n                }\r\n                else {\r\n                    return this._renderer.defaultLayer;\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasDisplayObject.prototype, \"setLayer\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (order, visible) {\r\n            if (visible === void 0) { visible = true; }\r\n            if (order == null) {\r\n                this._layer = undefined;\r\n            }\r\n            else {\r\n                this._layer = this._renderer.getLayer(order, visible);\r\n                this._layer.visible = visible;\r\n                if (this._parent) {\r\n                    this._parent.registerChildLayer(this._layer);\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasDisplayObject.prototype, \"markDirtyLayer\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this.getLayer().dirty = true;\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasDisplayObject.prototype, \"clear\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this.invalidateBounds();\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasDisplayObject.prototype, \"invalidateBounds\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this._localBounds = undefined;\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasDisplayObject.prototype, \"_addBounds\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (_bounds) { }\r\n    });\r\n    Object.defineProperty(CanvasDisplayObject.prototype, \"_getColorId\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            if (this._colorId === undefined) {\r\n                this._colorId = this._renderer.paintId(this);\r\n            }\r\n            return this._colorId;\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasDisplayObject.prototype, \"_isInteractive\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            return this.inactive == false && (this.interactive || this._renderer._forceInteractive > 0);\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasDisplayObject.prototype, \"_isInteractiveMask\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            return this._isInteractive();\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasDisplayObject.prototype, \"contains\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (child) {\r\n            for (;;) {\r\n                if (child === this) {\r\n                    return true;\r\n                }\r\n                else if (child._parent) {\r\n                    child = child._parent;\r\n                }\r\n                else {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasDisplayObject.prototype, \"toGlobal\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (point) {\r\n            return this._matrix.apply(point);\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasDisplayObject.prototype, \"toLocal\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (point) {\r\n            return this._matrix.applyInverse(point);\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasDisplayObject.prototype, \"getLocalMatrix\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this._uMatrix.setTransform(0, 0, this.pivot.x, this.pivot.y, this.angle * Math.PI / 180, this.scale);\r\n            return this._uMatrix;\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasDisplayObject.prototype, \"getLocalBounds\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            if (!this._localBounds) {\r\n                var bn = 10000000;\r\n                this._localBounds = {\r\n                    left: bn,\r\n                    top: bn,\r\n                    right: -bn,\r\n                    bottom: -bn\r\n                };\r\n                this._addBounds(this._localBounds);\r\n            }\r\n            return this._localBounds;\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasDisplayObject.prototype, \"getAdjustedBounds\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (bounds) {\r\n            this._setMatrix();\r\n            var matrix = this.getLocalMatrix();\r\n            var p0 = matrix.apply({ x: bounds.left, y: bounds.top });\r\n            var p1 = matrix.apply({ x: bounds.right, y: bounds.top });\r\n            var p2 = matrix.apply({ x: bounds.right, y: bounds.bottom });\r\n            var p3 = matrix.apply({ x: bounds.left, y: bounds.bottom });\r\n            return {\r\n                left: Math.min(p0.x, p1.x, p2.x, p3.x),\r\n                top: Math.min(p0.y, p1.y, p2.y, p3.y),\r\n                right: Math.max(p0.x, p1.x, p2.x, p3.x),\r\n                bottom: Math.max(p0.y, p1.y, p2.y, p3.y)\r\n            };\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasDisplayObject.prototype, \"on\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key, callback, context) {\r\n            if (this.interactive) {\r\n                return this._renderer._addEvent(this, key, callback, context);\r\n            }\r\n            else {\r\n                return new Disposer(function () { });\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasDisplayObject.prototype, \"_setMatrix\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            // TODO only calculate this if it has actually changed\r\n            this._localMatrix.setTransform(this.x, this.y, this.pivot.x, this.pivot.y, \r\n            // Converts degrees to radians\r\n            this.angle * Math.PI / 180, this.scale);\r\n            this._matrix.copyFrom(this._localMatrix);\r\n            if (this._parent) {\r\n                // TODO only calculate this if it has actually changed\r\n                this._matrix.prepend(this._parent._matrix);\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasDisplayObject.prototype, \"_transform\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (context, resolution) {\r\n            var m = this._matrix;\r\n            context.setTransform(m.a * resolution, m.b * resolution, m.c * resolution, m.d * resolution, m.tx * resolution, m.ty * resolution);\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasDisplayObject.prototype, \"render\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (parentLayer) {\r\n            var _this = this;\r\n            if (this.visible && (this.exportable !== false || !this._renderer._omitTainted)) {\r\n                this._setMatrix();\r\n                var resolution_1 = this._renderer.resolution;\r\n                var layers = this._renderer.layers;\r\n                var ghostContext = this._renderer._ghostContext;\r\n                var mask_1 = this.mask;\r\n                if (mask_1) {\r\n                    mask_1._setMatrix();\r\n                }\r\n                // TODO improve this\r\n                $array.each(layers, function (layer) {\r\n                    if (layer) {\r\n                        var context = layer.context;\r\n                        context.save();\r\n                        // We must apply the mask before we transform the element\r\n                        if (mask_1) {\r\n                            mask_1._transform(context, layer.scale || resolution_1);\r\n                            mask_1._runPath(context);\r\n                            context.clip();\r\n                        }\r\n                        context.globalAlpha = _this.compoundAlpha * _this.alpha;\r\n                        _this._transform(context, layer.scale || resolution_1);\r\n                        if (_this.filter) {\r\n                            context.filter = _this.filter;\r\n                        }\r\n                    }\r\n                });\r\n                ghostContext.save();\r\n                // We must apply the mask before we transform the element\r\n                if (mask_1 && this._isInteractiveMask()) {\r\n                    mask_1._transform(ghostContext, resolution_1);\r\n                    mask_1._runPath(ghostContext);\r\n                    ghostContext.clip();\r\n                }\r\n                this._transform(ghostContext, resolution_1);\r\n                this._render(parentLayer);\r\n                ghostContext.restore();\r\n                $array.each(layers, function (layer) {\r\n                    if (layer) {\r\n                        layer.context.restore();\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasDisplayObject.prototype, \"_render\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (parentLayer) {\r\n            if (this.exportable === false) {\r\n                var layer = this._layer || parentLayer;\r\n                layer.tainted = true;\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasDisplayObject.prototype, \"hovering\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            return this._renderer._hovering.has(this);\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasDisplayObject.prototype, \"dragging\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            return this._renderer._dragging.some(function (x) { return x.value === _this; });\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasDisplayObject.prototype, \"dispose\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this.getLayer().dirty = true;\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasDisplayObject.prototype, \"shouldCancelTouch\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var renderer = this._renderer;\r\n            if (renderer.tapToActivate && !renderer._touchActive) {\r\n                return false;\r\n            }\r\n            if (this.cancelTouch) {\r\n                return true;\r\n            }\r\n            else if (this._parent) {\r\n                return this._parent.shouldCancelTouch();\r\n            }\r\n            return false;\r\n        }\r\n    });\r\n    return CanvasDisplayObject;\r\n}(DisposerClass));\r\nexport { CanvasDisplayObject };\r\n/**\r\n * @ignore\r\n */\r\nvar CanvasContainer = /** @class */ (function (_super) {\r\n    __extends(CanvasContainer, _super);\r\n    function CanvasContainer() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        Object.defineProperty(_this, \"interactiveChildren\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(_this, \"_childLayers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_children\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(CanvasContainer.prototype, \"_isInteractiveMask\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            return this.interactiveChildren || _super.prototype._isInteractiveMask.call(this);\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasContainer.prototype, \"addChild\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (child) {\r\n            child._parent = this;\r\n            this._children.push(child);\r\n            if (child._layer) {\r\n                this.registerChildLayer(child._layer);\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasContainer.prototype, \"addChildAt\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (child, index) {\r\n            child._parent = this;\r\n            this._children.splice(index, 0, child);\r\n            if (child._layer) {\r\n                this.registerChildLayer(child._layer);\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasContainer.prototype, \"removeChild\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (child) {\r\n            child._parent = undefined;\r\n            $array.removeFirst(this._children, child);\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasContainer.prototype, \"_render\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (parentLayer) {\r\n            var _this = this;\r\n            _super.prototype._render.call(this, parentLayer);\r\n            var renderer = this._renderer;\r\n            if (this.interactive && this.interactiveChildren) {\r\n                ++renderer._forceInteractive;\r\n            }\r\n            var layer = this._layer || parentLayer;\r\n            $array.each(this._children, function (child) {\r\n                child.compoundAlpha = _this.compoundAlpha * _this.alpha;\r\n                child.render(layer);\r\n            });\r\n            if (this.interactive && this.interactiveChildren) {\r\n                --renderer._forceInteractive;\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasContainer.prototype, \"registerChildLayer\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (layer) {\r\n            if (!this._childLayers) {\r\n                this._childLayers = [];\r\n            }\r\n            $array.pushOne(this._childLayers, layer);\r\n            if (this._parent) {\r\n                this._parent.registerChildLayer(layer);\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasContainer.prototype, \"markDirtyLayer\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (deep) {\r\n            if (deep === void 0) { deep = false; }\r\n            _super.prototype.markDirtyLayer.call(this);\r\n            if (deep && this._childLayers) {\r\n                $array.each(this._childLayers, function (layer) { return layer.dirty = true; });\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasContainer.prototype, \"dispose\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype.dispose.call(this);\r\n            if (this._childLayers) {\r\n                $array.each(this._childLayers, function (layer) {\r\n                    layer.dirty = true;\r\n                });\r\n            }\r\n        }\r\n    });\r\n    return CanvasContainer;\r\n}(CanvasDisplayObject));\r\nexport { CanvasContainer };\r\n/**\r\n * @ignore\r\n */\r\nfunction setPoint(bounds, point) {\r\n    bounds.left = Math.min(bounds.left, point.x);\r\n    bounds.top = Math.min(bounds.top, point.y);\r\n    bounds.right = Math.max(bounds.right, point.x);\r\n    bounds.bottom = Math.max(bounds.bottom, point.y);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nvar Op = /** @class */ (function () {\r\n    function Op() {\r\n    }\r\n    Object.defineProperty(Op.prototype, \"colorize\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (_context, _forceColor) { }\r\n    });\r\n    Object.defineProperty(Op.prototype, \"path\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (_context) { }\r\n    });\r\n    Object.defineProperty(Op.prototype, \"addBounds\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (_bounds) { }\r\n    });\r\n    return Op;\r\n}());\r\n/**\r\n * @ignore\r\n */\r\nvar BeginFill = /** @class */ (function (_super) {\r\n    __extends(BeginFill, _super);\r\n    function BeginFill(color) {\r\n        var _this = _super.call(this) || this;\r\n        Object.defineProperty(_this, \"color\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: color\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(BeginFill.prototype, \"colorize\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (context, forceColor) {\r\n            if (forceColor !== undefined) {\r\n                context.fillStyle = forceColor;\r\n            }\r\n            else {\r\n                context.fillStyle = this.color;\r\n            }\r\n        }\r\n    });\r\n    return BeginFill;\r\n}(Op));\r\n/**\r\n * @ignore\r\n */\r\nvar EndFill = /** @class */ (function (_super) {\r\n    __extends(EndFill, _super);\r\n    function EndFill(clearShadow) {\r\n        var _this = _super.call(this) || this;\r\n        Object.defineProperty(_this, \"clearShadow\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: clearShadow\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(EndFill.prototype, \"colorize\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (context, _forceColor) {\r\n            context.fill();\r\n            if (this.clearShadow) {\r\n                context.shadowColor = \"\";\r\n                context.shadowBlur = 0;\r\n                context.shadowOffsetX = 0;\r\n                context.shadowOffsetY = 0;\r\n            }\r\n        }\r\n    });\r\n    return EndFill;\r\n}(Op));\r\n/**\r\n * @ignore\r\n */\r\nvar EndStroke = /** @class */ (function (_super) {\r\n    __extends(EndStroke, _super);\r\n    function EndStroke() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(EndStroke.prototype, \"colorize\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (context, _forceColor) {\r\n            context.stroke();\r\n        }\r\n    });\r\n    return EndStroke;\r\n}(Op));\r\n/**\r\n * @ignore\r\n */\r\nvar LineStyle = /** @class */ (function (_super) {\r\n    __extends(LineStyle, _super);\r\n    function LineStyle(width, color, lineJoin) {\r\n        var _this = _super.call(this) || this;\r\n        Object.defineProperty(_this, \"width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: width\r\n        });\r\n        Object.defineProperty(_this, \"color\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: color\r\n        });\r\n        Object.defineProperty(_this, \"lineJoin\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: lineJoin\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(LineStyle.prototype, \"colorize\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (context, forceColor) {\r\n            if (forceColor !== undefined) {\r\n                context.strokeStyle = forceColor;\r\n            }\r\n            else {\r\n                context.strokeStyle = this.color;\r\n            }\r\n            context.lineWidth = this.width;\r\n            if (this.lineJoin) {\r\n                context.lineJoin = this.lineJoin;\r\n            }\r\n        }\r\n    });\r\n    return LineStyle;\r\n}(Op));\r\n/**\r\n * @ignore\r\n */\r\nvar LineDash = /** @class */ (function (_super) {\r\n    __extends(LineDash, _super);\r\n    function LineDash(dash) {\r\n        var _this = _super.call(this) || this;\r\n        Object.defineProperty(_this, \"dash\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: dash\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(LineDash.prototype, \"colorize\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (context, _forceColor) {\r\n            context.setLineDash(this.dash);\r\n        }\r\n    });\r\n    return LineDash;\r\n}(Op));\r\n/**\r\n * @ignore\r\n */\r\nvar LineDashOffset = /** @class */ (function (_super) {\r\n    __extends(LineDashOffset, _super);\r\n    function LineDashOffset(dashOffset) {\r\n        var _this = _super.call(this) || this;\r\n        Object.defineProperty(_this, \"dashOffset\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: dashOffset\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(LineDashOffset.prototype, \"colorize\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (context, _forceColor) {\r\n            context.lineDashOffset = this.dashOffset;\r\n        }\r\n    });\r\n    return LineDashOffset;\r\n}(Op));\r\n/**\r\n * @ignore\r\n */\r\nvar DrawRect = /** @class */ (function (_super) {\r\n    __extends(DrawRect, _super);\r\n    function DrawRect(x, y, width, height) {\r\n        var _this = _super.call(this) || this;\r\n        Object.defineProperty(_this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x\r\n        });\r\n        Object.defineProperty(_this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y\r\n        });\r\n        Object.defineProperty(_this, \"width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: width\r\n        });\r\n        Object.defineProperty(_this, \"height\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: height\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(DrawRect.prototype, \"path\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (context) {\r\n            context.rect(this.x, this.y, this.width, this.height);\r\n        }\r\n    });\r\n    Object.defineProperty(DrawRect.prototype, \"addBounds\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (bounds) {\r\n            var l = this.x;\r\n            var t = this.y;\r\n            var r = l + this.width;\r\n            var b = t + this.height;\r\n            setPoint(bounds, { x: l, y: t });\r\n            setPoint(bounds, { x: r, y: t });\r\n            setPoint(bounds, { x: l, y: b });\r\n            setPoint(bounds, { x: r, y: b });\r\n        }\r\n    });\r\n    return DrawRect;\r\n}(Op));\r\n/**\r\n * @ignore\r\n */\r\nvar DrawCircle = /** @class */ (function (_super) {\r\n    __extends(DrawCircle, _super);\r\n    function DrawCircle(x, y, radius) {\r\n        var _this = _super.call(this) || this;\r\n        Object.defineProperty(_this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x\r\n        });\r\n        Object.defineProperty(_this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y\r\n        });\r\n        Object.defineProperty(_this, \"radius\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: radius\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(DrawCircle.prototype, \"path\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (context) {\r\n            context.moveTo(this.x + this.radius, this.y);\r\n            context.arc(this.x, this.y, this.radius, 0, 2 * Math.PI);\r\n        }\r\n    });\r\n    // TODO handle skewing and rotation\r\n    Object.defineProperty(DrawCircle.prototype, \"addBounds\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (bounds) {\r\n            setPoint(bounds, { x: this.x - this.radius, y: this.y - this.radius });\r\n            setPoint(bounds, { x: this.x + this.radius, y: this.y + this.radius });\r\n        }\r\n    });\r\n    return DrawCircle;\r\n}(Op));\r\n/**\r\n * @ignore\r\n */\r\nvar DrawEllipse = /** @class */ (function (_super) {\r\n    __extends(DrawEllipse, _super);\r\n    function DrawEllipse(x, y, radiusX, radiusY) {\r\n        var _this = _super.call(this) || this;\r\n        Object.defineProperty(_this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x\r\n        });\r\n        Object.defineProperty(_this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y\r\n        });\r\n        Object.defineProperty(_this, \"radiusX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: radiusX\r\n        });\r\n        Object.defineProperty(_this, \"radiusY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: radiusY\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(DrawEllipse.prototype, \"path\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (context) {\r\n            context.ellipse(0, 0, this.radiusX, this.radiusY, 0, 0, Math.PI * 2);\r\n        }\r\n    });\r\n    // TODO handle skewing and rotation\r\n    Object.defineProperty(DrawEllipse.prototype, \"addBounds\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (bounds) {\r\n            setPoint(bounds, { x: this.x - this.radiusX, y: this.y - this.radiusY });\r\n            setPoint(bounds, { x: this.x + this.radiusX, y: this.y + this.radiusY });\r\n        }\r\n    });\r\n    return DrawEllipse;\r\n}(Op));\r\n/**\r\n * @ignore\r\n */\r\nvar Arc = /** @class */ (function (_super) {\r\n    __extends(Arc, _super);\r\n    function Arc(cx, cy, radius, startAngle, endAngle, anticlockwise) {\r\n        var _this = _super.call(this) || this;\r\n        Object.defineProperty(_this, \"cx\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cx\r\n        });\r\n        Object.defineProperty(_this, \"cy\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cy\r\n        });\r\n        Object.defineProperty(_this, \"radius\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: radius\r\n        });\r\n        Object.defineProperty(_this, \"startAngle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: startAngle\r\n        });\r\n        Object.defineProperty(_this, \"endAngle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: endAngle\r\n        });\r\n        Object.defineProperty(_this, \"anticlockwise\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: anticlockwise\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Arc.prototype, \"path\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (context) {\r\n            if (this.radius > 0) {\r\n                context.arc(this.cx, this.cy, this.radius, this.startAngle, this.endAngle, this.anticlockwise);\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Arc.prototype, \"addBounds\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (bounds) {\r\n            var arcBounds = $math.getArcBounds(this.cx, this.cy, this.startAngle * $math.DEGREES, this.endAngle * $math.DEGREES, this.radius);\r\n            setPoint(bounds, { x: arcBounds.left, y: arcBounds.top });\r\n            setPoint(bounds, { x: arcBounds.right, y: arcBounds.bottom });\r\n        }\r\n    });\r\n    return Arc;\r\n}(Op));\r\n/**\r\n * @ignore\r\n */\r\nvar ArcTo = /** @class */ (function (_super) {\r\n    __extends(ArcTo, _super);\r\n    function ArcTo(x1, y1, x2, y2, radius) {\r\n        var _this = _super.call(this) || this;\r\n        Object.defineProperty(_this, \"x1\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x1\r\n        });\r\n        Object.defineProperty(_this, \"y1\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y1\r\n        });\r\n        Object.defineProperty(_this, \"x2\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x2\r\n        });\r\n        Object.defineProperty(_this, \"y2\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y2\r\n        });\r\n        Object.defineProperty(_this, \"radius\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: radius\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(ArcTo.prototype, \"path\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (context) {\r\n            if (this.radius > 0) {\r\n                context.arcTo(this.x1, this.y1, this.x2, this.y2, this.radius);\r\n            }\r\n        }\r\n    });\r\n    // TODO: add points\r\n    Object.defineProperty(ArcTo.prototype, \"addBounds\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (_bounds) {\r\n            /*\r\n            // not finished\r\n            https://math.stackexchange.com/questions/1781438/finding-the-center-of-a-circle-given-two-points-and-a-radius-algebraically\r\n    \r\n            if (prevPoint) {\r\n                let x1 = prevPoint.x;\r\n                let y1 = prevPoint.y;\r\n                let x2 = this.x2;\r\n                let y2 = this.y2;\r\n                let r = this.radius;\r\n    \r\n                let xa = (x2 - x1) / 2;\r\n                let ya = (y2 - y1) / 2;\r\n    \r\n                let x0 = x1 + xa;\r\n                let y0 = y1 + ya;\r\n    \r\n                let a = Math.hypot(xa, ya);\r\n                let b = Math.sqrt(r * r - a * a);\r\n    \r\n                let cx = x0 + b * ya / a;\r\n                let cy = y0 - b * xa / a;\r\n    \r\n                console.log(cx, cy);\r\n            }*/\r\n        }\r\n    });\r\n    return ArcTo;\r\n}(Op));\r\n/**\r\n * @ignore\r\n */\r\nvar LineTo = /** @class */ (function (_super) {\r\n    __extends(LineTo, _super);\r\n    function LineTo(x, y) {\r\n        var _this = _super.call(this) || this;\r\n        Object.defineProperty(_this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x\r\n        });\r\n        Object.defineProperty(_this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(LineTo.prototype, \"path\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (context) {\r\n            context.lineTo(this.x, this.y);\r\n        }\r\n    });\r\n    Object.defineProperty(LineTo.prototype, \"addBounds\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (bounds) {\r\n            setPoint(bounds, { x: this.x, y: this.y });\r\n        }\r\n    });\r\n    return LineTo;\r\n}(Op));\r\n/**\r\n * @ignore\r\n */\r\nvar MoveTo = /** @class */ (function (_super) {\r\n    __extends(MoveTo, _super);\r\n    function MoveTo(x, y) {\r\n        var _this = _super.call(this) || this;\r\n        Object.defineProperty(_this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x\r\n        });\r\n        Object.defineProperty(_this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(MoveTo.prototype, \"path\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (context) {\r\n            context.moveTo(this.x, this.y);\r\n        }\r\n    });\r\n    Object.defineProperty(MoveTo.prototype, \"addBounds\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (bounds) {\r\n            setPoint(bounds, { x: this.x, y: this.y });\r\n        }\r\n    });\r\n    return MoveTo;\r\n}(Op));\r\n/**\r\n * @ignore\r\n */\r\nvar ClosePath = /** @class */ (function (_super) {\r\n    __extends(ClosePath, _super);\r\n    function ClosePath() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(ClosePath.prototype, \"path\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (context) {\r\n            context.closePath();\r\n        }\r\n    });\r\n    return ClosePath;\r\n}(Op));\r\n/**\r\n * @ignore\r\n */\r\nvar BezierCurveTo = /** @class */ (function (_super) {\r\n    __extends(BezierCurveTo, _super);\r\n    function BezierCurveTo(cpX, cpY, cpX2, cpY2, toX, toY) {\r\n        var _this = _super.call(this) || this;\r\n        Object.defineProperty(_this, \"cpX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cpX\r\n        });\r\n        Object.defineProperty(_this, \"cpY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cpY\r\n        });\r\n        Object.defineProperty(_this, \"cpX2\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cpX2\r\n        });\r\n        Object.defineProperty(_this, \"cpY2\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cpY2\r\n        });\r\n        Object.defineProperty(_this, \"toX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: toX\r\n        });\r\n        Object.defineProperty(_this, \"toY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: toY\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(BezierCurveTo.prototype, \"path\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (context) {\r\n            context.bezierCurveTo(this.cpX, this.cpY, this.cpX2, this.cpY2, this.toX, this.toY);\r\n        }\r\n    });\r\n    // TODO: OK?\r\n    Object.defineProperty(BezierCurveTo.prototype, \"addBounds\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (bounds) {\r\n            setPoint(bounds, { x: this.cpX, y: this.cpY });\r\n            setPoint(bounds, { x: this.cpX2, y: this.cpY2 });\r\n            setPoint(bounds, { x: this.toX, y: this.toY });\r\n        }\r\n    });\r\n    return BezierCurveTo;\r\n}(Op));\r\n/**\r\n * @ignore\r\n */\r\nvar QuadraticCurveTo = /** @class */ (function (_super) {\r\n    __extends(QuadraticCurveTo, _super);\r\n    function QuadraticCurveTo(cpX, cpY, toX, toY) {\r\n        var _this = _super.call(this) || this;\r\n        Object.defineProperty(_this, \"cpX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cpX\r\n        });\r\n        Object.defineProperty(_this, \"cpY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cpY\r\n        });\r\n        Object.defineProperty(_this, \"toX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: toX\r\n        });\r\n        Object.defineProperty(_this, \"toY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: toY\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(QuadraticCurveTo.prototype, \"path\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (context) {\r\n            context.quadraticCurveTo(this.cpX, this.cpY, this.toX, this.toY);\r\n        }\r\n    });\r\n    // TODO: OK?\r\n    Object.defineProperty(QuadraticCurveTo.prototype, \"addBounds\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (bounds) {\r\n            setPoint(bounds, { x: this.cpX, y: this.cpY });\r\n            setPoint(bounds, { x: this.toX, y: this.toY });\r\n        }\r\n    });\r\n    return QuadraticCurveTo;\r\n}(Op));\r\n/**\r\n * @ignore\r\n */\r\nvar Shadow = /** @class */ (function (_super) {\r\n    __extends(Shadow, _super);\r\n    function Shadow(color, blur, offsetX, offsetY, opacity) {\r\n        var _this = _super.call(this) || this;\r\n        Object.defineProperty(_this, \"color\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: color\r\n        });\r\n        Object.defineProperty(_this, \"blur\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: blur\r\n        });\r\n        Object.defineProperty(_this, \"offsetX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: offsetX\r\n        });\r\n        Object.defineProperty(_this, \"offsetY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: offsetY\r\n        });\r\n        Object.defineProperty(_this, \"opacity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: opacity\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Shadow.prototype, \"colorize\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (context, _forceColor) {\r\n            if (this.opacity) {\r\n                context.fillStyle = this.color;\r\n            }\r\n            context.shadowColor = this.color;\r\n            context.shadowBlur = this.blur;\r\n            context.shadowOffsetX = this.offsetX;\r\n            context.shadowOffsetY = this.offsetY;\r\n        }\r\n    });\r\n    return Shadow;\r\n}(Op));\r\n/**\r\n * @ignore\r\n */\r\nvar GraphicsImage = /** @class */ (function (_super) {\r\n    __extends(GraphicsImage, _super);\r\n    function GraphicsImage(image, width, height, x, y) {\r\n        var _this = _super.call(this) || this;\r\n        Object.defineProperty(_this, \"image\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: image\r\n        });\r\n        Object.defineProperty(_this, \"width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: width\r\n        });\r\n        Object.defineProperty(_this, \"height\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: height\r\n        });\r\n        Object.defineProperty(_this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x\r\n        });\r\n        Object.defineProperty(_this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(GraphicsImage.prototype, \"path\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (context) {\r\n            context.drawImage(this.image, this.x, this.y, this.width, this.height);\r\n        }\r\n    });\r\n    // TODO: OK?\r\n    Object.defineProperty(GraphicsImage.prototype, \"addBounds\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (bounds) {\r\n            setPoint(bounds, { x: this.x, y: this.y });\r\n            setPoint(bounds, { x: this.width, y: this.height });\r\n        }\r\n    });\r\n    return GraphicsImage;\r\n}(Op));\r\n/**\r\n * @ignore\r\n */\r\nvar CanvasGraphics = /** @class */ (function (_super) {\r\n    __extends(CanvasGraphics, _super);\r\n    function CanvasGraphics() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        Object.defineProperty(_this, \"_operations\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(_this, \"blendMode\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: BlendMode.NORMAL\r\n        });\r\n        Object.defineProperty(_this, \"_hasShadows\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(_this, \"_fillAlpha\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_strokeAlpha\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(CanvasGraphics.prototype, \"clear\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype.clear.call(this);\r\n            this._operations.length = 0;\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasGraphics.prototype, \"_pushOp\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (op) {\r\n            this._operations.push(op);\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasGraphics.prototype, \"beginFill\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (color, alpha) {\r\n            if (alpha === void 0) { alpha = 1; }\r\n            this._fillAlpha = alpha;\r\n            if (color) {\r\n                if (color instanceof Color) {\r\n                    this._pushOp(new BeginFill(color.toCSS(alpha)));\r\n                }\r\n                else {\r\n                    this.isMeasured = true;\r\n                    this._pushOp(new BeginFill(color));\r\n                }\r\n            }\r\n            else {\r\n                this._pushOp(new BeginFill(\"rgba(0, 0, 0, \" + alpha + \")\"));\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasGraphics.prototype, \"endFill\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this._pushOp(new EndFill(this._hasShadows));\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasGraphics.prototype, \"endStroke\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this._pushOp(new EndStroke());\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasGraphics.prototype, \"lineStyle\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (width, color, alpha, lineJoin) {\r\n            if (width === void 0) { width = 0; }\r\n            if (alpha === void 0) { alpha = 1; }\r\n            this._strokeAlpha = alpha;\r\n            if (color) {\r\n                if (color instanceof Color) {\r\n                    this._pushOp(new LineStyle(width, color.toCSS(alpha), lineJoin));\r\n                }\r\n                else {\r\n                    this._pushOp(new LineStyle(width, color, lineJoin));\r\n                }\r\n            }\r\n            else {\r\n                this._pushOp(new LineStyle(width, \"rgba(0, 0, 0, \" + alpha + \")\", lineJoin));\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasGraphics.prototype, \"setLineDash\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dash) {\r\n            this._pushOp(new LineDash(dash ? dash : []));\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasGraphics.prototype, \"setLineDashOffset\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (dashOffset) {\r\n            if (dashOffset === void 0) { dashOffset = 0; }\r\n            this._pushOp(new LineDashOffset(dashOffset));\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasGraphics.prototype, \"drawRect\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (x, y, width, height) {\r\n            this._pushOp(new DrawRect(x, y, width, height));\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasGraphics.prototype, \"drawCircle\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (x, y, radius) {\r\n            this._pushOp(new DrawCircle(x, y, radius));\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasGraphics.prototype, \"drawEllipse\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (x, y, radiusX, radiusY) {\r\n            this._pushOp(new DrawEllipse(x, y, radiusX, radiusY));\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasGraphics.prototype, \"arc\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (cx, cy, radius, startAngle, endAngle, anticlockwise) {\r\n            if (anticlockwise === void 0) { anticlockwise = false; }\r\n            this._pushOp(new Arc(cx, cy, radius, startAngle, endAngle, anticlockwise));\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasGraphics.prototype, \"arcTo\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (x1, y1, x2, y2, radius) {\r\n            this._pushOp(new ArcTo(x1, y1, x2, y2, radius));\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasGraphics.prototype, \"lineTo\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (x, y) {\r\n            this._pushOp(new LineTo(x, y));\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasGraphics.prototype, \"moveTo\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (x, y) {\r\n            this._pushOp(new MoveTo(x, y));\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasGraphics.prototype, \"bezierCurveTo\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (cpX, cpY, cpX2, cpY2, toX, toY) {\r\n            this._pushOp(new BezierCurveTo(cpX, cpY, cpX2, cpY2, toX, toY));\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasGraphics.prototype, \"quadraticCurveTo\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (cpX, cpY, toX, toY) {\r\n            this._pushOp(new QuadraticCurveTo(cpX, cpY, toX, toY));\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasGraphics.prototype, \"closePath\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this._pushOp(new ClosePath());\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasGraphics.prototype, \"shadow\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (color, blur, offsetX, offsetY, opacity) {\r\n            if (blur === void 0) { blur = 0; }\r\n            if (offsetX === void 0) { offsetX = 0; }\r\n            if (offsetY === void 0) { offsetY = 0; }\r\n            this._hasShadows = true;\r\n            this._pushOp(new Shadow(opacity ? color.toCSS(opacity) : color.toCSS(this._fillAlpha || this._strokeAlpha), blur, offsetX, offsetY));\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasGraphics.prototype, \"image\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (image, width, height, x, y) {\r\n            this._pushOp(new GraphicsImage(image, width, height, x, y));\r\n        }\r\n    });\r\n    // https://svgwg.org/svg2-draft/paths.html#DProperty\r\n    // TODO better error checking\r\n    Object.defineProperty(CanvasGraphics.prototype, \"svgPath\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (path) {\r\n            var _this = this;\r\n            var x = 0;\r\n            var y = 0;\r\n            var cpx = null;\r\n            var cpy = null;\r\n            var qcpx = null;\r\n            var qcpy = null;\r\n            var SEGMENTS_REGEXP = /([MmZzLlHhVvCcSsQqTtAa])([^MmZzLlHhVvCcSsQqTtAa]*)/g;\r\n            var ARGS_REGEXP = /[\\u0009\\u0020\\u000A\\u000C\\u000D]*([\\+\\-]?[0-9]*\\.?[0-9]+(?:[eE][\\+\\-]?[0-9]+)?)[\\u0009\\u0020\\u000A\\u000C\\u000D]*,?/g;\r\n            var match;\r\n            while ((match = SEGMENTS_REGEXP.exec(path)) !== null) {\r\n                var name_1 = match[1];\r\n                var rest = match[2];\r\n                var args = [];\r\n                while ((match = ARGS_REGEXP.exec(rest)) !== null) {\r\n                    args.push(+match[1]);\r\n                }\r\n                // Reset control point\r\n                if (name_1 !== \"S\" && name_1 !== \"s\" && name_1 !== \"C\" && name_1 !== \"c\") {\r\n                    cpx = null;\r\n                    cpy = null;\r\n                }\r\n                // Reset control point\r\n                if (name_1 !== \"Q\" && name_1 !== \"q\" && name_1 !== \"T\" && name_1 !== \"t\") {\r\n                    qcpx = null;\r\n                    qcpy = null;\r\n                }\r\n                switch (name_1) {\r\n                    case \"M\":\r\n                        checkEvenArgs(name_1, args.length, 2);\r\n                        x = args[0];\r\n                        y = args[1];\r\n                        this.moveTo(x, y);\r\n                        for (var i = 2; i < args.length; i += 2) {\r\n                            x = args[i];\r\n                            y = args[i + 1];\r\n                            this.lineTo(x, y);\r\n                        }\r\n                        break;\r\n                    case \"m\":\r\n                        checkEvenArgs(name_1, args.length, 2);\r\n                        x += args[0];\r\n                        y += args[1];\r\n                        this.moveTo(x, y);\r\n                        for (var i = 2; i < args.length; i += 2) {\r\n                            x += args[i];\r\n                            y += args[i + 1];\r\n                            this.lineTo(x, y);\r\n                        }\r\n                        break;\r\n                    case \"L\":\r\n                        checkEvenArgs(name_1, args.length, 2);\r\n                        for (var i = 0; i < args.length; i += 2) {\r\n                            x = args[i];\r\n                            y = args[i + 1];\r\n                            this.lineTo(x, y);\r\n                        }\r\n                        break;\r\n                    case \"l\":\r\n                        checkEvenArgs(name_1, args.length, 2);\r\n                        for (var i = 0; i < args.length; i += 2) {\r\n                            x += args[i];\r\n                            y += args[i + 1];\r\n                            this.lineTo(x, y);\r\n                        }\r\n                        break;\r\n                    case \"H\":\r\n                        checkMinArgs(name_1, args.length, 1);\r\n                        for (var i = 0; i < args.length; ++i) {\r\n                            x = args[i];\r\n                            this.lineTo(x, y);\r\n                        }\r\n                        break;\r\n                    case \"h\":\r\n                        checkMinArgs(name_1, args.length, 1);\r\n                        for (var i = 0; i < args.length; ++i) {\r\n                            x += args[i];\r\n                            this.lineTo(x, y);\r\n                        }\r\n                        break;\r\n                    case \"V\":\r\n                        checkMinArgs(name_1, args.length, 1);\r\n                        for (var i = 0; i < args.length; ++i) {\r\n                            y = args[i];\r\n                            this.lineTo(x, y);\r\n                        }\r\n                        break;\r\n                    case \"v\":\r\n                        checkMinArgs(name_1, args.length, 1);\r\n                        for (var i = 0; i < args.length; ++i) {\r\n                            y += args[i];\r\n                            this.lineTo(x, y);\r\n                        }\r\n                        break;\r\n                    case \"C\":\r\n                        checkEvenArgs(name_1, args.length, 6);\r\n                        for (var i = 0; i < args.length; i += 6) {\r\n                            var x1 = args[i];\r\n                            var y1 = args[i + 1];\r\n                            cpx = args[i + 2];\r\n                            cpy = args[i + 3];\r\n                            x = args[i + 4];\r\n                            y = args[i + 5];\r\n                            this.bezierCurveTo(x1, y1, cpx, cpy, x, y);\r\n                        }\r\n                        break;\r\n                    case \"c\":\r\n                        checkEvenArgs(name_1, args.length, 6);\r\n                        for (var i = 0; i < args.length; i += 6) {\r\n                            var x1 = args[i] + x;\r\n                            var y1 = args[i + 1] + y;\r\n                            cpx = args[i + 2] + x;\r\n                            cpy = args[i + 3] + y;\r\n                            x += args[i + 4];\r\n                            y += args[i + 5];\r\n                            this.bezierCurveTo(x1, y1, cpx, cpy, x, y);\r\n                        }\r\n                        break;\r\n                    case \"S\":\r\n                        checkEvenArgs(name_1, args.length, 4);\r\n                        if (cpx === null || cpy === null) {\r\n                            cpx = x;\r\n                            cpy = y;\r\n                        }\r\n                        for (var i = 0; i < args.length; i += 4) {\r\n                            var x1 = 2 * x - cpx;\r\n                            var y1 = 2 * y - cpy;\r\n                            cpx = args[i];\r\n                            cpy = args[i + 1];\r\n                            x = args[i + 2];\r\n                            y = args[i + 3];\r\n                            this.bezierCurveTo(x1, y1, cpx, cpy, x, y);\r\n                        }\r\n                        break;\r\n                    case \"s\":\r\n                        checkEvenArgs(name_1, args.length, 4);\r\n                        if (cpx === null || cpy === null) {\r\n                            cpx = x;\r\n                            cpy = y;\r\n                        }\r\n                        for (var i = 0; i < args.length; i += 4) {\r\n                            var x1 = 2 * x - cpx;\r\n                            var y1 = 2 * y - cpy;\r\n                            cpx = args[i] + x;\r\n                            cpy = args[i + 1] + y;\r\n                            x += args[i + 2];\r\n                            y += args[i + 3];\r\n                            this.bezierCurveTo(x1, y1, cpx, cpy, x, y);\r\n                        }\r\n                        break;\r\n                    case \"Q\":\r\n                        checkEvenArgs(name_1, args.length, 4);\r\n                        for (var i = 0; i < args.length; i += 4) {\r\n                            qcpx = args[i];\r\n                            qcpy = args[i + 1];\r\n                            x = args[i + 2];\r\n                            y = args[i + 3];\r\n                            this.quadraticCurveTo(qcpx, qcpy, x, y);\r\n                        }\r\n                        break;\r\n                    case \"q\":\r\n                        checkEvenArgs(name_1, args.length, 4);\r\n                        for (var i = 0; i < args.length; i += 4) {\r\n                            qcpx = args[i] + x;\r\n                            qcpy = args[i + 1] + y;\r\n                            x += args[i + 2];\r\n                            y += args[i + 3];\r\n                            this.quadraticCurveTo(qcpx, qcpy, x, y);\r\n                        }\r\n                        break;\r\n                    case \"T\":\r\n                        checkEvenArgs(name_1, args.length, 2);\r\n                        if (qcpx === null || qcpy === null) {\r\n                            qcpx = x;\r\n                            qcpy = y;\r\n                        }\r\n                        for (var i = 0; i < args.length; i += 2) {\r\n                            qcpx = 2 * x - qcpx;\r\n                            qcpy = 2 * y - qcpy;\r\n                            x = args[i];\r\n                            y = args[i + 1];\r\n                            this.quadraticCurveTo(qcpx, qcpy, x, y);\r\n                        }\r\n                        break;\r\n                    case \"t\":\r\n                        checkEvenArgs(name_1, args.length, 2);\r\n                        if (qcpx === null || qcpy === null) {\r\n                            qcpx = x;\r\n                            qcpy = y;\r\n                        }\r\n                        for (var i = 0; i < args.length; i += 2) {\r\n                            qcpx = 2 * x - qcpx;\r\n                            qcpy = 2 * y - qcpy;\r\n                            x += args[i];\r\n                            y += args[i + 1];\r\n                            this.quadraticCurveTo(qcpx, qcpy, x, y);\r\n                        }\r\n                        break;\r\n                    case \"A\":\r\n                    case \"a\":\r\n                        var relative = (name_1 === \"a\");\r\n                        checkEvenArgs(name_1, args.length, 7);\r\n                        for (var i = 0; i < args.length; i += 7) {\r\n                            var cx = args[i + 5];\r\n                            var cy = args[i + 6];\r\n                            if (relative) {\r\n                                cx += x;\r\n                                cy += y;\r\n                            }\r\n                            var bs = arcToBezier({\r\n                                px: x,\r\n                                py: y,\r\n                                rx: args[i],\r\n                                ry: args[i + 1],\r\n                                xAxisRotation: args[i + 2],\r\n                                largeArcFlag: assertBinary(args[i + 3]),\r\n                                sweepFlag: assertBinary(args[i + 4]),\r\n                                cx: cx,\r\n                                cy: cy,\r\n                            });\r\n                            $array.each(bs, function (b) {\r\n                                _this.bezierCurveTo(b.x1, b.y1, b.x2, b.y2, b.x, b.y);\r\n                                x = b.x;\r\n                                y = b.y;\r\n                            });\r\n                        }\r\n                        break;\r\n                    case \"Z\":\r\n                    case \"z\":\r\n                        checkArgs(name_1, args.length, 0);\r\n                        this.closePath();\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasGraphics.prototype, \"_runPath\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (context) {\r\n            context.beginPath();\r\n            $array.each(this._operations, function (op) {\r\n                op.path(context);\r\n            });\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasGraphics.prototype, \"_render\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (parentLayer) {\r\n            _super.prototype._render.call(this, parentLayer);\r\n            var layer = this._layer || parentLayer;\r\n            var layerDirty = layer.dirty;\r\n            var interactive = this._isInteractive();\r\n            if (layerDirty || interactive) {\r\n                var context_1 = layer.context;\r\n                var ghostContext_1 = this._renderer._ghostContext;\r\n                if (layerDirty) {\r\n                    context_1.globalCompositeOperation = this.blendMode;\r\n                    context_1.beginPath();\r\n                }\r\n                var color_1;\r\n                if (interactive) {\r\n                    ghostContext_1.beginPath();\r\n                    color_1 = this._getColorId();\r\n                }\r\n                $array.each(this._operations, function (op) {\r\n                    if (layerDirty) {\r\n                        op.path(context_1);\r\n                        op.colorize(context_1, undefined);\r\n                    }\r\n                    if (interactive) {\r\n                        op.path(ghostContext_1);\r\n                        op.colorize(ghostContext_1, color_1);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasGraphics.prototype, \"renderDetached\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (context) {\r\n            if (this.visible) {\r\n                this._setMatrix();\r\n                context.save();\r\n                // We must apply the mask before we transform the element\r\n                var mask = this.mask;\r\n                if (mask) {\r\n                    mask._setMatrix();\r\n                    mask._transform(context, 1);\r\n                    mask._runPath(context);\r\n                    context.clip();\r\n                }\r\n                // TODO handle compoundAlpha somehow ?\r\n                context.globalAlpha = this.compoundAlpha * this.alpha;\r\n                this._transform(context, 1);\r\n                if (this.filter) {\r\n                    context.filter = this.filter;\r\n                }\r\n                context.globalCompositeOperation = this.blendMode;\r\n                context.beginPath();\r\n                $array.each(this._operations, function (op) {\r\n                    op.path(context);\r\n                    op.colorize(context, undefined);\r\n                });\r\n                context.restore();\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasGraphics.prototype, \"_addBounds\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (bounds) {\r\n            if (this.visible && this.isMeasured) {\r\n                $array.each(this._operations, function (op) {\r\n                    op.addBounds(bounds);\r\n                });\r\n            }\r\n        }\r\n    });\r\n    return CanvasGraphics;\r\n}(CanvasDisplayObject));\r\nexport { CanvasGraphics };\r\n/**\r\n * @ignore\r\n */\r\nvar CanvasText = /** @class */ (function (_super) {\r\n    __extends(CanvasText, _super);\r\n    function CanvasText(renderer, text, style) {\r\n        var _this = _super.call(this, renderer) || this;\r\n        Object.defineProperty(_this, \"text\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"style\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"resolution\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(_this, \"_textInfo\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_textVisible\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(_this, \"_originalScale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        _this.text = text;\r\n        _this.style = style;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(CanvasText.prototype, \"invalidateBounds\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype.invalidateBounds.call(this);\r\n            this._textInfo = undefined;\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasText.prototype, \"_shared\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (context) {\r\n            if (this.style.textAlign) {\r\n                context.textAlign = this.style.textAlign;\r\n            }\r\n            if (this.style.direction) {\r\n                context.direction = this.style.direction;\r\n            }\r\n            if (this.style.textBaseline) {\r\n                context.textBaseline = this.style.textBaseline;\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasText.prototype, \"_prerender\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (layer, ignoreGhost, ignoreFontWeight) {\r\n            if (ignoreGhost === void 0) { ignoreGhost = false; }\r\n            if (ignoreFontWeight === void 0) { ignoreFontWeight = false; }\r\n            _super.prototype._render.call(this, layer);\r\n            var context = layer.context;\r\n            var ghostContext = this._renderer._ghostContext;\r\n            // Font style\r\n            var style = this.style;\r\n            var fontStyle = this._getFontStyle(undefined, ignoreFontWeight);\r\n            context.font = fontStyle;\r\n            if (this._isInteractive() && !ignoreGhost) {\r\n                ghostContext.font = fontStyle;\r\n            }\r\n            // Other parameters\r\n            if (style.fill) {\r\n                if (style.fill instanceof Color) {\r\n                    context.fillStyle = style.fill.toCSS();\r\n                }\r\n                else {\r\n                    context.fillStyle = style.fill;\r\n                }\r\n            }\r\n            if (style.shadowColor) {\r\n                layer.context.shadowColor = style.shadowColor.toCSS(style.shadowOpacity || 1);\r\n            }\r\n            if (style.shadowBlur) {\r\n                layer.context.shadowBlur = style.shadowBlur;\r\n            }\r\n            if (style.shadowOffsetX) {\r\n                layer.context.shadowOffsetX = style.shadowOffsetX;\r\n            }\r\n            if (style.shadowOffsetY) {\r\n                layer.context.shadowOffsetY = style.shadowOffsetY;\r\n            }\r\n            this._shared(context);\r\n            if (this._isInteractive() && !ignoreGhost) {\r\n                ghostContext.fillStyle = this._getColorId();\r\n                this._shared(ghostContext);\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasText.prototype, \"_getFontStyle\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (style2, ignoreFontWeight) {\r\n            if (ignoreFontWeight === void 0) { ignoreFontWeight = false; }\r\n            // Process defaults\r\n            var style = this.style;\r\n            var fontStyle = [];\r\n            if (style2 && style2.fontVariant) {\r\n                fontStyle.push(style2.fontVariant);\r\n            }\r\n            else if (style.fontVariant) {\r\n                fontStyle.push(style.fontVariant);\r\n            }\r\n            if (!ignoreFontWeight) {\r\n                if (style2 && style2.fontWeight) {\r\n                    fontStyle.push(style2.fontWeight);\r\n                }\r\n                else if (style.fontWeight) {\r\n                    fontStyle.push(style.fontWeight);\r\n                }\r\n            }\r\n            if (style2 && style2.fontStyle) {\r\n                fontStyle.push(style2.fontStyle);\r\n            }\r\n            else if (style.fontStyle) {\r\n                fontStyle.push(style.fontStyle);\r\n            }\r\n            if (style2 && style2.fontSize) {\r\n                if ($type.isNumber(style2.fontSize)) {\r\n                    style2.fontSize = style2.fontSize + \"px\";\r\n                }\r\n                fontStyle.push(style2.fontSize);\r\n            }\r\n            else if (style.fontSize) {\r\n                if ($type.isNumber(style.fontSize)) {\r\n                    style.fontSize = style.fontSize + \"px\";\r\n                }\r\n                fontStyle.push(style.fontSize);\r\n            }\r\n            if (style2 && style2.fontFamily) {\r\n                fontStyle.push(style2.fontFamily);\r\n            }\r\n            else if (style.fontFamily) {\r\n                fontStyle.push(style.fontFamily);\r\n            }\r\n            else if (fontStyle.length) {\r\n                fontStyle.push(\"Arial\");\r\n            }\r\n            return fontStyle.join(\" \");\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasText.prototype, \"_render\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (parentLayer) {\r\n            var _this = this;\r\n            var layer = this._layer || parentLayer;\r\n            // We need measurements in order to properly position text for alignment\r\n            if (!this._textInfo) {\r\n                this._measure(layer);\r\n            }\r\n            if (this._textVisible) {\r\n                var interactive_1 = this._isInteractive();\r\n                var context_2 = layer.context;\r\n                var layerDirty_1 = layer.dirty;\r\n                var ghostContext_2 = this._renderer._ghostContext;\r\n                context_2.save();\r\n                ghostContext_2.save();\r\n                this._prerender(layer);\r\n                // const lines = this.text.toString().replace(/\\r/g, \"\").split(/\\n/);\r\n                // const x = this._localBounds && (this._localBounds.left < 0) ? Math.abs(this._localBounds.left) : 0;\r\n                // Process text info produced by _measure()\r\n                $array.each(this._textInfo, function (line, _index) {\r\n                    $array.each(line.textChunks, function (chunk, _index) {\r\n                        // Set style\r\n                        if (chunk.style) {\r\n                            context_2.save();\r\n                            ghostContext_2.save();\r\n                            context_2.font = chunk.style;\r\n                            if (_this._isInteractive()) {\r\n                                ghostContext_2.font = chunk.style;\r\n                            }\r\n                        }\r\n                        if (chunk.fill) {\r\n                            context_2.save();\r\n                            context_2.fillStyle = chunk.fill.toCSS();\r\n                            // Color does not affect ghostContext so we not set it\r\n                        }\r\n                        // Draw text\r\n                        if (layerDirty_1) {\r\n                            context_2.fillText(chunk.text, chunk.offsetX, line.offsetY + chunk.offsetY);\r\n                        }\r\n                        // Draw underline\r\n                        if (chunk.textDecoration == \"underline\" || chunk.textDecoration == \"line-through\") {\r\n                            var thickness = 1;\r\n                            var offset = 1;\r\n                            var fontSize = chunk.height;\r\n                            var offsetX = chunk.offsetX;\r\n                            switch (_this.style.textAlign) {\r\n                                case \"right\":\r\n                                case \"end\":\r\n                                    offsetX -= chunk.width;\r\n                                    break;\r\n                                case \"center\":\r\n                                    offsetX -= chunk.width / 2;\r\n                                    break;\r\n                            }\r\n                            if (chunk.style) {\r\n                                var format = TextFormatter.getTextStyle(chunk.style);\r\n                                switch (format.fontWeight) {\r\n                                    case \"bolder\":\r\n                                    case \"bold\":\r\n                                    case \"700\":\r\n                                    case \"800\":\r\n                                    case \"900\":\r\n                                        thickness = 2;\r\n                                        break;\r\n                                }\r\n                            }\r\n                            if (fontSize) {\r\n                                offset = fontSize / 20;\r\n                            }\r\n                            var y = void 0;\r\n                            if (chunk.textDecoration == \"line-through\") {\r\n                                y = thickness + line.offsetY + chunk.offsetY - chunk.height / 2;\r\n                            }\r\n                            else {\r\n                                y = thickness + offset * 1.5 + line.offsetY + chunk.offsetY;\r\n                            }\r\n                            context_2.save();\r\n                            context_2.beginPath();\r\n                            if (chunk.fill) {\r\n                                context_2.strokeStyle = chunk.fill.toCSS();\r\n                            }\r\n                            else if (_this.style.fill && _this.style.fill instanceof Color) {\r\n                                context_2.strokeStyle = _this.style.fill.toCSS();\r\n                            }\r\n                            context_2.lineWidth = thickness * offset;\r\n                            context_2.moveTo(offsetX, y);\r\n                            context_2.lineTo(offsetX + chunk.width, y);\r\n                            context_2.stroke();\r\n                            context_2.restore();\r\n                        }\r\n                        if (interactive_1 && _this.interactive) {\r\n                            // Draw text in ghost canvas ONLY if it is set as interactive\r\n                            // explicitly. This way we avoid hit test anomalies caused by anti\r\n                            // aliasing of text.\r\n                            ghostContext_2.fillText(chunk.text, chunk.offsetX, line.offsetY + chunk.offsetY);\r\n                        }\r\n                        if (chunk.fill) {\r\n                            context_2.restore();\r\n                            // Color does not affect ghostContext so we not set it\r\n                        }\r\n                        // Reset style\r\n                        if (chunk.style) {\r\n                            context_2.restore();\r\n                            ghostContext_2.restore();\r\n                        }\r\n                    });\r\n                });\r\n                context_2.restore();\r\n                ghostContext_2.restore();\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasText.prototype, \"_addBounds\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (bounds) {\r\n            if (this.visible && this.isMeasured) {\r\n                //if (this._textVisible) {\r\n                var x = this._measure(this.getLayer());\r\n                setPoint(bounds, { x: x.left, y: x.top });\r\n                setPoint(bounds, { x: x.right, y: x.bottom });\r\n                //}\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasText.prototype, \"_measure\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (layer) {\r\n            var _this = this;\r\n            var context = layer.context;\r\n            var ghostContext = this._renderer._ghostContext;\r\n            var rtl = this.style.direction == \"rtl\";\r\n            // Reset text info\r\n            this._textInfo = [];\r\n            // Init\r\n            var oversizedBehavior = this.style.oversizedBehavior;\r\n            var maxWidth = this.style.maxWidth;\r\n            var truncate = $type.isNumber(maxWidth) && oversizedBehavior == \"truncate\";\r\n            var wrap = $type.isNumber(maxWidth) && (oversizedBehavior == \"wrap\" || oversizedBehavior == \"wrap-no-break\");\r\n            // Pre-render\r\n            context.save();\r\n            ghostContext.save();\r\n            this._prerender(layer, true, true);\r\n            // Get default font metrix\r\n            var refText = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789 \";\r\n            // Split up text into lines\r\n            var lines = this.text.toString().replace(/\\r/g, \"\").split(/\\n/);\r\n            var styleRestored = true;\r\n            var minX = 0;\r\n            var maxX = 0;\r\n            // Iterate through the lines\r\n            var offsetY = 0;\r\n            var currentStyle;\r\n            $array.each(lines, function (line, _index) {\r\n                // Split up line into format/value chunks\r\n                var chunks;\r\n                if (line == \"\") {\r\n                    chunks = [{\r\n                            type: \"value\",\r\n                            text: \"\"\r\n                        }];\r\n                }\r\n                else {\r\n                    chunks = TextFormatter.chunk(line, false, _this.style.ignoreFormatting);\r\n                }\r\n                var _loop_1 = function () {\r\n                    // Init line object\r\n                    var lineInfo = {\r\n                        offsetY: offsetY,\r\n                        ascent: 0,\r\n                        width: 0,\r\n                        height: 0,\r\n                        left: 0,\r\n                        right: 0,\r\n                        textChunks: []\r\n                    };\r\n                    // Measure reference text\r\n                    var metrics = _this._measureText(refText, context);\r\n                    var height = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\r\n                    lineInfo.height = height;\r\n                    lineInfo.ascent = metrics.actualBoundingBoxAscent;\r\n                    var currentFormat;\r\n                    var currentDecoration = _this.style.textDecoration;\r\n                    var currentFill;\r\n                    var currentChunkWidth;\r\n                    var skipFurtherText = false;\r\n                    var firstTextChunk = true;\r\n                    var leftoverChunks = [];\r\n                    var currentVerticalAlign;\r\n                    //let offsetX = 0;\r\n                    //let chunk;\r\n                    //while(chunk = chunks.shift()) {\r\n                    $array.eachContinue(chunks, function (chunk, index) {\r\n                        // Format chunk\r\n                        if (chunk.type == \"format\") {\r\n                            if (chunk.text == \"[/]\") {\r\n                                if (!styleRestored) {\r\n                                    context.restore();\r\n                                    ghostContext.restore();\r\n                                    styleRestored = true;\r\n                                }\r\n                                currentFill = undefined;\r\n                                currentStyle = undefined;\r\n                                currentChunkWidth = undefined;\r\n                                currentDecoration = _this.style.textDecoration;\r\n                                currentVerticalAlign = undefined;\r\n                                currentFormat = chunk.text;\r\n                            }\r\n                            else {\r\n                                if (!styleRestored) {\r\n                                    context.restore();\r\n                                    ghostContext.restore();\r\n                                }\r\n                                var format = TextFormatter.getTextStyle(chunk.text);\r\n                                var fontStyle = _this._getFontStyle(format);\r\n                                context.save();\r\n                                ghostContext.save();\r\n                                context.font = fontStyle;\r\n                                currentStyle = fontStyle;\r\n                                currentFormat = chunk.text;\r\n                                if (format.textDecoration) {\r\n                                    currentDecoration = format.textDecoration;\r\n                                }\r\n                                if (format.fill) {\r\n                                    currentFill = format.fill;\r\n                                }\r\n                                if (format.width) {\r\n                                    currentChunkWidth = $type.toNumber(format.width);\r\n                                }\r\n                                if (format.verticalAlign) {\r\n                                    currentVerticalAlign = format.verticalAlign;\r\n                                }\r\n                                styleRestored = false;\r\n                                // Measure reference text after change of format\r\n                                var metrics_1 = _this._measureText(refText, context);\r\n                                var height_1 = metrics_1.actualBoundingBoxAscent + metrics_1.actualBoundingBoxDescent;\r\n                                if (height_1 > lineInfo.height) {\r\n                                    lineInfo.height = height_1;\r\n                                }\r\n                                if (metrics_1.actualBoundingBoxAscent > lineInfo.ascent) {\r\n                                    lineInfo.ascent = metrics_1.actualBoundingBoxAscent;\r\n                                }\r\n                            }\r\n                        }\r\n                        // Text chunk\r\n                        else if (chunk.type == \"value\" && !skipFurtherText) {\r\n                            // Measure\r\n                            var metrics_2 = _this._measureText(chunk.text, context);\r\n                            var chunkWidth = metrics_2.actualBoundingBoxLeft + metrics_2.actualBoundingBoxRight;\r\n                            // Check for fit\r\n                            if (truncate) {\r\n                                // Break words?\r\n                                var breakWords = firstTextChunk || _this.style.breakWords || false;\r\n                                // Measure ellipsis and check if it fits\r\n                                var ellipsis = _this.style.ellipsis || \"\";\r\n                                var ellipsisMetrics = _this._measureText(ellipsis, context);\r\n                                var ellipsisWidth = ellipsisMetrics.actualBoundingBoxLeft + ellipsisMetrics.actualBoundingBoxRight;\r\n                                // Check fit\r\n                                if ((lineInfo.width + chunkWidth) > maxWidth) {\r\n                                    var excessWidth = maxWidth - lineInfo.width - ellipsisWidth;\r\n                                    chunk.text = _this._truncateText(context, chunk.text, excessWidth, breakWords);\r\n                                    chunk.text += ellipsis;\r\n                                    skipFurtherText = true;\r\n                                }\r\n                            }\r\n                            else if (wrap) {\r\n                                // Check fit\r\n                                if ((lineInfo.width + chunkWidth) > maxWidth) {\r\n                                    var excessWidth = maxWidth - lineInfo.width;\r\n                                    var tmpText = _this._truncateText(context, chunk.text, excessWidth, false, (firstTextChunk && _this.style.oversizedBehavior != \"wrap-no-break\"));\r\n                                    if (tmpText == \"\") {\r\n                                        // Unable to fit a single letter - hide the whole label\r\n                                        _this._textVisible = true;\r\n                                        return false;\r\n                                    }\r\n                                    //skipFurtherText = true;\r\n                                    //Add remaining chunks for the next line\r\n                                    leftoverChunks = chunks.slice(index + 1);\r\n                                    //Add remaining text of current chunk if it was forced-cut\r\n                                    if ($utils.trim(tmpText) != $utils.trim(chunk.text)) {\r\n                                        leftoverChunks.unshift({\r\n                                            type: \"value\",\r\n                                            text: chunk.text.substr(tmpText.length)\r\n                                        });\r\n                                        if (currentFormat) {\r\n                                            leftoverChunks.unshift({\r\n                                                type: \"format\",\r\n                                                text: currentFormat\r\n                                            });\r\n                                        }\r\n                                    }\r\n                                    // Set current chunk (truncated)\r\n                                    chunk.text = $utils.trim(tmpText);\r\n                                    chunks = [];\r\n                                    skipFurtherText = true;\r\n                                }\r\n                            }\r\n                            // Chunk width?\r\n                            var leftBoundMod = 1;\r\n                            var rightBoundMod = 1;\r\n                            if (currentStyle && currentChunkWidth && (currentChunkWidth > chunkWidth)) {\r\n                                // increase horizontal bounding boxes accordingly\r\n                                var boundsMod = chunkWidth / currentChunkWidth;\r\n                                switch (_this.style.textAlign) {\r\n                                    case \"right\":\r\n                                    case \"end\":\r\n                                        leftBoundMod = boundsMod;\r\n                                        break;\r\n                                    case \"center\":\r\n                                        leftBoundMod = boundsMod;\r\n                                        rightBoundMod = boundsMod;\r\n                                        break;\r\n                                    default:\r\n                                        rightBoundMod = boundsMod;\r\n                                }\r\n                                chunkWidth = currentChunkWidth;\r\n                            }\r\n                            var chunkHeight = metrics_2.actualBoundingBoxAscent + metrics_2.actualBoundingBoxDescent;\r\n                            if (chunkHeight > lineInfo.height) {\r\n                                lineInfo.height = chunkHeight;\r\n                            }\r\n                            if (metrics_2.actualBoundingBoxAscent > lineInfo.ascent) {\r\n                                lineInfo.ascent = metrics_2.actualBoundingBoxAscent;\r\n                            }\r\n                            lineInfo.width += chunkWidth;\r\n                            lineInfo.left += metrics_2.actualBoundingBoxLeft / leftBoundMod;\r\n                            lineInfo.right += metrics_2.actualBoundingBoxRight / rightBoundMod;\r\n                            lineInfo.textChunks.push({\r\n                                style: currentStyle,\r\n                                fill: currentFill,\r\n                                text: chunk.text,\r\n                                width: chunkWidth,\r\n                                height: chunkHeight,\r\n                                left: metrics_2.actualBoundingBoxLeft,\r\n                                right: metrics_2.actualBoundingBoxRight,\r\n                                ascent: metrics_2.actualBoundingBoxAscent,\r\n                                offsetX: 0,\r\n                                offsetY: 0,\r\n                                textDecoration: currentDecoration,\r\n                                verticalAlign: currentVerticalAlign\r\n                            });\r\n                            //offsetX += chunkWidth;\r\n                            firstTextChunk = false;\r\n                        }\r\n                        if (leftoverChunks) {\r\n                            //return false;\r\n                        }\r\n                        return true;\r\n                        //}\r\n                    });\r\n                    if (_this.style.lineHeight instanceof Percent) {\r\n                        lineInfo.height *= _this.style.lineHeight.value;\r\n                        lineInfo.ascent *= _this.style.lineHeight.value;\r\n                    }\r\n                    else {\r\n                        lineInfo.height *= _this.style.lineHeight || 1.2;\r\n                        lineInfo.ascent *= _this.style.lineHeight || 1.2;\r\n                    }\r\n                    if (minX < lineInfo.left) {\r\n                        minX = lineInfo.left;\r\n                    }\r\n                    if (maxX < lineInfo.right) {\r\n                        maxX = lineInfo.right;\r\n                    }\r\n                    _this._textInfo.push(lineInfo);\r\n                    //lineInfo.offsetY += lineInfo.ascent;\r\n                    offsetY += lineInfo.height;\r\n                    // Reset chunks so that it can proceed to the next line\r\n                    chunks = leftoverChunks || [];\r\n                };\r\n                while (chunks.length > 0) {\r\n                    _loop_1();\r\n                }\r\n            });\r\n            if (!styleRestored) {\r\n                context.restore();\r\n                ghostContext.restore();\r\n            }\r\n            // Adjust chunk internal offsets\r\n            $array.each(this._textInfo, function (lineInfo, _index) {\r\n                var currentChunkOffset = 0;\r\n                $array.each(lineInfo.textChunks, function (chunk) {\r\n                    chunk.offsetX = currentChunkOffset + chunk.left - lineInfo.left;\r\n                    chunk.offsetY += lineInfo.height - lineInfo.height * (_this.style.baselineRatio || 0.19);\r\n                    currentChunkOffset += chunk.width;\r\n                    if (chunk.verticalAlign) {\r\n                        switch (chunk.verticalAlign) {\r\n                            case \"super\":\r\n                                chunk.offsetY -= lineInfo.height / 2 - chunk.height / 2;\r\n                                break;\r\n                            case \"sub\":\r\n                                chunk.offsetY += chunk.height / 2;\r\n                                break;\r\n                        }\r\n                    }\r\n                });\r\n            });\r\n            var bounds = {\r\n                left: rtl ? -maxX : -minX,\r\n                top: 0,\r\n                right: rtl ? minX : maxX,\r\n                bottom: offsetY,\r\n            };\r\n            // We need to fit?\r\n            if (oversizedBehavior !== \"none\") {\r\n                var ratio = this._fitRatio(bounds);\r\n                if (ratio < 1) {\r\n                    if (oversizedBehavior == \"fit\") {\r\n                        if ($type.isNumber(this.style.minScale) && (ratio < this.style.minScale)) {\r\n                            this._textVisible = false;\r\n                        }\r\n                        else {\r\n                            if (!this._originalScale || this._originalScale == 1) {\r\n                                this._originalScale = this.scale;\r\n                            }\r\n                            this.scale = ratio;\r\n                            this._textVisible = true;\r\n                        }\r\n                    }\r\n                    else if (oversizedBehavior == \"hide\") {\r\n                        this._textVisible = false;\r\n                    }\r\n                    else {\r\n                        switch (this.style.textAlign) {\r\n                            case \"right\":\r\n                            case \"end\":\r\n                                bounds.left = -maxWidth;\r\n                                bounds.right = 0;\r\n                                break;\r\n                            case \"center\":\r\n                                bounds.left = -maxWidth / 2;\r\n                                bounds.right = maxWidth / 2;\r\n                                break;\r\n                            default:\r\n                                bounds.left = 0;\r\n                                bounds.right = maxWidth;\r\n                        }\r\n                        this.scale = this._originalScale || 1;\r\n                        this._originalScale = undefined;\r\n                        this._textVisible = true;\r\n                    }\r\n                }\r\n                else {\r\n                    this.scale = this._originalScale || 1;\r\n                    this._originalScale = undefined;\r\n                    this._textVisible = true;\r\n                }\r\n            }\r\n            context.restore();\r\n            ghostContext.restore();\r\n            return bounds;\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasText.prototype, \"_fitRatio\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (bounds) {\r\n            var maxW = this.style.maxWidth;\r\n            var maxH = this.style.maxHeight;\r\n            if (!$type.isNumber(maxW) && !$type.isNumber(maxH)) {\r\n                return 1;\r\n            }\r\n            var w = bounds.right - bounds.left;\r\n            var h = bounds.bottom - bounds.top;\r\n            return Math.min(maxW / w || 1, maxH / h || 1);\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasText.prototype, \"_truncateText\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (context, text, maxWidth, breakWords, fallbackBreakWords) {\r\n            if (breakWords === void 0) { breakWords = false; }\r\n            if (fallbackBreakWords === void 0) { fallbackBreakWords = true; }\r\n            var width;\r\n            do {\r\n                if (breakWords) {\r\n                    text = text.slice(0, -1);\r\n                }\r\n                else {\r\n                    var tmp = text.replace(/[^,;:!?\\\\\\/\\s]+[,;:!?\\\\\\/\\s]*$/g, \"\");\r\n                    if (tmp == \"\" && fallbackBreakWords) {\r\n                        breakWords = true;\r\n                    }\r\n                    else if (tmp == \"\") {\r\n                        return text;\r\n                    }\r\n                    else {\r\n                        text = tmp;\r\n                    }\r\n                }\r\n                var metrics = this._measureText(text, context);\r\n                width = metrics.actualBoundingBoxLeft + metrics.actualBoundingBoxRight;\r\n            } while ((width > maxWidth) && text != \"\");\r\n            return text;\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasText.prototype, \"_measureText\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (text, context) {\r\n            var metrics = context.measureText(text);\r\n            var fakeMetrics = {};\r\n            if (metrics.actualBoundingBoxAscent == null) {\r\n                var div = document.createElement(\"div\");\r\n                div.innerText = text;\r\n                div.style.visibility = \"hidden\";\r\n                div.style.position = \"absolute\";\r\n                div.style.top = \"-1000000px;\";\r\n                div.style.fontFamily = this.style.fontFamily || \"\";\r\n                div.style.fontSize = this.style.fontSize + \"\";\r\n                document.body.appendChild(div);\r\n                var bbox = div.getBoundingClientRect();\r\n                document.body.removeChild(div);\r\n                var h = bbox.height;\r\n                var w_1 = metrics.width;\r\n                var left = 0;\r\n                var right = w_1;\r\n                fakeMetrics = {\r\n                    actualBoundingBoxAscent: h,\r\n                    actualBoundingBoxDescent: 0,\r\n                    actualBoundingBoxLeft: left,\r\n                    actualBoundingBoxRight: right,\r\n                    fontBoundingBoxAscent: h,\r\n                    fontBoundingBoxDescent: 0,\r\n                    width: w_1\r\n                };\r\n                //return fake;\r\n            }\r\n            else {\r\n                fakeMetrics = {\r\n                    actualBoundingBoxAscent: metrics.actualBoundingBoxAscent,\r\n                    actualBoundingBoxDescent: metrics.actualBoundingBoxDescent,\r\n                    actualBoundingBoxLeft: metrics.actualBoundingBoxLeft,\r\n                    actualBoundingBoxRight: metrics.actualBoundingBoxRight,\r\n                    fontBoundingBoxAscent: metrics.actualBoundingBoxAscent,\r\n                    fontBoundingBoxDescent: metrics.actualBoundingBoxDescent,\r\n                    width: metrics.width\r\n                };\r\n            }\r\n            var w = metrics.width;\r\n            switch (this.style.textAlign) {\r\n                case \"right\":\r\n                case \"end\":\r\n                    fakeMetrics.actualBoundingBoxLeft = w;\r\n                    fakeMetrics.actualBoundingBoxRight = 0;\r\n                    break;\r\n                case \"center\":\r\n                    fakeMetrics.actualBoundingBoxLeft = w / 2;\r\n                    fakeMetrics.actualBoundingBoxRight = w / 2;\r\n                    break;\r\n                default:\r\n                    fakeMetrics.actualBoundingBoxLeft = 0;\r\n                    fakeMetrics.actualBoundingBoxRight = w;\r\n            }\r\n            return fakeMetrics;\r\n        }\r\n    });\r\n    return CanvasText;\r\n}(CanvasDisplayObject));\r\nexport { CanvasText };\r\n/**\r\n * @ignore\r\n */\r\nvar CanvasTextStyle = /** @class */ (function () {\r\n    function CanvasTextStyle() {\r\n        //public wordWrapWidth: number = 100;\r\n        Object.defineProperty(this, \"fill\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"textAlign\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"fontFamily\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"fontSize\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"fontWeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"fontStyle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"fontVariant\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"textDecoration\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowColor\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowBlur\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowOffsetX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowOffsetY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowOpacity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // leading?: number;\r\n        // letterSpacing?: number;\r\n        Object.defineProperty(this, \"lineHeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: percent(120)\r\n        });\r\n        Object.defineProperty(this, \"baselineRatio\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0.19\r\n        });\r\n        // padding?: number;\r\n        // stroke?: number;\r\n        // strokeThickness?: number;\r\n        // trim?: number;\r\n        // wordWrap?: boolean;\r\n        Object.defineProperty(this, \"direction\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"textBaseline\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"oversizedBehavior\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"none\"\r\n        });\r\n        Object.defineProperty(this, \"breakWords\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"ellipsis\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"…\"\r\n        });\r\n        Object.defineProperty(this, \"maxWidth\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"maxHeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"minScale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"ignoreFormatting\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    return CanvasTextStyle;\r\n}());\r\nexport { CanvasTextStyle };\r\n/**\r\n * @ignore\r\n */\r\nvar CanvasRadialText = /** @class */ (function (_super) {\r\n    __extends(CanvasRadialText, _super);\r\n    function CanvasRadialText() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        Object.defineProperty(_this, \"textType\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"circular\"\r\n        });\r\n        Object.defineProperty(_this, \"radius\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"startAngle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"inside\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(_this, \"orientation\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"auto\"\r\n        });\r\n        Object.defineProperty(_this, \"kerning\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(_this, \"_textReversed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(CanvasRadialText.prototype, \"_render\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (parentLayer) {\r\n            switch (this.textType) {\r\n                case \"circular\":\r\n                    this._renderCircular(parentLayer);\r\n                    break;\r\n                default:\r\n                    _super.prototype._render.call(this, parentLayer);\r\n                    break;\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasRadialText.prototype, \"_renderCircular\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (parentLayer) {\r\n            var layer = this._layer || parentLayer;\r\n            this._prerender(layer);\r\n            var interactive = this._isInteractive();\r\n            var context = layer.context;\r\n            var layerDirty = layer.dirty;\r\n            var ghostContext = this._renderer._ghostContext;\r\n            // Savepoint\r\n            context.save();\r\n            if (interactive) {\r\n                ghostContext.save();\r\n            }\r\n            // Init\r\n            var radius = (this.radius || 0);\r\n            var startAngle = (this.startAngle || 0);\r\n            var deltaAngle = 0;\r\n            var orientation = this.orientation;\r\n            var inward = orientation == \"auto\" ? \"auto\" : orientation == \"inward\";\r\n            var inside = this.inside;\r\n            var align = this.style.textAlign || \"left\";\r\n            var kerning = this.kerning || 0;\r\n            var clockwise = align == \"left\" ? 1 : -1;\r\n            var shouldReverse = !this._textReversed;\r\n            // We need measurements in order to properly position text for alignment\r\n            if (!this._textInfo) {\r\n                this._measure(layer);\r\n            }\r\n            // Check if we need to invert the whole stuff\r\n            if (inward == \"auto\") {\r\n                // Calc max angle so we know whether we need to flip it\r\n                var maxAngle_1 = 0;\r\n                var midAngle = 0;\r\n                $array.each(this._textInfo, function (line, _index) {\r\n                    var deltaAngle = startAngle + (line.width / (radius - line.height)) / 2 * -clockwise;\r\n                    if (deltaAngle > maxAngle_1) {\r\n                        maxAngle_1 = deltaAngle;\r\n                    }\r\n                });\r\n                if (align == \"left\") {\r\n                    midAngle = (maxAngle_1 + deltaAngle / 2) * $math.DEGREES;\r\n                }\r\n                else if (align == \"right\") {\r\n                    midAngle = (maxAngle_1 - deltaAngle / 2) * $math.DEGREES;\r\n                }\r\n                else {\r\n                    midAngle = startAngle * $math.DEGREES;\r\n                }\r\n                midAngle = $math.normalizeAngle(midAngle);\r\n                inward = (midAngle >= 270) || (midAngle <= 90);\r\n            }\r\n            if (inward == true && shouldReverse) {\r\n                this._textInfo.reverse();\r\n                this._textReversed = true;\r\n            }\r\n            // if ((inward == false && align == \"left\") || (inward == true && align == \"right\")) {\r\n            // \tclockwise *= -1;\r\n            // }\r\n            // Process text info produced by _measure()\r\n            $array.each(this._textInfo, function (line, _index) {\r\n                var textHeight = line.height;\r\n                // Adjust radius (for `inside = false`)\r\n                // Radius adjustment for `inside = false` is below the line calculation\r\n                if (!inside) {\r\n                    radius += textHeight;\r\n                }\r\n                // Reverse letters if we're painting them counter-clockwise\r\n                if (((clockwise == -1 && inward) || (clockwise == 1 && !inward)) && shouldReverse) {\r\n                    line.textChunks.reverse();\r\n                }\r\n                // Init angles\r\n                var lineStartAngle = startAngle;\r\n                deltaAngle = 0;\r\n                // Adjust for center-align\r\n                if (align == \"center\") {\r\n                    lineStartAngle += (line.width / (radius - textHeight)) / 2 * -clockwise;\r\n                    deltaAngle = lineStartAngle - startAngle;\r\n                }\r\n                // if (inward == \"auto\") {\r\n                // \tlet midAngle;\r\n                // \tif (align == \"left\") {\r\n                // \t\tmidAngle = (lineStartAngle + deltaAngle / 2) * $math.DEGREES;\r\n                // \t}\r\n                // \telse if () {\r\n                // \t\tmidAngle = (lineStartAngle - deltaAngle / 2) * $math.DEGREES;\r\n                // \t}\r\n                // \tinward = (midAngle >= 270) || (midAngle <= 90);\r\n                // }\r\n                // Rotate letters if they are facing outward\r\n                lineStartAngle += (Math.PI * (inward ? 0 : 1)); // Rotate 180 if outward\r\n                // Savepoint\r\n                context.save();\r\n                if (interactive) {\r\n                    ghostContext.save();\r\n                }\r\n                // Assume starting angle\r\n                context.rotate(lineStartAngle);\r\n                if (interactive) {\r\n                    ghostContext.rotate(lineStartAngle);\r\n                }\r\n                var angleShift = 0;\r\n                $array.each(line.textChunks, function (chunk, _index) {\r\n                    // Draw the letter\r\n                    var char = chunk.text;\r\n                    var charWidth = chunk.width;\r\n                    // Rotate half a letter\r\n                    angleShift = (charWidth / 2) / (radius - textHeight) * clockwise;\r\n                    context.rotate(angleShift);\r\n                    if (interactive) {\r\n                        ghostContext.rotate(angleShift);\r\n                    }\r\n                    // Set style\r\n                    if (chunk.style) {\r\n                        context.save();\r\n                        ghostContext.save();\r\n                        context.font = chunk.style;\r\n                        if (interactive) {\r\n                            ghostContext.font = chunk.style;\r\n                        }\r\n                    }\r\n                    if (chunk.fill) {\r\n                        context.save();\r\n                        context.fillStyle = chunk.fill.toCSS();\r\n                        // Color does not affect ghostContext so we not set it\r\n                    }\r\n                    // Center letters\r\n                    context.textBaseline = \"middle\";\r\n                    context.textAlign = \"center\";\r\n                    if (interactive) {\r\n                        ghostContext.textBaseline = \"middle\";\r\n                        ghostContext.textAlign = \"center\";\r\n                    }\r\n                    // Plop the letter\r\n                    if (layerDirty) {\r\n                        context.fillText(char, 0, (inward ? 1 : -1) * (0 - radius + textHeight / 2));\r\n                    }\r\n                    if (interactive) {\r\n                        ghostContext.fillText(char, 0, (inward ? 1 : -1) * (0 - radius + textHeight / 2));\r\n                    }\r\n                    if (chunk.fill) {\r\n                        context.restore();\r\n                        // Color does not affect ghostContext so we not set it\r\n                    }\r\n                    // Reset style\r\n                    if (chunk.style) {\r\n                        context.restore();\r\n                        ghostContext.restore();\r\n                    }\r\n                    // Rotate half a letter and add spacing\r\n                    angleShift = (charWidth / 2 + kerning) / (radius - textHeight) * clockwise;\r\n                    context.rotate(angleShift);\r\n                    if (interactive) {\r\n                        ghostContext.rotate(angleShift);\r\n                    }\r\n                });\r\n                // Restore angle\r\n                context.restore();\r\n                if (interactive) {\r\n                    ghostContext.restore();\r\n                }\r\n                // Adjust radius (for `inside = true`)\r\n                if (inside) {\r\n                    radius -= textHeight;\r\n                }\r\n            });\r\n            // Restore\r\n            context.restore();\r\n            if (interactive) {\r\n                ghostContext.restore();\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasRadialText.prototype, \"_measure\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (layer) {\r\n            switch (this.textType) {\r\n                case \"circular\":\r\n                    return this._measureCircular(layer);\r\n                default:\r\n                    return _super.prototype._measure.call(this, layer);\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasRadialText.prototype, \"_measureCircular\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (layer) {\r\n            var _this = this;\r\n            var context = layer.context;\r\n            var ghostContext = this._renderer._ghostContext;\r\n            var rtl = this.style.direction == \"rtl\";\r\n            // Reset text info\r\n            this._textInfo = [];\r\n            this._textReversed = false;\r\n            // Pre-render\r\n            context.save();\r\n            ghostContext.save();\r\n            this._prerender(layer, true);\r\n            // Split up text into lines\r\n            var lines = this.text.toString().replace(/\\r/g, \"\").split(/\\n/);\r\n            var styleRestored = true;\r\n            // Iterate through the lines\r\n            var offsetY = 0;\r\n            $array.each(lines, function (line, _index) {\r\n                // Split up line into format/value chunks\r\n                var chunks = TextFormatter.chunk(line, false, _this.style.ignoreFormatting);\r\n                // Init line object\r\n                var lineInfo = {\r\n                    offsetY: offsetY,\r\n                    ascent: 0,\r\n                    width: 0,\r\n                    height: 0,\r\n                    left: 0,\r\n                    right: 0,\r\n                    textChunks: []\r\n                };\r\n                var currentStyle;\r\n                var currentFill;\r\n                var currentChunkWidth;\r\n                //while(chunk = chunks.shift()) {\r\n                $array.each(chunks, function (chunk, _index) {\r\n                    // Format chunk\r\n                    if (chunk.type == \"format\") {\r\n                        if (chunk.text == \"[/]\") {\r\n                            if (!styleRestored) {\r\n                                context.restore();\r\n                                ghostContext.restore();\r\n                                styleRestored = true;\r\n                            }\r\n                            currentFill = undefined;\r\n                            currentStyle = undefined;\r\n                            currentChunkWidth = undefined;\r\n                        }\r\n                        else {\r\n                            var format = TextFormatter.getTextStyle(chunk.text);\r\n                            var fontStyle = _this._getFontStyle(format);\r\n                            context.save();\r\n                            ghostContext.save();\r\n                            context.font = fontStyle;\r\n                            currentStyle = fontStyle;\r\n                            if (format.fill) {\r\n                                currentFill = format.fill;\r\n                            }\r\n                            if (format.width) {\r\n                                currentChunkWidth = $type.toNumber(format.width);\r\n                            }\r\n                            styleRestored = false;\r\n                        }\r\n                    }\r\n                    // Text format\r\n                    else if (chunk.type == \"value\") {\r\n                        // Measure each letter\r\n                        var chars = chunk.text.match(/./ug) || [];\r\n                        if (rtl) {\r\n                            chars.reverse();\r\n                        }\r\n                        for (var i = 0; i < chars.length; i++) {\r\n                            var char = chars[i];\r\n                            // Measure\r\n                            var metrics = _this._measureText(char, context);\r\n                            var chunkWidth = metrics.width;\r\n                            // Chunk width?\r\n                            if (currentStyle && currentChunkWidth && (currentChunkWidth > chunkWidth)) {\r\n                                chunkWidth = currentChunkWidth;\r\n                            }\r\n                            var chunkHeight = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\r\n                            if (chunkHeight > lineInfo.height) {\r\n                                lineInfo.height = chunkHeight;\r\n                            }\r\n                            if (metrics.actualBoundingBoxAscent > lineInfo.ascent) {\r\n                                lineInfo.ascent = metrics.actualBoundingBoxAscent;\r\n                            }\r\n                            lineInfo.width += chunkWidth;\r\n                            lineInfo.left += metrics.actualBoundingBoxLeft;\r\n                            lineInfo.right += metrics.actualBoundingBoxRight;\r\n                            lineInfo.textChunks.push({\r\n                                style: currentStyle,\r\n                                fill: currentFill,\r\n                                text: char,\r\n                                width: chunkWidth,\r\n                                height: chunkHeight + metrics.actualBoundingBoxDescent,\r\n                                left: metrics.actualBoundingBoxLeft,\r\n                                right: metrics.actualBoundingBoxRight,\r\n                                ascent: metrics.actualBoundingBoxAscent,\r\n                                offsetX: 0,\r\n                                offsetY: chunkHeight,\r\n                                textDecoration: undefined\r\n                            });\r\n                            if (rtl) {\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n                if (_this.style.lineHeight instanceof Percent) {\r\n                    lineInfo.height *= _this.style.lineHeight.value;\r\n                }\r\n                else {\r\n                    lineInfo.height *= _this.style.lineHeight || 1.2;\r\n                }\r\n                _this._textInfo.push(lineInfo);\r\n                //lineInfo.offsetY += lineInfo.ascent;\r\n                offsetY += lineInfo.height;\r\n            });\r\n            if (!styleRestored) {\r\n                context.restore();\r\n                ghostContext.restore();\r\n            }\r\n            // Adjust chunk internal offsets\r\n            $array.each(this._textInfo, function (lineInfo) {\r\n                $array.each(lineInfo.textChunks, function (chunk) {\r\n                    chunk.offsetY += Math.round((lineInfo.height - chunk.height + (lineInfo.ascent - chunk.ascent)) / 2);\r\n                });\r\n            });\r\n            context.restore();\r\n            ghostContext.restore();\r\n            return {\r\n                left: 0,\r\n                top: 0,\r\n                right: 0,\r\n                bottom: 0,\r\n            };\r\n        }\r\n    });\r\n    return CanvasRadialText;\r\n}(CanvasText));\r\nexport { CanvasRadialText };\r\n/**\r\n * @ignore\r\n */\r\nvar CanvasImage = /** @class */ (function (_super) {\r\n    __extends(CanvasImage, _super);\r\n    function CanvasImage(renderer, image) {\r\n        var _this = _super.call(this, renderer) || this;\r\n        Object.defineProperty(_this, \"width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"height\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"image\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"tainted\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"shadowColor\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"shadowBlur\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"shadowOffsetX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"shadowOffsetY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"shadowOpacity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_imageMask\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        _this.image = image;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(CanvasImage.prototype, \"_dispose\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._dispose.call(this);\r\n            if (this._imageMask) {\r\n                clearCanvas(this._imageMask);\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasImage.prototype, \"getLocalBounds\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            if (!this._localBounds) {\r\n                var w = 0;\r\n                var h = 0;\r\n                if (this.width) {\r\n                    w = this.width;\r\n                }\r\n                if (this.height) {\r\n                    h = this.height;\r\n                }\r\n                this._localBounds = {\r\n                    left: 0,\r\n                    top: 0,\r\n                    right: w,\r\n                    bottom: h\r\n                };\r\n                this._addBounds(this._localBounds);\r\n            }\r\n            return this._localBounds;\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasImage.prototype, \"_render\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (parentLayer) {\r\n            _super.prototype._render.call(this, parentLayer);\r\n            if (this.image) {\r\n                var layer = this._layer || parentLayer;\r\n                if (this.tainted === undefined) {\r\n                    this.tainted = isTainted(this.image);\r\n                    layer.tainted = true;\r\n                }\r\n                if (this.tainted && this._renderer._omitTainted) {\r\n                    return;\r\n                }\r\n                if (layer.dirty) {\r\n                    if (this.shadowColor) {\r\n                        layer.context.shadowColor = this.shadowColor.toCSS(this.shadowOpacity || 1);\r\n                    }\r\n                    if (this.shadowBlur) {\r\n                        layer.context.shadowBlur = this.shadowBlur;\r\n                    }\r\n                    if (this.shadowOffsetX) {\r\n                        layer.context.shadowOffsetX = this.shadowOffsetX;\r\n                    }\r\n                    if (this.shadowOffsetY) {\r\n                        layer.context.shadowOffsetY = this.shadowOffsetY;\r\n                    }\r\n                    // TODO should this round ?\r\n                    var width = this.width || this.image.naturalWidth;\r\n                    var height = this.height || this.image.naturalHeight;\r\n                    layer.context.drawImage(this.image, 0, 0, width, height);\r\n                }\r\n                if (this.interactive && this._isInteractive()) {\r\n                    var mask = this._getMask(this.image);\r\n                    this._renderer._ghostContext.drawImage(mask, 0, 0);\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasImage.prototype, \"clear\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype.clear.call(this);\r\n            this.image = undefined;\r\n            this._imageMask = undefined;\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasImage.prototype, \"_getMask\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (image) {\r\n            if (this._imageMask === undefined) {\r\n                // TODO should this round ?\r\n                var width = this.width || image.naturalWidth;\r\n                var height = this.height || image.naturalHeight;\r\n                // We need to create a second canvas because destination-in clears out the entire canvas\r\n                var canvas = document.createElement(\"canvas\");\r\n                canvas.width = width;\r\n                canvas.height = height;\r\n                var context = canvas.getContext(\"2d\");\r\n                context.imageSmoothingEnabled = false;\r\n                context.fillStyle = this._getColorId();\r\n                context.fillRect(0, 0, width, height);\r\n                if (!isTainted(image)) {\r\n                    context.globalCompositeOperation = \"destination-in\";\r\n                    context.drawImage(image, 0, 0, width, height);\r\n                }\r\n                this._imageMask = canvas;\r\n            }\r\n            return this._imageMask;\r\n        }\r\n    });\r\n    return CanvasImage;\r\n}(CanvasDisplayObject));\r\nexport { CanvasImage };\r\n/**\r\n * @ignore\r\n */\r\nvar CanvasRendererEvent = /** @class */ (function () {\r\n    function CanvasRendererEvent(event, point, bbox) {\r\n        Object.defineProperty(this, \"event\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: event\r\n        });\r\n        Object.defineProperty(this, \"point\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: point\r\n        });\r\n        Object.defineProperty(this, \"bbox\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: bbox\r\n        });\r\n        Object.defineProperty(this, \"id\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"simulated\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"native\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        if ($utils.supports(\"touchevents\") && event instanceof Touch) {\r\n            this.id = event.identifier;\r\n        }\r\n        else {\r\n            this.id = null;\r\n        }\r\n    }\r\n    return CanvasRendererEvent;\r\n}());\r\nexport { CanvasRendererEvent };\r\n/**\r\n * @ignore\r\n */\r\nvar CanvasRenderer = /** @class */ (function (_super) {\r\n    __extends(CanvasRenderer, _super);\r\n    /*protected _mouseMoveThrottler: Throttler = new Throttler(() => {\r\n        this._dispatchGlobalMousemove(this._lastPointerMoveEvent.event, this._lastPointerMoveEvent.native);\r\n    });\r\n    */\r\n    function CanvasRenderer(resolution) {\r\n        var _this = _super.call(this) || this;\r\n        Object.defineProperty(_this, \"view\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: document.createElement(\"div\")\r\n        });\r\n        Object.defineProperty(_this, \"_layerDom\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: document.createElement(\"div\")\r\n        });\r\n        Object.defineProperty(_this, \"layers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(_this, \"_dirtyLayers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(_this, \"defaultLayer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: _this.getLayer(0)\r\n        });\r\n        Object.defineProperty(_this, \"_ghostView\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_ghostContext\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_patternCanvas\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: document.createElement(\"canvas\")\r\n        });\r\n        Object.defineProperty(_this, \"_patternContext\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: _this._patternCanvas.getContext(\"2d\")\r\n        });\r\n        Object.defineProperty(_this, \"_width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(_this, \"_height\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(_this, \"_clientWidth\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(_this, \"_clientHeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(_this, \"resolution\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"interactionsEnabled\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(_this, \"_listeners\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(_this, \"_events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(_this, \"_colorId\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(_this, \"_colorMap\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(_this, \"_forceInteractive\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(_this, \"_omitTainted\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        // TODO this should store the Id as well\r\n        Object.defineProperty(_this, \"_hovering\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new Set()\r\n        });\r\n        Object.defineProperty(_this, \"_dragging\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(_this, \"_mousedown\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(_this, \"_lastPointerMoveEvent\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"tapToActivate\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(_this, \"tapToActivateTimeout\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 3000\r\n        });\r\n        Object.defineProperty(_this, \"_touchActive\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(_this, \"_touchActiveTimeout\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        if (resolution == null) {\r\n            _this.resolution = window.devicePixelRatio;\r\n        }\r\n        else {\r\n            _this.resolution = resolution;\r\n        }\r\n        _this.view.style.position = \"absolute\";\r\n        _this.view.appendChild(_this._layerDom);\r\n        _this._disposers.push(new Disposer(function () {\r\n            $object.each(_this._events, function (_key, events) {\r\n                events.disposer.dispose();\r\n            });\r\n            $array.each(_this.layers, function (layer) {\r\n                clearCanvas(layer.view);\r\n                if (layer.exportableView) {\r\n                    clearCanvas(layer.exportableView);\r\n                }\r\n            });\r\n            clearCanvas(_this._ghostView);\r\n            clearCanvas(_this._patternCanvas);\r\n        }));\r\n        // @todo : do the same for ghost\r\n        _this._ghostView = document.createElement(\"canvas\");\r\n        _this._ghostContext = _this._ghostView.getContext(\"2d\", { alpha: false, willReadFrequently: true });\r\n        _this._ghostContext.imageSmoothingEnabled = false;\r\n        _this._ghostView.style.position = \"absolute\";\r\n        _this._ghostView.style.top = \"0px\";\r\n        _this._ghostView.style.left = \"0px\";\r\n        _this._disposers.push($utils.addEventListener(_this._ghostView, \"click\", function (originalEvent) {\r\n            var event = _this.getEvent(originalEvent);\r\n            var target = _this._getHitTarget(event.point, event.bbox);\r\n            console.debug(target);\r\n        }));\r\n        // Monitor for possible pixel ratio changes (when page is zoomed)\r\n        _this._disposers.push($utils.onZoom(function () {\r\n            if (resolution == null) {\r\n                _this.resolution = window.devicePixelRatio;\r\n            }\r\n        }));\r\n        // We need this in order top prevent default touch gestures when dragging\r\n        // draggable elements\r\n        if ($utils.supports(\"touchevents\")) {\r\n            var listener = function (ev) {\r\n                if (_this._dragging.length !== 0) {\r\n                    $array.eachContinue(_this._dragging, function (item) {\r\n                        if (item.value.shouldCancelTouch()) {\r\n                            ev.preventDefault();\r\n                            return false;\r\n                        }\r\n                        return true;\r\n                    });\r\n                }\r\n                // If touch down happends, delay touch out\r\n                if (_this._touchActiveTimeout) {\r\n                    _this._delayTouchDeactivate();\r\n                }\r\n            };\r\n            _this._disposers.push($utils.addEventListener(window, \"touchstart\", listener, { passive: false }));\r\n            _this._disposers.push($utils.addEventListener(_this.view, \"touchstart\", listener, { passive: false }));\r\n            _this._disposers.push($utils.addEventListener(_this.view, \"touchmove\", function () {\r\n                // If touch is moving, delay touch out\r\n                if (_this._touchActiveTimeout) {\r\n                    _this._delayTouchDeactivate();\r\n                }\r\n            }, { passive: true }));\r\n            _this._disposers.push($utils.addEventListener(window, \"click\", function (_ev) {\r\n                _this._touchActive = false;\r\n            }, { passive: true }));\r\n            _this._disposers.push($utils.addEventListener(_this.view, \"click\", function (_ev) {\r\n                window.setTimeout(function () {\r\n                    _this._touchActive = true;\r\n                    _this._delayTouchDeactivate();\r\n                }, 100);\r\n            }, { passive: true }));\r\n        }\r\n        // Prevent scrolling of the window when hovering on \"wheelable\" object\r\n        if ($utils.supports(\"wheelevents\")) {\r\n            _this._disposers.push($utils.addEventListener(_this.view, \"wheel\", function (ev) {\r\n                var prevent = false;\r\n                _this._hovering.forEach(function (obj) {\r\n                    if (obj.wheelable) {\r\n                        prevent = true;\r\n                        return false;\r\n                    }\r\n                });\r\n                if (prevent) {\r\n                    ev.preventDefault();\r\n                }\r\n            }, { passive: false }));\r\n        }\r\n        return _this;\r\n    }\r\n    Object.defineProperty(CanvasRenderer.prototype, \"_delayTouchDeactivate\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            if (this._touchActiveTimeout) {\r\n                clearTimeout(this._touchActiveTimeout);\r\n            }\r\n            if (this.tapToActivateTimeout > 0) {\r\n                this._touchActiveTimeout = window.setTimeout(function () {\r\n                    _this._touchActive = false;\r\n                }, this.tapToActivateTimeout);\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasRenderer.prototype, \"debugGhostView\", {\r\n        get: function () {\r\n            return !!this._ghostView.parentNode;\r\n        },\r\n        set: function (value) {\r\n            if (value) {\r\n                if (!this._ghostView.parentNode) {\r\n                    this.view.appendChild(this._ghostView);\r\n                }\r\n            }\r\n            else {\r\n                if (this._ghostView.parentNode) {\r\n                    this._ghostView.parentNode.removeChild(this._ghostView);\r\n                }\r\n            }\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CanvasRenderer.prototype, \"createLinearGradient\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (x1, y1, x2, y2) {\r\n            return this.defaultLayer.context.createLinearGradient(x1, y1, x2, y2);\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasRenderer.prototype, \"createRadialGradient\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (x1, y1, radius1, x2, y2, radius2) {\r\n            return this.defaultLayer.context.createRadialGradient(x1, y1, radius1, x2, y2, radius2);\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasRenderer.prototype, \"createPattern\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (graphics, background, repetition, width, height) {\r\n            // const patternCanvas = document.createElement(\"canvas\");\r\n            // const patternContext = patternCanvas.getContext(\"2d\")!;\r\n            // patternCanvas.width = width;\r\n            // patternCanvas.height = height;\r\n            // if (fill) {\r\n            // \tpatternContext.fillStyle = fill.toCSS();\r\n            // \tpatternContext.fillRect(0, 0, patternCanvas.width, patternCanvas.height);\r\n            // }\r\n            // const layer = {\r\n            // \tview: patternCanvas,\r\n            // \tcontext: patternContext,\r\n            // \tvisible: true,\r\n            // \torder: 0,\r\n            // \twidth: width,\r\n            // \theight: height,\r\n            // \tdirty: true\r\n            // };\r\n            // // patternContext.arc(0, 0, 50, 0, .5 * Math.PI);\r\n            // // patternContext.stroke();\r\n            // image.targetLayer = layer;\r\n            // image.render(layer);\r\n            //this._layerDom.appendChild(patternCanvas);\r\n            this._patternCanvas.width = width;\r\n            this._patternCanvas.height = height;\r\n            this._patternContext.clearRect(0, 0, width, height);\r\n            // patternCanvas.style.width = width * this.resolution + \"px\";\r\n            // patternCanvas.style.height = height * this.resolution + \"px\";\r\n            background.renderDetached(this._patternContext);\r\n            graphics.renderDetached(this._patternContext);\r\n            return this._patternContext.createPattern(this._patternCanvas, repetition);\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasRenderer.prototype, \"makeContainer\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            return new CanvasContainer(this);\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasRenderer.prototype, \"makeGraphics\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            return new CanvasGraphics(this);\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasRenderer.prototype, \"makeText\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (text, style) {\r\n            return new CanvasText(this, text, style);\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasRenderer.prototype, \"makeTextStyle\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            return new CanvasTextStyle();\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasRenderer.prototype, \"makeRadialText\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (text, style) {\r\n            return new CanvasRadialText(this, text, style);\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasRenderer.prototype, \"makePicture\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (image) {\r\n            return new CanvasImage(this, image);\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasRenderer.prototype, \"resize\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (width, height) {\r\n            var _this = this;\r\n            this._clientWidth = width;\r\n            this._clientHeight = height;\r\n            this._width = Math.floor(width * this.resolution);\r\n            this._height = Math.floor(height * this.resolution);\r\n            $array.each(this.layers, function (layer) {\r\n                if (layer) {\r\n                    layer.dirty = true;\r\n                    if (layer.width != null) {\r\n                        layer.view.width = layer.width;\r\n                        layer.view.style.width = layer.width + \"px\";\r\n                    }\r\n                    else {\r\n                        layer.view.width = _this._width;\r\n                        layer.view.style.width = width + \"px\";\r\n                    }\r\n                    if (layer.height != null) {\r\n                        layer.view.height = layer.height;\r\n                        layer.view.style.height = layer.height + \"px\";\r\n                    }\r\n                    else {\r\n                        layer.view.height = _this._height;\r\n                        layer.view.style.height = height + \"px\";\r\n                    }\r\n                }\r\n            });\r\n            // @todo: do the same for ghost canvases\r\n            this._ghostView.width = this._width;\r\n            this._ghostView.height = this._height;\r\n            this._ghostView.style.width = width + \"px\";\r\n            this._ghostView.style.height = height + \"px\";\r\n            this.view.style.width = width + \"px\";\r\n            this.view.style.height = height + \"px\";\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasRenderer.prototype, \"createDetachedLayer\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (willReadFrequently) {\r\n            if (willReadFrequently === void 0) { willReadFrequently = false; }\r\n            var view = document.createElement(\"canvas\");\r\n            var context = view.getContext(\"2d\", { willReadFrequently: willReadFrequently });\r\n            var layer = {\r\n                view: view,\r\n                context: context,\r\n                order: 0,\r\n                visible: true,\r\n                width: undefined,\r\n                height: undefined,\r\n                dirty: true,\r\n                tainted: false\r\n            };\r\n            view.style.position = \"absolute\";\r\n            view.style.top = \"0px\";\r\n            view.style.left = \"0px\";\r\n            return layer;\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasRenderer.prototype, \"getLayerByOrder\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (order) {\r\n            var layers = this.layers;\r\n            var length = layers.length;\r\n            for (var i = 0; i < length; i++) {\r\n                var layer = layers[i];\r\n                if (layer.order == order) {\r\n                    return layer;\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasRenderer.prototype, \"getLayer\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (order, visible) {\r\n            if (visible === void 0) { visible = true; }\r\n            var existingLayer = this.getLayerByOrder(order);\r\n            if (existingLayer) {\r\n                return existingLayer;\r\n            }\r\n            var layer = this.createDetachedLayer(order == 99);\r\n            layer.order = order;\r\n            layer.visible = visible;\r\n            if (layer.visible && this._width) {\r\n                layer.view.width = this._width;\r\n                layer.view.style.width = this._clientWidth + \"px\";\r\n                layer.view.height = this._height;\r\n                layer.view.style.height = this._clientHeight + \"px\";\r\n            }\r\n            var layers = this.layers;\r\n            layers.push(layer);\r\n            layers.sort(function (a, b) {\r\n                if (a.order > b.order) {\r\n                    return 1;\r\n                }\r\n                else if (a.order < b.order) {\r\n                    return -1;\r\n                }\r\n                else {\r\n                    return 0;\r\n                }\r\n            });\r\n            var length = layers.length;\r\n            var layerIndex = $array.indexOf(layers, layer);\r\n            var next;\r\n            for (var i = layerIndex + 1; i < length; i++) {\r\n                if (layers[i].visible) {\r\n                    next = layers[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (layer.visible) {\r\n                if (next === undefined) {\r\n                    this._layerDom.appendChild(layer.view);\r\n                }\r\n                else {\r\n                    this._layerDom.insertBefore(layer.view, next.view);\r\n                }\r\n            }\r\n            return layer;\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasRenderer.prototype, \"render\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (root) {\r\n            var _this = this;\r\n            this._dirtyLayers.length = 0;\r\n            $array.each(this.layers, function (layer) {\r\n                if (layer) {\r\n                    if (layer.dirty && layer.visible) {\r\n                        var context = layer.context;\r\n                        _this._dirtyLayers.push(layer);\r\n                        context.save();\r\n                        context.clearRect(0, 0, _this._width, _this._height);\r\n                    }\r\n                }\r\n            });\r\n            this._ghostContext.save();\r\n            //this._ghostContext.clearRect(0, 0, this._width, this._height);\r\n            //this._ghostContext.beginPath();\r\n            this._ghostContext.fillStyle = '#000';\r\n            this._ghostContext.fillRect(0, 0, this._width, this._height);\r\n            root.render(this.defaultLayer);\r\n            this._ghostContext.restore();\r\n            //setTimeout(() => {\r\n            // Remove this after the Chrome bug is fixed:\r\n            // https://bugs.chromium.org/p/chromium/issues/detail?id=1279394\r\n            $array.each(this.layers, function (layer) {\r\n                if (layer) {\r\n                    var context = layer.context;\r\n                    context.beginPath();\r\n                    context.moveTo(0, 0);\r\n                    context.stroke();\r\n                }\r\n            });\r\n            $array.each(this._dirtyLayers, function (layer) {\r\n                layer.context.restore();\r\n                layer.dirty = false;\r\n            });\r\n            //}, 100)\r\n            if (this._hovering.size && this._lastPointerMoveEvent) {\r\n                //this._mouseMoveThrottler.run();\r\n                var native_1 = this._lastPointerMoveEvent.native;\r\n                $array.each(this._lastPointerMoveEvent.events, function (event) {\r\n                    _this._dispatchGlobalMousemove(event, native_1);\r\n                });\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasRenderer.prototype, \"paintId\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (obj) {\r\n            var id = distributeId(++this._colorId);\r\n            var color = Color.fromHex(id).toCSS();\r\n            this._colorMap[color] = obj;\r\n            return color;\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasRenderer.prototype, \"_removeObject\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (obj) {\r\n            if (obj._colorId !== undefined) {\r\n                delete this._colorMap[obj._colorId];\r\n            }\r\n        }\r\n    });\r\n    // protected _identifyObjectByColor(colorId: number): CanvasDisplayObject | undefined {\r\n    // \treturn this._colorMap[colorId];\r\n    // }\r\n    Object.defineProperty(CanvasRenderer.prototype, \"getEvent\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (originalEvent, adjustPoint) {\r\n            if (adjustPoint === void 0) { adjustPoint = true; }\r\n            var bbox = adjustPoint ? this.view.getBoundingClientRect() : new DOMRect(0, 0, 0, 0);\r\n            return new CanvasRendererEvent(originalEvent, (originalEvent.clientX || originalEvent.clientY ? {\r\n                x: originalEvent.clientX - (originalEvent.clientX ? bbox.left : 0),\r\n                y: originalEvent.clientY - (originalEvent.clientY ? bbox.top : 0),\r\n            } : {\r\n                x: 0,\r\n                y: 0\r\n            }), bbox);\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasRenderer.prototype, \"_getHitTarget\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (point, bbox) {\r\n            if (point.x < 0 || point.x > bbox.width || point.y < 0 || point.y > bbox.height) {\r\n                return;\r\n            }\r\n            else {\r\n                var pixel = this._ghostContext.getImageData(\r\n                // TODO should this round ?\r\n                Math.round((point.x / bbox.width) * this._width), Math.round((point.y / bbox.height) * this._height), 1, 1);\r\n                if (pixel.data[0] === 0 && pixel.data[1] === 0 && pixel.data[2] === 0) {\r\n                    return false;\r\n                }\r\n                var colorId = Color.fromRGB(pixel.data[0], pixel.data[1], pixel.data[2]).toCSS();\r\n                var hit = this._colorMap[colorId];\r\n                return hit;\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasRenderer.prototype, \"_withEvents\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key, f) {\r\n            var events = this._events[key];\r\n            if (events !== undefined) {\r\n                events.dispatching = true;\r\n                try {\r\n                    f(events);\r\n                }\r\n                finally {\r\n                    events.dispatching = false;\r\n                    if (events.cleanup) {\r\n                        events.cleanup = false;\r\n                        $array.keepIf(events.callbacks, function (callback) {\r\n                            return !callback.disposed;\r\n                        });\r\n                        if (events.callbacks.length === 0) {\r\n                            events.disposer.dispose();\r\n                            delete this._events[key];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasRenderer.prototype, \"_dispatchEventAll\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key, event) {\r\n            if (!this.interactionsEnabled) {\r\n                return;\r\n            }\r\n            this._withEvents(key, function (events) {\r\n                $array.each(events.callbacks, function (callback) {\r\n                    if (!callback.disposed) {\r\n                        callback.callback.call(callback.context, event);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasRenderer.prototype, \"_dispatchEvent\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key, target, event) {\r\n            if (!this.interactionsEnabled) {\r\n                return false;\r\n            }\r\n            var dispatched = false;\r\n            this._withEvents(key, function (events) {\r\n                $array.each(events.callbacks, function (callback) {\r\n                    if (!callback.disposed && callback.object === target) {\r\n                        callback.callback.call(callback.context, event);\r\n                        dispatched = true;\r\n                    }\r\n                });\r\n            });\r\n            return dispatched;\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasRenderer.prototype, \"_dispatchMousedown\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (originalEvent) {\r\n            var _this = this;\r\n            var button = originalEvent.button;\r\n            if (button != 0 && button != 2 && button != 1 && button !== undefined) {\r\n                // Ignore non-primary mouse buttons\r\n                return;\r\n            }\r\n            var event = this.getEvent(originalEvent);\r\n            var target = this._getHitTarget(event.point, event.bbox);\r\n            if (target) {\r\n                var id_1 = event.id;\r\n                var dragged_1 = false;\r\n                eachTargets(target, function (obj) {\r\n                    var info = { id: id_1, value: obj };\r\n                    _this._mousedown.push(info);\r\n                    if (!dragged_1 && _this._dispatchEvent(\"pointerdown\", obj, event)) {\r\n                        // Only dispatch the first element which matches\r\n                        dragged_1 = true;\r\n                        var has = _this._dragging.some(function (x) {\r\n                            return x.value === obj && x.id === id_1;\r\n                        });\r\n                        if (!has) {\r\n                            _this._dragging.push(info);\r\n                        }\r\n                    }\r\n                    return true;\r\n                });\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasRenderer.prototype, \"_dispatchGlobalMousemove\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (originalEvent, native) {\r\n            var _this = this;\r\n            var event = this.getEvent(originalEvent);\r\n            var target = this._getHitTarget(event.point, event.bbox);\r\n            event.native = native;\r\n            if (target) {\r\n                this._hovering.forEach(function (obj) {\r\n                    if (!obj.contains(target)) {\r\n                        _this._hovering.delete(obj);\r\n                        if (obj.cursorOverStyle) {\r\n                            $utils.setStyle(document.body, \"cursor\", obj._replacedCursorStyle);\r\n                        }\r\n                        _this._dispatchEvent(\"pointerout\", obj, event);\r\n                    }\r\n                });\r\n                if (event.native) {\r\n                    eachTargets(target, function (obj) {\r\n                        if (!_this._hovering.has(obj)) {\r\n                            _this._hovering.add(obj);\r\n                            if (obj.cursorOverStyle) {\r\n                                obj._replacedCursorStyle = $utils.getStyle(document.body, \"cursor\");\r\n                                $utils.setStyle(document.body, \"cursor\", obj.cursorOverStyle);\r\n                            }\r\n                            _this._dispatchEvent(\"pointerover\", obj, event);\r\n                        }\r\n                        return true;\r\n                    });\r\n                }\r\n                //} else if (target === false) {\r\n            }\r\n            else {\r\n                this._hovering.forEach(function (obj) {\r\n                    if (obj.cursorOverStyle) {\r\n                        $utils.setStyle(document.body, \"cursor\", obj._replacedCursorStyle);\r\n                    }\r\n                    _this._dispatchEvent(\"pointerout\", obj, event);\r\n                });\r\n                this._hovering.clear();\r\n            }\r\n            this._dispatchEventAll(\"globalpointermove\", event);\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasRenderer.prototype, \"_dispatchGlobalMouseup\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (originalEvent, native) {\r\n            var event = this.getEvent(originalEvent);\r\n            event.native = native;\r\n            //const target = this._getHitTarget(event.point);\r\n            this._dispatchEventAll(\"globalpointerup\", event);\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasRenderer.prototype, \"_dispatchDragMove\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (originalEvent) {\r\n            var _this = this;\r\n            if (this._dragging.length !== 0) {\r\n                var event_1 = this.getEvent(originalEvent);\r\n                var id_2 = event_1.id;\r\n                this._dragging.forEach(function (obj) {\r\n                    if (obj.id === id_2) {\r\n                        _this._dispatchEvent(\"pointermove\", obj.value, event_1);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasRenderer.prototype, \"_dispatchDragEnd\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (originalEvent) {\r\n            var _this = this;\r\n            var button = originalEvent.button;\r\n            var clickevent;\r\n            if (button == 0 || button === undefined) {\r\n                clickevent = \"click\";\r\n            }\r\n            else if (button == 2) {\r\n                clickevent = \"rightclick\";\r\n            }\r\n            else if (button == 1) {\r\n                clickevent = \"middleclick\";\r\n            }\r\n            else {\r\n                // Ignore non-primary mouse buttons\r\n                return;\r\n            }\r\n            var event = this.getEvent(originalEvent);\r\n            var id = event.id;\r\n            if (this._mousedown.length !== 0) {\r\n                var target_1 = this._getHitTarget(event.point, event.bbox);\r\n                if (target_1) {\r\n                    this._mousedown.forEach(function (obj) {\r\n                        if (obj.id === id && obj.value.contains(target_1)) {\r\n                            _this._dispatchEvent(clickevent, obj.value, event);\r\n                        }\r\n                    });\r\n                }\r\n                this._mousedown.length = 0;\r\n            }\r\n            if (this._dragging.length !== 0) {\r\n                this._dragging.forEach(function (obj) {\r\n                    if (obj.id === id) {\r\n                        _this._dispatchEvent(\"pointerup\", obj.value, event);\r\n                    }\r\n                });\r\n                this._dragging.length = 0;\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasRenderer.prototype, \"_dispatchDoubleClick\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (originalEvent) {\r\n            var _this = this;\r\n            var event = this.getEvent(originalEvent);\r\n            var target = this._getHitTarget(event.point, event.bbox);\r\n            if (target) {\r\n                eachTargets(target, function (obj) {\r\n                    if (_this._dispatchEvent(\"dblclick\", obj, event)) {\r\n                        return false;\r\n                    }\r\n                    else {\r\n                        return true;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasRenderer.prototype, \"_dispatchWheel\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (originalEvent) {\r\n            var _this = this;\r\n            var event = this.getEvent(originalEvent);\r\n            var target = this._getHitTarget(event.point, event.bbox);\r\n            if (target) {\r\n                eachTargets(target, function (obj) {\r\n                    if (_this._dispatchEvent(\"wheel\", obj, event)) {\r\n                        return false;\r\n                    }\r\n                    else {\r\n                        return true;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasRenderer.prototype, \"_makeSharedEvent\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key, f) {\r\n            var _this = this;\r\n            if (this._listeners[key] === undefined) {\r\n                var listener_1 = f();\r\n                this._listeners[key] = new CounterDisposer(function () {\r\n                    delete _this._listeners[key];\r\n                    listener_1.dispose();\r\n                });\r\n            }\r\n            return this._listeners[key].increment();\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasRenderer.prototype, \"_onPointerEvent\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (name, f) {\r\n            var native = false;\r\n            var timer = null;\r\n            function clear() {\r\n                timer = null;\r\n                native = false;\r\n            }\r\n            return new MultiDisposer([\r\n                new Disposer(function () {\r\n                    if (timer !== null) {\r\n                        clearTimeout(timer);\r\n                    }\r\n                    clear();\r\n                }),\r\n                $utils.addEventListener(this.view, $utils.getRendererEvent(name), function (_) {\r\n                    native = true;\r\n                    if (timer !== null) {\r\n                        clearTimeout(timer);\r\n                    }\r\n                    timer = window.setTimeout(clear, 0);\r\n                }),\r\n                onPointerEvent(window, name, function (ev) {\r\n                    if (timer !== null) {\r\n                        clearTimeout(timer);\r\n                        timer = null;\r\n                    }\r\n                    f(ev, native);\r\n                    native = false;\r\n                }),\r\n            ]);\r\n        }\r\n    });\r\n    // This ensures that only a single DOM event is added (e.g. only a single mousemove event listener)\r\n    Object.defineProperty(CanvasRenderer.prototype, \"_initEvent\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key) {\r\n            var _this = this;\r\n            switch (key) {\r\n                case \"globalpointermove\":\r\n                case \"pointerover\":\r\n                case \"pointerout\":\r\n                    return this._makeSharedEvent(\"pointermove\", function () {\r\n                        var listener = function (events, native) {\r\n                            _this._lastPointerMoveEvent = { events: events, native: native };\r\n                            $array.each(events, function (event) {\r\n                                _this._dispatchGlobalMousemove(event, native);\r\n                            });\r\n                        };\r\n                        return new MultiDisposer([\r\n                            _this._onPointerEvent(\"pointerdown\", listener),\r\n                            _this._onPointerEvent(\"pointermove\", listener),\r\n                        ]);\r\n                    });\r\n                case \"globalpointerup\":\r\n                    return this._makeSharedEvent(\"pointerup\", function () {\r\n                        var mouseup = _this._onPointerEvent(\"pointerup\", function (events, native) {\r\n                            $array.each(events, function (event) {\r\n                                _this._dispatchGlobalMouseup(event, native);\r\n                            });\r\n                            _this._lastPointerMoveEvent = { events: events, native: native };\r\n                        });\r\n                        var pointercancel = _this._onPointerEvent(\"pointercancel\", function (events, native) {\r\n                            $array.each(events, function (event) {\r\n                                _this._dispatchGlobalMouseup(event, native);\r\n                            });\r\n                            _this._lastPointerMoveEvent = { events: events, native: native };\r\n                        });\r\n                        return new Disposer(function () {\r\n                            mouseup.dispose();\r\n                            pointercancel.dispose();\r\n                        });\r\n                    });\r\n                case \"click\":\r\n                case \"rightclick\":\r\n                case \"middleclick\":\r\n                case \"pointerdown\":\r\n                /*\r\n                    return this._makeSharedEvent(\"pointerdown\", () => {\r\n                        return this._onPointerEvent(\"pointerdown\", (event, native) => {\r\n                            this._lastPointerMoveEvent = { event, native };\r\n                            this._dispatchMousedown(event)\r\n                        });\r\n                    });\r\n                */\r\n                case \"pointermove\":\r\n                case \"pointerup\":\r\n                    return this._makeSharedEvent(\"pointerdown\", function () {\r\n                        //const throttler = new Throttler();\r\n                        var mousedown = onPointerEvent(_this.view, \"pointerdown\", function (events) {\r\n                            $array.each(events, function (ev) {\r\n                                _this._dispatchMousedown(ev);\r\n                            });\r\n                        });\r\n                        // TODO handle throttling properly for multitouch\r\n                        var mousemove = _this._onPointerEvent(\"pointermove\", function (ev) {\r\n                            //throttler.throttle(() => {\r\n                            $array.each(ev, function (ev) {\r\n                                _this._dispatchDragMove(ev);\r\n                            });\r\n                            //});\r\n                        });\r\n                        var mouseup = _this._onPointerEvent(\"pointerup\", function (ev) {\r\n                            $array.each(ev, function (ev) {\r\n                                _this._dispatchDragEnd(ev);\r\n                            });\r\n                        });\r\n                        var pointercancel = _this._onPointerEvent(\"pointercancel\", function (ev) {\r\n                            $array.each(ev, function (ev) {\r\n                                _this._dispatchDragEnd(ev);\r\n                            });\r\n                        });\r\n                        return new Disposer(function () {\r\n                            mousedown.dispose();\r\n                            mousemove.dispose();\r\n                            mouseup.dispose();\r\n                            pointercancel.dispose();\r\n                        });\r\n                    });\r\n                case \"dblclick\":\r\n                    return this._makeSharedEvent(\"dblclick\", function () {\r\n                        return _this._onPointerEvent(\"dblclick\", function (ev) {\r\n                            $array.each(ev, function (ev) {\r\n                                _this._dispatchDoubleClick(ev);\r\n                            });\r\n                        });\r\n                    });\r\n                case \"wheel\":\r\n                    return this._makeSharedEvent(\"wheel\", function () {\r\n                        return $utils.addEventListener(window, $utils.getRendererEvent(\"wheel\"), function (event) {\r\n                            _this._dispatchWheel(event);\r\n                        }, { passive: false });\r\n                    });\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasRenderer.prototype, \"_addEvent\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (object, key, callback, context) {\r\n            var _this = this;\r\n            var events = this._events[key];\r\n            if (events === undefined) {\r\n                events = this._events[key] = {\r\n                    disposer: this._initEvent(key),\r\n                    callbacks: [],\r\n                    dispatching: false,\r\n                    cleanup: false,\r\n                };\r\n            }\r\n            var listener = { object: object, context: context, callback: callback, disposed: false };\r\n            events.callbacks.push(listener);\r\n            return new Disposer(function () {\r\n                listener.disposed = true;\r\n                if (events.dispatching) {\r\n                    events.cleanup = true;\r\n                }\r\n                else {\r\n                    $array.removeFirst(events.callbacks, listener);\r\n                    if (events.callbacks.length === 0) {\r\n                        events.disposer.dispose();\r\n                        delete _this._events[key];\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    });\r\n    Object.defineProperty(CanvasRenderer.prototype, \"getCanvas\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (root, options) {\r\n            var _this = this;\r\n            // Make sure everything is rendered\r\n            this.render(root);\r\n            if (!options) {\r\n                options = {};\r\n            }\r\n            var scale = this.resolution;\r\n            // Check if we need to scale\r\n            if (options.minWidth && (options.minWidth > this._width)) {\r\n                var minScale = options.minWidth / this._width;\r\n                if (minScale > scale) {\r\n                    scale = minScale * this.resolution;\r\n                }\r\n            }\r\n            if (options.minHeight && (options.minHeight > this._height)) {\r\n                var minScale = options.minHeight / this._height;\r\n                if (minScale > scale) {\r\n                    scale = minScale * this.resolution;\r\n                }\r\n            }\r\n            if (options.maxWidth && (options.maxWidth < this._width)) {\r\n                var maxScale = options.maxWidth / this._width;\r\n                if (maxScale < scale) {\r\n                    scale = maxScale * this.resolution;\r\n                }\r\n            }\r\n            if (options.maxHeight && (options.maxHeight > this._height)) {\r\n                var maxScale = options.maxHeight / this._height;\r\n                if (maxScale < scale) {\r\n                    scale = maxScale * this.resolution;\r\n                }\r\n            }\r\n            // Check if we need to compensate for pixel ratio\r\n            if (options.maintainPixelRatio) {\r\n                scale /= this.resolution;\r\n            }\r\n            // Init list canvases to remove from DOM after export\r\n            var canvases = [];\r\n            // Set up new canvas for export\r\n            var forceRender = false;\r\n            var canvasWidth = this._width;\r\n            var canvasHeight = this._height;\r\n            var canvas = document.createElement(\"canvas\");\r\n            if (scale != this.resolution) {\r\n                forceRender = true;\r\n                canvasWidth = this._width * scale / this.resolution;\r\n                canvasHeight = this._height * scale / this.resolution;\r\n            }\r\n            canvas.width = canvasWidth;\r\n            canvas.height = canvasHeight;\r\n            // Add to DOM so it inherits CSS\r\n            canvas.style.position = \"fixed\";\r\n            canvas.style.top = \"-10000px\";\r\n            this.view.appendChild(canvas);\r\n            canvases.push(canvas);\r\n            // Context\r\n            var context = canvas.getContext(\"2d\");\r\n            var width = 0;\r\n            var height = 0;\r\n            var needRerender = false;\r\n            $array.each(this.layers, function (layer) {\r\n                if (layer && layer.visible) {\r\n                    if (layer.tainted || forceRender) {\r\n                        needRerender = true;\r\n                        layer.exportableView = layer.view;\r\n                        layer.exportableContext = layer.context;\r\n                        layer.view = document.createElement(\"canvas\");\r\n                        // Add to DOM so it inherits CSS\r\n                        layer.view.style.position = \"fixed\";\r\n                        layer.view.style.top = \"-10000px\";\r\n                        _this.view.appendChild(layer.view);\r\n                        canvases.push(layer.view);\r\n                        layer.view.width = canvasWidth;\r\n                        layer.view.height = canvasHeight;\r\n                        layer.context = layer.view.getContext(\"2d\");\r\n                        layer.dirty = true;\r\n                        layer.scale = scale;\r\n                    }\r\n                }\r\n            });\r\n            if (needRerender) {\r\n                this._omitTainted = true;\r\n                this.render(root);\r\n                this._omitTainted = false;\r\n            }\r\n            $array.each(this.layers, function (layer) {\r\n                if (layer && layer.visible) {\r\n                    // Layer is fine. Just plop it into our target canvas\r\n                    context.drawImage(layer.view, 0, 0);\r\n                    // Restore layer original canvas\r\n                    if (layer.exportableView) {\r\n                        layer.view = layer.exportableView;\r\n                        layer.exportableView = undefined;\r\n                    }\r\n                    if (layer.exportableContext) {\r\n                        layer.context = layer.exportableContext;\r\n                        layer.exportableContext = undefined;\r\n                    }\r\n                    if (width < layer.view.clientWidth) {\r\n                        width = layer.view.clientWidth;\r\n                    }\r\n                    if (height < layer.view.clientHeight) {\r\n                        height = layer.view.clientHeight;\r\n                    }\r\n                    layer.scale = undefined;\r\n                }\r\n            });\r\n            canvas.style.width = width + \"px\";\r\n            canvas.style.height = height + \"px\";\r\n            $array.each(canvases, function (canvas) {\r\n                canvas.style.position = \"\";\r\n                canvas.style.top = \"\";\r\n                _this.view.removeChild(canvas);\r\n            });\r\n            return canvas;\r\n        }\r\n    });\r\n    return CanvasRenderer;\r\n}(ArrayDisposer));\r\nexport { CanvasRenderer };\r\n//# sourceMappingURL=CanvasRenderer.js.map",";\r\n/**\r\n * From https://github.com/pixijs/pixi.js/blob/3dd0ff9a935f0bc13a09aefff9eb2872f02c51b9/packages/canvas/canvas-renderer/src/utils/mapCanvasBlendModesToPixi.ts#L13\r\n */\r\nexport var BlendMode;\r\n(function (BlendMode) {\r\n    BlendMode[\"ADD\"] = \"lighter\";\r\n    BlendMode[\"COLOR\"] = \"color\";\r\n    BlendMode[\"COLOR_BURN\"] = \"color-burn\";\r\n    BlendMode[\"COLOR_DODGE\"] = \"color-dodge\";\r\n    BlendMode[\"DARKEN\"] = \"darken\";\r\n    BlendMode[\"DIFFERENCE\"] = \"difference\";\r\n    BlendMode[\"DST_OVER\"] = \"destination-over\";\r\n    BlendMode[\"EXCLUSION\"] = \"exclusion\";\r\n    BlendMode[\"HARD_LIGHT\"] = \"hard-light\";\r\n    BlendMode[\"HUE\"] = \"hue\";\r\n    BlendMode[\"LIGHTEN\"] = \"lighten\";\r\n    BlendMode[\"LUMINOSITY\"] = \"luminosity\";\r\n    BlendMode[\"MULTIPLY\"] = \"multiply\";\r\n    BlendMode[\"NORMAL\"] = \"source-over\";\r\n    BlendMode[\"OVERLAY\"] = \"overlay\";\r\n    BlendMode[\"SATURATION\"] = \"saturation\";\r\n    BlendMode[\"SCREEN\"] = \"screen\";\r\n    BlendMode[\"SOFT_LIGHT\"] = \"soft-light\";\r\n    BlendMode[\"SRC_ATOP\"] = \"source-atop\";\r\n    BlendMode[\"XOR\"] = \"xor\";\r\n})(BlendMode || (BlendMode = {}));\r\n//# sourceMappingURL=Renderer.js.map","import { __extends } from \"tslib\";\r\nimport { Entity } from \"../../util/Entity\";\r\n/**\r\n * Base class for gradients.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/gradients/} for more info\r\n */\r\nvar Gradient = /** @class */ (function (_super) {\r\n    __extends(Gradient, _super);\r\n    function Gradient() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Gradient.prototype, \"_afterNew\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            // Applying themes because gradient will not have parent\r\n            _super.prototype._afterNewApplyThemes.call(this);\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(Gradient.prototype, \"getFill\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (_target) {\r\n            return {\r\n                addColorStop: function (_offset, _color) { }\r\n            };\r\n        }\r\n    });\r\n    Object.defineProperty(Gradient.prototype, \"_changed\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._changed.call(this);\r\n            //if (this.isDirty(\"target\") && this.get(\"target\")) {\r\n            //\tthis.get(\"target\")!.events.on(\"boundschanged\", () => {\r\n            //\t});\r\n            //}\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(Gradient.prototype, \"getBounds\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (target) {\r\n            var gradientTarget = this.get(\"target\");\r\n            if (gradientTarget) {\r\n                var bounds = gradientTarget.globalBounds();\r\n                var p0 = target.toLocal({ x: bounds.left, y: bounds.top });\r\n                var p1 = target.toLocal({ x: bounds.right, y: bounds.top });\r\n                var p2 = target.toLocal({ x: bounds.right, y: bounds.bottom });\r\n                var p3 = target.toLocal({ x: bounds.left, y: bounds.bottom });\r\n                return {\r\n                    left: Math.min(p0.x, p1.x, p2.x, p3.x),\r\n                    top: Math.min(p0.y, p1.y, p2.y, p3.y),\r\n                    right: Math.max(p0.x, p1.x, p2.x, p3.x),\r\n                    bottom: Math.max(p0.y, p1.y, p2.y, p3.y)\r\n                };\r\n            }\r\n            return target._display.getLocalBounds();\r\n        }\r\n    });\r\n    Object.defineProperty(Gradient, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"Gradient\"\r\n    });\r\n    Object.defineProperty(Gradient, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: Entity.classNames.concat([Gradient.className])\r\n    });\r\n    return Gradient;\r\n}(Entity));\r\nexport { Gradient };\r\n//# sourceMappingURL=Gradient.js.map","import { __extends } from \"tslib\";\r\nimport { Gradient } from \"./Gradient\";\r\nimport { Color } from \"../../util/Color\";\r\nimport * as $array from \"../../util/Array\";\r\nimport * as $type from \"../../util/Type\";\r\nimport * as $math from \"../../util/Math\";\r\n/**\r\n * Linear gradient.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/gradients/} for more info\r\n */\r\nvar LinearGradient = /** @class */ (function (_super) {\r\n    __extends(LinearGradient, _super);\r\n    function LinearGradient() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(LinearGradient.prototype, \"getFill\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (target) {\r\n            var rotation = this.get(\"rotation\", 0);\r\n            var bounds = this.getBounds(target);\r\n            var l = bounds.left || 0;\r\n            var r = bounds.right || 0;\r\n            var t = bounds.top || 0;\r\n            var b = bounds.bottom || 0;\r\n            var cos = $math.cos(rotation);\r\n            var sin = $math.sin(rotation);\r\n            var w = cos * (r - l);\r\n            var h = sin * (b - t);\r\n            var longer = Math.max(w, h);\r\n            var gradient = this._root._renderer.createLinearGradient(l, t, l + longer * cos, t + longer * sin);\r\n            var stops = this.get(\"stops\");\r\n            if (stops) {\r\n                var i_1 = 0;\r\n                $array.each(stops, function (stop) {\r\n                    var offset = stop.offset;\r\n                    if (!$type.isNumber(offset)) {\r\n                        offset = i_1 / (stops.length - 1);\r\n                    }\r\n                    var opacity = stop.opacity;\r\n                    if (!$type.isNumber(opacity)) {\r\n                        opacity = 1;\r\n                    }\r\n                    var color = stop.color;\r\n                    if (color) {\r\n                        var lighten = stop.lighten;\r\n                        if (lighten) {\r\n                            color = Color.lighten(color, lighten);\r\n                        }\r\n                        var brighten = stop.brighten;\r\n                        if (brighten) {\r\n                            color = Color.brighten(color, brighten);\r\n                        }\r\n                        gradient.addColorStop(offset, 'rgba(' + color.r + ',' + color.g + ',' + color.b + ',' + opacity + ')');\r\n                    }\r\n                    i_1++;\r\n                });\r\n            }\r\n            return gradient;\r\n        }\r\n    });\r\n    Object.defineProperty(LinearGradient, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"LinearGradient\"\r\n    });\r\n    Object.defineProperty(LinearGradient, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: Gradient.classNames.concat([LinearGradient.className])\r\n    });\r\n    return LinearGradient;\r\n}(Gradient));\r\nexport { LinearGradient };\r\n//# sourceMappingURL=LinearGradient.js.map","import { __extends } from \"tslib\";\r\nimport { Gradient } from \"./Gradient\";\r\nimport { Color } from \"../../util/Color\";\r\nimport * as $array from \"../../util/Array\";\r\nimport * as $type from \"../../util/Type\";\r\nimport * as $utils from \"../../util/Utils\";\r\n/**\r\n * Radial gradient.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/gradients/} for more info\r\n */\r\nvar RadialGradient = /** @class */ (function (_super) {\r\n    __extends(RadialGradient, _super);\r\n    function RadialGradient() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(RadialGradient.prototype, \"getFill\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (target) {\r\n            var bounds = this.getBounds(target);\r\n            var x = 0;\r\n            var y = 0;\r\n            var l = bounds.left || 0;\r\n            var r = bounds.right || 0;\r\n            var t = bounds.top || 0;\r\n            var b = bounds.bottom || 0;\r\n            var width = r - l;\r\n            var height = b - t;\r\n            var radius = target.get(\"radius\");\r\n            if ($type.isNumber(radius)) {\r\n                x = 0;\r\n                y = 0;\r\n            }\r\n            else {\r\n                radius = Math.min(width, height) / 2;\r\n                x = width / 2;\r\n                y = height / 2;\r\n            }\r\n            var ux = this.get(\"x\");\r\n            var uy = this.get(\"y\");\r\n            if (ux != null) {\r\n                x = $utils.relativeToValue(ux, width);\r\n            }\r\n            if (uy != null) {\r\n                y = $utils.relativeToValue(uy, height);\r\n            }\r\n            var gradient = this._root._renderer.createRadialGradient(x, y, 0, x, y, radius);\r\n            var stops = this.get(\"stops\");\r\n            if (stops) {\r\n                var i_1 = 0;\r\n                $array.each(stops, function (stop) {\r\n                    var offset = stop.offset;\r\n                    if (!$type.isNumber(offset)) {\r\n                        offset = i_1 / (stops.length - 1);\r\n                    }\r\n                    var opacity = stop.opacity;\r\n                    if (!$type.isNumber(opacity)) {\r\n                        opacity = 1;\r\n                    }\r\n                    var color = stop.color;\r\n                    if (color) {\r\n                        var lighten = stop.lighten;\r\n                        if (lighten) {\r\n                            color = Color.lighten(color, lighten);\r\n                        }\r\n                        var brighten = stop.brighten;\r\n                        if (brighten) {\r\n                            color = Color.brighten(color, brighten);\r\n                        }\r\n                        gradient.addColorStop(offset, 'rgba(' + color.r + ',' + color.g + ',' + color.b + ',' + opacity + ')');\r\n                    }\r\n                    i_1++;\r\n                });\r\n            }\r\n            return gradient;\r\n        }\r\n    });\r\n    Object.defineProperty(RadialGradient, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"RadialGradient\"\r\n    });\r\n    Object.defineProperty(RadialGradient, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: Gradient.classNames.concat([RadialGradient.className])\r\n    });\r\n    return RadialGradient;\r\n}(Gradient));\r\nexport { RadialGradient };\r\n//# sourceMappingURL=RadialGradient.js.map","import { __extends } from \"tslib\";\r\nimport { Pattern } from \"./Pattern\";\r\nimport * as $math from \"../../util/Math\";\r\n/**\r\n * Circle pattern.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/} for more info\r\n */\r\nvar CirclePattern = /** @class */ (function (_super) {\r\n    __extends(CirclePattern, _super);\r\n    function CirclePattern() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(CirclePattern.prototype, \"_beforeChanged\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._beforeChanged.call(this);\r\n            if (this.isDirty(\"gap\")) {\r\n                this._clear = true;\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(CirclePattern.prototype, \"_draw\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._draw.call(this);\r\n            var checkered = this.get(\"checkered\", false);\r\n            var centered = this.get(\"centered\", true);\r\n            var gap = this.get(\"gap\", 0);\r\n            var rotation = this.get(\"rotation\", 0);\r\n            var w = this.get(\"width\", 100);\r\n            var h = this.get(\"height\", 100);\r\n            var radius = this.get(\"radius\", 3);\r\n            var cellW = radius * 2 + gap;\r\n            var cellH = radius * 2 + gap;\r\n            var cols = Math.round(w / cellW);\r\n            var rows = Math.round(h / cellH);\r\n            cellW = w / cols;\r\n            cellH = h / rows;\r\n            if (rotation != 0) {\r\n                // @todo this is probably not right\r\n                this._display.x = cellW * $math.cos(rotation);\r\n                this._display.y = cellH * $math.sin(rotation);\r\n            }\r\n            var color = this.get(\"color\");\r\n            var colorOpacity = this.get(\"colorOpacity\");\r\n            if (color || colorOpacity) {\r\n                this._display.beginFill(color, colorOpacity);\r\n            }\r\n            for (var r = rotation == 0 ? 0 : -rows * 2; r < rows * 2; r++) {\r\n                for (var c = rotation == 0 ? 0 : -cols * 2; c < cols * 2; c++) {\r\n                    if (!checkered || ((r & 1) != 1 && (c & 1) != 1) || ((r & 1) == 1 && (c & 1) == 1)) {\r\n                        var x = c * cellW;\r\n                        var y = r * cellH;\r\n                        if (centered) {\r\n                            x += cellW + gap / 2;\r\n                            y += cellH + gap / 2;\r\n                        }\r\n                        this._display.drawCircle(x - radius, y - radius, radius);\r\n                    }\r\n                }\r\n            }\r\n            if (checkered) {\r\n                w = w / 2 - gap * 2;\r\n                h = h / 2 - gap * 2;\r\n            }\r\n            else {\r\n                w -= gap;\r\n                h -= gap;\r\n            }\r\n            if (color || colorOpacity) {\r\n                this._display.endFill();\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(CirclePattern, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"CirclePattern\"\r\n    });\r\n    Object.defineProperty(CirclePattern, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: Pattern.classNames.concat([CirclePattern.className])\r\n    });\r\n    return CirclePattern;\r\n}(Pattern));\r\nexport { CirclePattern };\r\n//# sourceMappingURL=CirclePattern.js.map","import { __extends } from \"tslib\";\r\nimport { Pattern } from \"./Pattern\";\r\nimport * as $type from \"../../util//Type\";\r\n/**\r\n * Line pattern.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/} for more info\r\n */\r\nvar LinePattern = /** @class */ (function (_super) {\r\n    __extends(LinePattern, _super);\r\n    function LinePattern() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(LinePattern.prototype, \"_beforeChanged\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._beforeChanged.call(this);\r\n            if (this.isDirty(\"gap\")) {\r\n                this._clear = true;\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(LinePattern.prototype, \"_draw\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._draw.call(this);\r\n            var w = this.get(\"width\", 100);\r\n            var h = this.get(\"height\", 100);\r\n            var gap = this.get(\"gap\", 0);\r\n            var strokeWidth = this.get(\"strokeWidth\", 1);\r\n            if (!gap) {\r\n                this._display.moveTo(0, 0);\r\n                this._display.lineTo(w, 0);\r\n            }\r\n            else {\r\n                var step = gap + strokeWidth;\r\n                var count = h / step;\r\n                for (var i = -count; i < count * 2; i++) {\r\n                    var y = Math.round(i * step - step / 2) + 0.5;\r\n                    this._display.moveTo(-w, y);\r\n                    this._display.lineTo(w * 2, y);\r\n                }\r\n            }\r\n            this._display.lineStyle(strokeWidth, this.get(\"color\"), this.get(\"colorOpacity\"));\r\n            var strokeDasharray = this.get(\"strokeDasharray\");\r\n            if ($type.isNumber(strokeDasharray)) {\r\n                if (strokeDasharray < 0.5) {\r\n                    strokeDasharray = [0];\r\n                }\r\n                else {\r\n                    strokeDasharray = [strokeDasharray];\r\n                }\r\n            }\r\n            this._display.setLineDash(strokeDasharray);\r\n            var strokeDashoffset = this.get(\"strokeDashoffset\");\r\n            if (strokeDashoffset) {\r\n                this._display.setLineDashOffset(strokeDashoffset);\r\n            }\r\n            this._display.endStroke();\r\n        }\r\n    });\r\n    Object.defineProperty(LinePattern, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"LinePattern\"\r\n    });\r\n    Object.defineProperty(LinePattern, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: Pattern.classNames.concat([LinePattern.className])\r\n    });\r\n    return LinePattern;\r\n}(Pattern));\r\nexport { LinePattern };\r\n//# sourceMappingURL=LinePattern.js.map","import { __extends } from \"tslib\";\r\nimport { Entity } from \"../../util/Entity\";\r\n/**\r\n * Base class for patterns.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/} for more info\r\n */\r\nvar Pattern = /** @class */ (function (_super) {\r\n    __extends(Pattern, _super);\r\n    function Pattern() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        Object.defineProperty(_this, \"_display\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: _this._root._renderer.makeGraphics()\r\n        });\r\n        Object.defineProperty(_this, \"_backgroundDisplay\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: _this._root._renderer.makeGraphics()\r\n        });\r\n        Object.defineProperty(_this, \"_clear\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(_this, \"_pattern\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Pattern.prototype, \"_afterNew\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            // Applying themes because pattern will not have parent\r\n            _super.prototype._afterNewApplyThemes.call(this);\r\n        }\r\n    });\r\n    Object.defineProperty(Pattern.prototype, \"pattern\", {\r\n        get: function () {\r\n            return this._pattern;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Pattern.prototype, \"_draw\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () { }\r\n    });\r\n    Object.defineProperty(Pattern.prototype, \"_beforeChanged\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._beforeChanged.call(this);\r\n            if (this.isDirty(\"repetition\") || this.isDirty(\"width\") || this.isDirty(\"height\") || this.isDirty(\"rotation\") || this.isDirty(\"color\") || this.isDirty(\"strokeWidth\") || this.isDirty(\"strokeDasharray\") || this.isDirty(\"strokeDashoffset\") || this.isDirty(\"colorOpacity\") || this.isDirty(\"fill\") || this.isDirty(\"fillOpacity\")) {\r\n                this._clear = true;\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Pattern.prototype, \"_changed\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._changed.call(this);\r\n            if (this._clear) {\r\n                var repetition = this.get(\"repetition\", \"\");\r\n                var width = this.get(\"width\", 100);\r\n                var height = this.get(\"height\", 100);\r\n                var fill = this.get(\"fill\");\r\n                var fillOpacity = this.get(\"fillOpacity\", 1);\r\n                this._display.clear();\r\n                this._backgroundDisplay.clear();\r\n                if (fill && (fillOpacity > 0)) {\r\n                    this._backgroundDisplay.beginFill(fill, fillOpacity);\r\n                    this._backgroundDisplay.drawRect(0, 0, width, height);\r\n                    this._backgroundDisplay.endFill();\r\n                }\r\n                this._display.angle = this.get(\"rotation\", 0);\r\n                //this._display.pivot = { x: width / 2, y: height / 2 };\r\n                this._draw();\r\n                this._pattern = this._root._renderer.createPattern(this._display, this._backgroundDisplay, repetition, width, height);\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Pattern, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"Pattern\"\r\n    });\r\n    Object.defineProperty(Pattern, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: Entity.classNames.concat([Pattern.className])\r\n    });\r\n    return Pattern;\r\n}(Entity));\r\nexport { Pattern };\r\n//# sourceMappingURL=Pattern.js.map","import { __extends } from \"tslib\";\r\nimport { Pattern } from \"./Pattern\";\r\n/**\r\n * Picture pattern.\r\n *\r\n * @since 5.2.15\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/} for more info\r\n */\r\nvar PicturePattern = /** @class */ (function (_super) {\r\n    __extends(PicturePattern, _super);\r\n    function PicturePattern() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        Object.defineProperty(_this, \"_image\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(PicturePattern.prototype, \"_beforeChanged\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._beforeChanged.call(this);\r\n            this._clear = true;\r\n            if (this.isDirty(\"src\")) {\r\n                this._load();\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(PicturePattern.prototype, \"_draw\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._draw.call(this);\r\n            var image = this._image;\r\n            if (image) {\r\n                var patternWidth = this.get(\"width\", 100);\r\n                var patternHeight = this.get(\"height\", 100);\r\n                // Fit\r\n                var fit = this.get(\"fit\", \"image\");\r\n                var width = 0;\r\n                var height = 0;\r\n                if (fit == \"pattern\") {\r\n                    width = patternWidth;\r\n                    height = patternHeight;\r\n                }\r\n                else {\r\n                    width = image.width;\r\n                    height = image.height;\r\n                    if (fit == \"image\") {\r\n                        this.set(\"width\", width);\r\n                        this.set(\"height\", height);\r\n                    }\r\n                }\r\n                // Position\r\n                var centered = this.get(\"centered\", true);\r\n                var x = 0;\r\n                var y = 0;\r\n                if (centered) {\r\n                    x = patternWidth / 2 - width / 2;\r\n                    y = patternHeight / 2 - height / 2;\r\n                }\r\n                this._display.image(image, width, height, x, y);\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(PicturePattern.prototype, \"_load\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            var src = this.get(\"src\");\r\n            if (src) {\r\n                var image_1 = new Image();\r\n                //image.crossOrigin = \"Anonymous\";\r\n                image_1.src = src;\r\n                image_1.decode().then(function () {\r\n                    _this._image = image_1;\r\n                    _this._draw();\r\n                    if (_this.events.isEnabled(\"loaded\")) {\r\n                        _this.events.dispatch(\"loaded\", { type: \"loaded\", target: _this });\r\n                    }\r\n                }).catch(function (_error) {\r\n                    // TODO: maybe raise error?\r\n                });\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(PicturePattern, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"PicturePattern\"\r\n    });\r\n    Object.defineProperty(PicturePattern, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: Pattern.classNames.concat([PicturePattern.className])\r\n    });\r\n    return PicturePattern;\r\n}(Pattern));\r\nexport { PicturePattern };\r\n//# sourceMappingURL=PicturePattern.js.map","import { __extends } from \"tslib\";\r\nimport { Pattern } from \"./Pattern\";\r\nimport * as $math from \"../../util/Math\";\r\n/**\r\n * Rectangle pattern.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/} for more info\r\n */\r\nvar RectanglePattern = /** @class */ (function (_super) {\r\n    __extends(RectanglePattern, _super);\r\n    function RectanglePattern() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(RectanglePattern.prototype, \"_beforeChanged\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._beforeChanged.call(this);\r\n            if (this.isDirty(\"gap\")) {\r\n                this._clear = true;\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(RectanglePattern.prototype, \"_draw\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._draw.call(this);\r\n            var checkered = this.get(\"checkered\", false);\r\n            var centered = this.get(\"centered\", true);\r\n            var gap = this.get(\"gap\", 0);\r\n            var rotation = this.get(\"rotation\", 0);\r\n            var w = this.get(\"width\", 100);\r\n            var h = this.get(\"height\", 100);\r\n            var rectW = this.get(\"maxWidth\", 5);\r\n            var rectH = this.get(\"maxHeight\", 5);\r\n            var cellW = rectW + gap;\r\n            var cellH = rectH + gap;\r\n            var cols = Math.round(w / cellW);\r\n            var rows = Math.round(h / cellH);\r\n            cellW = w / cols;\r\n            cellH = h / rows;\r\n            if (rotation != 0) {\r\n                // @todo this is probably not right\r\n                this._display.x = cellW / 2 * $math.cos(rotation);\r\n                this._display.y = -cellH / 2 * $math.sin(rotation);\r\n            }\r\n            for (var r = rotation == 0 ? 0 : -rows * 2; r < rows * 2; r++) {\r\n                for (var c = rotation == 0 ? 0 : -cols * 2; c < cols * 2; c++) {\r\n                    if (!checkered || ((r & 1) != 1 && (c & 1) != 1) || ((r & 1) == 1 && (c & 1) == 1)) {\r\n                        var x = c * cellW;\r\n                        var y = r * cellH;\r\n                        if (centered) {\r\n                            x += (cellW - rectW) / 2;\r\n                            y += (cellH - rectH) / 2;\r\n                        }\r\n                        this._display.drawRect(x, y, rectW, rectH);\r\n                    }\r\n                }\r\n            }\r\n            if (checkered) {\r\n                w = w / 2 - gap * 2;\r\n                h = h / 2 - gap * 2;\r\n            }\r\n            else {\r\n                w -= gap;\r\n                h -= gap;\r\n            }\r\n            var color = this.get(\"color\");\r\n            var colorOpacity = this.get(\"colorOpacity\");\r\n            if (color || colorOpacity) {\r\n                // this._display.lineStyle(strokeWidth, stroke, colorOpacity);\r\n                // this._display.endStroke();\r\n                this._display.beginFill(color, colorOpacity);\r\n                this._display.endFill();\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(RectanglePattern, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"RectanglePattern\"\r\n    });\r\n    Object.defineProperty(RectanglePattern, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: Pattern.classNames.concat([RectanglePattern.className])\r\n    });\r\n    return RectanglePattern;\r\n}(Pattern));\r\nexport { RectanglePattern };\r\n//# sourceMappingURL=RectanglePattern.js.map","import { __awaiter, __generator } from \"tslib\";\r\nimport { Percent } from \"./Percent\";\r\nimport { Color } from \"./Color\";\r\nimport { EventDispatcher } from \"./EventDispatcher\";\r\nimport * as $object from \"./Object\";\r\n/**\r\n * @ignore\r\n */\r\nexport function waitForAnimations(animations) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var promises_1;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    if (!(animations !== undefined)) return [3 /*break*/, 2];\r\n                    promises_1 = [];\r\n                    $object.each(animations, function (_, animation) {\r\n                        promises_1.push(animation.waitForStop());\r\n                    });\r\n                    return [4 /*yield*/, Promise.all(promises_1)];\r\n                case 1:\r\n                    _a.sent();\r\n                    _a.label = 2;\r\n                case 2: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function normalize(value, min, max) {\r\n    if (min === max) {\r\n        return 0;\r\n    }\r\n    else {\r\n        return Math.min(Math.max((value - min) * (1 / (max - min)), 0), 1);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function range(diff, from, to) {\r\n    return from + (diff * (to - from));\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function defaultInterpolate(diff, from, to) {\r\n    if (diff >= 1) {\r\n        return to;\r\n    }\r\n    else {\r\n        return from;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function percentInterpolate(diff, from, to) {\r\n    return new Percent(range(diff, from.percent, to.percent));\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function colorInterpolate(diff, from, to) {\r\n    return Color.interpolate(diff, from, to);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function getInterpolate(from, to) {\r\n    if (typeof from === \"number\" && typeof to === \"number\") {\r\n        return range;\r\n    }\r\n    if (from instanceof Percent && to instanceof Percent) {\r\n        return percentInterpolate;\r\n    }\r\n    if (from instanceof Color && to instanceof Color) {\r\n        return colorInterpolate;\r\n    }\r\n    return defaultInterpolate;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nvar AnimationTime = /** @class */ (function () {\r\n    function AnimationTime(entity, duration) {\r\n        Object.defineProperty(this, \"_entity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_duration\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_playingDuration\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"_startingTime\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"_current\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_from\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_to\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new EventDispatcher()\r\n        });\r\n        Object.defineProperty(this, \"easing\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._entity = entity;\r\n        this._duration = duration;\r\n    }\r\n    Object.defineProperty(AnimationTime.prototype, \"_stopEvent\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var type = \"stopped\";\r\n            if (this.events.isEnabled(type)) {\r\n                this.events.dispatch(type, { type: type, target: this });\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(AnimationTime.prototype, \"_runAnimation\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (currentTime) {\r\n            if (this._playingDuration !== null) {\r\n                if (this._startingTime === null) {\r\n                    this._startingTime = currentTime;\r\n                    return true;\r\n                }\r\n                else {\r\n                    var diff = (currentTime - this._startingTime) / this._playingDuration;\r\n                    if (diff >= 1) {\r\n                        this._playingDuration = null;\r\n                        this._startingTime = null;\r\n                        this._from = this._to;\r\n                        this._current = this._to;\r\n                        this._entity.markDirty();\r\n                        this._stopEvent();\r\n                        var type = \"ended\";\r\n                        if (this.events.isEnabled(type)) {\r\n                            this.events.dispatch(type, { type: type, target: this });\r\n                        }\r\n                        return false;\r\n                    }\r\n                    else {\r\n                        this._current = range(diff, this._from, this._to);\r\n                        this._entity.markDirty();\r\n                        var type = \"progress\";\r\n                        if (this.events.isEnabled(type)) {\r\n                            this.events.dispatch(type, { type: type, target: this, progress: diff });\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(AnimationTime.prototype, \"_play\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this._from = this._current;\r\n            if (this._playingDuration === null) {\r\n                this._entity._root._addAnimation(this);\r\n                var type = \"started\";\r\n                if (this.events.isEnabled(type)) {\r\n                    this.events.dispatch(type, { type: type, target: this });\r\n                }\r\n            }\r\n            else {\r\n                this._startingTime = null;\r\n            }\r\n            this._playingDuration = Math.abs(this._to - this._from) * this._duration;\r\n        }\r\n    });\r\n    Object.defineProperty(AnimationTime.prototype, \"duration\", {\r\n        get: function () {\r\n            return this._duration;\r\n        },\r\n        set: function (value) {\r\n            if (this._duration !== value) {\r\n                this._duration = value;\r\n                if (value === 0) {\r\n                    this.jumpTo(this._to);\r\n                }\r\n                else if (this._current !== this._to) {\r\n                    this._play();\r\n                }\r\n            }\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AnimationTime.prototype, \"current\", {\r\n        get: function () {\r\n            if (this.easing) {\r\n                return this.easing(this._current);\r\n            }\r\n            else {\r\n                return this._current;\r\n            }\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AnimationTime.prototype, \"stop\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this.jumpTo(this._current);\r\n        }\r\n    });\r\n    Object.defineProperty(AnimationTime.prototype, \"jumpTo\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (value) {\r\n            if (this._current !== value) {\r\n                this._entity.markDirty();\r\n            }\r\n            if (this._playingDuration !== null) {\r\n                this._stopEvent();\r\n            }\r\n            this._playingDuration = null;\r\n            this._startingTime = null;\r\n            this._current = value;\r\n            this._from = value;\r\n            this._to = value;\r\n        }\r\n    });\r\n    Object.defineProperty(AnimationTime.prototype, \"tweenTo\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (value) {\r\n            if (this._current === value || this._duration === 0) {\r\n                this.jumpTo(value);\r\n            }\r\n            else {\r\n                if (this._to !== value) {\r\n                    this._to = value;\r\n                    this._play();\r\n                }\r\n            }\r\n        }\r\n    });\r\n    return AnimationTime;\r\n}());\r\nexport { AnimationTime };\r\n/*export class AnimationValue extends AnimationTime {\r\n    public _min: number;\r\n    public _max: number;\r\n\r\n    constructor(entity: Entity, duration: number, min: number, max: number) {\r\n        super(entity, duration);\r\n        this._min = min;\r\n        this._max = max;\r\n    }\r\n\r\n    public get min(): number {\r\n        return this._min;\r\n    }\r\n\r\n    public set min(value: number) {\r\n        if (this._min !== value) {\r\n            this._min = value;\r\n            this._entity.markDirty();\r\n        }\r\n    }\r\n\r\n    public get max(): number {\r\n        return this._max;\r\n    }\r\n\r\n    public set max(value: number) {\r\n        if (this._max !== value) {\r\n            this._max = value;\r\n            this._entity.markDirty();\r\n        }\r\n    }\r\n\r\n    public currentValue(): number {\r\n        return range(super.currentTime(), this._min, this._max);\r\n    }\r\n\r\n    public jumpToValue(value: number) {\r\n        super.jumpToTime(normalize(value, this._min, this._max));\r\n    }\r\n\r\n    public tweenToValue(value: number) {\r\n        super.tweenToTime(normalize(value, this._min, this._max));\r\n    }\r\n}\r\n*/\r\n//# sourceMappingURL=Animation.js.map","import * as $type from \"./Type\";\r\n/**\r\n * ============================================================================\r\n * UTILITY FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Searches `array` for `value`.\r\n *\r\n * Returns -1 if not found.\r\n *\r\n * @param array  Source array\r\n * @param value  Value to search\r\n * @returns Index\r\n */\r\nexport function indexOf(array, value) {\r\n    var length = array.length;\r\n    for (var i = 0; i < length; ++i) {\r\n        // TODO handle NaN\r\n        if (array[i] === value) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * Calls `test` for each element in `array`.\r\n *\r\n * If `test` returns `true` then it immediately returns `true`.\r\n *\r\n * If `test` returns `false` for all of the elements in `array` then it returns `false`.\r\n *\r\n * @param array  Source array\r\n * @param test   Function which is called on each element\r\n * @returns Whether `test` returned true or not\r\n */\r\nexport function any(array, test) {\r\n    var length = array.length;\r\n    for (var i = 0; i < length; ++i) {\r\n        if (test(array[i])) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Calls `fn` function for every member of array and returns a new array out\r\n * of all outputs.\r\n *\r\n * @param array  Source array\r\n * @param fn     Callback function\r\n * @returns New array\r\n */\r\nexport function map(array, fn) {\r\n    var length = array.length;\r\n    var output = new Array(length);\r\n    for (var i = 0; i < length; ++i) {\r\n        output[i] = fn(array[i], i);\r\n    }\r\n    return output;\r\n}\r\n/**\r\n * Iterates through all items in array and calls `fn` function for each of\r\n * them.\r\n *\r\n * @param array  Source array\r\n * @param fn     Callback function\r\n */\r\nexport function each(array, fn) {\r\n    var length = array.length;\r\n    for (var i = 0; i < length; ++i) {\r\n        fn(array[i], i);\r\n    }\r\n}\r\n/**\r\n * Iterates through all items in array in reverse order and calls `fn` function for each of\r\n * them.\r\n *\r\n * @param array  Source array\r\n * @param fn     Callback function\r\n */\r\nexport function eachReverse(array, fn) {\r\n    var i = array.length;\r\n    while (i > 0) {\r\n        --i;\r\n        fn(array[i], i);\r\n    }\r\n}\r\n/**\r\n * Iterates through all items in array and calls `fn` function for each of\r\n * them.\r\n *\r\n * If `fn` call evaluates to `false`, further iteration is cancelled.\r\n *\r\n * @param array  Source array\r\n * @param fn     Callback function\r\n */\r\nexport function eachContinue(array, fn) {\r\n    var length = array.length;\r\n    for (var i = 0; i < length; ++i) {\r\n        if (!fn(array[i], i)) {\r\n            break;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Shifts an item at `index` towards beginning of the array.\r\n *\r\n * @param array  Source array\r\n * @param index  Target element index\r\n */\r\nexport function shiftLeft(array, index) {\r\n    var length = array.length;\r\n    for (var i = index; i < length; ++i) {\r\n        array[i - index] = array[i];\r\n    }\r\n    array.length = length - index;\r\n}\r\n/**\r\n * Returns the last item of the array.\r\n *\r\n * @param array  Source array\r\n * @returns Last item\r\n */\r\nexport function last(array) {\r\n    var length = array.length;\r\n    return length ? array[length - 1] : undefined;\r\n}\r\n/**\r\n * Returns the first item of the array.\r\n *\r\n * @param array  Source array\r\n * @returns Last item\r\n */\r\nexport function first(array) {\r\n    return array[0];\r\n}\r\n/**\r\n * Inserts `element` into `array` at `index`.\r\n *\r\n * Caps `index` to be between `0` and `array.length`\r\n *\r\n * @param array    Source array\r\n * @param element  Item to insert\r\n * @param array    Index to insert item at\r\n */\r\nexport function insert(array, element, index) {\r\n    //if (array) {\r\n    index = Math.max(0, Math.min(index, array.length));\r\n    array.splice(index, 0, element);\r\n    //}\r\n}\r\n/**\r\n * Removes all copies of `element` from `array` (if they exist) and then\r\n * inserts `element` at `index`.\r\n *\r\n * @param array    Source array\r\n * @param element  Item\r\n * @param array    Index to move item to\r\n */\r\nexport function setIndex(array, element, index) {\r\n    remove(array, element);\r\n    insert(array, element, index);\r\n}\r\n/**\r\n * Pushes all of the elements from `input` into `array`.\r\n *\r\n * @param array  Output array\r\n * @param input  Input array\r\n */\r\nexport function pushAll(array, input) {\r\n    var length = input.length;\r\n    for (var i = 0; i < length; ++i) {\r\n        array.push(input[i]);\r\n    }\r\n}\r\n/**\r\n * Removes `element` from `array`.\r\n *\r\n * If there are multiple copies of `element`, they are all removed.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to remove\r\n */\r\nexport function remove(array, element) {\r\n    var found = false;\r\n    var index = 0;\r\n    for (;;) {\r\n        index = array.indexOf(element, index);\r\n        if (index === -1) {\r\n            return found;\r\n        }\r\n        else {\r\n            found = true;\r\n            array.splice(index, 1);\r\n        }\r\n    }\r\n}\r\nexport function removeFirst(array, element) {\r\n    var index = array.indexOf(element);\r\n    if (index !== -1) {\r\n        array.splice(index, 1);\r\n        return true;\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Adds an `element` to `array`.\r\n *\r\n * If array already contains and item like this, it is removed before adding\r\n * it again.\r\n *\r\n * Optionally `toIndex` can be specified to add element at specific index.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to add\r\n * @param array    Index to move item to\r\n */\r\nexport function move(array, element, toIndex) {\r\n    // @todo this implementation must be the same as the List.moveValue method\r\n    // @todo don't do anything if the desired index is the same as the current index\r\n    var index = indexOf(array, element);\r\n    // @todo remove all old values rather than only the first ?\r\n    if (index !== -1) {\r\n        removeIndex(array, index);\r\n    }\r\n    if (toIndex == null) {\r\n        array.push(element);\r\n    }\r\n    else {\r\n        insertIndex(array, toIndex, element);\r\n    }\r\n}\r\n/**\r\n * Inserts `element` into `array` at `index`.\r\n *\r\n * If `index` is not provided, it will insert `element` at the end of `array`.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to add\r\n * @param array    Index to add item at\r\n */\r\nexport function add(array, element, index) {\r\n    // Append to the end if index is not set\r\n    if (!$type.isNumber(index)) {\r\n        array.push(element);\r\n    }\r\n    // Add to the beginning of array if index is 0\r\n    else if (index === 0) {\r\n        array.unshift(element);\r\n    }\r\n    // Add to indicated place if index is set\r\n    else {\r\n        array.splice(index, 0, element);\r\n    }\r\n}\r\n/**\r\n * Pushes `element` into `array` if it doesn't already exist.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to add\r\n */\r\nexport function pushOne(array, element) {\r\n    if (array.indexOf(element) === -1) {\r\n        array.push(element);\r\n    }\r\n}\r\n/**\r\n * Removes `element` from `array` (if it exists) and then inserts `element` at\r\n * `index`.\r\n *\r\n * If `index` is not provided, it will insert `element` at the end of `array`.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to remove\r\n * @param array    Index to move item to\r\n */\r\nexport function replace(array, element, index) {\r\n    // check if exists\r\n    var ind = array.indexOf(element);\r\n    // remove if exists\r\n    if (ind !== -1) {\r\n        array.splice(ind, 1);\r\n    }\r\n    // add to end if index is not set\r\n    if (!$type.isNumber(index)) {\r\n        array.push(element);\r\n    }\r\n    // add to indicated place if index is set\r\n    else {\r\n        array.splice(index, 0, element);\r\n    }\r\n}\r\n/**\r\n * Wraps `input` in an array, if it isn't already an array.\r\n *\r\n * @param input  Source value\r\n * @return An array\r\n */\r\nexport function toArray(input) {\r\n    if (Array.isArray(input)) {\r\n        return input;\r\n    }\r\n    else {\r\n        return [input];\r\n    }\r\n}\r\n/**\r\n * Returns `true` if `element` exists in `array`.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to search for\r\n * @returns Item in array?\r\n */\r\nexport function has(array, element) {\r\n    return indexOf(array, element) !== -1;\r\n}\r\n/**\r\n * Returns a shallow copy of `array`.\r\n *\r\n * @param array  Source array\r\n * @returns Copy of the array\r\n */\r\nexport function copy(array) {\r\n    var length = array.length;\r\n    // It's faster to create the array with a pre-defined length\r\n    var output = new Array(length);\r\n    for (var i = 0; i < length; ++i) {\r\n        // Because the array has a pre-defined length, we have to assign rather than push\r\n        // This is also faster than pushing\r\n        output[i] = array[i];\r\n    }\r\n    return output;\r\n}\r\n/**\r\n * Returns a copy of `array` which contains all the elements between `start`\r\n * and `end`. (including `start` and excluding `end`)\r\n *\r\n * If `end` is not provided, it defaults to `array.length`.\r\n *\r\n * @param array  Source array\r\n * @param start  Start index\r\n * @param end    End index\r\n * @returns Part of the array\r\n */\r\nexport function slice(array, start, end) {\r\n    if (end === void 0) { end = array.length; }\r\n    var output = new Array(end - start);\r\n    for (var i = start; i < end; ++i) {\r\n        output[i - start] = array[i];\r\n    }\r\n    return output;\r\n}\r\n/**\r\n * Inserts a value into array at specific index.\r\n *\r\n * @param array  Source array\r\n * @param index  Index\r\n * @param value  Value to insert\r\n */\r\nexport function insertIndex(array, index, value) {\r\n    array.splice(index, 0, value);\r\n}\r\n/**\r\n * Removes a value from array at specific index.\r\n *\r\n * @param array  Source array\r\n * @param index  Index\r\n */\r\nexport function removeIndex(array, index) {\r\n    array.splice(index, 1);\r\n}\r\n/**\r\n * Searches the array using custom function and returns index of the item if\r\n * found.\r\n *\r\n * Will call `matches` function on all items of the array. If return value\r\n * evaluates to `true`, index is returned.\r\n *\r\n * Otherwise returns -1.\r\n *\r\n * @param array    Source array\r\n * @param matches  Search function\r\n * @returns Index of the item if found\r\n */\r\nexport function findIndex(array, matches) {\r\n    var length = array.length;\r\n    for (var i = 0; i < length; ++i) {\r\n        if (matches(array[i], i)) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * This is the same as `findIndex` except it searches from right to left.\r\n *\r\n * @param array    Source array\r\n * @param matches  Search function\r\n * @returns Index of the item if found\r\n */\r\nexport function findIndexReverse(array, matches) {\r\n    var i = array.length;\r\n    while (i > 0) {\r\n        --i;\r\n        if (matches(array[i], i)) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * Searches the array using custom function and returns item if found.\r\n *\r\n * Will call `matches` function on all items of the array. If return value\r\n * evaluates to `true`, index is returned.\r\n *\r\n * Otherwise returns `undefined`.\r\n *\r\n * @param array    Source array\r\n * @param matches  Search function\r\n * @returns Item if found\r\n */\r\nexport function find(array, matches) {\r\n    var index = findIndex(array, matches);\r\n    if (index !== -1) {\r\n        return array[index];\r\n    }\r\n}\r\n/**\r\n * This is the same as `find` except it searches from right to left.\r\n *\r\n * @param array    Source array\r\n * @param matches  Search function\r\n * @returns Item if found\r\n */\r\nexport function findReverse(array, matches) {\r\n    var index = findIndexReverse(array, matches);\r\n    if (index !== -1) {\r\n        return array[index];\r\n    }\r\n}\r\n/**\r\n * Searches the array using custom function and returns item if found.\r\n *\r\n * Will call `matches` function on all items of the array. If value\r\n * is not `undefined`, it returns it.\r\n *\r\n * Otherwise returns `undefined`.\r\n *\r\n * @param array    Source array\r\n * @param matches  Search function\r\n * @returns Item if found\r\n */\r\nexport function findMap(array, matches) {\r\n    var length = array.length;\r\n    for (var i = 0; i < length; ++i) {\r\n        var value = matches(array[i], i);\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Iterates through all items in array and calls `fn` function for each of\r\n * them.\r\n *\r\n * @param array  Source array\r\n * @param fn     Callback function\r\n */\r\nexport function shuffle(array) {\r\n    // https://stackoverflow.com/a/2450976/449477\r\n    var currentIndex = array.length, temporaryValue, randomIndex;\r\n    // While there remain elements to shuffle...\r\n    while (0 !== currentIndex) {\r\n        // Pick a remaining element...\r\n        randomIndex = Math.floor(Math.random() * currentIndex);\r\n        currentIndex -= 1;\r\n        // And swap it with the current element.\r\n        temporaryValue = array[currentIndex];\r\n        array[currentIndex] = array[randomIndex];\r\n        array[randomIndex] = temporaryValue;\r\n    }\r\n}\r\n/**\r\n * Orders an array using specific `ordering` function and returns right-most index of\r\n * the `value`.\r\n *\r\n * @ignore Exclude from docs\r\n * @param array     Source array\r\n * @param ordering  An ordering function\r\n * @returns Result of the search\r\n */\r\nexport function getSortedIndex(array, ordering) {\r\n    var start = 0;\r\n    var end = array.length;\r\n    var found = false;\r\n    while (start < end) {\r\n        // TODO is this faster/slower than using Math.floor ?\r\n        var pivot = (start + end) >> 1;\r\n        var order = ordering(array[pivot]);\r\n        // less\r\n        if (order < 0) {\r\n            start = pivot + 1;\r\n            // equal\r\n        }\r\n        else if (order === 0) {\r\n            found = true;\r\n            start = pivot + 1;\r\n            // more\r\n        }\r\n        else {\r\n            end = pivot;\r\n        }\r\n    }\r\n    return {\r\n        found: found,\r\n        index: (found ? start - 1 : start)\r\n    };\r\n}\r\n/**\r\n * Orders an array using specific `ordering` function and returns left-most index of\r\n * the `value`.\r\n *\r\n * @ignore Exclude from docs\r\n * @param array     Source array\r\n * @param ordering  An ordering function\r\n * @returns Result of the search\r\n */\r\nexport function getFirstSortedIndex(array, ordering) {\r\n    var start = 0;\r\n    var end = array.length;\r\n    var found = false;\r\n    while (start < end) {\r\n        // TODO is this faster/slower than using Math.floor ?\r\n        var pivot = (start + end) >> 1;\r\n        var order = ordering(array[pivot]);\r\n        // less\r\n        if (order < 0) {\r\n            start = pivot + 1;\r\n            // equal\r\n        }\r\n        else if (order === 0) {\r\n            found = true;\r\n            end = pivot;\r\n            // more\r\n        }\r\n        else {\r\n            end = pivot;\r\n        }\r\n    }\r\n    return {\r\n        found: found,\r\n        index: start\r\n    };\r\n}\r\nexport function keepIf(array, keep) {\r\n    var i = array.length;\r\n    while (i > 0) {\r\n        --i;\r\n        if (!keep(array[i])) {\r\n            array.splice(i, 1);\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=Array.js.map","import { __extends } from \"tslib\";\r\nimport { List } from \"./List\";\r\nimport * as $array from \"./Array\";\r\n/**\r\n * A version of [[List]] to hold children of the [[Container]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/} for more info\r\n */\r\nvar Children = /** @class */ (function (_super) {\r\n    __extends(Children, _super);\r\n    function Children(container) {\r\n        var _this = _super.call(this) || this;\r\n        Object.defineProperty(_this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(_this, \"_container\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        _this._container = container;\r\n        _this._events = _this.events.onAll(function (change) {\r\n            if (change.type === \"clear\") {\r\n                $array.each(change.oldValues, function (x) {\r\n                    _this._onRemoved(x);\r\n                });\r\n            }\r\n            else if (change.type === \"push\") {\r\n                _this._onInserted(change.newValue);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                _this._onRemoved(change.oldValue);\r\n                _this._onInserted(change.newValue, change.index);\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                _this._onInserted(change.newValue, change.index);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                _this._onRemoved(change.oldValue);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                _this._onRemoved(change.value);\r\n                _this._onInserted(change.value, change.newIndex);\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IListEvent type\");\r\n            }\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Children.prototype, \"_onInserted\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (child, index) {\r\n            child._setParent(this._container, true);\r\n            var childrenDisplay = this._container._childrenDisplay;\r\n            if (index === undefined) {\r\n                childrenDisplay.addChild(child._display);\r\n            }\r\n            else {\r\n                childrenDisplay.addChildAt(child._display, index);\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Children.prototype, \"_onRemoved\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (child) {\r\n            this._container._childrenDisplay.removeChild(child._display);\r\n            this._container.markDirtyBounds();\r\n            this._container.markDirty();\r\n        }\r\n    });\r\n    /**\r\n     * Returns `true` if obejct is disposed.\r\n     */\r\n    Object.defineProperty(Children.prototype, \"isDisposed\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            return this._disposed;\r\n        }\r\n    });\r\n    /**\r\n     * Permanently dispose this object.\r\n     */\r\n    Object.defineProperty(Children.prototype, \"dispose\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            if (!this._disposed) {\r\n                this._disposed = true;\r\n                this._events.dispose();\r\n                $array.each(this.values, function (child) {\r\n                    child.dispose();\r\n                });\r\n            }\r\n        }\r\n    });\r\n    return Children;\r\n}(List));\r\nexport { Children };\r\n//# sourceMappingURL=Children.js.map","import { range } from \"./Animation\";\r\nimport * as $utils from \"./Utils\";\r\nimport * as $type from \"./Type\";\r\n/**\r\n * @ignore\r\n */\r\nfunction string2hex(string) {\r\n    //string = cssColorNames[string.toLowerCase()] || string;\r\n    if (string[0] === \"#\") {\r\n        string = string.substr(1);\r\n    }\r\n    if (string.length == 3) {\r\n        string = string[0].repeat(2) + string[1].repeat(2) + string[2].repeat(2);\r\n    }\r\n    return parseInt(string, 16);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function rgba2hex(color) {\r\n    color = color.replace(/[ ]/g, \"\");\r\n    // Init\r\n    var matches = color.match(/^rgb\\(([0-9]*),([0-9]*),([0-9]*)\\)/i);\r\n    // Try rgb() format\r\n    if (matches) {\r\n        matches.push(\"1\");\r\n    }\r\n    else {\r\n        matches = color.match(/^rgba\\(([0-9]*),([0-9]*),([0-9]*),([.0-9]*)\\)/i);\r\n        if (!matches) {\r\n            return 0x000000;\r\n        }\r\n    }\r\n    var hex = \"\";\r\n    for (var i = 1; i <= 3; i++) {\r\n        var val = parseInt(matches[i]).toString(16);\r\n        if (val.length == 1) {\r\n            val = \"0\" + val;\r\n        }\r\n        hex += val;\r\n    }\r\n    return string2hex(hex);\r\n}\r\n/**\r\n * Returns a new [[Color]] object base on input.\r\n *\r\n * Accepts parameters in CSS hex or rgb/rtba strings, or hex numbers.\r\n *\r\n * * `\"#f00\"`\r\n * * `\"#ff0000\"`\r\n * * `\"rgb(255, 0, 0)\"`\r\n * * `\"rgba(255, 0, 0, 1)\"`\r\n * * `0xff0000`\r\n *\r\n * @param   input  Input color\r\n * @return         Color\r\n */\r\nexport function color(input) {\r\n    return Color.fromAny(input);\r\n}\r\n/**\r\n * Wherever color needs to be specified in amCharts 5, `Color` object needs to\r\n * be used.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/} for more info\r\n * @important\r\n */\r\nvar Color = /** @class */ (function () {\r\n    function Color(hex) {\r\n        Object.defineProperty(this, \"_hex\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._hex = hex | 0;\r\n    }\r\n    Object.defineProperty(Color.prototype, \"hex\", {\r\n        /**\r\n         * Color numeric value.\r\n         */\r\n        get: function () {\r\n            return this._hex;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Color.prototype, \"r\", {\r\n        /**\r\n         * Value of color's R channel.\r\n         * @return R value\r\n         */\r\n        get: function () {\r\n            return this._hex >>> 16;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Color.prototype, \"g\", {\r\n        /**\r\n         * Value of color's G channel.\r\n         * @return G value\r\n         */\r\n        get: function () {\r\n            return (this._hex >> 8) & 0xFF;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Color.prototype, \"b\", {\r\n        /**\r\n         * Value of color's B channel.\r\n         * @return B value\r\n         */\r\n        get: function () {\r\n            return this._hex & 0xFF;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns color CSS representation in form of `rgba(r, g, b, a)` string.\r\n     *\r\n     * @param   alpha  Opacity\r\n     * @return         CSS string\r\n     */\r\n    Object.defineProperty(Color.prototype, \"toCSS\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (alpha) {\r\n            if (alpha === void 0) { alpha = 1; }\r\n            return \"rgba(\" + this.r + \", \" + this.g + \", \" + this.b + \", \" + alpha + \")\";\r\n        }\r\n    });\r\n    /**\r\n     * Returns color CSS representation in form of `#rgb` string.\r\n     *\r\n     * @return         CSS string\r\n     */\r\n    Object.defineProperty(Color.prototype, \"toCSSHex\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            return \"#\" + $utils.padString(this.r.toString(16), 2) + $utils.padString(this.g.toString(16), 2) + $utils.padString(this.b.toString(16), 2);\r\n        }\r\n    });\r\n    /**\r\n     * Returns color's HSL info.\r\n     * @param   alpha Opacity\r\n     * @return        HSL info\r\n     */\r\n    Object.defineProperty(Color.prototype, \"toHSL\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (alpha) {\r\n            if (alpha === void 0) { alpha = 1; }\r\n            return $utils.rgbToHsl({\r\n                r: this.r,\r\n                g: this.g,\r\n                b: this.b,\r\n                a: alpha\r\n            });\r\n        }\r\n    });\r\n    /**\r\n     * Converts HSL values into a new [[Color]] object.\r\n     *\r\n     * @param   h H value\r\n     * @param   s S value\r\n     * @param   l L value\r\n     * @return    Color object\r\n     */\r\n    Object.defineProperty(Color, \"fromHSL\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (h, s, l) {\r\n            var rgb = $utils.hslToRgb({\r\n                h: h,\r\n                s: s,\r\n                l: l\r\n            });\r\n            return this.fromRGB(rgb.r, rgb.g, rgb.b);\r\n        }\r\n    });\r\n    Object.defineProperty(Color.prototype, \"toString\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            return this.toCSSHex();\r\n        }\r\n    });\r\n    /**\r\n     * Converts hex number into a new [[Color]] object.\r\n     *\r\n     * ```TypeScript\r\n     * Color.fromHex(0xff0000) // red\r\n     * ```\r\n     * ```JavaScript\r\n     * Color.fromHex(0xff0000) // red\r\n     * ```\r\n     *\r\n     * @param   hex  Hex color\r\n     * @return       Color\r\n     */\r\n    Object.defineProperty(Color, \"fromHex\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (hex) {\r\n            return new Color(hex);\r\n        }\r\n    });\r\n    /**\r\n     * Converts RGB values to a new [[Color]] object.\r\n     *\r\n     * @param   r  R value\r\n     * @param   g  G value\r\n     * @param   b  B value\r\n     * @return     Color\r\n     */\r\n    Object.defineProperty(Color, \"fromRGB\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (r, g, b) {\r\n            return new Color((b | 0) + (g << 8) + (r << 16));\r\n        }\r\n    });\r\n    /**\r\n     * Converts RGB string to a new [[Color]] object.\r\n     *\r\n     * ```TypeScript\r\n     * Color.fromString(\"#ff0000\") // red\r\n     * ```\r\n     * ```JavaScript\r\n     * Color.fromString(\"#ff0000\") // red\r\n     * ```\r\n     *\r\n     * @param   s  RGB string\r\n     * @return     Color\r\n     */\r\n    Object.defineProperty(Color, \"fromString\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (s) {\r\n            return new Color(string2hex(s));\r\n        }\r\n    });\r\n    /**\r\n     * Converts CSS rgba() syntax to a new [[Color]] object.\r\n     *\r\n     * ```TypeScript\r\n     * Color.fromCSS(\"rgba(255, 0, 0, 1)\") // red\r\n     * ```\r\n     * ```JavaScript\r\n     * Color.fromCSS(\"rgba(255, 0, 0, 1)\") // red\r\n     * ```\r\n     *\r\n     * @param  {string} s [description]\r\n     * @return {Color}    [description]\r\n     */\r\n    Object.defineProperty(Color, \"fromCSS\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (s) {\r\n            return new Color(rgba2hex(s));\r\n        }\r\n    });\r\n    /**\r\n     * Convert to color from virtually anything.\r\n     *\r\n     * Will throw an exception if unable to resolve the color.\r\n     *\r\n     * @param   s  Source\r\n     * @return     Color\r\n     */\r\n    Object.defineProperty(Color, \"fromAny\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (s) {\r\n            if ($type.isString(s)) {\r\n                if (s[0] == \"#\") {\r\n                    return Color.fromString(s);\r\n                }\r\n                else if (s.substr(0, 3) == \"rgb\") {\r\n                    return Color.fromCSS(s);\r\n                }\r\n            }\r\n            else if ($type.isNumber(s)) {\r\n                return Color.fromHex(s);\r\n            }\r\n            else if (s instanceof Color) {\r\n                return Color.fromHex(s.hex);\r\n            }\r\n            throw new Error(\"Unknown color syntax: \" + s);\r\n        }\r\n    });\r\n    /**\r\n     * Returns a new [[Color]] object based on either `lightAlternative` or\r\n     * `darkAlternative` depending on which one is more contrasting with\r\n     * the `color`.\r\n     *\r\n     * @param   color             Reference color\r\n     * @param   lightAlternative  Light color\r\n     * @param   darkAlternative   Dark color\r\n     * @return                    Alternative color\r\n     */\r\n    Object.defineProperty(Color, \"alternative\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (color, lightAlternative, darkAlternative) {\r\n            var rgb = $utils.alternativeColor({ r: color.r, g: color.g, b: color.b }, lightAlternative ? { r: lightAlternative.r, g: lightAlternative.g, b: lightAlternative.b } : undefined, darkAlternative ? { r: darkAlternative.r, g: darkAlternative.g, b: darkAlternative.b } : undefined);\r\n            return this.fromRGB(rgb.r, rgb.g, rgb.b);\r\n        }\r\n    });\r\n    /**\r\n     * Returns an intermediate Color between two reference colors depending on\r\n     * the progress (`diff`) between the two.\r\n     *\r\n     * @param   diff  Progress\r\n     * @param   from  Source color\r\n     * @param   to    Target color\r\n     * @param   mode  Interpolation mode\r\n     * @return        Color\r\n     */\r\n    Object.defineProperty(Color, \"interpolate\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (diff, from, to, mode) {\r\n            if (mode === void 0) { mode = \"rgb\"; }\r\n            if (mode == \"hsl\") {\r\n                var fromHSL = from.toHSL();\r\n                var toHSL = to.toHSL();\r\n                return Color.fromHSL(range(diff, fromHSL.h, toHSL.h), range(diff, fromHSL.s, toHSL.s), range(diff, fromHSL.l, toHSL.l));\r\n            }\r\n            else {\r\n                return Color.fromRGB(range(diff, from.r, to.r), range(diff, from.g, to.g), range(diff, from.b, to.b));\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * Returns a new [[Color]] lightened by `percent` value.\r\n     *\r\n     * Use negative value to darken the color.\r\n     *\r\n     * @param   color    Source color\r\n     * @param   percent  Percent\r\n     * @return           New color\r\n     */\r\n    Object.defineProperty(Color, \"lighten\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (color, percent) {\r\n            var rgb = $utils.lighten({ r: color.r, g: color.g, b: color.b }, percent);\r\n            return Color.fromRGB(rgb.r, rgb.g, rgb.b);\r\n        }\r\n    });\r\n    /**\r\n     * Returns a new [[Color]] brightened by `percent` value.\r\n     *\r\n     * Use negative value to dim the color.\r\n     *\r\n     * @param   color    Source color\r\n     * @param   percent  Percent\r\n     * @return           New color\r\n     */\r\n    Object.defineProperty(Color, \"brighten\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (color, percent) {\r\n            var rgb = $utils.brighten({ r: color.r, g: color.g, b: color.b }, percent);\r\n            return Color.fromRGB(rgb.r, rgb.g, rgb.b);\r\n        }\r\n    });\r\n    /**\r\n     * Returns a new [[Color]] saturated by `percent` value.\r\n     *\r\n     * Value range is between `0` (fully desaturated), to `1` (full color).\r\n     *\r\n     * @param   color    Source color\r\n     * @param   percent  Percent\r\n     * @return           New color\r\n     */\r\n    Object.defineProperty(Color, \"saturate\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (color, percent) {\r\n            var rgb = $utils.saturate({ r: color.r, g: color.g, b: color.b }, percent);\r\n            return Color.fromRGB(rgb.r, rgb.g, rgb.b);\r\n        }\r\n    });\r\n    return Color;\r\n}());\r\nexport { Color };\r\n//# sourceMappingURL=Color.js.map","import { __extends } from \"tslib\";\r\nimport { Entity } from \"./Entity\";\r\nimport { Color } from \"./Color\";\r\n/**\r\n * An object which holds list of colors and can generate new ones.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/#Color_sets} for more info\r\n */\r\nvar ColorSet = /** @class */ (function (_super) {\r\n    __extends(ColorSet, _super);\r\n    function ColorSet() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    //protected _currentPass: number = 0;\r\n    Object.defineProperty(ColorSet.prototype, \"_afterNew\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            // Applying themes because color set will not have parent\r\n            _super.prototype._afterNewApplyThemes.call(this);\r\n            this._dirty[\"colors\"] = false;\r\n        }\r\n    });\r\n    Object.defineProperty(ColorSet.prototype, \"_beforeChanged\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            if (this.isDirty(\"colors\")) {\r\n                this.reset();\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(ColorSet.prototype, \"generateColors\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this.setPrivate(\"currentPass\", this.getPrivate(\"currentPass\", 0) + 1);\r\n            var pass = this.getPrivate(\"currentPass\");\r\n            var colors = this.get(\"colors\", [this.get(\"baseColor\", Color.fromHex(0xff0000))]);\r\n            if (!this.getPrivate(\"numColors\")) {\r\n                this.setPrivate(\"numColors\", colors.length);\r\n            }\r\n            //const len = colors.length;\r\n            var len = this.getPrivate(\"numColors\");\r\n            //const start = len - this.getPrivate(\"numColors\")!;\r\n            var start = 0;\r\n            var passOptions = this.get(\"passOptions\");\r\n            var reuse = this.get(\"reuse\");\r\n            for (var i = start; i < len; i++) {\r\n                if (reuse) {\r\n                    colors.push(colors[i]);\r\n                }\r\n                else {\r\n                    var hsl = colors[i].toHSL();\r\n                    var h = hsl.h + (passOptions.hue || 0) * pass;\r\n                    while (h > 1)\r\n                        h -= 1;\r\n                    var s = hsl.s + (passOptions.saturation || 0) * pass;\r\n                    //if (s > 1) s -= Math.floor(s);\r\n                    if (s > 1)\r\n                        s = 1;\r\n                    if (s < 0)\r\n                        s = 0;\r\n                    var l = hsl.l + (passOptions.lightness || 0) * pass;\r\n                    //if (l > 1) l -= Math.floor(l);\r\n                    while (l > 1)\r\n                        l -= 1;\r\n                    colors.push(Color.fromHSL(h, s, l));\r\n                }\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * Returns a [[Color]] at specific index.\r\n     *\r\n     * If there's no color at this index, a new color is generated.\r\n     *\r\n     * @param   index  Index\r\n     * @return         Color\r\n     */\r\n    Object.defineProperty(ColorSet.prototype, \"getIndex\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (index) {\r\n            var colors = this.get(\"colors\", []);\r\n            var saturation = this.get(\"saturation\");\r\n            if (index >= colors.length) {\r\n                this.generateColors();\r\n                return this.getIndex(index);\r\n            }\r\n            return saturation != null ? Color.saturate(colors[index], saturation) : colors[index];\r\n        }\r\n    });\r\n    /**\r\n     * Returns next [[Color]] in the list.\r\n     *\r\n     * If the list is out of colors, new ones are generated dynamically.\r\n     */\r\n    Object.defineProperty(ColorSet.prototype, \"next\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var currentStep = this.getPrivate(\"currentStep\", this.get(\"startIndex\", 0));\r\n            this.setPrivate(\"currentStep\", currentStep + this.get(\"step\", 1));\r\n            return this.getIndex(currentStep);\r\n        }\r\n    });\r\n    /**\r\n     * Resets counter to the start of the list, so the next call for `next()` will\r\n     * return the first color.\r\n     */\r\n    Object.defineProperty(ColorSet.prototype, \"reset\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this.setPrivate(\"currentStep\", this.get(\"startIndex\", 0));\r\n            this.setPrivate(\"currentPass\", 0);\r\n        }\r\n    });\r\n    Object.defineProperty(ColorSet, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"ColorSet\"\r\n    });\r\n    Object.defineProperty(ColorSet, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: Entity.classNames.concat([ColorSet.className])\r\n    });\r\n    return ColorSet;\r\n}(Entity));\r\nexport { ColorSet };\r\n//# sourceMappingURL=ColorSet.js.map","import { __extends } from \"tslib\";\r\nimport { List } from \"./List\";\r\n/**\r\n * A [[List]] that holds components data.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/data/} for more info\r\n */\r\nvar ListData = /** @class */ (function (_super) {\r\n    __extends(ListData, _super);\r\n    function ListData() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * An optional processor for data.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/data/#Pre_processing_data} for more info\r\n         */\r\n        Object.defineProperty(_this, \"processor\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        return _this;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(ListData.prototype, \"incrementRef\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () { }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(ListData.prototype, \"decrementRef\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () { }\r\n    });\r\n    Object.defineProperty(ListData.prototype, \"_onPush\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (newValue) {\r\n            if (this.processor) {\r\n                this.processor.processRow(newValue);\r\n                //console.log(newValue)\r\n            }\r\n            _super.prototype._onPush.call(this, newValue);\r\n        }\r\n    });\r\n    Object.defineProperty(ListData.prototype, \"_onInsertIndex\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (index, newValue) {\r\n            if (this.processor) {\r\n                this.processor.processRow(newValue);\r\n            }\r\n            _super.prototype._onInsertIndex.call(this, index, newValue);\r\n        }\r\n    });\r\n    Object.defineProperty(ListData.prototype, \"_onSetIndex\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (index, oldValue, newValue) {\r\n            if (this.processor) {\r\n                this.processor.processRow(newValue);\r\n            }\r\n            _super.prototype._onSetIndex.call(this, index, oldValue, newValue);\r\n        }\r\n    });\r\n    return ListData;\r\n}(List));\r\nexport { ListData };\r\n/**\r\n * @deprecated\r\n * @todo remove\r\n */\r\nvar JsonData = /** @class */ (function () {\r\n    function JsonData(value) {\r\n        Object.defineProperty(this, \"processor\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_value\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._value = value;\r\n    }\r\n    Object.defineProperty(JsonData.prototype, \"incrementRef\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () { }\r\n    });\r\n    Object.defineProperty(JsonData.prototype, \"decrementRef\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () { }\r\n    });\r\n    return JsonData;\r\n}());\r\nexport { JsonData };\r\n//# sourceMappingURL=Data.js.map","import * as $type from \"./Type\";\r\nimport * as $object from \"./Object\";\r\n/**\r\n * Tool to parse JSON string into structured data.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/data/#Parsing} for more info\r\n * @important\r\n */\r\nvar JSONParser = /** @class */ (function () {\r\n    function JSONParser() {\r\n    }\r\n    /**\r\n     * Parses JSON string.\r\n     *\r\n     * @param   input    JSON\r\n     * @param   options  Options\r\n     * @return           Data\r\n     */\r\n    Object.defineProperty(JSONParser, \"parse\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (input, options) {\r\n            options = this._applyDefaults(options);\r\n            try {\r\n                if ($type.isString(input)) {\r\n                    var data = JSON.parse(input);\r\n                    if (options.reverse && $type.isArray(data)) {\r\n                        data.reverse();\r\n                    }\r\n                    return data;\r\n                }\r\n                else if ($type.isArray(input) || $type.isObject(input)) {\r\n                    return input;\r\n                }\r\n                else {\r\n                    throw (\"Unable to parse JSON data\");\r\n                }\r\n            }\r\n            catch (e) {\r\n                return undefined;\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(JSONParser, \"_applyDefaults\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (options) {\r\n            var normalized = {};\r\n            var defaults = {\r\n                reverse: false\r\n            };\r\n            if (!options) {\r\n                options = {};\r\n            }\r\n            $object.each(defaults, function (key, val) {\r\n                normalized[key] = options[key] || val;\r\n            });\r\n            return normalized;\r\n        }\r\n    });\r\n    return JSONParser;\r\n}());\r\nexport { JSONParser };\r\n/**\r\n * Tool to parse JSON string into structured data.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/data/#Parsing} for more info\r\n * @important\r\n */\r\nvar CSVParser = /** @class */ (function () {\r\n    function CSVParser() {\r\n    }\r\n    /**\r\n     * Parses CSV string.\r\n     *\r\n     * @param   input    CSV\r\n     * @param   options  Options\r\n     * @return           Data\r\n     */\r\n    Object.defineProperty(CSVParser, \"parse\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (input, options) {\r\n            options = this._applyDefaults(options);\r\n            // Get CSV data as array\r\n            var data = this.CSVToArray(input, options.delimiter);\r\n            // Init resuling array\r\n            var res = [], cols = [], col, i;\r\n            // Skip rows\r\n            for (i = 0; i < options.skipRows; i++) {\r\n                data.shift();\r\n            }\r\n            // First row holds column names?\r\n            if (options.useColumnNames) {\r\n                cols = data.shift();\r\n                // Normalize column names\r\n                for (var x = 0; x < cols.length; x++) {\r\n                    // trim\r\n                    col = cols[x] != null ? cols[x].replace(/^\\s+|\\s+$/gm, \"\") : \"\";\r\n                    // Check for empty\r\n                    if (\"\" === col) {\r\n                        col = \"col\" + x;\r\n                    }\r\n                    cols[x] = col;\r\n                }\r\n            }\r\n            // Iterate through the result set\r\n            var row;\r\n            while (true) {\r\n                row = options.reverse ? data.pop() : data.shift();\r\n                if (!row) {\r\n                    break;\r\n                }\r\n                if (options.skipEmpty && row.length === 1 && row[0] === \"\") {\r\n                    continue;\r\n                }\r\n                var dataPoint = {};\r\n                for (i = 0; i < row.length; i++) {\r\n                    col = undefined === cols[i] ? \"col\" + i : cols[i];\r\n                    dataPoint[col] = row[i];\r\n                }\r\n                res.push(dataPoint);\r\n            }\r\n            return res;\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(CSVParser, \"CSVToArray\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (data, delimiter) {\r\n            // Check to see if the delimiter is defined. If not,\r\n            // then default to comma.\r\n            delimiter = (delimiter || ',');\r\n            // Create a regular expression to parse the CSV values.\r\n            var objPattern = new RegExp((\r\n            // Delimiters.\r\n            \"(\\\\\" + delimiter + \"|\\\\r?\\\\n|\\\\r|^)\" +\r\n                // Quoted fields.\r\n                \"(?:\\\"([^\\\"]*(?:\\\"\\\"[^\\\"]*)*)\\\"|\" +\r\n                // Standard fields.\r\n                \"([^\\\"\\\\\" + delimiter + \"\\\\r\\\\n]*))\"), \"gi\");\r\n            // Create an array to hold our data. Give the array\r\n            // a default empty first row.\r\n            var arrData = [\r\n                []\r\n            ];\r\n            // Create an array to hold our individual pattern\r\n            // matching groups.\r\n            var arrMatches = null;\r\n            // Keep looping over the regular expression matches\r\n            // until we can no longer find a match.\r\n            while (true) {\r\n                arrMatches = objPattern.exec(data);\r\n                if (!arrMatches) {\r\n                    break;\r\n                }\r\n                // Get the delimiter that was found.\r\n                var strMatchedDelimiter = arrMatches[1];\r\n                // Check to see if the given delimiter has a length\r\n                // (is not the start of string) and if it matches\r\n                // field delimiter. If id does not, then we know\r\n                // that this delimiter is a row delimiter.\r\n                if (strMatchedDelimiter.length &&\r\n                    (strMatchedDelimiter !== delimiter)) {\r\n                    // Since we have reached a new row of data,\r\n                    // add an empty row to our data array.\r\n                    arrData.push([]);\r\n                }\r\n                // Now that we have our delimiter out of the way,\r\n                // let's check to see which kind of value we\r\n                // captured (quoted or unquoted).\r\n                var strMatchedValue = void 0;\r\n                if (arrMatches[2]) {\r\n                    // We found a quoted value. When we capture\r\n                    // this value, unescape any double quotes.\r\n                    strMatchedValue = arrMatches[2].replace(new RegExp(\"\\\"\\\"\", \"g\"), \"\\\"\");\r\n                }\r\n                else {\r\n                    // We found a non-quoted value.\r\n                    strMatchedValue = arrMatches[3];\r\n                }\r\n                // Now that we have our value string, let's add\r\n                // it to the data array.\r\n                arrData[arrData.length - 1].push(strMatchedValue);\r\n            }\r\n            // Return the parsed data.\r\n            return (arrData);\r\n        }\r\n    });\r\n    Object.defineProperty(CSVParser, \"_applyDefaults\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (options) {\r\n            var normalized = {};\r\n            var defaults = {\r\n                delimiter: \",\",\r\n                reverse: false,\r\n                skipRows: 0,\r\n                skipEmpty: true,\r\n                useColumnNames: false\r\n            };\r\n            if (!options) {\r\n                options = {};\r\n            }\r\n            $object.each(defaults, function (key, val) {\r\n                normalized[key] = options[key] || val;\r\n            });\r\n            return normalized;\r\n        }\r\n    });\r\n    return CSVParser;\r\n}());\r\nexport { CSVParser };\r\n//# sourceMappingURL=DataParser.js.map","import { __extends } from \"tslib\";\r\nimport { Entity } from \"./Entity\";\r\nimport { Color } from \"./Color\";\r\nimport * as $type from \"./Type\";\r\nimport * as $object from \"./Object\";\r\nimport * as $array from \"./Array\";\r\n/**\r\n * A tool that can process the data before it is being used in charts.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/data/#Pre_processing_data} for more info\r\n * @important\r\n */\r\nvar DataProcessor = /** @class */ (function (_super) {\r\n    __extends(DataProcessor, _super);\r\n    function DataProcessor() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        Object.defineProperty(_this, \"_checkDates\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(_this, \"_checkNumbers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(_this, \"_checkColors\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(_this, \"_checkEmpty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(_this, \"_checkDeep\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(DataProcessor.prototype, \"_afterNew\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            _super.prototype._afterNew.call(this);\r\n            this._checkFeatures();\r\n            this.on(\"dateFields\", function () { return _this._checkFeatures(); });\r\n            this.on(\"dateFormat\", function () { return _this._checkFeatures(); });\r\n            this.on(\"numericFields\", function () { return _this._checkFeatures(); });\r\n            this.on(\"colorFields\", function () { return _this._checkFeatures(); });\r\n            this.on(\"emptyAs\", function () { return _this._checkFeatures(); });\r\n        }\r\n    });\r\n    Object.defineProperty(DataProcessor.prototype, \"_checkFeatures\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            if (this.isDirty(\"dateFields\") || this.isDirty(\"dateFormat\")) {\r\n                this._checkDates = this.get(\"dateFields\") && (this.get(\"dateFields\").length > 0);\r\n            }\r\n            if (this.isDirty(\"numericFields\")) {\r\n                this._checkNumbers = this.get(\"numericFields\") && (this.get(\"numericFields\").length > 0);\r\n            }\r\n            if (this.isDirty(\"colorFields\")) {\r\n                this._checkColors = this.get(\"colorFields\") && (this.get(\"colorFields\").length > 0);\r\n            }\r\n            if (this.isDirty(\"emptyAs\")) {\r\n                this._checkEmpty = this.get(\"emptyAs\") != null;\r\n            }\r\n            this._checkDeepFeatures();\r\n        }\r\n    });\r\n    Object.defineProperty(DataProcessor.prototype, \"_checkDeepFeatures\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            var deepFields = [];\r\n            $array.each([\"dateFields\", \"numericFields\", \"colorFields\"], function (where) {\r\n                $array.each(_this.get(where, []), function (field) {\r\n                    var steps = field.split(\".\");\r\n                    steps.pop();\r\n                    while (steps.length > 0) {\r\n                        deepFields.push(steps.join(\".\"));\r\n                        steps.pop();\r\n                    }\r\n                });\r\n            });\r\n            this._checkDeep = deepFields.length > 0;\r\n            this.setPrivate(\"deepFields\", deepFields);\r\n        }\r\n    });\r\n    /**\r\n     * Processess entire array of data.\r\n     *\r\n     * NOTE: calling this will modify original array!\r\n     */\r\n    Object.defineProperty(DataProcessor.prototype, \"processMany\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (data) {\r\n            var _this = this;\r\n            if ($type.isArray(data) && (this._checkDates || this._checkNumbers || this._checkColors || this._checkEmpty)) {\r\n                $array.each(data, function (row) {\r\n                    _this.processRow(row);\r\n                });\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * Processes a row (object) of data.\r\n     *\r\n     * NOTE: calling this will modify values of the original object!\r\n     */\r\n    Object.defineProperty(DataProcessor.prototype, \"processRow\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (row, prefix) {\r\n            var _this = this;\r\n            if (prefix === void 0) { prefix = \"\"; }\r\n            $object.each(row, function (key, _value) {\r\n                var lookupKey = prefix + key;\r\n                if (_this._checkEmpty) {\r\n                    row[key] = _this._maybeToEmpty(row[key]);\r\n                }\r\n                if (_this._checkNumbers) {\r\n                    row[key] = _this._maybeToNumber(lookupKey, row[key]);\r\n                }\r\n                if (_this._checkDates) {\r\n                    row[key] = _this._maybeToDate(lookupKey, row[key]);\r\n                }\r\n                if (_this._checkColors) {\r\n                    row[key] = _this._maybeToColor(lookupKey, row[key]);\r\n                }\r\n                if (_this._checkDeep && _this.getPrivate(\"deepFields\", []).indexOf(lookupKey) !== -1 && $type.isObject(row[key])) {\r\n                    _this.processRow(row[key], lookupKey + \".\");\r\n                }\r\n            });\r\n        }\r\n    });\r\n    Object.defineProperty(DataProcessor.prototype, \"_maybeToNumber\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (field, value) {\r\n            if (this.get(\"numericFields\").indexOf(field) !== -1) {\r\n                return $type.toNumber(value);\r\n            }\r\n            return value;\r\n        }\r\n    });\r\n    Object.defineProperty(DataProcessor.prototype, \"_maybeToDate\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (field, value) {\r\n            if (this.get(\"dateFields\").indexOf(field) !== -1) {\r\n                return this._root.dateFormatter.parse(value, this.get(\"dateFormat\", \"\")).getTime();\r\n            }\r\n            return value;\r\n        }\r\n    });\r\n    Object.defineProperty(DataProcessor.prototype, \"_maybeToEmpty\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (value) {\r\n            if ((value == null || value == \"\") && this.get(\"emptyAs\") != null) {\r\n                return this.get(\"emptyAs\");\r\n            }\r\n            return value;\r\n        }\r\n    });\r\n    Object.defineProperty(DataProcessor.prototype, \"_maybeToColor\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (field, value) {\r\n            if (this.get(\"colorFields\").indexOf(field) !== -1) {\r\n                return Color.fromAny(value);\r\n            }\r\n            return value;\r\n        }\r\n    });\r\n    return DataProcessor;\r\n}(Entity));\r\nexport { DataProcessor };\r\n//# sourceMappingURL=DataProcessor.js.map","import { __extends } from \"tslib\";\r\nimport { Entity } from \"./Entity\";\r\nimport { TextFormatter } from \"./TextFormatter\";\r\nimport { Timezone } from \"./Timezone\";\r\nimport * as $type from \"./Type\";\r\nimport * as $utils from \"./Utils\";\r\nvar DateFormatter = /** @class */ (function (_super) {\r\n    __extends(DateFormatter, _super);\r\n    function DateFormatter() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(DateFormatter.prototype, \"_setDefaults\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            // Defaults\r\n            this._setDefault(\"capitalize\", true);\r\n            this._setDefault(\"dateFormat\", \"yyyy-MM-dd\");\r\n            _super.prototype._setDefaults.call(this);\r\n        }\r\n    });\r\n    Object.defineProperty(DateFormatter.prototype, \"_beforeChanged\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._beforeChanged.call(this);\r\n        }\r\n    });\r\n    Object.defineProperty(DateFormatter.prototype, \"format\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (source, format) {\r\n            // Locale?\r\n            // TODO\r\n            // No format passed in or it's empty\r\n            if (typeof format === \"undefined\" || format === \"\") {\r\n                format = this.get(\"dateFormat\", \"yyyy-MM-dd\");\r\n            }\r\n            // Init return value\r\n            var formatted;\r\n            // Cast?\r\n            // TODO: decide if we need to cast\r\n            var date = source;\r\n            // Is it a built-in format or Intl.DateTimeFormat\r\n            if ($type.isObject(format)) {\r\n                try {\r\n                    var locales = this.get(\"intlLocales\");\r\n                    if (locales) {\r\n                        return new Intl.DateTimeFormat(locales, format).format(date);\r\n                    }\r\n                    else {\r\n                        return new Intl.DateTimeFormat(undefined, format).format(date);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    return \"Invalid\";\r\n                }\r\n            }\r\n            // get format info (it will also deal with parser caching)\r\n            var info = this.parseFormat(format);\r\n            // Should we apply custom time zone?\r\n            var timezone = this._root.timezone;\r\n            if (timezone && !this._root.utc) {\r\n                date = timezone.convertLocal(date);\r\n            }\r\n            // Check if it's a valid date\r\n            if (!$type.isNumber(date.getTime())) {\r\n                // TODO translation\r\n                //return this._t(\"Invalid date\");\r\n                return \"Invalid date\";\r\n            }\r\n            // Apply format\r\n            formatted = this.applyFormat(date, info);\r\n            // Capitalize\r\n            if (this.get(\"capitalize\")) {\r\n                formatted = formatted.replace(/^.{1}/, formatted.substr(0, 1).toUpperCase());\r\n            }\r\n            // We're done\r\n            return formatted;\r\n        }\r\n    });\r\n    /**\r\n     * Applies format to Date.\r\n     *\r\n     * @param date      Date object\r\n     * @param info      Parsed format information\r\n     * @return Formatted date string\r\n     */\r\n    Object.defineProperty(DateFormatter.prototype, \"applyFormat\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (date, info) {\r\n            // Init return value\r\n            var res = info.template;\r\n            // Get values\r\n            var fullYear, month, weekday, day, hours, minutes, seconds, milliseconds, timestamp = date.getTime();\r\n            if (this._root.utc) {\r\n                fullYear = date.getUTCFullYear();\r\n                month = date.getUTCMonth();\r\n                weekday = date.getUTCDay();\r\n                day = date.getUTCDate();\r\n                hours = date.getUTCHours();\r\n                minutes = date.getUTCMinutes();\r\n                seconds = date.getUTCSeconds();\r\n                milliseconds = date.getUTCMilliseconds();\r\n            }\r\n            else {\r\n                fullYear = date.getFullYear();\r\n                month = date.getMonth();\r\n                weekday = date.getDay();\r\n                day = date.getDate();\r\n                hours = date.getHours();\r\n                minutes = date.getMinutes();\r\n                seconds = date.getSeconds();\r\n                milliseconds = date.getMilliseconds();\r\n            }\r\n            // Go through each part and format/replace it in template\r\n            for (var i = 0, len = info.parts.length; i < len; i++) {\r\n                var value = \"\";\r\n                switch (info.parts[i]) {\r\n                    case \"G\":\r\n                        value = this._t(fullYear < 0\r\n                            ? \"_era_bc\"\r\n                            : \"_era_ad\");\r\n                        break;\r\n                    case \"yyyy\":\r\n                        value = Math.abs(fullYear).toString();\r\n                        if (fullYear < 0) {\r\n                            value += this._t(\"_era_bc\");\r\n                        }\r\n                        break;\r\n                    case \"yyy\":\r\n                    case \"yy\":\r\n                    case \"y\":\r\n                        value = Math.abs(fullYear).toString().substr(-info.parts[i].length);\r\n                        if (fullYear < 0) {\r\n                            value += this._t(\"_era_bc\");\r\n                        }\r\n                        break;\r\n                    case \"YYYY\":\r\n                    case \"YYY\":\r\n                    case \"YY\":\r\n                    case \"Y\":\r\n                        var week = $utils.getWeek(date);\r\n                        var year = fullYear;\r\n                        if (week == 1 && (weekday > 4)) {\r\n                            year--;\r\n                        }\r\n                        if (info.parts[i] == \"YYYY\") {\r\n                            value = Math.abs(year).toString();\r\n                        }\r\n                        else {\r\n                            value = Math.abs(year).toString().substr(-info.parts[i].length);\r\n                        }\r\n                        if (year < 0) {\r\n                            value += this._t(\"_era_bc\");\r\n                        }\r\n                        break;\r\n                    case \"u\":\r\n                        // @todo\r\n                        break;\r\n                    case \"q\":\r\n                        value = \"\" + Math.ceil((date.getMonth() + 1) / 3);\r\n                        break;\r\n                    case \"MMMMM\":\r\n                        value = this._t(this._getMonth(month)).substr(0, 1);\r\n                        break;\r\n                    case \"MMMM\":\r\n                        value = this._t(this._getMonth(month));\r\n                        break;\r\n                    case \"MMM\":\r\n                        value = this._t(this._getShortMonth(month));\r\n                        break;\r\n                    case \"MM\":\r\n                        value = $utils.padString(month + 1, 2, \"0\");\r\n                        break;\r\n                    case \"M\":\r\n                        value = (month + 1).toString();\r\n                        break;\r\n                    case \"ww\":\r\n                        value = $utils.padString($utils.getWeek(date, this._root.utc), 2, \"0\");\r\n                        break;\r\n                    case \"w\":\r\n                        value = $utils.getWeek(date, this._root.utc).toString();\r\n                        break;\r\n                    case \"W\":\r\n                        value = $utils.getMonthWeek(date, this._root.utc).toString();\r\n                        break;\r\n                    case \"dd\":\r\n                        value = $utils.padString(day, 2, \"0\");\r\n                        break;\r\n                    case \"d\":\r\n                        value = day.toString();\r\n                        break;\r\n                    case \"DD\":\r\n                    case \"DDD\":\r\n                        value = $utils.padString($utils.getYearDay(date, this._root.utc).toString(), info.parts[i].length, \"0\");\r\n                        break;\r\n                    case \"D\":\r\n                        value = $utils.getYearDay(date, this._root.utc).toString();\r\n                        break;\r\n                    case \"F\":\r\n                        // @todo\r\n                        break;\r\n                    case \"g\":\r\n                        // @todo\r\n                        break;\r\n                    case \"t\":\r\n                        value = this._root.language.translateFunc(\"_dateOrd\").call(this, day);\r\n                        break;\r\n                    case \"E\":\r\n                        value = (weekday || 7).toString();\r\n                        break;\r\n                    case \"EE\":\r\n                        value = $utils.padString((weekday || 7).toString(), 2, \"0\");\r\n                        break;\r\n                    case \"EEE\":\r\n                    case \"eee\":\r\n                        value = this._t(this._getShortWeekday(weekday));\r\n                        break;\r\n                    case \"EEEE\":\r\n                    case \"eeee\":\r\n                        value = this._t(this._getWeekday(weekday));\r\n                        break;\r\n                    case \"EEEEE\":\r\n                    case \"eeeee\":\r\n                        value = this._t(this._getShortWeekday(weekday)).substr(0, 1);\r\n                        break;\r\n                    case \"e\":\r\n                    case \"ee\":\r\n                        value = (weekday - (this._root.locale.firstDayOfWeek || 1) + 1).toString();\r\n                        if (info.parts[i] == \"ee\") {\r\n                            value = $utils.padString(value, 2, \"0\");\r\n                        }\r\n                        break;\r\n                    case \"a\":\r\n                        if (hours >= 12) {\r\n                            value = this._t(\"PM\");\r\n                        }\r\n                        else {\r\n                            value = this._t(\"AM\");\r\n                        }\r\n                        break;\r\n                    case \"aa\":\r\n                        if (hours >= 12) {\r\n                            value = this._t(\"P.M.\");\r\n                        }\r\n                        else {\r\n                            value = this._t(\"A.M.\");\r\n                        }\r\n                        break;\r\n                    case \"aaa\":\r\n                        if (hours >= 12) {\r\n                            value = this._t(\"P\");\r\n                        }\r\n                        else {\r\n                            value = this._t(\"A\");\r\n                        }\r\n                        break;\r\n                    case \"h\":\r\n                        value = $utils.get12Hours(hours).toString();\r\n                        break;\r\n                    case \"hh\":\r\n                        value = $utils.padString($utils.get12Hours(hours), 2, \"0\");\r\n                        break;\r\n                    case \"H\":\r\n                        value = hours.toString();\r\n                        break;\r\n                    case \"HH\":\r\n                        value = $utils.padString(hours, 2, \"0\");\r\n                        break;\r\n                    case \"K\":\r\n                        value = $utils.get12Hours(hours, 0).toString();\r\n                        break;\r\n                    case \"KK\":\r\n                        value = $utils.padString($utils.get12Hours(hours, 0), 2, \"0\");\r\n                        break;\r\n                    case \"k\":\r\n                        value = (hours + 1).toString();\r\n                        break;\r\n                    case \"kk\":\r\n                        value = $utils.padString(hours + 1, 2, \"0\");\r\n                        break;\r\n                    case \"m\":\r\n                        value = minutes.toString();\r\n                        break;\r\n                    case \"mm\":\r\n                        value = $utils.padString(minutes, 2, \"0\");\r\n                        break;\r\n                    case \"s\":\r\n                        value = seconds.toString();\r\n                        break;\r\n                    case \"ss\":\r\n                        value = $utils.padString(seconds, 2, \"0\");\r\n                        break;\r\n                    case \"S\":\r\n                    case \"SS\":\r\n                    case \"SSS\":\r\n                        value = Math.round((milliseconds / 1000) * Math.pow(10, info.parts[i].length)).toString();\r\n                        break;\r\n                    case \"x\":\r\n                        value = timestamp.toString();\r\n                        break;\r\n                    case \"n\":\r\n                    case \"nn\":\r\n                    case \"nnn\":\r\n                        value = $utils.padString(milliseconds, info.parts[i].length, \"0\");\r\n                        break;\r\n                    case \"z\":\r\n                        value = $utils.getTimeZone(date, false, false, this._root.utc);\r\n                        break;\r\n                    case \"zz\":\r\n                        value = $utils.getTimeZone(date, true, false, this._root.utc);\r\n                        break;\r\n                    case \"zzz\":\r\n                        value = $utils.getTimeZone(date, false, true, this._root.utc);\r\n                        break;\r\n                    case \"zzzz\":\r\n                        value = $utils.getTimeZone(date, true, true, this._root.utc);\r\n                        break;\r\n                    case \"Z\":\r\n                    case \"ZZ\":\r\n                        var timezone = this._root.utc ? \"UTC\" : this._root.timezone;\r\n                        if (timezone instanceof Timezone) {\r\n                            timezone = timezone.name;\r\n                        }\r\n                        var offset = timezone ? $utils.getTimezoneOffset(timezone) : date.getTimezoneOffset();\r\n                        var tz = Math.abs(offset) / 60;\r\n                        var tzh = Math.floor(tz);\r\n                        var tzm = tz * 60 - tzh * 60;\r\n                        if (this._root.utc) {\r\n                            tzh = 0;\r\n                            tzm = 0;\r\n                        }\r\n                        if (info.parts[i] == \"Z\") {\r\n                            value = \"GMT\";\r\n                            value += offset > 0 ? \"-\" : \"+\";\r\n                            value += $utils.padString(tzh, 2) + \":\" + $utils.padString(tzm, 2);\r\n                        }\r\n                        else {\r\n                            value = offset > 0 ? \"-\" : \"+\";\r\n                            value += $utils.padString(tzh, 2) + $utils.padString(tzm, 2);\r\n                        }\r\n                        break;\r\n                    case \"i\":\r\n                        value = date.toISOString();\r\n                        break;\r\n                    case \"I\":\r\n                        value = date.toUTCString();\r\n                        break;\r\n                }\r\n                res = res.replace($type.PLACEHOLDER, value);\r\n            }\r\n            return res;\r\n        }\r\n    });\r\n    /**\r\n     * Parses format into structured infromation.\r\n     *\r\n     * @param format Format template\r\n     */\r\n    Object.defineProperty(DateFormatter.prototype, \"parseFormat\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (format) {\r\n            // Check cache\r\n            // TODO: implement caching of the parsed format\r\n            // Init format parse info holder\r\n            var info = {\r\n                \"template\": \"\",\r\n                \"parts\": []\r\n            };\r\n            // Let TextFormatter split into chunks\r\n            var chunks = TextFormatter.chunk(format, true);\r\n            for (var i = 0; i < chunks.length; i++) {\r\n                var chunk = chunks[i];\r\n                if (chunk.type === \"value\") {\r\n                    // Just \"Date\"?\r\n                    if (chunk.text.match(/^date$/i)) {\r\n                        var dateFormat = this.get(\"dateFormat\", \"yyyy-MM-dd\");\r\n                        if (!$type.isString(dateFormat)) {\r\n                            dateFormat = \"yyyy-MM-dd\";\r\n                        }\r\n                        chunk.text = dateFormat;\r\n                    }\r\n                    // Find all possible parts\r\n                    var matches = chunk.text.match(/G|yyyy|yyy|yy|y|YYYY|YYY|YY|Y|u|q|MMMMM|MMMM|MMM|MM|M|ww|w|W|dd|d|DDD|DD|D|F|g|EEEEE|EEEE|EEE|EE|E|eeeee|eeee|eee|ee|e|aaa|aa|a|hh|h|HH|H|KK|K|kk|k|mm|m|ss|s|SSS|SS|S|A|zzzz|zzz|zz|z|ZZ|Z|t|x|nnn|nn|n|i|I/g);\r\n                    // Found?\r\n                    if (matches) {\r\n                        // Populate template\r\n                        for (var x = 0; x < matches.length; x++) {\r\n                            info.parts.push(matches[x]);\r\n                            chunk.text = chunk.text.replace(matches[x], $type.PLACEHOLDER);\r\n                        }\r\n                    }\r\n                }\r\n                // Apply to template\r\n                info.template += chunk.text;\r\n            }\r\n            // Save cache\r\n            // TODO\r\n            return info;\r\n        }\r\n    });\r\n    Object.defineProperty(DateFormatter.prototype, \"_months\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            return [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n        }\r\n    });\r\n    Object.defineProperty(DateFormatter.prototype, \"_getMonth\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (index) {\r\n            return this._months()[index];\r\n        }\r\n    });\r\n    Object.defineProperty(DateFormatter.prototype, \"_shortMonths\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            return [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May(short)\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n        }\r\n    });\r\n    Object.defineProperty(DateFormatter.prototype, \"_getShortMonth\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (index) {\r\n            return this._shortMonths()[index];\r\n        }\r\n    });\r\n    Object.defineProperty(DateFormatter.prototype, \"_weekdays\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            return [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n        }\r\n    });\r\n    Object.defineProperty(DateFormatter.prototype, \"_getWeekday\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (index) {\r\n            return this._weekdays()[index];\r\n        }\r\n    });\r\n    Object.defineProperty(DateFormatter.prototype, \"_shortWeekdays\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            return [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n        }\r\n    });\r\n    Object.defineProperty(DateFormatter.prototype, \"_getShortWeekday\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (index) {\r\n            return this._shortWeekdays()[index];\r\n        }\r\n    });\r\n    Object.defineProperty(DateFormatter.prototype, \"parse\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (source, format) {\r\n            // Is it already a Date\r\n            if (source instanceof Date) {\r\n                return source;\r\n            }\r\n            // Is it a numeric timestamp\r\n            if ($type.isNumber(source)) {\r\n                return new Date(source);\r\n            }\r\n            // No? Let's check if it's string, and try converting to it if nec\r\n            if (!$type.isString(source)) {\r\n                source = source.toString();\r\n            }\r\n            // Init return value\r\n            var res;\r\n            // Init RegEx for parsing\r\n            var reg = \"\";\r\n            // Clean format\r\n            format = $utils.cleanFormat(format);\r\n            // Clip format to length of the source string\r\n            format = format.substr(0, source.length);\r\n            // Parse format\r\n            var info = this.parseFormat(format);\r\n            // Init parsed items holder\r\n            var parsedIndexes = {\r\n                \"year\": -1,\r\n                \"year3\": -1,\r\n                \"year2\": -1,\r\n                \"year1\": -1,\r\n                \"month\": -1,\r\n                \"monthShort\": -1,\r\n                \"monthLong\": -1,\r\n                \"weekdayShort\": -1,\r\n                \"weekdayLong\": -1,\r\n                \"day\": -1,\r\n                \"yearDay\": -1,\r\n                \"week\": -1,\r\n                \"hourBase0\": -1,\r\n                \"hour12Base0\": -1,\r\n                \"hourBase1\": -1,\r\n                \"hour12Base1\": -1,\r\n                \"minute\": -1,\r\n                \"second\": -1,\r\n                \"millisecond\": -1,\r\n                \"millisecondDigits\": -1,\r\n                \"am\": -1,\r\n                \"zone\": -1,\r\n                \"timestamp\": -1,\r\n                \"iso\": -1\r\n            };\r\n            // Init values\r\n            var resValues = {\r\n                \"year\": 1970,\r\n                \"month\": 0,\r\n                \"day\": 1,\r\n                \"hour\": 0,\r\n                \"minute\": 0,\r\n                \"second\": 0,\r\n                \"millisecond\": 0,\r\n                \"timestamp\": null,\r\n                \"offset\": 0,\r\n                \"utc\": this._root.utc\r\n            };\r\n            // Index adjuster\r\n            var indexAdjust = 0;\r\n            var index = 0;\r\n            // Iterate through all of the parts\r\n            for (var i = 0; i < info.parts.length; i++) {\r\n                // Set current match index\r\n                index = i + indexAdjust + 1;\r\n                switch (info.parts[i]) {\r\n                    case \"yyyy\":\r\n                    case \"YYYY\":\r\n                        reg += \"([0-9]{4})\";\r\n                        parsedIndexes.year = index;\r\n                        break;\r\n                    case \"yyy\":\r\n                    case \"YYY\":\r\n                        reg += \"([0-9]{3})\";\r\n                        parsedIndexes.year3 = index;\r\n                        break;\r\n                    case \"yy\":\r\n                    case \"YY\":\r\n                        reg += \"([0-9]{2})\";\r\n                        parsedIndexes.year2 = index;\r\n                        break;\r\n                    case \"y\":\r\n                    case \"Y\":\r\n                        reg += \"([0-9]{1})\";\r\n                        parsedIndexes.year1 = index;\r\n                        break;\r\n                    case \"MMMM\":\r\n                        reg += \"(\" + this.getStringList(this._months()).join(\"|\") + \")\";\r\n                        parsedIndexes.monthLong = index;\r\n                        break;\r\n                    case \"MMM\":\r\n                        reg += \"(\" + this.getStringList(this._shortMonths()).join(\"|\") + \")\";\r\n                        parsedIndexes.monthShort = index;\r\n                        break;\r\n                    case \"MM\":\r\n                    case \"M\":\r\n                        reg += \"([0-9]{2}|[0-9]{1})\";\r\n                        parsedIndexes.month = index;\r\n                        break;\r\n                    case \"ww\":\r\n                    case \"w\":\r\n                        reg += \"([0-9]{2}|[0-9]{1})\";\r\n                        parsedIndexes.week = index;\r\n                        break;\r\n                    case \"dd\":\r\n                    case \"d\":\r\n                        reg += \"([0-9]{2}|[0-9]{1})\";\r\n                        parsedIndexes.day = index;\r\n                        break;\r\n                    case \"DDD\":\r\n                    case \"DD\":\r\n                    case \"D\":\r\n                        reg += \"([0-9]{3}|[0-9]{2}|[0-9]{1})\";\r\n                        parsedIndexes.yearDay = index;\r\n                        break;\r\n                    case \"dddd\":\r\n                        reg += \"(\" + this.getStringList(this._weekdays()).join(\"|\") + \")\";\r\n                        parsedIndexes.weekdayLong = index;\r\n                        break;\r\n                    case \"ddd\":\r\n                        reg += \"(\" + this.getStringList(this._shortWeekdays()).join(\"|\") + \")\";\r\n                        parsedIndexes.weekdayShort = index;\r\n                        break;\r\n                    case \"aaa\":\r\n                    case \"aa\":\r\n                    case \"a\":\r\n                        // TODO: fix (escape regex)\r\n                        reg += \"(\" + this.getStringList([\"AM\", \"PM\", \"A\\.M\\.\", \"P\\.M\\.\", \"A\", \"P\"]).join(\"|\") + \")\";\r\n                        parsedIndexes.am = index;\r\n                        break;\r\n                    case \"hh\":\r\n                    case \"h\":\r\n                        reg += \"([0-9]{2}|[0-9]{1})\";\r\n                        parsedIndexes.hour12Base1 = index;\r\n                        break;\r\n                    case \"HH\":\r\n                    case \"H\":\r\n                        reg += \"([0-9]{2}|[0-9]{1})\";\r\n                        parsedIndexes.hourBase0 = index;\r\n                        break;\r\n                    case \"KK\":\r\n                    case \"K\":\r\n                        reg += \"([0-9]{2}|[0-9]{1})\";\r\n                        parsedIndexes.hour12Base0 = index;\r\n                        break;\r\n                    case \"kk\":\r\n                    case \"k\":\r\n                        reg += \"([0-9]{2}|[0-9]{1})\";\r\n                        parsedIndexes.hourBase1 = index;\r\n                        break;\r\n                    case \"mm\":\r\n                    case \"m\":\r\n                        reg += \"([0-9]{2}|[0-9]{1})\";\r\n                        parsedIndexes.minute = index;\r\n                        break;\r\n                    case \"ss\":\r\n                    case \"s\":\r\n                        reg += \"([0-9]{2}|[0-9]{1})\";\r\n                        parsedIndexes.second = index;\r\n                        break;\r\n                    case \"SSS\":\r\n                    case \"SS\":\r\n                    case \"S\":\r\n                        reg += \"([0-9]{3}|[0-9]{2}|[0-9]{1})\";\r\n                        parsedIndexes.millisecond = index;\r\n                        parsedIndexes.millisecondDigits = info.parts[i].length;\r\n                        break;\r\n                    case \"nnn\":\r\n                    case \"nn\":\r\n                    case \"n\":\r\n                        reg += \"([0-9]{3}|[0-9]{2}|[0-9]{1})\";\r\n                        parsedIndexes.millisecond = index;\r\n                        break;\r\n                    case \"x\":\r\n                        reg += \"([0-9]{1,})\";\r\n                        parsedIndexes.timestamp = index;\r\n                        break;\r\n                    case \"Z\":\r\n                        reg += \"GMT([-+]+[0-9]{2}:[0-9]{2})\";\r\n                        parsedIndexes.zone = index;\r\n                        break;\r\n                    case \"ZZ\":\r\n                        reg += \"([\\\\-+]+[0-9]{2}[0-9]{2})\";\r\n                        parsedIndexes.zone = index;\r\n                        break;\r\n                    case \"i\":\r\n                        reg += \"([0-9]{4})-?([0-9]{2})-?([0-9]{2})T?([0-9]{2}):?([0-9]{2}):?([0-9]{2})\\\\.?([0-9]{0,3})([zZ]|[+\\\\-][0-9]{2}:?[0-9]{2}|$)\";\r\n                        parsedIndexes.iso = index;\r\n                        indexAdjust += 7;\r\n                        break;\r\n                    case \"G\":\r\n                    case \"YYYY\":\r\n                    case \"YYY\":\r\n                    case \"YY\":\r\n                    case \"Y\":\r\n                    case \"MMMMM\":\r\n                    case \"W\":\r\n                    case \"EEEEE\":\r\n                    case \"EEEE\":\r\n                    case \"EEE\":\r\n                    case \"EE\":\r\n                    case \"E\":\r\n                    case \"eeeee\":\r\n                    case \"eeee\":\r\n                    case \"eee\":\r\n                    case \"ee\":\r\n                    case \"e\":\r\n                    case \"zzzz\":\r\n                    case \"zzz\":\r\n                    case \"zz\":\r\n                    case \"z\":\r\n                    case \"t\":\r\n                        // Ignore\r\n                        indexAdjust--;\r\n                        break;\r\n                }\r\n                reg += \"[^0-9]*\";\r\n            }\r\n            // Try matching\r\n            var regex = new RegExp(reg);\r\n            var matches = source.match(regex);\r\n            if (matches) {\r\n                // Populate the date object\r\n                // Full year\r\n                if (parsedIndexes.year > -1) {\r\n                    resValues.year = parseInt(matches[parsedIndexes.year]);\r\n                }\r\n                // 3-digit year\r\n                if (parsedIndexes.year3 > -1) {\r\n                    var val = parseInt(matches[parsedIndexes.year3]);\r\n                    val += 1000;\r\n                    resValues.year = val;\r\n                }\r\n                // 2-digit year\r\n                if (parsedIndexes.year2 > -1) {\r\n                    var val = parseInt(matches[parsedIndexes.year2]);\r\n                    if (val > 50) {\r\n                        val += 1000;\r\n                    }\r\n                    else {\r\n                        val += 2000;\r\n                    }\r\n                    resValues.year = val;\r\n                }\r\n                // 1-digit year\r\n                if (parsedIndexes.year1 > -1) {\r\n                    var val = parseInt(matches[parsedIndexes.year1]);\r\n                    val = Math.floor((new Date().getFullYear()) / 10) * 10 + val;\r\n                    resValues.year = val;\r\n                }\r\n                // Full month\r\n                if (parsedIndexes.monthLong > -1) {\r\n                    resValues.month = this.resolveMonth(matches[parsedIndexes.monthLong]);\r\n                }\r\n                // Short month\r\n                if (parsedIndexes.monthShort > -1) {\r\n                    resValues.month = this.resolveShortMonth(matches[parsedIndexes.monthShort]);\r\n                }\r\n                // Numeric month\r\n                if (parsedIndexes.month > -1) {\r\n                    resValues.month = parseInt(matches[parsedIndexes.month]) - 1;\r\n                }\r\n                // Weekday\r\n                // @todo\r\n                // Week\r\n                if ((parsedIndexes.week > -1) && (parsedIndexes.day === -1)) {\r\n                    // We parse weeks ONLY if day is not explicitly set\r\n                    // TODO: this needs work\r\n                    // (but maybe later - I can hardly imagine anyone passing their dates in weeks)\r\n                    resValues.month = 0;\r\n                    resValues.day = $utils.getDayFromWeek(parseInt(matches[parsedIndexes.week]), resValues.year, 1, this._root.utc);\r\n                }\r\n                // Day\r\n                if (parsedIndexes.day > -1) {\r\n                    resValues.day = parseInt(matches[parsedIndexes.day]);\r\n                }\r\n                // Year day\r\n                if (parsedIndexes.yearDay > -1) {\r\n                    resValues.month = 0;\r\n                    resValues.day = parseInt(matches[parsedIndexes.yearDay]);\r\n                }\r\n                // 24 Hour (0-23)\r\n                if (parsedIndexes.hourBase0 > -1) {\r\n                    resValues.hour = parseInt(matches[parsedIndexes.hourBase0]);\r\n                }\r\n                // 24 Hour (1-24)\r\n                if (parsedIndexes.hourBase1 > -1) {\r\n                    resValues.hour = parseInt(matches[parsedIndexes.hourBase1]) - 1;\r\n                }\r\n                // 12 Hour (0-11)\r\n                if (parsedIndexes.hour12Base0 > -1) {\r\n                    var val = parseInt(matches[parsedIndexes.hour12Base0]);\r\n                    if (val == 11) {\r\n                        val = 0;\r\n                    }\r\n                    if ((parsedIndexes.am > -1) && !this.isAm(matches[parsedIndexes.am])) {\r\n                        val += 12;\r\n                    }\r\n                    resValues.hour = val;\r\n                }\r\n                // 12 Hour (1-12)\r\n                if (parsedIndexes.hour12Base1 > -1) {\r\n                    var val = parseInt(matches[parsedIndexes.hour12Base1]);\r\n                    if (val == 12) {\r\n                        val = 0;\r\n                    }\r\n                    if ((parsedIndexes.am > -1) && !this.isAm(matches[parsedIndexes.am])) {\r\n                        val += 12;\r\n                    }\r\n                    resValues.hour = val;\r\n                }\r\n                // Minute\r\n                if (parsedIndexes.minute > -1) {\r\n                    resValues.minute = parseInt(matches[parsedIndexes.minute]);\r\n                }\r\n                // Second\r\n                if (parsedIndexes.second > -1) {\r\n                    resValues.second = parseInt(matches[parsedIndexes.second]);\r\n                }\r\n                // Millisecond\r\n                if (parsedIndexes.millisecond > -1) {\r\n                    var val = parseInt(matches[parsedIndexes.millisecond]);\r\n                    if (parsedIndexes.millisecondDigits == 2) {\r\n                        val *= 10;\r\n                    }\r\n                    else if (parsedIndexes.millisecondDigits == 1) {\r\n                        val *= 100;\r\n                    }\r\n                    resValues.millisecond = val;\r\n                }\r\n                // Timestamp\r\n                if (parsedIndexes.timestamp > -1) {\r\n                    resValues.timestamp = parseInt(matches[parsedIndexes.timestamp]);\r\n                    var ts = new Date(resValues.timestamp);\r\n                    resValues.year = ts.getUTCFullYear();\r\n                    resValues.month = ts.getUTCMonth();\r\n                    resValues.day = ts.getUTCDate();\r\n                    resValues.hour = ts.getUTCHours();\r\n                    resValues.minute = ts.getUTCMinutes();\r\n                    resValues.second = ts.getUTCSeconds();\r\n                    resValues.millisecond = ts.getUTCMilliseconds();\r\n                }\r\n                // Adjust time zone\r\n                if (parsedIndexes.zone > -1) {\r\n                    resValues.offset = this.resolveTimezoneOffset(new Date(resValues.year, resValues.month, resValues.day), matches[parsedIndexes.zone]);\r\n                }\r\n                // ISO\r\n                if (parsedIndexes.iso > -1) {\r\n                    resValues.year = $type.toNumber(matches[parsedIndexes.iso + 0]);\r\n                    resValues.month = $type.toNumber(matches[parsedIndexes.iso + 1]) - 1;\r\n                    resValues.day = $type.toNumber(matches[parsedIndexes.iso + 2]);\r\n                    resValues.hour = $type.toNumber(matches[parsedIndexes.iso + 3]);\r\n                    resValues.minute = $type.toNumber(matches[parsedIndexes.iso + 4]);\r\n                    resValues.second = $type.toNumber(matches[parsedIndexes.iso + 5]);\r\n                    resValues.millisecond = $type.toNumber(matches[parsedIndexes.iso + 6]);\r\n                    if (matches[parsedIndexes.iso + 7] == \"Z\" || matches[parsedIndexes.iso + 7] == \"z\") {\r\n                        resValues.utc = true;\r\n                    }\r\n                    else if (matches[parsedIndexes.iso + 7] != \"\") {\r\n                        resValues.offset = this.resolveTimezoneOffset(new Date(resValues.year, resValues.month, resValues.day), matches[parsedIndexes.iso + 7]);\r\n                    }\r\n                }\r\n                // Create Date object\r\n                if (resValues.utc) {\r\n                    res = new Date(Date.UTC(resValues.year, resValues.month, resValues.day, resValues.hour, resValues.minute, resValues.second, resValues.millisecond));\r\n                }\r\n                else {\r\n                    res = new Date(resValues.year, resValues.month, resValues.day, resValues.hour, resValues.minute + resValues.offset, resValues.second, resValues.millisecond);\r\n                }\r\n            }\r\n            else {\r\n                // Didn't match anything\r\n                // Let's try dropping it into Date constructor and hope for the best\r\n                res = new Date(source);\r\n            }\r\n            return res;\r\n        }\r\n    });\r\n    Object.defineProperty(DateFormatter.prototype, \"resolveTimezoneOffset\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (date, zone) {\r\n            var value = zone.match(/([+\\-]?)([0-9]{2}):?([0-9]{2})/);\r\n            if (value) {\r\n                var match = zone.match(/([+\\-]?)([0-9]{2}):?([0-9]{2})/);\r\n                var dir = match[1];\r\n                var hour = match[2];\r\n                var minute = match[3];\r\n                var offset = parseInt(hour) * 60 + parseInt(minute);\r\n                // Adjust offset\r\n                // Making it negative does not seem to make sense, but it's right\r\n                // because of how JavaScript calculates GMT offsets\r\n                if (dir == \"+\") {\r\n                    offset *= -1;\r\n                }\r\n                // Check the difference in offset\r\n                var originalOffset = (date || new Date()).getTimezoneOffset();\r\n                var diff = offset - originalOffset;\r\n                return diff;\r\n            }\r\n            return 0;\r\n        }\r\n    });\r\n    /**\r\n     * Resolves month name (i.e. \"December\") into a month number (11).\r\n     *\r\n     * @param value  Month name\r\n     * @return Month number\r\n     */\r\n    Object.defineProperty(DateFormatter.prototype, \"resolveMonth\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (value) {\r\n            // Let's try English first\r\n            var month = this._months().indexOf(value);\r\n            if (month > -1) {\r\n                return month;\r\n            }\r\n            // Try the translation\r\n            if (!this._root.language.isDefault()) {\r\n                month = this._root.language.translateAll(this._months()).indexOf(value);\r\n                if (month > -1) {\r\n                    return month;\r\n                }\r\n            }\r\n            return 0;\r\n        }\r\n    });\r\n    /**\r\n     * Resolves short month name (i.e. \"Dec\") into a month number.\r\n     *\r\n     * @param value  Short month name\r\n     * @return Month number\r\n     */\r\n    Object.defineProperty(DateFormatter.prototype, \"resolveShortMonth\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (value) {\r\n            // Let's try English first\r\n            var month = this._shortMonths().indexOf(value);\r\n            if (month > -1) {\r\n                return month;\r\n            }\r\n            // Maybe long month (workaround for May)\r\n            month = this._months().indexOf(value);\r\n            if (month > -1) {\r\n                return month;\r\n            }\r\n            // Try the translation\r\n            if (this._root.language && !this._root.language.isDefault()) {\r\n                month = this._root.language.translateAll(this._shortMonths()).indexOf(value);\r\n                if (month > -1) {\r\n                    return month;\r\n                }\r\n            }\r\n            return 0;\r\n        }\r\n    });\r\n    /**\r\n     * Checks if passed in string represents AM/PM notation in many of its\r\n     * versions.\r\n     *\r\n     * @param value  Source string\r\n     * @return Is it AM/PM?\r\n     */\r\n    Object.defineProperty(DateFormatter.prototype, \"isAm\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (value) {\r\n            var list = this.getStringList([\"AM\", \"A.M.\", \"A\"]);\r\n            return list.indexOf(value.toUpperCase()) > -1;\r\n        }\r\n    });\r\n    /**\r\n     * Translates list of strings.\r\n     *\r\n     * @param list  Source strings\r\n     * @return Translated strings\r\n     */\r\n    Object.defineProperty(DateFormatter.prototype, \"getStringList\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (list) {\r\n            var res = [];\r\n            for (var i = 0; i < list.length; i++) {\r\n                // translate?\r\n                if (this._root.language) {\r\n                    res.push($utils.escapeForRgex(this._t(list[i])));\r\n                }\r\n                else {\r\n                    res.push($utils.escapeForRgex(list[i]));\r\n                }\r\n            }\r\n            return res;\r\n        }\r\n    });\r\n    return DateFormatter;\r\n}(Entity));\r\nexport { DateFormatter };\r\n//# sourceMappingURL=DateFormatter.js.map","import { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport * as $array from \"./Array\";\r\n/**\r\n * A base class for disposable objects.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nvar DisposerClass = /** @class */ (function () {\r\n    /**\r\n     * Constructor.\r\n     */\r\n    function DisposerClass() {\r\n        /**\r\n         * Is object disposed?\r\n         */\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._disposed = false;\r\n    }\r\n    /**\r\n     * Checks if object is disposed.\r\n     *\r\n     * @return Disposed?\r\n     */\r\n    Object.defineProperty(DisposerClass.prototype, \"isDisposed\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            return this._disposed;\r\n        }\r\n    });\r\n    /**\r\n     * Disposes the object.\r\n     */\r\n    Object.defineProperty(DisposerClass.prototype, \"dispose\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            if (!this._disposed) {\r\n                this._disposed = true;\r\n                this._dispose();\r\n            }\r\n        }\r\n    });\r\n    return DisposerClass;\r\n}());\r\nexport { DisposerClass };\r\n/**\r\n * A class for creating an IDisposer.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nvar Disposer = /** @class */ (function () {\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param dispose  Function that disposes object\r\n     */\r\n    function Disposer(dispose) {\r\n        /**\r\n         * Is object disposed?\r\n         */\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Method that disposes the object.\r\n         */\r\n        Object.defineProperty(this, \"_dispose\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._disposed = false;\r\n        this._dispose = dispose;\r\n    }\r\n    /**\r\n     * Checks if object is disposed.\r\n     *\r\n     * @return Disposed?\r\n     */\r\n    Object.defineProperty(Disposer.prototype, \"isDisposed\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            return this._disposed;\r\n        }\r\n    });\r\n    /**\r\n     * Disposes the object.\r\n     */\r\n    Object.defineProperty(Disposer.prototype, \"dispose\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            if (!this._disposed) {\r\n                this._disposed = true;\r\n                this._dispose();\r\n            }\r\n        }\r\n    });\r\n    return Disposer;\r\n}());\r\nexport { Disposer };\r\n/**\r\n * This can be extended by other classes to add a `_disposers` property.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nvar ArrayDisposer = /** @class */ (function (_super) {\r\n    __extends(ArrayDisposer, _super);\r\n    function ArrayDisposer() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        Object.defineProperty(_this, \"_disposers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(ArrayDisposer.prototype, \"_dispose\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            $array.each(this._disposers, function (x) {\r\n                x.dispose();\r\n            });\r\n        }\r\n    });\r\n    return ArrayDisposer;\r\n}(DisposerClass));\r\nexport { ArrayDisposer };\r\n/**\r\n * A collection of related disposers that can be disposed in one go.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nvar MultiDisposer = /** @class */ (function (_super) {\r\n    __extends(MultiDisposer, _super);\r\n    function MultiDisposer(disposers) {\r\n        var _this = _super.call(this) || this;\r\n        Object.defineProperty(_this, \"_disposers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        _this._disposers = disposers;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(MultiDisposer.prototype, \"_dispose\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            $array.each(this._disposers, function (x) {\r\n                x.dispose();\r\n            });\r\n        }\r\n    });\r\n    return MultiDisposer;\r\n}(DisposerClass));\r\nexport { MultiDisposer };\r\n/**\r\n * A special kind of Disposer that has attached value set.\r\n *\r\n * If a new value is set using `set()` method, the old disposer value is\r\n * disposed.\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nvar MutableValueDisposer = /** @class */ (function (_super) {\r\n    __extends(MutableValueDisposer, _super);\r\n    function MutableValueDisposer() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Current disposer.\r\n         */\r\n        Object.defineProperty(_this, \"_disposer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Current value.\r\n         */\r\n        Object.defineProperty(_this, \"_value\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(MutableValueDisposer.prototype, \"_dispose\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            if (this._disposer != null) {\r\n                this._disposer.dispose();\r\n                this._disposer = undefined;\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * Returns current value.\r\n     *\r\n     * @return Value\r\n     */\r\n    Object.defineProperty(MutableValueDisposer.prototype, \"get\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            return this._value;\r\n        }\r\n    });\r\n    /**\r\n     * Sets value and disposes previous disposer if it was set.\r\n     *\r\n     * @param value     New value\r\n     * @param disposer  Disposer\r\n     */\r\n    Object.defineProperty(MutableValueDisposer.prototype, \"set\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (value, disposer) {\r\n            if (this._disposer != null) {\r\n                this._disposer.dispose();\r\n            }\r\n            this._disposer = disposer;\r\n            this._value = value;\r\n        }\r\n    });\r\n    /**\r\n     * Resets the disposer value.\r\n     */\r\n    Object.defineProperty(MutableValueDisposer.prototype, \"reset\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this.set(undefined, undefined);\r\n        }\r\n    });\r\n    return MutableValueDisposer;\r\n}(DisposerClass));\r\nexport { MutableValueDisposer };\r\n/**\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nvar CounterDisposer = /** @class */ (function (_super) {\r\n    __extends(CounterDisposer, _super);\r\n    function CounterDisposer() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * [_counter description]\r\n         *\r\n         * @todo Description\r\n         */\r\n        Object.defineProperty(_this, \"_counter\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        return _this;\r\n    }\r\n    /**\r\n     * [increment description]\r\n     *\r\n     * @todo Description\r\n     */\r\n    Object.defineProperty(CounterDisposer.prototype, \"increment\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            // TODO throw an error if it is disposed\r\n            ++this._counter;\r\n            // TODO make this more efficient\r\n            return new Disposer(function () {\r\n                --_this._counter;\r\n                if (_this._counter === 0) {\r\n                    _this.dispose();\r\n                }\r\n            });\r\n        }\r\n    });\r\n    return CounterDisposer;\r\n}(Disposer));\r\nexport { CounterDisposer };\r\n//# sourceMappingURL=Disposer.js.map","/** @ignore */ /** */\r\nimport * as $math from \"./Math\";\r\n/**\r\n * @ignore\r\n */\r\nexport function segmentedLine(display, segments) {\r\n    for (var s = 0, len = segments.length; s < len; s++) {\r\n        var groups = segments[s];\r\n        if (groups.length > 0) {\r\n            var firstGroup = groups[0];\r\n            if (firstGroup.length > 0) {\r\n                var firstPoint = firstGroup[0];\r\n                display.moveTo(firstPoint.x, firstPoint.y);\r\n                for (var g = 0, len_1 = groups.length; g < len_1; g++) {\r\n                    line(display, groups[g]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function line(display, points) {\r\n    for (var p = 0, len = points.length; p < len; p++) {\r\n        var point = points[p];\r\n        display.lineTo(point.x, point.y);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function moveTo(display, point) {\r\n    display.moveTo(point.x, point.y);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function clear(display) {\r\n    display.clear();\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function smoothedSegmentedline(display, segments, tensionX, tensionY) {\r\n    for (var s = 0, len = segments.length; s < len; s++) {\r\n        var groups = segments[s];\r\n        if (groups.length > 0) {\r\n            var firstGroup = groups[0];\r\n            if (firstGroup.length > 0) {\r\n                var firstPoint = firstGroup[0];\r\n                display.moveTo(firstPoint.x, firstPoint.y);\r\n                for (var g = 0, len_2 = groups.length; g < len_2; g++) {\r\n                    var points = groups[g];\r\n                    if (points.length > 0) {\r\n                        display.lineTo(points[0].x, points[0].y);\r\n                    }\r\n                    smoothedLine(display, points, tensionX, tensionY);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function smoothedLine(display, points, tensionX, tensionY) {\r\n    for (var i = points.length - 1; i > 0; i--) {\r\n        var p0 = points[i];\r\n        var p1 = points[i - 1];\r\n        if (Math.abs(p0.x - p1.x) < 0.1 && Math.abs(p0.y - p1.y) < 0.1) {\r\n            points.splice(i - 1, 1);\r\n        }\r\n    }\r\n    if (points.length < 3 || (tensionX >= 1 && tensionY >= 1)) {\r\n        line(display, points);\r\n        return;\r\n    }\r\n    tensionX = 1 - tensionX + 0.00001;\r\n    tensionY = 1 - tensionY + 0.00001;\r\n    var first = points[0];\r\n    var last = points[points.length - 1];\r\n    var closed = false;\r\n    if ($math.round(first.x, 3) == $math.round(last.x) && $math.round(first.y) == $math.round(last.y)) {\r\n        closed = true;\r\n    }\r\n    // Can't moveTo here, as it wont be possible to have fill then.\r\n    var path = \"\";\r\n    for (var i = 0, len = points.length - 1; i < len; i++) {\r\n        var p0 = points[i - 1];\r\n        var p1 = points[i];\r\n        var p2 = points[i + 1];\r\n        var p3 = points[i + 2];\r\n        if (i === 0) {\r\n            if (closed) {\r\n                p0 = points[len - 2];\r\n            }\r\n            else {\r\n                p0 = points[0];\r\n            }\r\n        }\r\n        else if (i == len - 1) {\r\n            if (closed) {\r\n                p3 = points[1];\r\n            }\r\n            else {\r\n                p3 = p2;\r\n            }\r\n        }\r\n        var controlPointA = $math.getCubicControlPointA(p0, p1, p2, tensionX, tensionY);\r\n        var controlPointB = $math.getCubicControlPointB(p1, p2, p3, tensionX, tensionY);\r\n        display.bezierCurveTo(controlPointA.x, controlPointA.y, controlPointB.x, controlPointB.y, p2.x, p2.y);\r\n    }\r\n    return path;\r\n}\r\n//# sourceMappingURL=Draw.js.map","import { __extends } from \"tslib\";\r\nimport { Entity } from \"./Entity\";\r\nimport { TextFormatter } from \"./TextFormatter\";\r\nimport * as $object from \"./Object\";\r\nimport * as $utils from \"./Utils\";\r\nimport * as $type from \"./Type\";\r\n/**\r\n * A class used to format numberic values as time duration.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-durations/} for more info\r\n */\r\nvar DurationFormatter = /** @class */ (function (_super) {\r\n    __extends(DurationFormatter, _super);\r\n    function DurationFormatter() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Collection of aliases for units.\r\n         */\r\n        Object.defineProperty(_this, \"_unitAliases\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {\r\n                \"Y\": \"y\",\r\n                \"D\": \"d\",\r\n                \"H\": \"h\",\r\n                \"K\": \"h\",\r\n                \"k\": \"h\",\r\n                \"n\": \"S\"\r\n            }\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(DurationFormatter.prototype, \"_setDefaults\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var dmillisecond = \"_duration_millisecond\";\r\n            var dsecond = \"_duration_second\";\r\n            var dminute = \"_duration_minute\";\r\n            var dhour = \"_duration_hour\";\r\n            var dday = \"_duration_day\";\r\n            var dweek = \"_duration_week\";\r\n            var dmonth = \"_duration_month\";\r\n            var dyear = \"_duration_year\";\r\n            var asecond = \"_second\";\r\n            var aminute = \"_minute\";\r\n            var ahour = \"_hour\";\r\n            var aday = \"_day\";\r\n            var aweek = \"_week\";\r\n            var amonth = \"_week\";\r\n            var ayear = \"_year\";\r\n            // Defaults\r\n            this._setDefault(\"negativeBase\", 0);\r\n            this._setDefault(\"baseUnit\", \"second\");\r\n            this._setDefault(\"durationFormats\", {\r\n                \"millisecond\": {\r\n                    \"millisecond\": this._t(dmillisecond),\r\n                    \"second\": this._t((dmillisecond + asecond)),\r\n                    \"minute\": this._t((dmillisecond + aminute)),\r\n                    \"hour\": this._t((dmillisecond + ahour)),\r\n                    \"day\": this._t((dmillisecond + aday)),\r\n                    \"week\": this._t((dmillisecond + aweek)),\r\n                    \"month\": this._t((dmillisecond + amonth)),\r\n                    \"year\": this._t((dmillisecond + ayear))\r\n                },\r\n                \"second\": {\r\n                    \"second\": this._t((dsecond)),\r\n                    \"minute\": this._t((dsecond + aminute)),\r\n                    \"hour\": this._t((dsecond + ahour)),\r\n                    \"day\": this._t((dsecond + aday)),\r\n                    \"week\": this._t((dsecond + aweek)),\r\n                    \"month\": this._t((dsecond + amonth)),\r\n                    \"year\": this._t((dsecond + ayear))\r\n                },\r\n                \"minute\": {\r\n                    \"minute\": this._t((dminute)),\r\n                    \"hour\": this._t((dminute + ahour)),\r\n                    \"day\": this._t((dminute + aday)),\r\n                    \"week\": this._t((dminute + aweek)),\r\n                    \"month\": this._t((dminute + amonth)),\r\n                    \"year\": this._t((dminute + ayear))\r\n                },\r\n                \"hour\": {\r\n                    \"hour\": this._t((dhour)),\r\n                    \"day\": this._t((dhour + aday)),\r\n                    \"week\": this._t((dhour + aweek)),\r\n                    \"month\": this._t((dhour + amonth)),\r\n                    \"year\": this._t((dhour + ayear))\r\n                },\r\n                \"day\": {\r\n                    \"day\": this._t((dday)),\r\n                    \"week\": this._t((dday + aweek)),\r\n                    \"month\": this._t((dday + amonth)),\r\n                    \"year\": this._t((dday + ayear))\r\n                },\r\n                \"week\": {\r\n                    \"week\": this._t((dweek)),\r\n                    \"month\": this._t((dweek + amonth)),\r\n                    \"year\": this._t((dweek + ayear))\r\n                },\r\n                \"month\": {\r\n                    \"month\": this._t((dmonth)),\r\n                    \"year\": this._t((dmonth + ayear))\r\n                },\r\n                \"year\": {\r\n                    \"year\": this._t(dyear)\r\n                }\r\n            });\r\n            _super.prototype._setDefaults.call(this);\r\n        }\r\n    });\r\n    Object.defineProperty(DurationFormatter.prototype, \"_beforeChanged\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._beforeChanged.call(this);\r\n        }\r\n    });\r\n    /**\r\n     * Formats the number as duration.\r\n     *\r\n     * For example `1000` (base unit seconds) would be converted to `16:40` as in\r\n     * 16 minutes and 40 seconds.\r\n     *\r\n     * @param value   Value to format\r\n     * @param format  Format to apply\r\n     * @param base    Override base unit\r\n     * @return Formatted number\r\n     */\r\n    Object.defineProperty(DurationFormatter.prototype, \"format\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (value, format, base) {\r\n            // no base unit?\r\n            var baseUnit = base || this.get(\"baseUnit\");\r\n            // no format passed in or empty\r\n            if (typeof format === \"undefined\" || format === \"\") {\r\n                if (this.get(\"durationFormat\") != null) {\r\n                    format = this.get(\"durationFormat\");\r\n                }\r\n                else {\r\n                    format = this.getFormat($type.toNumber(value), undefined, baseUnit);\r\n                }\r\n            }\r\n            // Clean format\r\n            format = $utils.cleanFormat(format);\r\n            // get format info (it will also deal with parser caching)\r\n            var info = this.parseFormat(format, baseUnit);\r\n            // cast to number just in case\r\n            // TODO: maybe use better casting\r\n            var source = Number(value);\r\n            // format and replace the number\r\n            var details;\r\n            if (source > this.get(\"negativeBase\")) {\r\n                details = info.positive;\r\n            }\r\n            else if (source < this.get(\"negativeBase\")) {\r\n                details = info.negative;\r\n            }\r\n            else {\r\n                details = info.zero;\r\n            }\r\n            // Format\r\n            var formatted = this.applyFormat(source, details);\r\n            // Apply color?\r\n            if (details.color !== \"\") {\r\n                formatted = \"[\" + details.color + \"]\" + formatted + \"[/]\";\r\n            }\r\n            return formatted;\r\n        }\r\n    });\r\n    /**\r\n     * Parses supplied format into structured object which can be used to format\r\n     * the number.\r\n     *\r\n     * @param format  Format string, i.e. \"#,###.00\"\r\n     * @param base    Override base unit\r\n     * @return Parsed information\r\n     */\r\n    Object.defineProperty(DurationFormatter.prototype, \"parseFormat\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (format, base) {\r\n            // Check cache\r\n            // TODO\r\n            // let cached = this.getCache(format);\r\n            // if (cached != null) {\r\n            // \treturn cached;\r\n            // }\r\n            var _this = this;\r\n            // no base unit?\r\n            var baseUnit = base || this.get(\"baseUnit\");\r\n            // Initialize duration parsing info\r\n            var info = {\r\n                \"positive\": {\r\n                    \"color\": \"\",\r\n                    \"template\": \"\",\r\n                    \"parts\": [],\r\n                    \"source\": \"\",\r\n                    \"baseUnit\": baseUnit,\r\n                    \"parsed\": false,\r\n                    \"absolute\": false\r\n                },\r\n                \"negative\": {\r\n                    \"color\": \"\",\r\n                    \"template\": \"\",\r\n                    \"parts\": [],\r\n                    \"source\": \"\",\r\n                    \"baseUnit\": baseUnit,\r\n                    \"parsed\": false,\r\n                    \"absolute\": false\r\n                },\r\n                \"zero\": {\r\n                    \"color\": \"\",\r\n                    \"template\": \"\",\r\n                    \"parts\": [],\r\n                    \"source\": \"\",\r\n                    \"baseUnit\": baseUnit,\r\n                    \"parsed\": false,\r\n                    \"absolute\": false\r\n                }\r\n            };\r\n            // Escape double vertical bars (that mean display one vertical bar)\r\n            format = format.replace(\"||\", $type.PLACEHOLDER2);\r\n            // Split it up and deal with different formats\r\n            var parts = format.split(\"|\");\r\n            info.positive.source = parts[0];\r\n            if (typeof parts[2] === \"undefined\") {\r\n                info.zero = info.positive;\r\n            }\r\n            else {\r\n                info.zero.source = parts[2];\r\n            }\r\n            if (typeof parts[1] === \"undefined\") {\r\n                info.negative = info.positive;\r\n            }\r\n            else {\r\n                info.negative.source = parts[1];\r\n            }\r\n            // Parse each\r\n            $object.each(info, function (_part, item) {\r\n                // Already parsed\r\n                if (item.parsed) {\r\n                    return;\r\n                }\r\n                // Check cached\r\n                // TODO\r\n                // if (typeof this.getCache(item.source) !== \"undefined\") {\r\n                // \tinfo[part] = this.getCache(item.source);\r\n                // \treturn;\r\n                // }\r\n                // Begin parsing\r\n                var partFormat = item.source;\r\n                // Check for [] directives\r\n                var dirs = [];\r\n                dirs = item.source.match(/^\\[([^\\]]*)\\]/);\r\n                if (dirs && dirs.length && dirs[0] !== \"\") {\r\n                    partFormat = item.source.substr(dirs[0].length);\r\n                    item.color = dirs[1];\r\n                }\r\n                // Let TextFormatter split into chunks\r\n                var chunks = TextFormatter.chunk(partFormat, true);\r\n                for (var i = 0; i < chunks.length; i++) {\r\n                    var chunk = chunks[i];\r\n                    // replace back double vertical bar\r\n                    chunk.text = chunk.text.replace($type.PLACEHOLDER2, \"|\");\r\n                    if (chunk.type === \"value\") {\r\n                        // Just \"Duration\"?\r\n                        // if (chunk.text.toLowerCase() === \"duration\") {\r\n                        // \tchunk.text = durationFormat;\r\n                        // }\r\n                        // Check for \"a\" (absolute) modifier\r\n                        if (chunk.text.match(/[yYMdDwhHKkmsSn]+a/)) {\r\n                            item.absolute = true;\r\n                            chunk.text = chunk.text.replace(/([yYMdDwhHKkmsSn]+)a/, \"$1\");\r\n                        }\r\n                        // Find all possible parts\r\n                        var matches = chunk.text.match(/y+|Y+|M+|d+|D+|w+|h+|H+|K+|k+|m+|s+|S+|n+/g);\r\n                        if (matches) {\r\n                            // Populate template\r\n                            for (var x = 0; x < matches.length; x++) {\r\n                                // Is it an alias?\r\n                                if (matches[x] == null) {\r\n                                    matches[x] = _this._unitAliases[matches[x]];\r\n                                }\r\n                                item.parts.push(matches[x]);\r\n                                chunk.text = chunk.text.replace(matches[x], $type.PLACEHOLDER);\r\n                            }\r\n                        }\r\n                    }\r\n                    // Apply to template\r\n                    item.template += chunk.text;\r\n                }\r\n                // Apply style formatting\r\n                //item.template = TextFormatter.format(item.template, this.outputFormat);\r\n                // Save cache\r\n                // TODO\r\n                //this.setCache(item.source, item);\r\n                // Mark this as parsed\r\n                item.parsed = true;\r\n            });\r\n            // Save cache (the whole thing)\r\n            // TODO\r\n            //this.setCache(format, info);\r\n            return info;\r\n        }\r\n    });\r\n    /**\r\n     * Applies parsed format to a numeric value.\r\n     *\r\n     * @param value    Value\r\n     * @param details  Parsed format as returned by {parseFormat}\r\n     * @return Formatted duration\r\n     */\r\n    Object.defineProperty(DurationFormatter.prototype, \"applyFormat\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (value, details) {\r\n            // Use absolute values\r\n            var negative = !details.absolute && (value < this.get(\"negativeBase\"));\r\n            value = Math.abs(value);\r\n            // Recalculate to milliseconds\r\n            var tstamp = this.toTimeStamp(value, details.baseUnit);\r\n            // Init return value\r\n            var res = details.template;\r\n            // Iterate through duration parts\r\n            for (var i = 0, len = details.parts.length; i < len; i++) {\r\n                // Gather the part\r\n                var part = details.parts[i];\r\n                var unit = this._toTimeUnit(part.substr(0, 1));\r\n                var digits = part.length;\r\n                // Calculate current unit value\r\n                var ints = Math.floor(tstamp / this._getUnitValue(unit));\r\n                res = res.replace($type.PLACEHOLDER, $utils.padString(ints, digits, \"0\"));\r\n                // Reduce timestamp\r\n                tstamp -= ints * this._getUnitValue(unit);\r\n            }\r\n            // Reapply negative sign\r\n            if (negative) {\r\n                res = \"-\" + res;\r\n            }\r\n            return res;\r\n        }\r\n    });\r\n    /**\r\n     * Converts numeric value to timestamp in milliseconds.\r\n     *\r\n     * @param value     A source value\r\n     * @param baseUnit  Base unit the source value is in: \"q\", \"s\", \"i\", \"h\", \"d\", \"w\", \"m\", \"y\"\r\n     * @return Value representation as a timestamp in milliseconds\r\n     */\r\n    Object.defineProperty(DurationFormatter.prototype, \"toTimeStamp\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (value, baseUnit) {\r\n            return value * this._getUnitValue(baseUnit);\r\n        }\r\n    });\r\n    Object.defineProperty(DurationFormatter.prototype, \"_toTimeUnit\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (code) {\r\n            switch (code) {\r\n                case \"S\":\r\n                    return \"millisecond\";\r\n                case \"s\":\r\n                    return \"second\";\r\n                case \"m\":\r\n                    return \"minute\";\r\n                case \"h\":\r\n                    return \"hour\";\r\n                case \"d\":\r\n                    return \"day\";\r\n                case \"w\":\r\n                    return \"week\";\r\n                case \"M\":\r\n                    return \"month\";\r\n                case \"y\":\r\n                    return \"year\";\r\n            }\r\n            ;\r\n        }\r\n    });\r\n    /**\r\n     * Returns appropriate default format for the value.\r\n     *\r\n     * If `maxValue` is sepcified, it will use that value to determine the time\r\n     * unit for the format.\r\n     *\r\n     * For example if your `baseUnit` is `\"second\"` and you pass in `10`, you\r\n     * will get `\"10\"`.\r\n     *\r\n     * However, you might want it to be formatted in the context of bigger scale,\r\n     * say 10 minutes (600 seconds). If you pass in `600` as `maxValue`, all\r\n     * values, including small ones will use format with minutes, e.g.:\r\n     * `00:10`, `00:50`, `12: 30`, etc.\r\n     *\r\n     * @param value     Value to format\r\n     * @param maxValue  Maximum value to be used to determine format\r\n     * @param baseUnit  Base unit of the value\r\n     * @return Format\r\n     */\r\n    Object.defineProperty(DurationFormatter.prototype, \"getFormat\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (value, maxValue, baseUnit) {\r\n            // Is format override set?\r\n            if (this.get(\"durationFormat\") != null) {\r\n                return this.get(\"durationFormat\");\r\n            }\r\n            // Get base unit\r\n            if (!baseUnit) {\r\n                baseUnit = this.get(\"baseUnit\");\r\n            }\r\n            if (maxValue != null && value != maxValue) {\r\n                value = Math.abs(value);\r\n                maxValue = Math.abs(maxValue);\r\n                var maxUnit = this.getValueUnit(Math.max(value, maxValue), baseUnit);\r\n                //let diffUnit = this.getValueUnit(Math.abs(maxValue - value), baseUnit);\r\n                //console.log(maxUnit, diffUnit);\r\n                return this.get(\"durationFormats\")[baseUnit][maxUnit];\r\n            }\r\n            else {\r\n                var unit = this.getValueUnit(value, baseUnit);\r\n                return this.get(\"durationFormats\")[baseUnit][unit];\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * Returns value's closest denominator time unit, e.g 100 seconds is\r\n     * `\"minute\"`, while 59 seconds would still be `second`.\r\n     *\r\n     * @param value     Source duration value\r\n     * @param baseUnit  Base unit\r\n     * @return Denominator\r\n     */\r\n    Object.defineProperty(DurationFormatter.prototype, \"getValueUnit\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (value, baseUnit) {\r\n            // Get base unit\r\n            if (!baseUnit) {\r\n                baseUnit = this.get(\"baseUnit\");\r\n            }\r\n            // Convert to milliseconds\r\n            var currentUnit;\r\n            var ms = this.getMilliseconds(value, baseUnit);\r\n            $object.eachContinue(this._getUnitValues(), function (key, val) {\r\n                if (key == baseUnit || currentUnit) {\r\n                    var num = ms / val;\r\n                    if (num <= 1) {\r\n                        if (!currentUnit) {\r\n                            currentUnit = key;\r\n                        }\r\n                        return false;\r\n                    }\r\n                    currentUnit = key;\r\n                }\r\n                return true;\r\n            });\r\n            return currentUnit;\r\n        }\r\n    });\r\n    /**\r\n     * Converts value to milliseconds according to `baseUnit`.\r\n     *\r\n     * @param value     Source duration value\r\n     * @param baseUnit  Base unit\r\n     * @return Value in milliseconds\r\n     */\r\n    Object.defineProperty(DurationFormatter.prototype, \"getMilliseconds\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (value, baseUnit) {\r\n            // Get base unit\r\n            if (!baseUnit) {\r\n                baseUnit = this.get(\"baseUnit\");\r\n            }\r\n            return value * this._getUnitValue(baseUnit);\r\n        }\r\n    });\r\n    Object.defineProperty(DurationFormatter.prototype, \"_getUnitValue\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (timeUnit) {\r\n            return this._getUnitValues()[timeUnit];\r\n        }\r\n    });\r\n    Object.defineProperty(DurationFormatter.prototype, \"_getUnitValues\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            return {\r\n                \"millisecond\": 1,\r\n                \"second\": 1000,\r\n                \"minute\": 60000,\r\n                \"hour\": 3600000,\r\n                \"day\": 86400000,\r\n                \"week\": 604800000,\r\n                \"month\": 2592000000,\r\n                \"year\": 31536000000,\r\n            };\r\n        }\r\n    });\r\n    return DurationFormatter;\r\n}(Entity));\r\nexport { DurationFormatter };\r\n//# sourceMappingURL=DurationFormatter.js.map","/**\r\n * A collection of easing functions\r\n *\r\n * Parts of this collection are taken from D3.js library (https://d3js.org/)\r\n */\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport * as $math from \"./Math\";\r\n/**\r\n * The functions below are from D3.js library (https://d3js.org/)\r\n *\r\n * ----------------------------------------------------------------------------\r\n * Copyright 2017 Mike Bostock\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright notice,\r\n *\tthis list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n *\tthis list of conditions and the following disclaimer in the documentation\r\n *\tand/or other materials provided with the distribution.\r\n *\r\n * 3. Neither the name of the copyright holder nor the names of its\r\n *\tcontributors may be used to endorse or promote products derived from this\r\n *\tsoftware without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n * ----------------------------------------------------------------------------\r\n * @hidden\r\n */\r\n/**\r\n */\r\nexport function linear(t) {\r\n    return t;\r\n}\r\nexport function quad(t) {\r\n    return t * t;\r\n}\r\nexport function cubic(t) {\r\n    return t * t * t;\r\n}\r\nexport function pow(t, e) {\r\n    return Math.pow(t, e);\r\n}\r\nexport function exp(t) {\r\n    return Math.pow(2, 10 * t - 10);\r\n}\r\nexport function sine(t) {\r\n    return 1 - Math.cos(t * $math.HALFPI);\r\n}\r\nexport function circle(t) {\r\n    return 1 - Math.sqrt(1 - t * t);\r\n}\r\n/**\r\n * ============================================================================\r\n * TRANSFORMERS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n */\r\nexport function yoyo(ease) {\r\n    return function (t) {\r\n        if (t < 0.5) {\r\n            return ease(t * 2.0);\r\n        }\r\n        else {\r\n            return ease((1.0 - t) * 2.0);\r\n        }\r\n    };\r\n}\r\nexport function out(ease) {\r\n    return function (t) {\r\n        return 1.0 - ease(1.0 - t);\r\n    };\r\n}\r\nexport function inOut(ease) {\r\n    return function (t) {\r\n        if (t <= 0.5) {\r\n            return ease(t * 2.0) / 2.0;\r\n        }\r\n        else {\r\n            return 1.0 - (ease((1.0 - t) * 2.0) / 2.0);\r\n        }\r\n    };\r\n}\r\n/**\r\n * ============================================================================\r\n * BOUNCE\r\n * ============================================================================\r\n * @hidden\r\n */\r\nvar b1 = 4 / 11, b2 = 6 / 11, b3 = 8 / 11, b4 = 3 / 4, b5 = 9 / 11, b6 = 10 / 11, b7 = 15 / 16, b8 = 21 / 22, b9 = 63 / 64, b0 = 1 / b1 / b1;\r\nexport function bounce(t) {\r\n    return 1 - bounceOut(1 - t);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction bounceOut(t) {\r\n    t = t;\r\n    if (t < b1) {\r\n        return b0 * t * t;\r\n    }\r\n    else if (t < b3) {\r\n        return b0 * (t -= b2) * t + b4;\r\n    }\r\n    else if (t < b6) {\r\n        return b0 * (t -= b5) * t + b7;\r\n    }\r\n    else {\r\n        return b0 * (t -= b8) * t + b9;\r\n    }\r\n}\r\n/**\r\n * ============================================================================\r\n * ELASTIC\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * @ignore\r\n */\r\nvar tau = 2 * Math.PI;\r\n/**\r\n * @ignore\r\n */\r\nvar amplitude = 1;\r\n/**\r\n * @ignore\r\n */\r\nvar period = 0.3 / tau;\r\n/**\r\n * @ignore\r\n */\r\nvar s = Math.asin(1 / amplitude) * period;\r\nexport function elastic(t) {\r\n    var v = t;\r\n    return amplitude * Math.pow(2, 10 * --v) * Math.sin((s - v) / period);\r\n}\r\n//# sourceMappingURL=Ease.js.map","import { __extends, __read, __spreadArray } from \"tslib\";\r\nimport { Disposer } from \"./Disposer\";\r\nimport { EventDispatcher } from \"./EventDispatcher\";\r\nimport { getInterpolate } from \"./Animation\";\r\nimport { States } from \"./States\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $object from \"./Object\";\r\nimport * as $ease from \"./Ease\";\r\nimport * as $array from \"./Array\";\r\nimport * as $order from \"./Order\";\r\n/**\r\n * Allows to dynamically modify setting value of its target element.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/adapters/} for more info\r\n */\r\nvar Adapters = /** @class */ (function () {\r\n    function Adapters(entity) {\r\n        Object.defineProperty(this, \"_entity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_callbacks\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_disabled\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        this._entity = entity;\r\n    }\r\n    /**\r\n     * Add a function (`callback`) that will modify value for setting `key`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/adapters/} for more info\r\n     */\r\n    Object.defineProperty(Adapters.prototype, \"add\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key, callback) {\r\n            var _this = this;\r\n            var callbacks = this._callbacks[key];\r\n            if (callbacks === undefined) {\r\n                callbacks = this._callbacks[key] = [];\r\n            }\r\n            callbacks.push(callback);\r\n            this._entity._markDirtyKey(key);\r\n            return new Disposer(function () {\r\n                if ($array.removeFirst(callbacks, callback)) {\r\n                    _this._entity._markDirtyKey(key);\r\n                }\r\n            });\r\n        }\r\n    });\r\n    /**\r\n     * Removes all adapters for the specific key.\r\n     *\r\n     * @since 5.1.0\r\n     */\r\n    Object.defineProperty(Adapters.prototype, \"remove\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key) {\r\n            var callbacks = this._callbacks[key];\r\n            if (callbacks !== undefined) {\r\n                delete this._callbacks[key];\r\n                if (callbacks.length !== 0) {\r\n                    this._entity._markDirtyKey(key);\r\n                }\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * Enables (previously disabled) adapters for specific key.\r\n     *\r\n     * @since 5.1.0\r\n     */\r\n    Object.defineProperty(Adapters.prototype, \"enable\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key) {\r\n            if (this._disabled[key]) {\r\n                delete this._disabled[key];\r\n                this._entity._markDirtyKey(key);\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * Disables all adapters for specific key.\r\n     *\r\n     * @since 5.1.0\r\n     */\r\n    Object.defineProperty(Adapters.prototype, \"disable\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key) {\r\n            if (!this._disabled[key]) {\r\n                this._disabled[key] = true;\r\n                this._entity._markDirtyKey(key);\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(Adapters.prototype, \"fold\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key, value) {\r\n            if (!this._disabled[key]) {\r\n                var callbacks = this._callbacks[key];\r\n                if (callbacks !== undefined) {\r\n                    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n                        value = callbacks[i](value, this._entity, key);\r\n                    }\r\n                }\r\n            }\r\n            return value;\r\n        }\r\n    });\r\n    return Adapters;\r\n}());\r\nexport { Adapters };\r\n/**\r\n * Animation object.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/} for more info\r\n */\r\nvar Animation = /** @class */ (function () {\r\n    function Animation(animation, from, to, duration, easing, loops, startingTime) {\r\n        Object.defineProperty(this, \"_animation\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_from\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_to\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_duration\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_easing\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_loops\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_interpolate\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_oldTime\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_time\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_stopped\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_playing\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new EventDispatcher()\r\n        });\r\n        this._animation = animation;\r\n        this._from = from;\r\n        this._to = to;\r\n        this._duration = duration;\r\n        this._easing = easing;\r\n        this._loops = loops;\r\n        this._interpolate = getInterpolate(from, to);\r\n        this._oldTime = startingTime;\r\n    }\r\n    Object.defineProperty(Animation.prototype, \"to\", {\r\n        get: function () {\r\n            return this._to;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Animation.prototype, \"from\", {\r\n        get: function () {\r\n            return this._from;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Animation.prototype, \"playing\", {\r\n        get: function () {\r\n            return this._playing;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Animation.prototype, \"stopped\", {\r\n        get: function () {\r\n            return this._stopped;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Animation.prototype, \"stop\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            if (!this._stopped) {\r\n                this._stopped = true;\r\n                this._playing = false;\r\n                if (this.events.isEnabled(\"stopped\")) {\r\n                    this.events.dispatch(\"stopped\", {\r\n                        type: \"stopped\",\r\n                        target: this,\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Animation.prototype, \"pause\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this._playing = false;\r\n            this._oldTime = null;\r\n        }\r\n    });\r\n    Object.defineProperty(Animation.prototype, \"play\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            if (!this._stopped && !this._playing) {\r\n                this._playing = true;\r\n                this._animation._startAnimation();\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Animation.prototype, \"percentage\", {\r\n        get: function () {\r\n            return this._time / this._duration;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Animation.prototype, \"waitForStop\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            return new Promise(function (resolve, _reject) {\r\n                if (_this._stopped) {\r\n                    resolve();\r\n                }\r\n                else {\r\n                    var listener = function () {\r\n                        stopped_1.dispose();\r\n                        resolve();\r\n                    };\r\n                    var stopped_1 = _this.events.on(\"stopped\", listener);\r\n                }\r\n            });\r\n        }\r\n    });\r\n    Object.defineProperty(Animation.prototype, \"_checkEnded\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            if (this._loops > 1) {\r\n                --this._loops;\r\n                return false;\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Animation.prototype, \"_run\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (currentTime) {\r\n            if (this._oldTime !== null) {\r\n                this._time += currentTime - this._oldTime;\r\n                if (this._time > this._duration) {\r\n                    this._time = this._duration;\r\n                }\r\n            }\r\n            this._oldTime = currentTime;\r\n        }\r\n    });\r\n    Object.defineProperty(Animation.prototype, \"_reset\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (currentTime) {\r\n            this._oldTime = currentTime;\r\n            this._time = 0;\r\n        }\r\n    });\r\n    Object.defineProperty(Animation.prototype, \"_value\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (diff) {\r\n            return this._interpolate(this._easing(diff), this._from, this._to);\r\n        }\r\n    });\r\n    return Animation;\r\n}());\r\nexport { Animation };\r\n/**\r\n * @ignore\r\n */\r\nvar counter = 0;\r\n/**\r\n * Base class for [[Entity]] objects that support Settings.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n */\r\nvar Settings = /** @class */ (function () {\r\n    function Settings(settings) {\r\n        /**\r\n         * Unique ID.\r\n         */\r\n        Object.defineProperty(this, \"uid\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: ++counter\r\n        });\r\n        Object.defineProperty(this, \"_settings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_privateSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_settingEvents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_privateSettingEvents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_prevSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_prevPrivateSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_animatingSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_animatingPrivateSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        // TODO move this into Entity\r\n        Object.defineProperty(this, \"_userProperties\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        this._settings = settings;\r\n    }\r\n    Object.defineProperty(Settings.prototype, \"_checkDirty\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            $object.keys(this._settings).forEach(function (key) {\r\n                _this._userProperties[key] = true;\r\n                _this._markDirtyKey(key);\r\n            });\r\n        }\r\n    });\r\n    Object.defineProperty(Settings.prototype, \"_runAnimation\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (currentTime) {\r\n            var _this = this;\r\n            if (!this.isDisposed()) {\r\n                var playing_1 = false;\r\n                $object.each(this._animatingSettings, function (key, animation) {\r\n                    if (animation._stopped) {\r\n                        _this._stopAnimation(key);\r\n                    }\r\n                    else if (animation._playing) {\r\n                        animation._run(currentTime);\r\n                        var diff = animation.percentage;\r\n                        if (diff >= 1) {\r\n                            if (animation._checkEnded()) {\r\n                                _this.set(key, animation._value(1));\r\n                            }\r\n                            else {\r\n                                playing_1 = true;\r\n                                animation._reset(currentTime);\r\n                                _this._set(key, animation._value(1));\r\n                            }\r\n                        }\r\n                        else {\r\n                            playing_1 = true;\r\n                            _this._set(key, animation._value(diff));\r\n                        }\r\n                    }\r\n                });\r\n                $object.each(this._animatingPrivateSettings, function (key, animation) {\r\n                    if (animation._stopped) {\r\n                        _this._stopAnimationPrivate(key);\r\n                    }\r\n                    else if (animation._playing) {\r\n                        animation._run(currentTime);\r\n                        var diff = animation.percentage;\r\n                        if (diff >= 1) {\r\n                            if (animation._checkEnded()) {\r\n                                _this.setPrivate(key, animation._value(1));\r\n                            }\r\n                            else {\r\n                                playing_1 = true;\r\n                                animation._reset(currentTime);\r\n                                _this._setPrivate(key, animation._value(1));\r\n                            }\r\n                        }\r\n                        else {\r\n                            playing_1 = true;\r\n                            _this._setPrivate(key, animation._value(diff));\r\n                        }\r\n                    }\r\n                });\r\n                return playing_1;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Settings.prototype, \"_markDirtyKey\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (_key) {\r\n            this.markDirty();\r\n        }\r\n    });\r\n    Object.defineProperty(Settings.prototype, \"_markDirtyPrivateKey\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (_key) {\r\n            this.markDirty();\r\n        }\r\n    });\r\n    /**\r\n     * Sets a callback function to invoke when specific key of settings changes\r\n     * or is set.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/events/#Settings_value_change} for more info\r\n     * @param   key       Settings key\r\n     * @param   callback  Callback\r\n     * @return            Disposer for event\r\n     */\r\n    Object.defineProperty(Settings.prototype, \"on\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key, callback) {\r\n            var _this = this;\r\n            var events = this._settingEvents[key];\r\n            if (events === undefined) {\r\n                events = this._settingEvents[key] = [];\r\n            }\r\n            events.push(callback);\r\n            return new Disposer(function () {\r\n                $array.removeFirst(events, callback);\r\n                if (events.length === 0) {\r\n                    delete _this._settingEvents[key];\r\n                }\r\n            });\r\n        }\r\n    });\r\n    /**\r\n     * Sets a callback function to invoke when specific key of private settings\r\n     * changes or is set.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/events/#Settings_value_change} for more info\r\n     * @ignore\r\n     * @param   key       Private settings key\r\n     * @param   callback  Callback\r\n     * @return            Disposer for event\r\n     */\r\n    Object.defineProperty(Settings.prototype, \"onPrivate\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key, callback) {\r\n            var _this = this;\r\n            var events = this._privateSettingEvents[key];\r\n            if (events === undefined) {\r\n                events = this._privateSettingEvents[key] = [];\r\n            }\r\n            events.push(callback);\r\n            return new Disposer(function () {\r\n                $array.removeFirst(events, callback);\r\n                if (events.length === 0) {\r\n                    delete _this._privateSettingEvents[key];\r\n                }\r\n            });\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(Settings.prototype, \"getRaw\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key, fallback) {\r\n            var value = this._settings[key];\r\n            if (value !== undefined) {\r\n                return value;\r\n            }\r\n            else {\r\n                return fallback;\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Settings.prototype, \"get\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key, fallback) {\r\n            return this.getRaw(key, fallback);\r\n        }\r\n    });\r\n    Object.defineProperty(Settings.prototype, \"_sendKeyEvent\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key, value) {\r\n            var _this = this;\r\n            var events = this._settingEvents[key];\r\n            if (events !== undefined) {\r\n                $array.each(events, function (callback) {\r\n                    callback(value, _this, key);\r\n                });\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Settings.prototype, \"_sendPrivateKeyEvent\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key, value) {\r\n            var _this = this;\r\n            var events = this._privateSettingEvents[key];\r\n            if (events !== undefined) {\r\n                $array.each(events, function (callback) {\r\n                    callback(value, _this, key);\r\n                });\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(Settings.prototype, \"_setRaw\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key, old, value) {\r\n            this._prevSettings[key] = old;\r\n            this._sendKeyEvent(key, value);\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(Settings.prototype, \"setRaw\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key, value) {\r\n            var old = this._settings[key];\r\n            this._settings[key] = value;\r\n            if (old !== value) {\r\n                this._setRaw(key, old, value);\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(Settings.prototype, \"_set\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key, value) {\r\n            var old = this._settings[key];\r\n            this._settings[key] = value;\r\n            if (old !== value) {\r\n                this._setRaw(key, old, value);\r\n                this._markDirtyKey(key);\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Settings.prototype, \"_stopAnimation\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key) {\r\n            var animation = this._animatingSettings[key];\r\n            if (animation) {\r\n                delete this._animatingSettings[key];\r\n                animation.stop();\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * Sets a setting `value` for the specified `key`, and returns the same `value`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     * @param   value     Setting value\r\n     * @return            Setting value\r\n     */\r\n    Object.defineProperty(Settings.prototype, \"set\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key, value) {\r\n            this._set(key, value);\r\n            this._stopAnimation(key);\r\n            return value;\r\n        }\r\n    });\r\n    /**\r\n     * Removes a setting value for the specified `key`;\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     */\r\n    Object.defineProperty(Settings.prototype, \"remove\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key) {\r\n            if (key in this._settings) {\r\n                this._prevSettings[key] = this._settings[key];\r\n                delete this._settings[key];\r\n                this._sendKeyEvent(key, undefined);\r\n                this._markDirtyKey(key);\r\n            }\r\n            this._stopAnimation(key);\r\n        }\r\n    });\r\n    /**\r\n     * Removes all keys;\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     */\r\n    Object.defineProperty(Settings.prototype, \"removeAll\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            $array.each($object.keys(this._settings), function (key) {\r\n                _this.remove(key);\r\n            });\r\n        }\r\n    });\r\n    /**\r\n     * Returns a value of a private setting.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/#Private_settings} for more info\r\n     */\r\n    Object.defineProperty(Settings.prototype, \"getPrivate\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key, fallback) {\r\n            var value = this._privateSettings[key];\r\n            if (value !== undefined) {\r\n                return value;\r\n            }\r\n            else {\r\n                return fallback;\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(Settings.prototype, \"_setPrivateRaw\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key, old, value) {\r\n            this._prevPrivateSettings[key] = old;\r\n            this._sendPrivateKeyEvent(key, value);\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(Settings.prototype, \"setPrivateRaw\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key, value) {\r\n            var old = this._privateSettings[key];\r\n            this._privateSettings[key] = value;\r\n            if (old !== value) {\r\n                this._setPrivateRaw(key, old, value);\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(Settings.prototype, \"_setPrivate\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key, value) {\r\n            var old = this._privateSettings[key];\r\n            this._privateSettings[key] = value;\r\n            if (old !== value) {\r\n                this._setPrivateRaw(key, old, value);\r\n                this._markDirtyPrivateKey(key);\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Settings.prototype, \"_stopAnimationPrivate\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key) {\r\n            var animation = this._animatingPrivateSettings[key];\r\n            if (animation) {\r\n                animation.stop();\r\n                delete this._animatingPrivateSettings[key];\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(Settings.prototype, \"setPrivate\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key, value) {\r\n            this._setPrivate(key, value);\r\n            this._stopAnimationPrivate(key);\r\n            return value;\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(Settings.prototype, \"removePrivate\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key) {\r\n            if (key in this._privateSettings) {\r\n                this._prevPrivateSettings[key] = this._privateSettings[key];\r\n                delete this._privateSettings[key];\r\n                this._markDirtyPrivateKey(key);\r\n            }\r\n            this._stopAnimationPrivate(key);\r\n        }\r\n    });\r\n    /**\r\n     * Sets multiple settings at once.\r\n     *\r\n     * `settings` must be an object with key: value pairs.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param settings Settings\r\n     */\r\n    Object.defineProperty(Settings.prototype, \"setAll\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (settings) {\r\n            var _this = this;\r\n            $object.each(settings, function (key, value) {\r\n                _this.set(key, value);\r\n            });\r\n        }\r\n    });\r\n    /**\r\n     * Animates setting values from current/start values to new ones.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/#Animating_settings} for more info\r\n     * @param   options  Animation options\r\n     * @return           Animation object\r\n     */\r\n    Object.defineProperty(Settings.prototype, \"animate\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (options) {\r\n            var key = options.key;\r\n            var to = options.to;\r\n            var duration = options.duration || 0;\r\n            var loops = options.loops || 1;\r\n            var from = (options.from === undefined ? this.get(key) : options.from);\r\n            var easing = (options.easing === undefined ? $ease.linear : options.easing);\r\n            if (duration === 0) {\r\n                this.set(key, to);\r\n            }\r\n            else {\r\n                if (from === undefined || from === to) {\r\n                    this.set(key, to);\r\n                }\r\n                else {\r\n                    this.set(key, from);\r\n                    var animation_1 = this._animatingSettings[key] = new Animation(this, from, to, duration, easing, loops, this._animationTime());\r\n                    this._startAnimation();\r\n                    return animation_1;\r\n                }\r\n            }\r\n            var animation = new Animation(this, from, to, duration, easing, loops, null);\r\n            animation.stop();\r\n            return animation;\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(Settings.prototype, \"animatePrivate\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (options) {\r\n            var key = options.key;\r\n            var to = options.to;\r\n            var duration = options.duration || 0;\r\n            var loops = options.loops || 1;\r\n            var from = (options.from === undefined ? this.getPrivate(key) : options.from);\r\n            var easing = (options.easing === undefined ? $ease.linear : options.easing);\r\n            if (duration === 0) {\r\n                this.setPrivate(key, to);\r\n            }\r\n            else {\r\n                if (from === undefined || from === to) {\r\n                    this.setPrivate(key, to);\r\n                }\r\n                else {\r\n                    this.setPrivate(key, from);\r\n                    var animation_2 = this._animatingPrivateSettings[key] = new Animation(this, from, to, duration, easing, loops, this._animationTime());\r\n                    this._startAnimation();\r\n                    return animation_2;\r\n                }\r\n            }\r\n            var animation = new Animation(this, from, to, duration, easing, loops, null);\r\n            animation.stop();\r\n            return animation;\r\n        }\r\n    });\r\n    Object.defineProperty(Settings.prototype, \"_dispose\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () { }\r\n    });\r\n    /**\r\n     * Returns `true` if this element is disposed.\r\n     *\r\n     * @return Disposed\r\n     */\r\n    Object.defineProperty(Settings.prototype, \"isDisposed\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            return this._disposed;\r\n        }\r\n    });\r\n    /**\r\n     * Disposes this object.\r\n     */\r\n    Object.defineProperty(Settings.prototype, \"dispose\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            if (!this._disposed) {\r\n                this._disposed = true;\r\n                this._dispose();\r\n            }\r\n        }\r\n    });\r\n    return Settings;\r\n}());\r\nexport { Settings };\r\n/**\r\n * Base class.\r\n *\r\n * @important\r\n */\r\nvar Entity = /** @class */ (function (_super) {\r\n    __extends(Entity, _super);\r\n    /**\r\n     * IMPORTANT! Do not instantiate this class via `new Class()` syntax.\r\n     *\r\n     * Use static method `Class.new()` instead.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n     * @ignore\r\n     */\r\n    function Entity(root, settings, isReal, templates) {\r\n        if (templates === void 0) { templates = []; }\r\n        var _this = _super.call(this, settings) || this;\r\n        Object.defineProperty(_this, \"_root\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"_user_id\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        }); // for testing purposes\r\n        Object.defineProperty(_this, \"states\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new States(_this)\r\n        });\r\n        Object.defineProperty(_this, \"adapters\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new Adapters(_this)\r\n        });\r\n        Object.defineProperty(_this, \"events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: _this._createEvents()\r\n        });\r\n        Object.defineProperty(_this, \"_userPrivateProperties\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(_this, \"_dirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(_this, \"_dirtyPrivate\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(_this, \"_template\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // Templates for the themes\r\n        Object.defineProperty(_this, \"_templates\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        // Internal templates which can be overridden by the user's templates\r\n        Object.defineProperty(_this, \"_internalTemplates\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // Default themes which can be overridden by the user's themes\r\n        Object.defineProperty(_this, \"_defaultThemes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        // Disposers for all of the templates\r\n        Object.defineProperty(_this, \"_templateDisposers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(_this, \"_disposers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        // Whether the template setup function should be run\r\n        Object.defineProperty(_this, \"_runSetup\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(_this, \"_disposerProperties\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        if (!isReal) {\r\n            throw new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\r\n        }\r\n        _this._root = root;\r\n        _this._internalTemplates = templates;\r\n        if (settings.id) {\r\n            _this._registerId(settings.id);\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Use this method to create an instance of this class.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n     * @param   root      Root element\r\n     * @param   settings  Settings\r\n     * @param   template  Template\r\n     * @return            Instantiated object\r\n     */\r\n    Object.defineProperty(Entity, \"new\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (root, settings, template) {\r\n            var x = (new this(root, settings, true));\r\n            x._template = template;\r\n            x._afterNew();\r\n            return x;\r\n        }\r\n    });\r\n    Object.defineProperty(Entity, \"_new\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (root, settings, templates) {\r\n            if (templates === void 0) { templates = []; }\r\n            var x = (new this(root, settings, true, templates));\r\n            x._afterNew();\r\n            return x;\r\n        }\r\n    });\r\n    Object.defineProperty(Entity.prototype, \"_afterNew\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            this._checkDirty();\r\n            var shouldApply = false;\r\n            var template = this._template;\r\n            if (template) {\r\n                shouldApply = true;\r\n                template._setObjectTemplate(this);\r\n            }\r\n            $array.each(this._internalTemplates, function (template) {\r\n                shouldApply = true;\r\n                template._setObjectTemplate(_this);\r\n            });\r\n            if (shouldApply) {\r\n                this._applyTemplates(false);\r\n            }\r\n            this.states.create(\"default\", {});\r\n            this._setDefaults();\r\n        }\r\n    });\r\n    // This is the same as _afterNew, except it also applies the themes.\r\n    // This should only be used for classes which don't have a parent (because they extend from Entity and not Sprite).\r\n    Object.defineProperty(Entity.prototype, \"_afterNewApplyThemes\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            this._checkDirty();\r\n            var template = this._template;\r\n            if (template) {\r\n                template._setObjectTemplate(this);\r\n            }\r\n            $array.each(this._internalTemplates, function (template) {\r\n                template._setObjectTemplate(_this);\r\n            });\r\n            this.states.create(\"default\", {});\r\n            this._setDefaults();\r\n            this._applyThemes();\r\n        }\r\n    });\r\n    Object.defineProperty(Entity.prototype, \"_createEvents\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            return new EventDispatcher();\r\n        }\r\n    });\r\n    Object.defineProperty(Entity.prototype, \"classNames\", {\r\n        /**\r\n         * @ignore\r\n         */\r\n        get: function () {\r\n            return this.constructor.classNames;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Entity.prototype, \"className\", {\r\n        /**\r\n         * @ignore\r\n         */\r\n        get: function () {\r\n            return this.constructor.className;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Entity.prototype, \"_setDefaults\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n        }\r\n    });\r\n    Object.defineProperty(Entity.prototype, \"_setDefault\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key, value) {\r\n            if (!(key in this._settings)) {\r\n                _super.prototype.set.call(this, key, value);\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Entity.prototype, \"_setRawDefault\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key, value) {\r\n            if (!(key in this._settings)) {\r\n                _super.prototype.setRaw.call(this, key, value);\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Entity.prototype, \"_clearDirty\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            $object.keys(this._dirty).forEach(function (key) {\r\n                _this._dirty[key] = false;\r\n            });\r\n            $object.keys(this._dirtyPrivate).forEach(function (key) {\r\n                _this._dirtyPrivate[key] = false;\r\n            });\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(Entity.prototype, \"isDirty\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key) {\r\n            return !!this._dirty[key];\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(Entity.prototype, \"isPrivateDirty\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key) {\r\n            return !!this._dirtyPrivate[key];\r\n        }\r\n    });\r\n    Object.defineProperty(Entity.prototype, \"_markDirtyKey\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key) {\r\n            this._dirty[key] = true;\r\n            _super.prototype._markDirtyKey.call(this, key);\r\n        }\r\n    });\r\n    Object.defineProperty(Entity.prototype, \"_markDirtyPrivateKey\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key) {\r\n            this._dirtyPrivate[key] = true;\r\n            _super.prototype._markDirtyKey.call(this, key);\r\n        }\r\n    });\r\n    /**\r\n     * Checks if element is of certain class (or inherits one).\r\n     *\r\n     * @param   type  Class name to check\r\n     * @return {boolean} Is of class?\r\n     */\r\n    Object.defineProperty(Entity.prototype, \"isType\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (type) {\r\n            return this.classNames.indexOf(type) !== -1;\r\n        }\r\n    });\r\n    Object.defineProperty(Entity.prototype, \"_pushPropertyDisposer\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key, disposer) {\r\n            var disposers = this._disposerProperties[key];\r\n            if (disposers === undefined) {\r\n                disposers = this._disposerProperties[key] = [];\r\n            }\r\n            disposers.push(disposer);\r\n            return disposer;\r\n        }\r\n    });\r\n    Object.defineProperty(Entity.prototype, \"_disposeProperty\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key) {\r\n            var disposers = this._disposerProperties[key];\r\n            if (disposers !== undefined) {\r\n                $array.each(disposers, function (disposer) {\r\n                    disposer.dispose();\r\n                });\r\n                delete this._disposerProperties[key];\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Entity.prototype, \"template\", {\r\n        get: function () {\r\n            return this._template;\r\n        },\r\n        /**\r\n         * @todo needs description\r\n         * @param  value  Template\r\n         */\r\n        set: function (value) {\r\n            var template = this._template;\r\n            if (template !== value) {\r\n                this._template = value;\r\n                if (template) {\r\n                    template._removeObjectTemplate(this);\r\n                }\r\n                if (value) {\r\n                    value._setObjectTemplate(this);\r\n                }\r\n                this._applyTemplates();\r\n            }\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(Entity.prototype, \"markDirty\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this._root._addDirtyEntity(this);\r\n        }\r\n    });\r\n    Object.defineProperty(Entity.prototype, \"_startAnimation\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this._root._addAnimation(this);\r\n        }\r\n    });\r\n    Object.defineProperty(Entity.prototype, \"_animationTime\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            return this._root.animationTime;\r\n        }\r\n    });\r\n    Object.defineProperty(Entity.prototype, \"_applyState\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (_name) { }\r\n    });\r\n    Object.defineProperty(Entity.prototype, \"_applyStateAnimated\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (_name, _duration) { }\r\n    });\r\n    Object.defineProperty(Entity.prototype, \"get\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key, fallback) {\r\n            var value = this.adapters.fold(key, this._settings[key]);\r\n            if (value !== undefined) {\r\n                return value;\r\n            }\r\n            else {\r\n                return fallback;\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * Sets a setting `value` for the specified `key`, and returns the same `value`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     * @param   value     Setting value\r\n     * @return            Setting value\r\n     */\r\n    Object.defineProperty(Entity.prototype, \"set\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key, value) {\r\n            this._userProperties[key] = true;\r\n            return _super.prototype.set.call(this, key, value);\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(Entity.prototype, \"setRaw\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key, value) {\r\n            this._userProperties[key] = true;\r\n            _super.prototype.setRaw.call(this, key, value);\r\n        }\r\n    });\r\n    /**\r\n     * Sets a setting `value` for the specified `key` only if the value for this key was not set previously using set method, and returns the same `value`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     * @param   value     Setting value\r\n     * @return            Setting value\r\n     */\r\n    Object.defineProperty(Entity.prototype, \"_setSoft\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key, value) {\r\n            if (!this._userProperties[key]) {\r\n                return _super.prototype.set.call(this, key, value);\r\n            }\r\n            return value;\r\n        }\r\n    });\r\n    /**\r\n     * Removes a setting value for the specified `key`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     */\r\n    Object.defineProperty(Entity.prototype, \"remove\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key) {\r\n            delete this._userProperties[key];\r\n            this._removeTemplateProperty(key);\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(Entity.prototype, \"setPrivate\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key, value) {\r\n            this._userPrivateProperties[key] = true;\r\n            return _super.prototype.setPrivate.call(this, key, value);\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(Entity.prototype, \"setPrivateRaw\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key, value) {\r\n            this._userPrivateProperties[key] = true;\r\n            _super.prototype.setPrivateRaw.call(this, key, value);\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(Entity.prototype, \"removePrivate\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key) {\r\n            delete this._userPrivateProperties[key];\r\n            this._removeTemplatePrivateProperty(key);\r\n        }\r\n    });\r\n    Object.defineProperty(Entity.prototype, \"_setTemplateProperty\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (template, key, value) {\r\n            if (!this._userProperties[key]) {\r\n                var match = this._findTemplateByKey(key);\r\n                if (template === match) {\r\n                    _super.prototype.set.call(this, key, value);\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Entity.prototype, \"_setTemplatePrivateProperty\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (template, key, value) {\r\n            if (!this._userPrivateProperties[key]) {\r\n                var match = this._findTemplateByPrivateKey(key);\r\n                if (template === match) {\r\n                    _super.prototype.setPrivate.call(this, key, value);\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Entity.prototype, \"_removeTemplateProperty\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key) {\r\n            if (!this._userProperties[key]) {\r\n                var match = this._findTemplateByKey(key);\r\n                if (match) {\r\n                    // TODO don't stop the animation if the property didn't change\r\n                    _super.prototype.set.call(this, key, match._settings[key]);\r\n                }\r\n                else {\r\n                    _super.prototype.remove.call(this, key);\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Entity.prototype, \"_removeTemplatePrivateProperty\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key) {\r\n            if (!this._userPrivateProperties[key]) {\r\n                var match = this._findTemplateByPrivateKey(key);\r\n                if (match) {\r\n                    // TODO don't stop the animation if the property didn't change\r\n                    _super.prototype.setPrivate.call(this, key, match._privateSettings[key]);\r\n                }\r\n                else {\r\n                    _super.prototype.removePrivate.call(this, key);\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Entity.prototype, \"_walkParents\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (f) {\r\n            f(this._root._rootContainer);\r\n            f(this);\r\n        }\r\n    });\r\n    // TODO faster version of this method which is specialized to just 1 key\r\n    Object.defineProperty(Entity.prototype, \"_applyStateByKey\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (name) {\r\n            var other = this.states.create(name, {});\r\n            var seen = {};\r\n            this._eachTemplate(function (template) {\r\n                var state = template.states.lookup(name);\r\n                if (state) {\r\n                    state._apply(other, seen);\r\n                }\r\n            });\r\n            $object.each(other._settings, function (key) {\r\n                if (!seen[key] && !other._userSettings[key]) {\r\n                    other.remove(key);\r\n                }\r\n            });\r\n        }\r\n    });\r\n    Object.defineProperty(Entity.prototype, \"_applyTemplate\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (template, state) {\r\n            var _this = this;\r\n            this._templateDisposers.push(template._apply(this, state));\r\n            $object.each(template._settings, function (key, value) {\r\n                if (!state.settings[key] && !_this._userProperties[key]) {\r\n                    state.settings[key] = true;\r\n                    _super.prototype.set.call(_this, key, value);\r\n                }\r\n            });\r\n            $object.each(template._privateSettings, function (key, value) {\r\n                if (!state.privateSettings[key] && !_this._userPrivateProperties[key]) {\r\n                    state.privateSettings[key] = true;\r\n                    _super.prototype.setPrivate.call(_this, key, value);\r\n                }\r\n            });\r\n            if (this._runSetup && template.setup) {\r\n                this._runSetup = false;\r\n                template.setup(this);\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * Calls the closure with each template and returns the first template which is true\r\n     */\r\n    Object.defineProperty(Entity.prototype, \"_findStaticTemplate\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (f) {\r\n            if (this._template) {\r\n                if (f(this._template)) {\r\n                    return this._template;\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Entity.prototype, \"_eachTemplate\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (f) {\r\n            this._findStaticTemplate(function (template) {\r\n                f(template);\r\n                return false;\r\n            });\r\n            // _internalTemplates is sorted with most specific to the right\r\n            $array.eachReverse(this._internalTemplates, f);\r\n            // _templates is sorted with most specific to the left\r\n            $array.each(this._templates, f);\r\n        }\r\n    });\r\n    Object.defineProperty(Entity.prototype, \"_applyTemplates\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (remove) {\r\n            var _this = this;\r\n            if (remove === void 0) { remove = true; }\r\n            if (remove) {\r\n                this._disposeTemplates();\r\n            }\r\n            var state = {\r\n                settings: {},\r\n                privateSettings: {},\r\n                states: {},\r\n            };\r\n            this._eachTemplate(function (template) {\r\n                _this._applyTemplate(template, state);\r\n            });\r\n            if (remove) {\r\n                $object.each(this._settings, function (key) {\r\n                    if (!_this._userProperties[key] && !state.settings[key]) {\r\n                        _super.prototype.remove.call(_this, key);\r\n                    }\r\n                });\r\n                $object.each(this._privateSettings, function (key) {\r\n                    if (!_this._userPrivateProperties[key] && !state.privateSettings[key]) {\r\n                        _super.prototype.removePrivate.call(_this, key);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Entity.prototype, \"_findTemplate\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (f) {\r\n            var value = this._findStaticTemplate(f);\r\n            if (value === undefined) {\r\n                // _internalTemplates is sorted with most specific to the right\r\n                var value_1 = $array.findReverse(this._internalTemplates, f);\r\n                if (value_1 === undefined) {\r\n                    // _templates is sorted with most specific to the left\r\n                    return $array.find(this._templates, f);\r\n                }\r\n                else {\r\n                    return value_1;\r\n                }\r\n            }\r\n            else {\r\n                return value;\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Entity.prototype, \"_findTemplateByKey\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key) {\r\n            return this._findTemplate(function (template) {\r\n                return key in template._settings;\r\n            });\r\n        }\r\n    });\r\n    Object.defineProperty(Entity.prototype, \"_findTemplateByPrivateKey\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key) {\r\n            return this._findTemplate(function (template) {\r\n                return key in template._privateSettings;\r\n            });\r\n        }\r\n    });\r\n    Object.defineProperty(Entity.prototype, \"_disposeTemplates\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            $array.each(this._templateDisposers, function (disposer) {\r\n                disposer.dispose();\r\n            });\r\n            this._templateDisposers.length = 0;\r\n        }\r\n    });\r\n    Object.defineProperty(Entity.prototype, \"_removeTemplates\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            $array.each(this._templates, function (template) {\r\n                template._removeObjectTemplate(_this);\r\n            });\r\n            this._templates.length = 0;\r\n        }\r\n    });\r\n    Object.defineProperty(Entity.prototype, \"_applyThemes\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            var isConnected = false;\r\n            var defaults = [];\r\n            var themes = [];\r\n            var themeTags = new Set();\r\n            var tags = this.get(\"themeTagsSelf\");\r\n            if (tags) {\r\n                $array.each(tags, function (tag) {\r\n                    themeTags.add(tag);\r\n                });\r\n            }\r\n            this._walkParents(function (entity) {\r\n                if (entity === _this._root._rootContainer) {\r\n                    isConnected = true;\r\n                }\r\n                if (entity._defaultThemes.length > 0) {\r\n                    defaults.push(entity._defaultThemes);\r\n                }\r\n                var theme = entity.get(\"themes\");\r\n                if (theme) {\r\n                    themes.push(theme);\r\n                }\r\n                var tags = entity.get(\"themeTags\");\r\n                if (tags) {\r\n                    $array.each(tags, function (tag) {\r\n                        themeTags.add(tag);\r\n                    });\r\n                }\r\n            });\r\n            themes = defaults.concat(themes);\r\n            this._removeTemplates();\r\n            if (isConnected) {\r\n                $array.eachReverse(this.classNames, function (name) {\r\n                    var allRules = [];\r\n                    $array.each(themes, function (themes) {\r\n                        $array.each(themes, function (theme) {\r\n                            var rules = theme._lookupRules(name);\r\n                            if (rules) {\r\n                                $array.eachReverse(rules, function (rule) {\r\n                                    var matches = rule.tags.every(function (tag) {\r\n                                        return themeTags.has(tag);\r\n                                    });\r\n                                    if (matches) {\r\n                                        var result = $array.getFirstSortedIndex(allRules, function (x) {\r\n                                            var order = $order.compare(rule.tags.length, x.tags.length);\r\n                                            if (order === 0) {\r\n                                                return $order.compareArray(rule.tags, x.tags, $order.compare);\r\n                                            }\r\n                                            else {\r\n                                                return order;\r\n                                            }\r\n                                        });\r\n                                        allRules.splice(result.index, 0, rule);\r\n                                    }\r\n                                });\r\n                            }\r\n                        });\r\n                    });\r\n                    $array.each(allRules, function (rule) {\r\n                        _this._templates.push(rule.template);\r\n                        rule.template._setObjectTemplate(_this);\r\n                    });\r\n                });\r\n            }\r\n            this._applyTemplates();\r\n            if (isConnected) {\r\n                // This causes it to only run the setup function the first time that the themes are applied\r\n                this._runSetup = false;\r\n            }\r\n            return isConnected;\r\n        }\r\n    });\r\n    Object.defineProperty(Entity.prototype, \"_changed\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () { }\r\n    });\r\n    Object.defineProperty(Entity.prototype, \"_beforeChanged\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            if (this.isDirty(\"id\")) {\r\n                var id = this.get(\"id\");\r\n                if (id) {\r\n                    this._registerId(id);\r\n                }\r\n                var prevId = this._prevSettings.id;\r\n                if (prevId) {\r\n                    delete registry.entitiesById[prevId];\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Entity.prototype, \"_registerId\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (id) {\r\n            if (registry.entitiesById[id] && registry.entitiesById[id] !== this) {\r\n                throw new Error(\"An entity with id \\\"\" + id + \"\\\" already exists.\");\r\n            }\r\n            registry.entitiesById[id] = this;\r\n        }\r\n    });\r\n    Object.defineProperty(Entity.prototype, \"_afterChanged\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () { }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(Entity.prototype, \"addDisposer\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (disposer) {\r\n            this._disposers.push(disposer);\r\n            return disposer;\r\n        }\r\n    });\r\n    Object.defineProperty(Entity.prototype, \"_dispose\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            _super.prototype._dispose.call(this);\r\n            var template = this._template;\r\n            if (template) {\r\n                template._removeObjectTemplate(this);\r\n            }\r\n            $array.each(this._internalTemplates, function (template) {\r\n                template._removeObjectTemplate(_this);\r\n            });\r\n            this._removeTemplates();\r\n            this._disposeTemplates();\r\n            this.events.dispose();\r\n            this._disposers.forEach(function (x) {\r\n                x.dispose();\r\n            });\r\n            $object.each(this._disposerProperties, function (_, disposers) {\r\n                $array.each(disposers, function (disposer) {\r\n                    disposer.dispose();\r\n                });\r\n            });\r\n            var id = this.get(\"id\");\r\n            if (id) {\r\n                delete registry.entitiesById[id];\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * Creates and returns a \"disposable\" timeout.\r\n     *\r\n     * @param   fn     Callback\r\n     * @param   delay  Delay in milliseconds\r\n     * @return         Timeout disposer\r\n     */\r\n    Object.defineProperty(Entity.prototype, \"setTimeout\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (fn, delay) {\r\n            var _this = this;\r\n            var id = setTimeout(function () {\r\n                _this.removeDispose(disposer);\r\n                fn();\r\n            }, delay);\r\n            var disposer = new Disposer(function () {\r\n                clearTimeout(id);\r\n            });\r\n            this._disposers.push(disposer);\r\n            return disposer;\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(Entity.prototype, \"removeDispose\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (target) {\r\n            if (!this.isDisposed()) {\r\n                var index = $array.indexOf(this._disposers, target);\r\n                if (index > -1) {\r\n                    this._disposers.splice(index, 1);\r\n                }\r\n            }\r\n            target.dispose();\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(Entity.prototype, \"hasTag\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (tag) {\r\n            return $array.indexOf(this.get(\"themeTags\", []), tag) !== -1;\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(Entity.prototype, \"addTag\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (tag) {\r\n            if (!this.hasTag(tag)) {\r\n                var tags = this.get(\"themeTags\", []);\r\n                tags.push(tag);\r\n                this.set(\"themeTags\", tags);\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(Entity.prototype, \"removeTag\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (tag) {\r\n            if (this.hasTag(tag)) {\r\n                var tags = this.get(\"themeTags\", []);\r\n                $array.remove(tags, tag);\r\n                this.set(\"themeTags\", tags);\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Entity.prototype, \"_t\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (text, locale) {\r\n            var _a;\r\n            var rest = [];\r\n            for (var _i = 2; _i < arguments.length; _i++) {\r\n                rest[_i - 2] = arguments[_i];\r\n            }\r\n            return (_a = this._root.language).translate.apply(_a, __spreadArray([text, locale], __read(rest), false));\r\n        }\r\n    });\r\n    Object.defineProperty(Entity.prototype, \"root\", {\r\n        /**\r\n         * An instance of [[Root]] object.\r\n         *\r\n         * @readonly\r\n         * @since 5.0.6\r\n         * @return Root object\r\n         */\r\n        get: function () {\r\n            return this._root;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Entity, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"Entity\"\r\n    });\r\n    Object.defineProperty(Entity, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: [\"Entity\"]\r\n    });\r\n    return Entity;\r\n}(Settings));\r\nexport { Entity };\r\n//# sourceMappingURL=Entity.js.map","/**\r\n * Event Dispatcher module is used for registering listeners and dispatching\r\n * events across amCharts system.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Disposer, MultiDisposer } from \"./Disposer\";\r\nimport * as $array from \"./Array\";\r\nimport * as $type from \"./Type\";\r\n/**\r\n * Universal Event Dispatcher.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/events/} for more info\r\n */\r\nvar EventDispatcher = /** @class */ (function () {\r\n    /**\r\n     * Constructor\r\n     */\r\n    function EventDispatcher() {\r\n        Object.defineProperty(this, \"_listeners\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_killed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_disabled\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_iterating\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_enabled\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._listeners = [];\r\n        this._killed = [];\r\n        this._disabled = {};\r\n        this._iterating = 0;\r\n        this._enabled = true;\r\n        this._disposed = false;\r\n    }\r\n    /**\r\n     * Returns if this object has been already disposed.\r\n     *\r\n     * @return Disposed?\r\n     */\r\n    Object.defineProperty(EventDispatcher.prototype, \"isDisposed\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            return this._disposed;\r\n        }\r\n    });\r\n    /**\r\n     * Dispose (destroy) this object.\r\n     */\r\n    Object.defineProperty(EventDispatcher.prototype, \"dispose\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            if (!this._disposed) {\r\n                this._disposed = true;\r\n                var a = this._listeners;\r\n                this._iterating = 1;\r\n                this._listeners = null;\r\n                this._disabled = null;\r\n                try {\r\n                    $array.each(a, function (x) {\r\n                        x.disposer.dispose();\r\n                    });\r\n                }\r\n                finally {\r\n                    this._killed = null;\r\n                    this._iterating = null;\r\n                }\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * Checks if this particular event dispatcher has any listeners set.\r\n     *\r\n     * @return Has listeners?\r\n     */\r\n    Object.defineProperty(EventDispatcher.prototype, \"hasListeners\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            return this._listeners.length !== 0;\r\n        }\r\n    });\r\n    /**\r\n     * Checks if this particular event dispatcher has any particular listeners set.\r\n     *\r\n     * @return Has particular event listeners?\r\n     */\r\n    Object.defineProperty(EventDispatcher.prototype, \"hasListenersByType\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (type) {\r\n            return $array.any(this._listeners, function (x) { return (x.type === null || x.type === type) && !x.killed; });\r\n        }\r\n    });\r\n    /**\r\n     * Enable dispatching of events if they were previously disabled by\r\n     * `disable()`.\r\n     */\r\n    Object.defineProperty(EventDispatcher.prototype, \"enable\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this._enabled = true;\r\n        }\r\n    });\r\n    /**\r\n     * Disable dispatching of events until re-enabled by `enable()`.\r\n     */\r\n    Object.defineProperty(EventDispatcher.prototype, \"disable\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this._enabled = false;\r\n        }\r\n    });\r\n    /**\r\n     * Enable dispatching particular event, if it was disabled before by\r\n     * `disableType()`.\r\n     *\r\n     * @param type Event type\r\n     */\r\n    Object.defineProperty(EventDispatcher.prototype, \"enableType\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (type) {\r\n            delete this._disabled[type];\r\n        }\r\n    });\r\n    /**\r\n     * Disable dispatching of events for a certain event type.\r\n     *\r\n     * Optionally, can set how many dispatches to skip before automatically\r\n     * re-enabling the dispatching.\r\n     *\r\n     * @param type    Event type\r\n     * @param amount  Number of event dispatches to skip\r\n     */\r\n    Object.defineProperty(EventDispatcher.prototype, \"disableType\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (type, amount) {\r\n            if (amount === void 0) { amount = Infinity; }\r\n            this._disabled[type] = amount;\r\n        }\r\n    });\r\n    /**\r\n     * Removes listener from dispatcher.\r\n     *\r\n     * Will throw an exception if such listener does not exists.\r\n     *\r\n     * @param listener Listener to remove\r\n     */\r\n    Object.defineProperty(EventDispatcher.prototype, \"_removeListener\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (listener) {\r\n            if (this._iterating === 0) {\r\n                var index = this._listeners.indexOf(listener);\r\n                if (index === -1) {\r\n                    throw new Error(\"Invalid state: could not remove listener\");\r\n                }\r\n                this._listeners.splice(index, 1);\r\n            }\r\n            else {\r\n                this._killed.push(listener);\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * Removes existing listener by certain parameters.\r\n     *\r\n     * @param once         Listener's once setting\r\n     * @param type         Listener's type\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     */\r\n    Object.defineProperty(EventDispatcher.prototype, \"_removeExistingListener\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (once, type, callback, context) {\r\n            if (this._disposed) {\r\n                throw new Error(\"EventDispatcher is disposed\");\r\n            }\r\n            this._eachListener(function (info) {\r\n                if (info.once === once && // TODO is this correct ?\r\n                    info.type === type &&\r\n                    (callback === undefined || info.callback === callback) &&\r\n                    info.context === context) {\r\n                    info.disposer.dispose();\r\n                }\r\n            });\r\n        }\r\n    });\r\n    /**\r\n     * Checks if dispatching for particular event type is enabled.\r\n     *\r\n     * @param type  Event type\r\n     * @return Enabled?\r\n     */\r\n    Object.defineProperty(EventDispatcher.prototype, \"isEnabled\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (type) {\r\n            if (this._disposed) {\r\n                throw new Error(\"EventDispatcher is disposed\");\r\n            }\r\n            // TODO is this check correct ?\r\n            return this._enabled && this._listeners.length > 0 && this.hasListenersByType(type) && this._disabled[type] === undefined;\r\n        }\r\n    });\r\n    /**\r\n     * Removes all listeners of a particular event type\r\n     *\r\n     * @param type  Listener's type\r\n     */\r\n    Object.defineProperty(EventDispatcher.prototype, \"removeType\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (type) {\r\n            if (this._disposed) {\r\n                throw new Error(\"EventDispatcher is disposed\");\r\n            }\r\n            this._eachListener(function (info) {\r\n                if (info.type === type) {\r\n                    info.disposer.dispose();\r\n                }\r\n            });\r\n        }\r\n    });\r\n    /**\r\n     * Checks if there's already a listener with specific parameters.\r\n     *\r\n     * @param type      Listener's type\r\n     * @param callback  Callback function\r\n     * @param context   Callback context\r\n     * @return Has listener?\r\n     */\r\n    Object.defineProperty(EventDispatcher.prototype, \"has\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (type, callback, context) {\r\n            var index = $array.findIndex(this._listeners, function (info) {\r\n                return info.once !== true && // Ignoring \"once\" listeners\r\n                    info.type === type &&\r\n                    (callback === undefined || info.callback === callback) &&\r\n                    info.context === context;\r\n            });\r\n            return index !== -1;\r\n        }\r\n    });\r\n    /**\r\n     * Checks whether event of the particular type should be dispatched.\r\n     *\r\n     * @param type  Event type\r\n     * @return Dispatch?\r\n     */\r\n    Object.defineProperty(EventDispatcher.prototype, \"_shouldDispatch\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (type) {\r\n            if (this._disposed) {\r\n                throw new Error(\"EventDispatcher is disposed\");\r\n            }\r\n            var count = this._disabled[type];\r\n            if (!$type.isNumber(count)) {\r\n                return this._enabled;\r\n            }\r\n            else {\r\n                if (count <= 1) {\r\n                    delete this._disabled[type];\r\n                }\r\n                else {\r\n                    --this._disabled[type];\r\n                }\r\n                return false;\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * [_eachListener description]\r\n     *\r\n     * All of this extra code is needed when a listener is removed while iterating\r\n     *\r\n     * @todo Description\r\n     * @param fn [description]\r\n     */\r\n    Object.defineProperty(EventDispatcher.prototype, \"_eachListener\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (fn) {\r\n            var _this = this;\r\n            ++this._iterating;\r\n            try {\r\n                $array.each(this._listeners, fn);\r\n            }\r\n            finally {\r\n                --this._iterating;\r\n                // TODO should this be inside or outside the finally ?\r\n                if (this._iterating === 0 && this._killed.length !== 0) {\r\n                    // Remove killed listeners\r\n                    $array.each(this._killed, function (killed) {\r\n                        _this._removeListener(killed);\r\n                    });\r\n                    this._killed.length = 0;\r\n                }\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * Dispatches an event immediately without waiting for next cycle.\r\n     *\r\n     * @param type   Event type\r\n     * @param event  Event object\r\n     * @todo automatically add in type and target properties if they are missing\r\n     */\r\n    Object.defineProperty(EventDispatcher.prototype, \"dispatch\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (type, event) {\r\n            if (this._shouldDispatch(type)) {\r\n                // TODO check if it's faster to use an object of listeners rather than a single big array\r\n                // TODO if the function throws, maybe it should keep going ?\r\n                this._eachListener(function (listener) {\r\n                    if (!listener.killed && (listener.type === null || listener.type === type)) {\r\n                        listener.dispatch(type, event);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * Shelves the event to be dispatched within next update cycle.\r\n     *\r\n     * @param type   Event type\r\n     * @param event  Event object\r\n     * @todo automatically add in type and target properties if they are missing\r\n     */\r\n    /*public dispatchLater<Key extends keyof T>(type: Key, event: T[Key]): void {\r\n        if (this._shouldDispatch(type)) {\r\n            this._eachListener((listener) => {\r\n                // TODO check if it's faster to use an object of listeners rather than a single big array\r\n                if (!listener.killed && (listener.type === null || listener.type === type)) {\r\n                    // TODO if the function throws, maybe it should keep going ?\r\n                    // TODO dispatch during the update cycle, rather than using whenIdle\r\n                    $async.whenIdle(() => {\r\n                        if (!listener.killed) {\r\n                            listener.dispatch(type, event);\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }*/\r\n    /**\r\n     * Creates, catalogs and returns an [[EventListener]].\r\n     *\r\n     * Event listener can be disposed.\r\n     *\r\n     * @param once         Listener's once setting\r\n     * @param type         Listener's type\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     * @param shouldClone  Whether the listener should be copied when the EventDispatcher is copied\r\n     * @param dispatch\r\n     * @returns An event listener\r\n     */\r\n    Object.defineProperty(EventDispatcher.prototype, \"_on\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (once, type, callback, context, shouldClone, dispatch) {\r\n            var _this = this;\r\n            if (this._disposed) {\r\n                throw new Error(\"EventDispatcher is disposed\");\r\n            }\r\n            this._removeExistingListener(once, type, callback, context);\r\n            var info = {\r\n                type: type,\r\n                callback: callback,\r\n                context: context,\r\n                shouldClone: shouldClone,\r\n                dispatch: dispatch,\r\n                killed: false,\r\n                once: once,\r\n                disposer: new Disposer(function () {\r\n                    info.killed = true;\r\n                    _this._removeListener(info);\r\n                })\r\n            };\r\n            this._listeners.push(info);\r\n            return info;\r\n        }\r\n    });\r\n    /**\r\n     * Creates an event listener to be invoked on **any** event.\r\n     *\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     * @param shouldClone  Whether the listener should be copied when the EventDispatcher is copied\r\n     * @returns A disposable event listener\r\n     */\r\n    Object.defineProperty(EventDispatcher.prototype, \"onAll\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (callback, context, shouldClone) {\r\n            if (shouldClone === void 0) { shouldClone = true; }\r\n            return this._on(false, null, callback, context, shouldClone, function (_type, event) { return callback.call(context, event); }).disposer;\r\n        }\r\n    });\r\n    /**\r\n     * Creates an event listener to be invoked on a specific event type.\r\n     *\r\n     * ```TypeScript\r\n     * button.events.once(\"click\", (ev) => {\r\n     *   console.log(\"Button clicked\");\r\n     * }, this);\r\n     * ```\r\n     * ```JavaScript\r\n     * button.events.once(\"click\", (ev) => {\r\n     *   console.log(\"Button clicked\");\r\n     * }, this);\r\n     * ```\r\n     *\r\n     * The above will invoke our custom event handler whenever series we put\r\n     * event on is hidden.\r\n     *\r\n     * @param type         Listener's type\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     * @param shouldClone  Whether the listener should be copied when the EventDispatcher is copied\r\n     * @returns A disposable event listener\r\n     */\r\n    Object.defineProperty(EventDispatcher.prototype, \"on\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (type, callback, context, shouldClone) {\r\n            if (shouldClone === void 0) { shouldClone = true; }\r\n            return this._on(false, type, callback, context, shouldClone, function (_type, event) { return callback.call(context, event); }).disposer;\r\n        }\r\n    });\r\n    /**\r\n     * Creates an event listener to be invoked on a specific event type once.\r\n     *\r\n     * Once the event listener is invoked, it is automatically disposed.\r\n     *\r\n     * ```TypeScript\r\n     * button.events.once(\"click\", (ev) => {\r\n     *   console.log(\"Button clicked\");\r\n     * }, this);\r\n     * ```\r\n     * ```JavaScript\r\n     * button.events.once(\"click\", (ev) => {\r\n     *   console.log(\"Button clicked\");\r\n     * }, this);\r\n     * ```\r\n     *\r\n     * The above will invoke our custom event handler the first time series we\r\n     * put event on is hidden.\r\n     *\r\n     * @param type         Listener's type\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     * @param shouldClone  Whether the listener should be copied when the EventDispatcher is copied\r\n     * @returns A disposable event listener\r\n     */\r\n    Object.defineProperty(EventDispatcher.prototype, \"once\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (type, callback, context, shouldClone) {\r\n            if (shouldClone === void 0) { shouldClone = true; }\r\n            var x = this._on(true, type, callback, context, shouldClone, function (_type, event) {\r\n                x.disposer.dispose();\r\n                callback.call(context, event);\r\n            });\r\n            // TODO maybe this should return a different Disposer ?\r\n            return x.disposer;\r\n        }\r\n    });\r\n    /**\r\n     * Removes the event listener with specific parameters.\r\n     *\r\n     * @param type         Listener's type\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     */\r\n    Object.defineProperty(EventDispatcher.prototype, \"off\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (type, callback, context) {\r\n            this._removeExistingListener(false, type, callback, context);\r\n        }\r\n    });\r\n    /**\r\n     * Copies all dispatcher parameters, including listeners, from another event\r\n     * dispatcher.\r\n     *\r\n     * @param source Source event dispatcher\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(EventDispatcher.prototype, \"copyFrom\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (source) {\r\n            var _this = this;\r\n            if (this._disposed) {\r\n                throw new Error(\"EventDispatcher is disposed\");\r\n            }\r\n            if (source === this) {\r\n                throw new Error(\"Cannot copyFrom the same TargetedEventDispatcher\");\r\n            }\r\n            var disposers = [];\r\n            $array.each(source._listeners, function (x) {\r\n                // TODO is this correct ?\r\n                if (!x.killed && x.shouldClone) {\r\n                    if (x.type === null) {\r\n                        disposers.push(_this.onAll(x.callback, x.context));\r\n                    }\r\n                    else if (x.once) {\r\n                        disposers.push(_this.once(x.type, x.callback, x.context));\r\n                    }\r\n                    else {\r\n                        disposers.push(_this.on(x.type, x.callback, x.context));\r\n                    }\r\n                }\r\n            });\r\n            return new MultiDisposer(disposers);\r\n        }\r\n    });\r\n    return EventDispatcher;\r\n}());\r\nexport { EventDispatcher };\r\n/**\r\n * A version of the [[EventDispatcher]] that dispatches events for a specific\r\n * target object.\r\n *\r\n * @ignore\r\n */\r\nvar TargetedEventDispatcher = /** @class */ (function (_super) {\r\n    __extends(TargetedEventDispatcher, _super);\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param target Event dispatcher target\r\n     */\r\n    function TargetedEventDispatcher(target) {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * A target object which is originating events using this dispatcher.\r\n         */\r\n        Object.defineProperty(_this, \"target\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        _this.target = target;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Copies all dispatcher parameters, including listeners, from another event\r\n     * dispatcher.\r\n     *\r\n     * @param source Source event dispatcher\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(TargetedEventDispatcher.prototype, \"copyFrom\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (source) {\r\n            var _this = this;\r\n            if (this._disposed) {\r\n                throw new Error(\"EventDispatcher is disposed\");\r\n            }\r\n            if (source === this) {\r\n                throw new Error(\"Cannot copyFrom the same TargetedEventDispatcher\");\r\n            }\r\n            var disposers = [];\r\n            $array.each(source._listeners, function (x) {\r\n                // TODO very hacky\r\n                if (x.context === source.target) {\r\n                    return;\r\n                }\r\n                // TODO is this correct ?\r\n                if (!x.killed && x.shouldClone) {\r\n                    if (x.type === null) {\r\n                        disposers.push(_this.onAll(x.callback, x.context));\r\n                    }\r\n                    else if (x.once) {\r\n                        disposers.push(_this.once(x.type, x.callback, x.context));\r\n                    }\r\n                    else {\r\n                        disposers.push(_this.on(x.type, x.callback, x.context));\r\n                    }\r\n                }\r\n            });\r\n            return new MultiDisposer(disposers);\r\n        }\r\n    });\r\n    return TargetedEventDispatcher;\r\n}(EventDispatcher));\r\nexport { TargetedEventDispatcher };\r\n//# sourceMappingURL=EventDispatcher.js.map","import { __extends } from \"tslib\";\r\nimport { Entity } from \"./Entity\";\r\n/**\r\n * Presets for common UI elements.\r\n */\r\nvar InterfaceColors = /** @class */ (function (_super) {\r\n    __extends(InterfaceColors, _super);\r\n    function InterfaceColors() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(InterfaceColors, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"InterfaceColors\"\r\n    });\r\n    Object.defineProperty(InterfaceColors, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: Entity.classNames.concat([InterfaceColors.className])\r\n    });\r\n    return InterfaceColors;\r\n}(Entity));\r\nexport { InterfaceColors };\r\n//# sourceMappingURL=InterfaceColors.js.map","import { __extends, __read, __spreadArray } from \"tslib\";\r\nimport { Entity } from \"./Entity\";\r\nimport * as $array from \"./Array\";\r\nimport en from \"../../../locales/en\";\r\n;\r\nvar Language = /** @class */ (function (_super) {\r\n    __extends(Language, _super);\r\n    function Language() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Language.prototype, \"_setDefaults\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this.setPrivate(\"defaultLocale\", en);\r\n            _super.prototype._setDefaults.call(this);\r\n        }\r\n    });\r\n    Object.defineProperty(Language.prototype, \"translate\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (prompt, locale) {\r\n            var rest = [];\r\n            for (var _i = 2; _i < arguments.length; _i++) {\r\n                rest[_i - 2] = arguments[_i];\r\n            }\r\n            // Get langauge\r\n            if (!locale) {\r\n                locale = this._root.locale || this.getPrivate(\"defaultLocale\");\r\n            }\r\n            // Init translation\r\n            var translation = prompt;\r\n            var value = locale[prompt];\r\n            // Try to look for the translation\r\n            if (value === null) {\r\n                translation = \"\";\r\n            }\r\n            else if (value != null) {\r\n                // It might be an empty string\r\n                if (value) {\r\n                    translation = value;\r\n                }\r\n            }\r\n            else if (locale !== this.getPrivate(\"defaultLocale\")) {\r\n                // Try to look in default language\r\n                return this.translate.apply(this, __spreadArray([prompt, this.getPrivate(\"defaultLocale\")], __read(rest), false));\r\n            }\r\n            // Replace %1, %2, etc params\r\n            if (rest.length) {\r\n                for (var len = rest.length, i = 0; i < len; ++i) {\r\n                    translation = translation.split(\"%\" + (i + 1)).join(rest[i]);\r\n                }\r\n            }\r\n            // Return the translation\r\n            return translation;\r\n        }\r\n    });\r\n    Object.defineProperty(Language.prototype, \"translateAny\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (prompt, locale) {\r\n            var rest = [];\r\n            for (var _i = 2; _i < arguments.length; _i++) {\r\n                rest[_i - 2] = arguments[_i];\r\n            }\r\n            return this.translate.apply(this, __spreadArray([prompt, locale], __read(rest), false));\r\n        }\r\n    });\r\n    Object.defineProperty(Language.prototype, \"setTranslationAny\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (prompt, translation, locale) {\r\n            var localeTarget = locale || this._root.locale;\r\n            localeTarget[prompt] = translation;\r\n        }\r\n    });\r\n    Object.defineProperty(Language.prototype, \"translateEmpty\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (prompt, locale) {\r\n            var rest = [];\r\n            for (var _i = 2; _i < arguments.length; _i++) {\r\n                rest[_i - 2] = arguments[_i];\r\n            }\r\n            var translation = this.translate.apply(this, __spreadArray([prompt, locale], __read(rest), false));\r\n            return translation == prompt ? \"\" : translation;\r\n        }\r\n    });\r\n    Object.defineProperty(Language.prototype, \"translateFunc\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (prompt, locale) {\r\n            if (this._root.locale[prompt]) {\r\n                return this._root.locale[prompt];\r\n            }\r\n            // Try to look in default language\r\n            if (locale !== this.getPrivate(\"defaultLocale\")) {\r\n                return this.translateFunc(prompt, this.getPrivate(\"defaultLocale\"));\r\n            }\r\n            // Fail - return empty function\r\n            return function () {\r\n                return \"\";\r\n            };\r\n        }\r\n    });\r\n    Object.defineProperty(Language.prototype, \"translateAll\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (list, locale) {\r\n            var _this = this;\r\n            // Translate all items in the list\r\n            if (!this.isDefault()) {\r\n                return $array.map(list, function (x) { return _this.translate(x, locale); });\r\n            }\r\n            else {\r\n                return list;\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * Returns `true` if the currently selected locale is a default locale.\r\n     *\r\n     * @return `true` if locale is default; `false` if it is not.\r\n     */\r\n    Object.defineProperty(Language.prototype, \"isDefault\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            return this.getPrivate(\"defaultLocale\") === this._root.locale;\r\n        }\r\n    });\r\n    return Language;\r\n}(Entity));\r\nexport { Language };\r\n//# sourceMappingURL=Language.js.map","import { __extends, __generator } from \"tslib\";\r\nimport { EventDispatcher } from \"./EventDispatcher\";\r\nimport * as $array from \"./Array\";\r\n/**\r\n * Checks if specific index fits into length.\r\n *\r\n * @param index  Index\r\n * @param len    Length\r\n * @ignore\r\n */\r\nfunction checkBounds(index, len) {\r\n    if (!(index >= 0 && index < len)) {\r\n        throw new Error(\"Index out of bounds: \" + index);\r\n    }\r\n}\r\n/**\r\n * A List class is used to hold a number of indexed items of the same type.\r\n */\r\nvar List = /** @class */ (function () {\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param initial  Inital list of values to add to list\r\n     */\r\n    function List(initial) {\r\n        if (initial === void 0) { initial = []; }\r\n        /**\r\n         * List values.\r\n         */\r\n        Object.defineProperty(this, \"_values\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new EventDispatcher()\r\n        });\r\n        this._values = initial;\r\n    }\r\n    Object.defineProperty(List.prototype, \"values\", {\r\n        /**\r\n         * An array of values in the list.\r\n         *\r\n         * Do not use this property to add values. Rather use dedicated methods, like\r\n         * `push()`, `removeIndex()`, etc.\r\n         *\r\n         * @readonly\r\n         * @return List values\r\n         */\r\n        get: function () {\r\n            return this._values;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Checks if list contains specific item reference.\r\n     *\r\n     * @param item  Item to search for\r\n     * @return `true` if found, `false` if not found\r\n     */\r\n    Object.defineProperty(List.prototype, \"contains\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (value) {\r\n            return this._values.indexOf(value) !== -1;\r\n        }\r\n    });\r\n    /**\r\n     * Removes specific item from the list.\r\n     *\r\n     * @param item An item to remove\r\n     */\r\n    Object.defineProperty(List.prototype, \"removeValue\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (value) {\r\n            var i = 0;\r\n            var length = this._values.length;\r\n            while (i < length) {\r\n                // TODO handle NaN\r\n                if (this._values[i] === value) {\r\n                    this.removeIndex(i);\r\n                    --length;\r\n                }\r\n                else {\r\n                    ++i;\r\n                }\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * Searches the list for specific item and returns its index.\r\n     *\r\n     * @param item  An item to search for\r\n     * @return Index or -1 if not found\r\n     */\r\n    Object.defineProperty(List.prototype, \"indexOf\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (value) {\r\n            return $array.indexOf(this._values, value);\r\n        }\r\n    });\r\n    Object.defineProperty(List.prototype, \"length\", {\r\n        /**\r\n         * Number of items in list.\r\n         *\r\n         * @readonly\r\n         * @return Number of items\r\n         */\r\n        get: function () {\r\n            return this._values.length;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Checks if there's a value at specific index.\r\n     *\r\n     * @param index  Index\r\n     * @return Value exists?\r\n     */\r\n    Object.defineProperty(List.prototype, \"hasIndex\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (index) {\r\n            return index >= 0 && index < this._values.length;\r\n        }\r\n    });\r\n    /**\r\n     * Returns an item at specified index.\r\n     *\r\n     * @param index  Index\r\n     * @return List item\r\n     */\r\n    Object.defineProperty(List.prototype, \"getIndex\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (index) {\r\n            return this._values[index];\r\n        }\r\n    });\r\n    Object.defineProperty(List.prototype, \"_onPush\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (newValue) {\r\n            if (this.events.isEnabled(\"push\")) {\r\n                this.events.dispatch(\"push\", {\r\n                    type: \"push\",\r\n                    target: this,\r\n                    newValue: newValue\r\n                });\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(List.prototype, \"_onInsertIndex\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (index, newValue) {\r\n            if (this.events.isEnabled(\"insertIndex\")) {\r\n                this.events.dispatch(\"insertIndex\", {\r\n                    type: \"insertIndex\",\r\n                    target: this,\r\n                    index: index,\r\n                    newValue: newValue\r\n                });\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(List.prototype, \"_onSetIndex\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (index, oldValue, newValue) {\r\n            if (this.events.isEnabled(\"setIndex\")) {\r\n                this.events.dispatch(\"setIndex\", {\r\n                    type: \"setIndex\",\r\n                    target: this,\r\n                    index: index,\r\n                    oldValue: oldValue,\r\n                    newValue: newValue\r\n                });\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(List.prototype, \"_onRemoveIndex\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (index, oldValue) {\r\n            if (this.events.isEnabled(\"removeIndex\")) {\r\n                this.events.dispatch(\"removeIndex\", {\r\n                    type: \"removeIndex\",\r\n                    target: this,\r\n                    index: index,\r\n                    oldValue: oldValue\r\n                });\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(List.prototype, \"_onMoveIndex\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (oldIndex, newIndex, value) {\r\n            if (this.events.isEnabled(\"moveIndex\")) {\r\n                this.events.dispatch(\"moveIndex\", {\r\n                    type: \"moveIndex\",\r\n                    target: this,\r\n                    oldIndex: oldIndex,\r\n                    newIndex: newIndex,\r\n                    value: value,\r\n                });\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(List.prototype, \"_onClear\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (oldValues) {\r\n            if (this.events.isEnabled(\"clear\")) {\r\n                this.events.dispatch(\"clear\", {\r\n                    type: \"clear\",\r\n                    target: this,\r\n                    oldValues: oldValues\r\n                });\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * Sets value at specific index.\r\n     *\r\n     * If there's already a value at the index, it is overwritten.\r\n     *\r\n     * @param index  Index\r\n     * @param value  New value\r\n     * @return New value\r\n     */\r\n    Object.defineProperty(List.prototype, \"setIndex\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (index, value) {\r\n            checkBounds(index, this._values.length);\r\n            var oldValue = this._values[index];\r\n            // Do nothing if the old value and the new value are the same\r\n            if (oldValue !== value) {\r\n                this._values[index] = value;\r\n                this._onSetIndex(index, oldValue, value);\r\n            }\r\n            return oldValue;\r\n        }\r\n    });\r\n    /**\r\n     * Adds an item to the list at a specific index, which pushes all the other\r\n     * items further down the list.\r\n     *\r\n     * @param index Index\r\n     * @param item  An item to add\r\n     */\r\n    Object.defineProperty(List.prototype, \"insertIndex\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (index, value) {\r\n            checkBounds(index, this._values.length + 1);\r\n            $array.insertIndex(this._values, index, value);\r\n            this._onInsertIndex(index, value);\r\n            return value;\r\n        }\r\n    });\r\n    /**\r\n     * Swaps indexes of two items in the list.\r\n     *\r\n     * @param a  Item 1\r\n     * @param b  Item 2\r\n     */\r\n    Object.defineProperty(List.prototype, \"swap\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (a, b) {\r\n            var len = this._values.length;\r\n            checkBounds(a, len);\r\n            checkBounds(b, len);\r\n            if (a !== b) {\r\n                var value_a = this._values[a];\r\n                var value_b = this._values[b];\r\n                this._values[a] = value_b;\r\n                this._onSetIndex(a, value_a, value_b);\r\n                this._values[b] = value_a;\r\n                this._onSetIndex(b, value_b, value_a);\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * Removes a value at specific index.\r\n     *\r\n     * @param index  Index of value to remove\r\n     * @return Removed value\r\n     */\r\n    Object.defineProperty(List.prototype, \"removeIndex\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (index) {\r\n            checkBounds(index, this._values.length);\r\n            var oldValue = this._values[index];\r\n            $array.removeIndex(this._values, index);\r\n            this._onRemoveIndex(index, oldValue);\r\n            return oldValue;\r\n        }\r\n    });\r\n    /**\r\n     * Moves an item to a specific index within the list.\r\n     *\r\n     * If the index is not specified it will move the item to the end of the\r\n     * list.\r\n     *\r\n     * @param value  Item to move\r\n     * @param index  Index to place item at\r\n     */\r\n    Object.defineProperty(List.prototype, \"moveValue\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (value, toIndex) {\r\n            // TODO don't do anything if the desired index is the same as the current index\r\n            var index = this.indexOf(value);\r\n            // TODO remove all old values rather than only the first ?\r\n            if (index !== -1) {\r\n                $array.removeIndex(this._values, index);\r\n                if (toIndex == null) {\r\n                    var toIndex_1 = this._values.length;\r\n                    this._values.push(value);\r\n                    this._onMoveIndex(index, toIndex_1, value);\r\n                }\r\n                else {\r\n                    $array.insertIndex(this._values, toIndex, value);\r\n                    this._onMoveIndex(index, toIndex, value);\r\n                }\r\n            }\r\n            else if (toIndex == null) {\r\n                this._values.push(value);\r\n                this._onPush(value);\r\n            }\r\n            else {\r\n                $array.insertIndex(this._values, toIndex, value);\r\n                this._onInsertIndex(toIndex, value);\r\n            }\r\n            return value;\r\n        }\r\n    });\r\n    /**\r\n     * Adds an item to the end of the list.\r\n     *\r\n     * @param item  An item to add\r\n     */\r\n    Object.defineProperty(List.prototype, \"push\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (value) {\r\n            this._values.push(value);\r\n            this._onPush(value);\r\n            return value;\r\n        }\r\n    });\r\n    /**\r\n     * Adds an item as a first item in the list.\r\n     *\r\n     * @param item  An item to add\r\n     */\r\n    Object.defineProperty(List.prototype, \"unshift\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (value) {\r\n            this.insertIndex(0, value);\r\n            return value;\r\n        }\r\n    });\r\n    /**\r\n     * Adds multiple items to the list.\r\n     *\r\n     * @param items  An Array of items to add\r\n     */\r\n    Object.defineProperty(List.prototype, \"pushAll\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (values) {\r\n            var _this = this;\r\n            $array.each(values, function (value) {\r\n                _this.push(value);\r\n            });\r\n        }\r\n    });\r\n    /**\r\n     * Copies and adds items from abother list.\r\n     *\r\n     * @param source  A list top copy items from\r\n     */\r\n    Object.defineProperty(List.prototype, \"copyFrom\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (source) {\r\n            this.pushAll(source._values);\r\n        }\r\n    });\r\n    /**\r\n     * Returns the last item from the list, and removes it.\r\n     *\r\n     * @return Item\r\n     */\r\n    Object.defineProperty(List.prototype, \"pop\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var index = this._values.length - 1;\r\n            return index < 0 ? undefined : this.removeIndex(this._values.length - 1);\r\n        }\r\n    });\r\n    /**\r\n     * Returns the first item from the list, and removes it.\r\n     *\r\n     * @return Item\r\n     */\r\n    Object.defineProperty(List.prototype, \"shift\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            return this._values.length ? this.removeIndex(0) : undefined;\r\n        }\r\n    });\r\n    /**\r\n     * Sets multiple items to the list.\r\n     *\r\n     * All current items are removed.\r\n     *\r\n     * @param newArray  New items\r\n     */\r\n    Object.defineProperty(List.prototype, \"setAll\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (newArray) {\r\n            var _this = this;\r\n            var old = this._values;\r\n            this._values = [];\r\n            this._onClear(old);\r\n            $array.each(newArray, function (value) {\r\n                _this._values.push(value);\r\n                _this._onPush(value);\r\n            });\r\n        }\r\n    });\r\n    /**\r\n     * Removes all items from the list.\r\n     */\r\n    Object.defineProperty(List.prototype, \"clear\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this.setAll([]);\r\n        }\r\n    });\r\n    /**\r\n     * Returns an ES6 iterator for the list.\r\n     */\r\n    Object.defineProperty(List.prototype, Symbol.iterator, {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var length, i;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        length = this._values.length;\r\n                        i = 0;\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        if (!(i < length)) return [3 /*break*/, 4];\r\n                        return [4 /*yield*/, this._values[i]];\r\n                    case 2:\r\n                        _a.sent();\r\n                        _a.label = 3;\r\n                    case 3:\r\n                        ++i;\r\n                        return [3 /*break*/, 1];\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        }\r\n    });\r\n    /**\r\n     * Calls `f` for each element in the list.\r\n     *\r\n     * `f` should have at least one parameter defined which will get a current\r\n     * item, with optional second argument - index.\r\n     */\r\n    Object.defineProperty(List.prototype, \"each\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (f) {\r\n            $array.each(this._values, f);\r\n        }\r\n    });\r\n    /**\r\n     * Calls `f` for each element in the list, from right to left.\r\n     *\r\n     * `f` should have at least one parameter defined which will get a current\r\n     * item, with optional second argument - index.\r\n     */\r\n    Object.defineProperty(List.prototype, \"eachReverse\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (f) {\r\n            $array.eachReverse(this._values, f);\r\n        }\r\n    });\r\n    return List;\r\n}());\r\nexport { List };\r\n/**\r\n * A version of a [[List]] where the elements are disposed automatically when\r\n * removed from the list, unless `autoDispose` is set to `false`.\r\n */\r\nvar ListAutoDispose = /** @class */ (function (_super) {\r\n    __extends(ListAutoDispose, _super);\r\n    function ListAutoDispose() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Automatically disposes elements that are removed from the list.\r\n         *\r\n         * @default true\r\n         */\r\n        Object.defineProperty(_this, \"autoDispose\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(_this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(ListAutoDispose.prototype, \"_onSetIndex\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (index, oldValue, newValue) {\r\n            if (this.autoDispose) {\r\n                oldValue.dispose();\r\n            }\r\n            _super.prototype._onSetIndex.call(this, index, oldValue, newValue);\r\n        }\r\n    });\r\n    Object.defineProperty(ListAutoDispose.prototype, \"_onRemoveIndex\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (index, oldValue) {\r\n            if (this.autoDispose) {\r\n                oldValue.dispose();\r\n            }\r\n            _super.prototype._onRemoveIndex.call(this, index, oldValue);\r\n        }\r\n    });\r\n    Object.defineProperty(ListAutoDispose.prototype, \"_onClear\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (oldValues) {\r\n            if (this.autoDispose) {\r\n                $array.each(oldValues, function (x) {\r\n                    x.dispose();\r\n                });\r\n            }\r\n            _super.prototype._onClear.call(this, oldValues);\r\n        }\r\n    });\r\n    Object.defineProperty(ListAutoDispose.prototype, \"isDisposed\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            return this._disposed;\r\n        }\r\n    });\r\n    Object.defineProperty(ListAutoDispose.prototype, \"dispose\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            if (!this._disposed) {\r\n                this._disposed = true;\r\n                if (this.autoDispose) {\r\n                    $array.each(this._values, function (x) {\r\n                        x.dispose();\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    });\r\n    return ListAutoDispose;\r\n}(List));\r\nexport { ListAutoDispose };\r\n/**\r\n * A version of a [[List]] that is able to create new elements as well as\r\n * apply additional settings to newly created items.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/list-templates/} for more info\r\n */\r\nvar ListTemplate = /** @class */ (function (_super) {\r\n    __extends(ListTemplate, _super);\r\n    function ListTemplate(template, make) {\r\n        var _this = _super.call(this) || this;\r\n        Object.defineProperty(_this, \"template\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(_this, \"make\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        _this.template = template;\r\n        _this.make = make;\r\n        return _this;\r\n    }\r\n    return ListTemplate;\r\n}(ListAutoDispose));\r\nexport { ListTemplate };\r\n//# sourceMappingURL=List.js.map","import { isNumber } from \"./Type\";\r\n/**\r\n * ============================================================================\r\n * CONSTANTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nexport var PI = Math.PI;\r\nexport var HALFPI = PI / 2;\r\nexport var RADIANS = PI / 180;\r\nexport var DEGREES = 180 / PI;\r\n/**\r\n * Rounds the numeric value to whole number or specific precision of set.\r\n *\r\n * @param value      Value\r\n * @param precision  Precision (number of decimal points)\r\n * @param floor  In case value ends with 0.5 and precision is 0, we might need to floor the value instead of ceiling it.\r\n * @return Rounded value\r\n */\r\nexport function round(value, precision, floor) {\r\n    if (!isNumber(precision) || precision <= 0) {\r\n        var rounded = Math.round(value);\r\n        if (floor) {\r\n            if (rounded - value == 0.5) {\r\n                rounded--;\r\n            }\r\n        }\r\n        return rounded;\r\n    }\r\n    else {\r\n        var d = Math.pow(10, precision);\r\n        return Math.round(value * d) / d;\r\n    }\r\n}\r\n/**\r\n * Ceils the numeric value to whole number or specific precision of set.\r\n *\r\n * @param value      Value\r\n * @param precision  Precision (number of decimal points)\r\n * @return Rounded value\r\n */\r\nexport function ceil(value, precision) {\r\n    if (!isNumber(precision) || precision <= 0) {\r\n        return Math.ceil(value);\r\n    }\r\n    else {\r\n        var d = Math.pow(10, precision);\r\n        return Math.ceil(value * d) / d;\r\n    }\r\n}\r\n/**\r\n * [getCubicControlPointA description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param p0        [description]\r\n * @param p1        [description]\r\n * @param p2        [description]\r\n * @param p3        [description]\r\n * @param tensionX  [description]\r\n * @param tensionY  [description]\r\n * @return [description]\r\n */\r\nexport function getCubicControlPointA(p0, p1, p2, tensionX, tensionY) {\r\n    return { x: ((-p0.x + p1.x / tensionX + p2.x) * tensionX), y: ((-p0.y + p1.y / tensionY + p2.y) * tensionY) };\r\n}\r\n/**\r\n * [getCubicControlPointB description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param p0        [description]\r\n * @param p1        [description]\r\n * @param p2        [description]\r\n * @param p3        [description]\r\n * @param tensionX  [description]\r\n * @param tensionY  [description]\r\n * @return [description]\r\n */\r\nexport function getCubicControlPointB(p1, p2, p3, tensionX, tensionY) {\r\n    return { x: ((p1.x + p2.x / tensionX - p3.x) * tensionX), y: ((p1.y + p2.y / tensionY - p3.y) * tensionY) };\r\n}\r\nexport function fitToRange(value, min, max) {\r\n    return Math.min(Math.max(value, min), max);\r\n}\r\n/**\r\n * Returns sine of an angle specified in degrees.\r\n *\r\n * @param value  Value\r\n * @return Sine\r\n */\r\nexport function sin(angle) {\r\n    return Math.sin(RADIANS * angle);\r\n}\r\n/**\r\n * Returns tan of an angle specified in degrees.\r\n *\r\n * @param value  Value\r\n * @return Sine\r\n */\r\nexport function tan(angle) {\r\n    return Math.tan(RADIANS * angle);\r\n}\r\n/**\r\n * Returns cosine of an angle specified in degrees.\r\n *\r\n * @param value  Value\r\n * @return Cosine\r\n */\r\nexport function cos(angle) {\r\n    return Math.cos(RADIANS * angle);\r\n}\r\n// 0 to 360\r\nexport function normalizeAngle(value) {\r\n    value = value % 360;\r\n    if (value < 0) {\r\n        value += 360;\r\n    }\r\n    return value;\r\n}\r\n// TODO this doesn't work properly for skewing, and it's probably broken for rotation too\r\nexport function getArcBounds(cx, cy, startAngle, endAngle, radius) {\r\n    var minX = Number.MAX_VALUE;\r\n    var minY = Number.MAX_VALUE;\r\n    var maxX = -Number.MAX_VALUE;\r\n    var maxY = -Number.MAX_VALUE;\r\n    var bpoints = [];\r\n    bpoints.push(getArcPoint(radius, startAngle));\r\n    bpoints.push(getArcPoint(radius, endAngle));\r\n    var fromAngle = Math.min(Math.floor(startAngle / 90) * 90, Math.floor(endAngle / 90) * 90);\r\n    var toAngle = Math.max(Math.ceil(startAngle / 90) * 90, Math.ceil(endAngle / 90) * 90);\r\n    for (var angle = fromAngle; angle <= toAngle; angle += 90) {\r\n        if (angle >= startAngle && angle <= endAngle) {\r\n            bpoints.push(getArcPoint(radius, angle));\r\n        }\r\n    }\r\n    for (var i = 0; i < bpoints.length; i++) {\r\n        var pt = bpoints[i];\r\n        if (pt.x < minX) {\r\n            minX = pt.x;\r\n        }\r\n        if (pt.y < minY) {\r\n            minY = pt.y;\r\n        }\r\n        if (pt.x > maxX) {\r\n            maxX = pt.x;\r\n        }\r\n        if (pt.y > maxY) {\r\n            maxY = pt.y;\r\n        }\r\n    }\r\n    return ({ left: cx + minX, top: cy + minY, right: cx + maxX, bottom: cy + maxY });\r\n}\r\n/**\r\n * Returns point on arc\r\n *\r\n * @param center point\r\n * @param radius\r\n * @param arc\r\n * @return {boolean}\r\n */\r\nexport function getArcPoint(radius, arc) {\r\n    return ({ x: radius * cos(arc), y: radius * sin(arc) });\r\n}\r\nexport function mergeBounds(bounds) {\r\n    var len = bounds.length;\r\n    if (len > 0) {\r\n        var bound = bounds[0];\r\n        var left = bound.left;\r\n        var top_1 = bound.top;\r\n        var right = bound.right;\r\n        var bottom = bound.bottom;\r\n        if (len > 1) {\r\n            for (var i = 1; i < len; i++) {\r\n                bound = bounds[i];\r\n                left = Math.min(bound.left, left);\r\n                right = Math.max(bound.right, right);\r\n                top_1 = Math.min(bound.top, top_1);\r\n                bottom = Math.max(bound.bottom, bottom);\r\n            }\r\n        }\r\n        return { left: left, right: right, top: top_1, bottom: bottom };\r\n    }\r\n    return { left: 0, right: 0, top: 0, bottom: 0 };\r\n}\r\nexport function fitAngleToRange(value, startAngle, endAngle) {\r\n    if (startAngle > endAngle) {\r\n        var temp = startAngle;\r\n        startAngle = endAngle;\r\n        endAngle = temp;\r\n    }\r\n    value = normalizeAngle(value);\r\n    var count = (startAngle - normalizeAngle(startAngle)) / 360;\r\n    if (value < startAngle) {\r\n        value += 360 * (count + 1);\r\n    }\r\n    var maxEnd = startAngle + (endAngle - startAngle) / 2 + 180;\r\n    var maxStart = startAngle + (endAngle - startAngle) / 2 - 180;\r\n    if (value > endAngle) {\r\n        if (value - 360 > startAngle) {\r\n            value -= 360;\r\n        }\r\n        else {\r\n            if (value < maxEnd) {\r\n                value = endAngle;\r\n            }\r\n            else {\r\n                value = startAngle;\r\n            }\r\n        }\r\n    }\r\n    if (value < startAngle) {\r\n        if (value > maxStart) {\r\n            value = startAngle;\r\n        }\r\n        else {\r\n            value = endAngle;\r\n        }\r\n    }\r\n    return value;\r\n}\r\nexport function inBounds(point, bounds) {\r\n    if (point.x >= bounds.left && point.y >= bounds.top && point.x <= bounds.right && point.y <= bounds.bottom) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nexport function getAngle(point1, point2) {\r\n    if (!point2) {\r\n        point2 = { x: point1.x * 2, y: point1.y * 2 };\r\n    }\r\n    var diffX = point2.x - point1.x;\r\n    var diffY = point2.y - point1.y;\r\n    var angle = Math.atan2(diffY, diffX) * DEGREES;\r\n    if (angle < 0) {\r\n        angle += 360;\r\n    }\r\n    return normalizeAngle(angle);\r\n}\r\n/**\r\n * [getPointOnQuadraticCurve description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param pointA        [description]\r\n * @param pointB        [description]\r\n * @param controlPoint  [description]\r\n * @param position      [description]\r\n * @return [description]\r\n */\r\nexport function getPointOnQuadraticCurve(pointA, pointB, controlPoint, position) {\r\n    var x = (1 - position) * (1 - position) * pointA.x + 2 * (1 - position) * position * controlPoint.x + position * position * pointB.x;\r\n    var y = (1 - position) * (1 - position) * pointA.y + 2 * (1 - position) * position * controlPoint.y + position * position * pointB.y;\r\n    return { x: x, y: y };\r\n}\r\nexport function getPointOnLine(pointA, pointB, position) {\r\n    return { x: pointA.x + (pointB.x - pointA.x) * position, y: pointA.y + (pointB.y - pointA.y) * position };\r\n}\r\n/**\r\n * Returns the closest value from the array of values to the reference value.\r\n *\r\n * @param values  Array of values\r\n * @param value   Reference value\r\n * @return Closes value from the array\r\n */\r\nexport function closest(values, referenceValue) {\r\n    return values.reduce(function (prev, curr) {\r\n        return (Math.abs(curr - referenceValue) < Math.abs(prev - referenceValue) ? curr : prev);\r\n    });\r\n}\r\nexport function boundsOverlap(bounds1, bounds2) {\r\n    return !(bounds1.bottom < bounds2.top || bounds2.bottom < bounds1.top || bounds1.right < bounds2.left || bounds2.right < bounds1.left);\r\n}\r\n//# sourceMappingURL=Math.js.map","/**\r\n * Modified from Pixi:\r\n *\r\n * The MIT License\r\n *\r\n * Copyright (c) 2013-2017 Mathew Groves, Chad Engler\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n/**\r\n * @ignore\r\n */\r\nvar Matrix = /** @class */ (function () {\r\n    function Matrix(a, b, c, d, tx, ty) {\r\n        if (a === void 0) { a = 1; }\r\n        if (b === void 0) { b = 0; }\r\n        if (c === void 0) { c = 0; }\r\n        if (d === void 0) { d = 1; }\r\n        if (tx === void 0) { tx = 0; }\r\n        if (ty === void 0) { ty = 0; }\r\n        Object.defineProperty(this, \"a\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"b\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"c\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"d\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"tx\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"ty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.a = a;\r\n        this.b = b;\r\n        this.c = c;\r\n        this.d = d;\r\n        this.tx = tx;\r\n        this.ty = ty;\r\n    }\r\n    /**\r\n     * Sets the matrix based on all the available properties\r\n     */\r\n    Object.defineProperty(Matrix.prototype, \"setTransform\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (x, y, pivotX, pivotY, rotation, scale) {\r\n            if (scale === void 0) { scale = 1; }\r\n            this.a = Math.cos(rotation) * scale;\r\n            this.b = Math.sin(rotation) * scale;\r\n            this.c = -Math.sin(rotation) * scale;\r\n            this.d = Math.cos(rotation) * scale;\r\n            this.tx = x - ((pivotX * this.a) + (pivotY * this.c));\r\n            this.ty = y - ((pivotX * this.b) + (pivotY * this.d));\r\n        }\r\n    });\r\n    /**\r\n     * Get a new position with the current transformation applied.\r\n     * Can be used to go from a child's coordinate space to the world coordinate space. (e.g. rendering)\r\n     */\r\n    Object.defineProperty(Matrix.prototype, \"apply\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (origin) {\r\n            return {\r\n                x: (this.a * origin.x) + (this.c * origin.y) + this.tx,\r\n                y: (this.b * origin.x) + (this.d * origin.y) + this.ty\r\n            };\r\n        }\r\n    });\r\n    /**\r\n     * Get a new position with the inverse of the current transformation applied.\r\n     * Can be used to go from the world coordinate space to a child's coordinate space. (e.g. input)\r\n     */\r\n    Object.defineProperty(Matrix.prototype, \"applyInverse\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (origin) {\r\n            var id = 1 / ((this.a * this.d) + (this.c * -this.b));\r\n            return {\r\n                x: (this.d * id * origin.x) + (-this.c * id * origin.y) + (((this.ty * this.c) - (this.tx * this.d)) * id),\r\n                y: (this.a * id * origin.y) + (-this.b * id * origin.x) + (((-this.ty * this.a) + (this.tx * this.b)) * id)\r\n            };\r\n        }\r\n    });\r\n    /**\r\n     * Appends the given Matrix to this Matrix.\r\n     */\r\n    Object.defineProperty(Matrix.prototype, \"append\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (matrix) {\r\n            var a1 = this.a;\r\n            var b1 = this.b;\r\n            var c1 = this.c;\r\n            var d1 = this.d;\r\n            this.a = (matrix.a * a1) + (matrix.b * c1);\r\n            this.b = (matrix.a * b1) + (matrix.b * d1);\r\n            this.c = (matrix.c * a1) + (matrix.d * c1);\r\n            this.d = (matrix.c * b1) + (matrix.d * d1);\r\n            this.tx = (matrix.tx * a1) + (matrix.ty * c1) + this.tx;\r\n            this.ty = (matrix.tx * b1) + (matrix.ty * d1) + this.ty;\r\n        }\r\n    });\r\n    /**\r\n     * Prepends the given Matrix to this Matrix.\r\n     */\r\n    Object.defineProperty(Matrix.prototype, \"prepend\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (matrix) {\r\n            var tx1 = this.tx;\r\n            if (matrix.a !== 1 || matrix.b !== 0 || matrix.c !== 0 || matrix.d !== 1) {\r\n                var a1 = this.a;\r\n                var c1 = this.c;\r\n                this.a = (a1 * matrix.a) + (this.b * matrix.c);\r\n                this.b = (a1 * matrix.b) + (this.b * matrix.d);\r\n                this.c = (c1 * matrix.a) + (this.d * matrix.c);\r\n                this.d = (c1 * matrix.b) + (this.d * matrix.d);\r\n            }\r\n            this.tx = (tx1 * matrix.a) + (this.ty * matrix.c) + matrix.tx;\r\n            this.ty = (tx1 * matrix.b) + (this.ty * matrix.d) + matrix.ty;\r\n        }\r\n    });\r\n    /**\r\n     * Copies the other matrix's properties into this matrix\r\n     */\r\n    Object.defineProperty(Matrix.prototype, \"copyFrom\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (matrix) {\r\n            this.a = matrix.a;\r\n            this.b = matrix.b;\r\n            this.c = matrix.c;\r\n            this.d = matrix.d;\r\n            this.tx = matrix.tx;\r\n            this.ty = matrix.ty;\r\n        }\r\n    });\r\n    return Matrix;\r\n}());\r\nexport { Matrix };\r\n//# sourceMappingURL=Matrix.js.map","import { __extends } from \"tslib\";\r\nimport { Entity } from \"./Entity\";\r\nimport { StyleRule } from \"./Utils\";\r\nimport { MultiDisposer, CounterDisposer } from \"../../core/util/Disposer\";\r\nimport * as $utils from \"./Utils\";\r\n/**\r\n * @ignore\r\n */\r\nvar rules;\r\n/**\r\n * @ignore\r\n */\r\nfunction modalCSS(element, root, _prefix) {\r\n    var ic = root.interfaceColors;\r\n    var active = ic.get(\"secondaryButton\").toCSS();\r\n    var text = ic.get(\"text\").toCSS();\r\n    var shadow = ic.get(\"alternativeBackground\").toCSS(0.45);\r\n    //const altbg = ic.get(\"alternativeBackground\")!.toCSS();\r\n    if (!rules) {\r\n        var disposer_1 = new MultiDisposer([\r\n            new StyleRule(element, \".am5-modal\", {\r\n                \"width\": \"100%\",\r\n                \"height\": \"100%\",\r\n                \"position\": \"absolute\",\r\n                \"z-index\": \"100000\",\r\n                \"top\": \"0\",\r\n                \"left\": \"0\"\r\n            }),\r\n            new StyleRule(element, \".am5-modal-curtain\", {\r\n                \"top\": \"0\",\r\n                \"left\": \"0\",\r\n                \"width\": \"100%\",\r\n                \"height\": \"100%\",\r\n                \"position\": \"absolute\",\r\n                \"background\": ic.get(\"background\").toCSS(0.5),\r\n                \"z-index\": \"100\"\r\n            }),\r\n            new StyleRule(element, \".am5-modal-wrapper\", {\r\n                \"top\": \"0\",\r\n                \"left\": \"0\",\r\n                \"width\": \"100%\",\r\n                \"height\": \"100%\",\r\n                \"position\": \"absolute\",\r\n                \"text-align\": \"center\",\r\n                \"white-space\": \"nowrap\",\r\n                \"background\": ic.get(\"background\").toCSS(0.5),\r\n                \"z-index\": \"101\"\r\n            }),\r\n            new StyleRule(element, \".am5-modal-wrapper:before\", {\r\n                \"content\": \"''\",\r\n                \"display\": \"inline-block\",\r\n                \"height\": \"100%\",\r\n                \"vertical-align\": \"middle\",\r\n                \"margin-right\": \"-0.25em\"\r\n            }),\r\n            new StyleRule(element, \".am5-modal-content\", {\r\n                \"display\": \"inline-block\",\r\n                \"padding\": \"1.2em\",\r\n                \"vertical-align\": \"middle\",\r\n                \"text-align\": \"left\",\r\n                \"white-space\": \"normal\",\r\n                \"background\": ic.get(\"background\").toCSS(),\r\n                //\"border\": \"1px solid \" + ic.get(\"alternativeBackground\")!.toCSS(),\r\n                \"border-radius\": \"4px\",\r\n                \"-webkit-box-shadow\": \"0px 0px 36px 0px \" + shadow,\r\n                \"box-shadow\": \"0px 0px 36px 0px \" + shadow,\r\n                \"color\": text\r\n            }),\r\n            new StyleRule(element, \".am5-modal-content h1\", {\r\n                \"font-size\": \"1em\",\r\n                \"margin\": \"0 0 0.5em 0\"\r\n            }),\r\n            new StyleRule(element, \".am5-modal-table\", {\r\n                \"display\": \"table\",\r\n                \"margin\": \"1em 0\"\r\n            }),\r\n            new StyleRule(element, \".am5-modal-table-row\", {\r\n                \"display\": \"table-row\"\r\n            }),\r\n            new StyleRule(element, \".am5-modal-table-heading\", {\r\n                \"display\": \"table-heading\",\r\n                \"padding\": \"3px 10px 3px 0\",\r\n            }),\r\n            new StyleRule(element, \".am5-modal-table-cell\", {\r\n                \"display\": \"table-cell\",\r\n                \"padding\": \"3px 0 3px 0\",\r\n            }),\r\n            new StyleRule(element, \".am5-modal-table-cell > *\", {\r\n                \"vertical-align\": \"middle\"\r\n            }),\r\n            new StyleRule(element, \".am5-modal-content input[type=text], .am5-modal-content input[type=number], .am5-modal-content select\", {\r\n                \"border\": \"1px solid \" + active,\r\n                \"border-radius\": \"4px\",\r\n                \"padding\": \"3px 5px\",\r\n                \"margin\": \"2px\"\r\n            }),\r\n            new StyleRule(element, \".am5-modal-input-narrow\", {\r\n                \"width\": \"50px\"\r\n            }),\r\n            new StyleRule(element, \".am5-modal-button\", {\r\n                \"font-weight\": \"400\",\r\n                \"color\": ic.get(\"secondaryButtonText\").toCSS(),\r\n                \"line-height\": \"1.5\",\r\n                \"text-align\": \"center\",\r\n                \"text-decoration\": \"none\",\r\n                \"vertical-align\": \"middle\",\r\n                \"cursor\": \"pointer\",\r\n                \"padding\": \"0.2em 0.8em\",\r\n                \"font-size\": \"1em\",\r\n                \"border-radius\": \"0.25em\",\r\n                \"margin\": \"0 0.25em 0 0\",\r\n                \"border\": \"1px solid \" + ic.get(\"secondaryButtonStroke\").toCSS(),\r\n                \"background\": ic.get(\"secondaryButton\").toCSS()\r\n            }),\r\n            new StyleRule(element, \".am5-modal-button:hover\", {\r\n                \"background\": ic.get(\"secondaryButtonHover\").toCSS()\r\n            }),\r\n            new StyleRule(element, \".am5-modal-button.am5-modal-primary\", {\r\n                \"color\": ic.get(\"primaryButtonText\").toCSS(),\r\n                \"border\": \"1px solid \" + ic.get(\"primaryButtonStroke\").toCSS(),\r\n                \"background\": ic.get(\"primaryButton\").toCSS()\r\n            }),\r\n            new StyleRule(element, \".am5-modal-button.am5-modal-primary:hover\", {\r\n                \"background\": ic.get(\"primaryButtonHover\").toCSS()\r\n            }),\r\n        ]);\r\n        rules = new CounterDisposer(function () {\r\n            rules = undefined;\r\n            disposer_1.dispose();\r\n        });\r\n    }\r\n    return rules.increment();\r\n}\r\n/**\r\n * Used to display a modal dialog with HTML content.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/modal-popups/} for more info\r\n */\r\nvar Modal = /** @class */ (function (_super) {\r\n    __extends(Modal, _super);\r\n    function Modal() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    //protected _currentPass: number = 0;\r\n    Object.defineProperty(Modal.prototype, \"_afterNew\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            // Applying themes because this will not have parents\r\n            _super.prototype._afterNewApplyThemes.call(this);\r\n            // Defaults\r\n            this._setRawDefault(\"deactivateRoot\", true);\r\n            // Load CSS\r\n            modalCSS($utils.getShadowRoot(this._root.dom), this._root);\r\n            // Create elements\r\n            var container = document.createElement(\"div\");\r\n            container.className = \"am5-modal\";\r\n            container.style.display = \"none\";\r\n            this.root._inner.appendChild(container);\r\n            this.setPrivate(\"container\", container);\r\n            var curtain = document.createElement(\"div\");\r\n            curtain.className = \"am5-modal-curtain\";\r\n            container.appendChild(curtain);\r\n            this.setPrivate(\"curtain\", curtain);\r\n            $utils.addEventListener(curtain, \"click\", function () {\r\n                _this.cancel();\r\n            });\r\n            var wrapper = document.createElement(\"div\");\r\n            wrapper.className = \"am5-modal-wrapper\";\r\n            container.appendChild(wrapper);\r\n            this.setPrivate(\"wrapper\", wrapper);\r\n            var content = document.createElement(\"div\");\r\n            content.className = \"am5-modal-content\";\r\n            wrapper.appendChild(content);\r\n            this.setPrivate(\"content\", content);\r\n            var html = this.get(\"content\");\r\n            if (html) {\r\n                content.innerHTML = html;\r\n            }\r\n            // Close on ESC\r\n            if ($utils.supports(\"keyboardevents\")) {\r\n                this._disposers.push($utils.addEventListener(document, \"keydown\", function (ev) {\r\n                    if (_this.isOpen() && ev.keyCode == 27) {\r\n                        _this.cancel();\r\n                    }\r\n                }));\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Modal.prototype, \"_beforeChanged\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._beforeChanged.call(this);\r\n            if (this.isDirty(\"content\")) {\r\n                this.getPrivate(\"content\").innerHTML = this.get(\"content\", \"\");\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * Returns `true` if modal is currently open.\r\n     *\r\n     * @return  Modal open?\r\n     */\r\n    Object.defineProperty(Modal.prototype, \"isOpen\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            return this.getPrivate(\"container\").style.display != \"none\";\r\n        }\r\n    });\r\n    /**\r\n     * Opens modal.\r\n     */\r\n    Object.defineProperty(Modal.prototype, \"open\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            this.getPrivate(\"container\").style.display = \"block\";\r\n            if (this.get(\"deactivateRoot\")) {\r\n                this.setTimeout(function () {\r\n                    _this._root._renderer.interactionsEnabled = false;\r\n                }, 10);\r\n            }\r\n            this.events.dispatch(\"opened\", {\r\n                type: \"opened\",\r\n                target: this\r\n            });\r\n        }\r\n    });\r\n    /**\r\n     * Closes modal.\r\n     */\r\n    Object.defineProperty(Modal.prototype, \"close\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this.getPrivate(\"container\").style.display = \"none\";\r\n            if (this.get(\"deactivateRoot\")) {\r\n                this._root._renderer.interactionsEnabled = true;\r\n            }\r\n            this.events.dispatch(\"closed\", {\r\n                type: \"closed\",\r\n                target: this\r\n            });\r\n        }\r\n    });\r\n    /**\r\n     * Closes modal and invokes `cancelled` event.\r\n     */\r\n    Object.defineProperty(Modal.prototype, \"cancel\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            this.getPrivate(\"container\").style.display = \"none\";\r\n            if (this.get(\"deactivateRoot\")) {\r\n                this._root._renderer.interactionsEnabled = true;\r\n            }\r\n            this.events.dispatch(\"cancelled\", {\r\n                type: \"cancelled\",\r\n                target: this\r\n            });\r\n        }\r\n    });\r\n    /**\r\n     * Disposes modal.\r\n     */\r\n    Object.defineProperty(Modal.prototype, \"dispose\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype.dispose.call(this);\r\n            this.root.dom.removeChild(this.getPrivate(\"container\"));\r\n        }\r\n    });\r\n    Object.defineProperty(Modal, \"className\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"Modal\"\r\n    });\r\n    Object.defineProperty(Modal, \"classNames\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: Entity.classNames.concat([Modal.className])\r\n    });\r\n    return Modal;\r\n}(Entity));\r\nexport { Modal };\r\n//# sourceMappingURL=Modal.js.map","/**\r\n * A collection of network-related functions\r\n */\r\n/**\r\n * Loads an external file via its URL.\r\n *\r\n * Please note that this is an asynchronous function.\r\n *\r\n * It will not return the result, but rather a `Promise`.\r\n *\r\n * You can use the `await` notion, or `then()`.\r\n *\r\n * ```TypeScript\r\n * // Using await\r\n * let response = await Net.load( \"http://www.my.com/data.json\" );\r\n * console.log( response.response );\r\n *\r\n * // Using then()\r\n * Net.load( \"http://www.my.com/data.json\" ).then( ( response ) => {\r\n *   console.log( response.response );\r\n * } );\r\n * ```\r\n * ```JavaScript\r\n * // Using then()\r\n * Net.load( \"http://www.my.com/data.json\" ).then( function( response ) {\r\n *   console.log( response.response );\r\n * } );\r\n * ```\r\n *\r\n * @async\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/data/net-load-utility/} for more info\r\n * @param url      URL for the file to load\r\n * @param target   A target element that is requesting the net load\r\n * @param options  Request options\r\n * @return Result (Promise)\r\n */\r\nexport function load(url, target, options) {\r\n    return new Promise(function (success, error) {\r\n        // Is return type Blob?\r\n        var isBlob = options != null && options.responseType == \"blob\";\r\n        // Create request and set up handlers\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.onload = function () {\r\n            if (xhr.status === 200) {\r\n                var response = void 0;\r\n                var blob_1;\r\n                if (isBlob) {\r\n                    blob_1 = xhr.response;\r\n                    readBlob(blob_1).then(function (response) {\r\n                        var output = {\r\n                            xhr: xhr,\r\n                            error: false,\r\n                            response: response,\r\n                            blob: blob_1,\r\n                            type: xhr.getResponseHeader(\"Content-Type\"),\r\n                            target: target\r\n                        };\r\n                        success(output);\r\n                    });\r\n                    return;\r\n                }\r\n                else {\r\n                    response = xhr.responseText || xhr.response;\r\n                }\r\n                var output = {\r\n                    xhr: xhr,\r\n                    error: false,\r\n                    response: response,\r\n                    blob: blob_1,\r\n                    type: xhr.getResponseHeader(\"Content-Type\"),\r\n                    target: target\r\n                };\r\n                success(output);\r\n            }\r\n            else {\r\n                error({\r\n                    xhr: xhr,\r\n                    error: true,\r\n                    type: xhr.getResponseHeader(\"Content-Type\"),\r\n                    target: target\r\n                });\r\n            }\r\n        };\r\n        xhr.onerror = function () {\r\n            error({\r\n                xhr: xhr,\r\n                error: true,\r\n                type: xhr.getResponseHeader(\"Content-Type\"),\r\n                target: target\r\n            });\r\n        };\r\n        // Open request\r\n        xhr.open(\"GET\", url, true);\r\n        if (options && options.withCredentials) {\r\n            xhr.withCredentials = true;\r\n        }\r\n        // Process options\r\n        if (options != null) {\r\n            if (options.requestHeaders != null) {\r\n                for (var i = 0; i < options.requestHeaders.length; i++) {\r\n                    var header = options.requestHeaders[i];\r\n                    xhr.setRequestHeader(header.key, header.value);\r\n                }\r\n            }\r\n            if (options.responseType != null) {\r\n                xhr.responseType = options.responseType;\r\n            }\r\n        }\r\n        // Send request\r\n        xhr.send();\r\n    });\r\n}\r\n/**\r\n * Returns textual representation of a Blob object.\r\n *\r\n * @param   blob  Target blob\r\n * @return        Text promise\r\n */\r\nexport function readBlob(blob) {\r\n    return new Promise(function (success, error) {\r\n        var reader = new FileReader();\r\n        reader.onload = function (_event) {\r\n            success(reader.result);\r\n        };\r\n        reader.onerror = function (e) {\r\n            error(e);\r\n        };\r\n        reader.readAsText(blob);\r\n    });\r\n}\r\n//# sourceMappingURL=Net.js.map","import { __extends } from \"tslib\";\r\nimport { Entity } from \"./Entity\";\r\nimport { TextFormatter } from \"./TextFormatter\";\r\nimport * as $object from \"./Object\";\r\nimport * as $utils from \"./Utils\";\r\nimport * as $type from \"./Type\";\r\n/**\r\n * Number formatter\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/} for more info\r\n * @important\r\n */\r\nvar NumberFormatter = /** @class */ (function (_super) {\r\n    __extends(NumberFormatter, _super);\r\n    function NumberFormatter() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(NumberFormatter.prototype, \"_setDefaults\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            // Defaults\r\n            this._setDefault(\"negativeBase\", 0);\r\n            this._setDefault(\"numberFormat\", \"#,###.#####\");\r\n            this._setDefault(\"smallNumberThreshold\", 1.00);\r\n            var bns = \"_big_number_suffix_\";\r\n            var sns = \"_small_number_suffix_\";\r\n            var bs = \"_byte_suffix_\";\r\n            this._setDefault(\"bigNumberPrefixes\", [\r\n                { \"number\": 1e+3, \"suffix\": this._t(bns + \"3\") },\r\n                { \"number\": 1e+6, \"suffix\": this._t(bns + \"6\") },\r\n                { \"number\": 1e+9, \"suffix\": this._t(bns + \"9\") },\r\n                { \"number\": 1e+12, \"suffix\": this._t(bns + \"12\") },\r\n                { \"number\": 1e+15, \"suffix\": this._t(bns + \"15\") },\r\n                { \"number\": 1e+18, \"suffix\": this._t(bns + \"18\") },\r\n                { \"number\": 1e+21, \"suffix\": this._t(bns + \"21\") },\r\n                { \"number\": 1e+24, \"suffix\": this._t(bns + \"24\") }\r\n            ]);\r\n            this._setDefault(\"smallNumberPrefixes\", [\r\n                { \"number\": 1e-24, \"suffix\": this._t(sns + \"24\") },\r\n                { \"number\": 1e-21, \"suffix\": this._t(sns + \"21\") },\r\n                { \"number\": 1e-18, \"suffix\": this._t(sns + \"18\") },\r\n                { \"number\": 1e-15, \"suffix\": this._t(sns + \"15\") },\r\n                { \"number\": 1e-12, \"suffix\": this._t(sns + \"12\") },\r\n                { \"number\": 1e-9, \"suffix\": this._t(sns + \"9\") },\r\n                { \"number\": 1e-6, \"suffix\": this._t(sns + \"6\") },\r\n                { \"number\": 1e-3, \"suffix\": this._t(sns + \"3\") }\r\n            ]);\r\n            this._setDefault(\"bytePrefixes\", [\r\n                { \"number\": 1, suffix: this._t(bs + \"B\") },\r\n                { \"number\": 1024, suffix: this._t(bs + \"KB\") },\r\n                { \"number\": 1048576, suffix: this._t(bs + \"MB\") },\r\n                { \"number\": 1073741824, suffix: this._t(bs + \"GB\") },\r\n                { \"number\": 1099511627776, suffix: this._t(bs + \"TB\") },\r\n                { \"number\": 1125899906842624, suffix: this._t(bs + \"PB\") }\r\n            ]);\r\n            _super.prototype._setDefaults.call(this);\r\n        }\r\n    });\r\n    Object.defineProperty(NumberFormatter.prototype, \"_beforeChanged\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype._beforeChanged.call(this);\r\n        }\r\n    });\r\n    /**\r\n     * Formats the number according to specific format.\r\n     *\r\n     * @param value   Value to format\r\n     * @param format  Format to apply\r\n     * @return Formatted number\r\n     */\r\n    Object.defineProperty(NumberFormatter.prototype, \"format\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (value, format, precision) {\r\n            // no format passed in or \"Number\"\r\n            if (format == null || ($type.isString(format) && format.toLowerCase() === \"number\")) {\r\n                format = this.get(\"numberFormat\", \"\");\r\n            }\r\n            // Init return value\r\n            var formatted;\r\n            // Cast to number just in case\r\n            // TODO: maybe use better casting\r\n            var source = Number(value);\r\n            // Is it a built-in format or Intl.NumberFormatOptions\r\n            if ($type.isObject(format)) {\r\n                try {\r\n                    if (this.get(\"intlLocales\")) {\r\n                        return new Intl.NumberFormat(this.get(\"intlLocales\"), format).format(source);\r\n                    }\r\n                    else {\r\n                        return new Intl.NumberFormat(undefined, format).format(source);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    return \"Invalid\";\r\n                }\r\n            }\r\n            else {\r\n                // Clean format\r\n                format = $utils.cleanFormat(format);\r\n                // Get format info (it will also deal with parser caching)\r\n                var info = this.parseFormat(format, this._root.language);\r\n                // format and replace the number\r\n                var details = void 0;\r\n                if (source > this.get(\"negativeBase\")) {\r\n                    details = info.positive;\r\n                }\r\n                else if (source < this.get(\"negativeBase\")) {\r\n                    details = info.negative;\r\n                }\r\n                else {\r\n                    details = info.zero;\r\n                }\r\n                // Adjust precision\r\n                if (precision != null && !details.mod) {\r\n                    details = $object.copy(details);\r\n                    details.decimals.active = source == 0 ? 0 : precision;\r\n                }\r\n                // Format\r\n                formatted = details.template.split($type.PLACEHOLDER).join(this.applyFormat(source, details));\r\n            }\r\n            return formatted;\r\n        }\r\n    });\r\n    /**\r\n     * Parses supplied format into structured object which can be used to format\r\n     * the number.\r\n     *\r\n     * @param format Format string, i.e. \"#,###.00\"\r\n     * @param language Language\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(NumberFormatter.prototype, \"parseFormat\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (format, language) {\r\n            // Check cache\r\n            // TODO\r\n            // let cached = this.getCache(format);\r\n            // if (cached != null) {\r\n            // \treturn cached;\r\n            // }\r\n            var _this = this;\r\n            var thousandSeparator = language.translateEmpty(\"_thousandSeparator\");\r\n            var decimalSeparator = language.translateEmpty(\"_decimalSeparator\");\r\n            // init format parse info holder\r\n            var info = {\r\n                \"positive\": {\r\n                    \"thousands\": {\r\n                        \"active\": -1,\r\n                        \"passive\": -1,\r\n                        \"interval\": -1,\r\n                        \"separator\": thousandSeparator\r\n                    },\r\n                    \"decimals\": {\r\n                        \"active\": -1,\r\n                        \"passive\": -1,\r\n                        \"separator\": decimalSeparator\r\n                    },\r\n                    \"template\": \"\",\r\n                    \"source\": \"\",\r\n                    \"parsed\": false\r\n                },\r\n                \"negative\": {\r\n                    \"thousands\": {\r\n                        \"active\": -1,\r\n                        \"passive\": -1,\r\n                        \"interval\": -1,\r\n                        \"separator\": thousandSeparator\r\n                    },\r\n                    \"decimals\": {\r\n                        \"active\": -1,\r\n                        \"passive\": -1,\r\n                        \"separator\": decimalSeparator\r\n                    },\r\n                    \"template\": \"\",\r\n                    \"source\": \"\",\r\n                    \"parsed\": false\r\n                },\r\n                \"zero\": {\r\n                    \"thousands\": {\r\n                        \"active\": -1,\r\n                        \"passive\": -1,\r\n                        \"interval\": -1,\r\n                        \"separator\": thousandSeparator\r\n                    },\r\n                    \"decimals\": {\r\n                        \"active\": -1,\r\n                        \"passive\": -1,\r\n                        \"separator\": decimalSeparator\r\n                    },\r\n                    \"template\": \"\",\r\n                    \"source\": \"\",\r\n                    \"parsed\": false\r\n                }\r\n            };\r\n            // Escape double vertical bars (that mean display one vertical bar)\r\n            format = format.replace(\"||\", $type.PLACEHOLDER2);\r\n            // Split it up and deal with different formats\r\n            var parts = format.split(\"|\");\r\n            info.positive.source = parts[0];\r\n            if (typeof parts[2] === \"undefined\") {\r\n                info.zero = info.positive;\r\n            }\r\n            else {\r\n                info.zero.source = parts[2];\r\n            }\r\n            if (typeof parts[1] === \"undefined\") {\r\n                info.negative = info.positive;\r\n            }\r\n            else {\r\n                info.negative.source = parts[1];\r\n            }\r\n            // Parse each\r\n            $object.each(info, function (_part, item) {\r\n                // Already parsed\r\n                if (item.parsed) {\r\n                    return;\r\n                }\r\n                // Check cached\r\n                // TODO\r\n                // if (typeof this.getCache(item.source) !== \"undefined\") {\r\n                // \tinfo[part] = this.getCache(item.source);\r\n                // \treturn;\r\n                // }\r\n                // Begin parsing\r\n                var partFormat = item.source;\r\n                // Just \"Number\"?\r\n                if (partFormat.toLowerCase() === \"number\") {\r\n                    partFormat = _this.get(\"numberFormat\", \"#,###.#####\");\r\n                }\r\n                // Let TextFormatter split into chunks\r\n                var chunks = TextFormatter.chunk(partFormat, true);\r\n                for (var i = 0; i < chunks.length; i++) {\r\n                    var chunk = chunks[i];\r\n                    // replace back double vertical bar\r\n                    chunk.text = chunk.text.replace($type.PLACEHOLDER2, \"|\");\r\n                    if (chunk.type === \"value\") {\r\n                        // Parse format\r\n                        // Look for codes\r\n                        var matches = chunk.text.match(/[#0.,]+[ ]?[abespABESP%!]?[abespABESP‰!]?/);\r\n                        if (matches) {\r\n                            if (matches === null || matches[0] === \"\") {\r\n                                // no codes here - assume string\r\n                                // nothing to do here\r\n                                item.template += chunk.text;\r\n                            }\r\n                            else {\r\n                                // look for the format modifiers at the end\r\n                                var mods = matches[0].match(/[abespABESP%‰!]{2}|[abespABESP%‰]{1}$/);\r\n                                if (mods) {\r\n                                    item.mod = mods[0].toLowerCase();\r\n                                    item.modSpacing = matches[0].match(/[ ]{1}[abespABESP%‰!]{1}$/) ? true : false;\r\n                                }\r\n                                // break the format up\r\n                                var a = matches[0].split(\".\");\r\n                                // Deal with thousands\r\n                                if (a[0] === \"\") {\r\n                                    // No directives for thousands\r\n                                    // Leave default settings (no formatting)\r\n                                }\r\n                                else {\r\n                                    // Counts\r\n                                    item.thousands.active = (a[0].match(/0/g) || []).length;\r\n                                    item.thousands.passive = (a[0].match(/\\#/g) || []).length + item.thousands.active;\r\n                                    // Separator interval\r\n                                    var b = a[0].split(\",\");\r\n                                    if (b.length === 1) {\r\n                                        // No thousands separators\r\n                                        // Do nothing\r\n                                    }\r\n                                    else {\r\n                                        // Use length fo the last chunk as thousands length\r\n                                        item.thousands.interval = (b.pop() || \"\").length;\r\n                                        if (item.thousands.interval === 0) {\r\n                                            item.thousands.interval = -1;\r\n                                        }\r\n                                    }\r\n                                }\r\n                                // Deal with decimals\r\n                                if (typeof (a[1]) === \"undefined\") {\r\n                                    // No directives for decimals\r\n                                    // Leave at defaults (no formatting)\r\n                                }\r\n                                else {\r\n                                    // Counts\r\n                                    item.decimals.active = (a[1].match(/0/g) || []).length;\r\n                                    item.decimals.passive = (a[1].match(/\\#/g) || []).length + item.decimals.active;\r\n                                }\r\n                                // Add special code to template\r\n                                item.template += chunk.text.split(matches[0]).join($type.PLACEHOLDER);\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        // Quoted string - take it as it is\r\n                        item.template += chunk.text;\r\n                    }\r\n                }\r\n                // Apply style formatting\r\n                //item.template = getTextFormatter().format(item.template, this.outputFormat);\r\n                // Save cache\r\n                // TODO\r\n                //this.setCache(item.source, item);\r\n                // Mark this as parsed\r\n                item.parsed = true;\r\n            });\r\n            // Save cache (the whole thing)\r\n            // TODO\r\n            //this.setCache(format, info);\r\n            return info;\r\n        }\r\n    });\r\n    /**\r\n     * Applies parsed format to a numeric value.\r\n     *\r\n     * @param value    Value\r\n     * @param details  Parsed format as returned by parseFormat()\r\n     * @return Formatted number\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(NumberFormatter.prototype, \"applyFormat\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (value, details) {\r\n            // Use absolute values\r\n            var negative = value < 0;\r\n            value = Math.abs(value);\r\n            // Recalculate according to modifier\r\n            var prefix = \"\", suffix = \"\";\r\n            var mods = details.mod ? details.mod.split(\"\") : [];\r\n            if (mods.indexOf(\"b\") !== -1) {\r\n                var a_1 = this.applyPrefix(value, this.get(\"bytePrefixes\"), mods.indexOf(\"!\") !== -1);\r\n                value = a_1[0];\r\n                prefix = a_1[1];\r\n                suffix = a_1[2];\r\n                if (details.modSpacing) {\r\n                    suffix = \" \" + suffix;\r\n                }\r\n            }\r\n            else if (mods.indexOf(\"a\") !== -1) {\r\n                var a_2 = this.applyPrefix(value, value < this.get(\"smallNumberThreshold\") ? this.get(\"smallNumberPrefixes\") : this.get(\"bigNumberPrefixes\"), mods.indexOf(\"!\") !== -1);\r\n                value = a_2[0];\r\n                prefix = a_2[1];\r\n                suffix = a_2[2];\r\n                if (details.modSpacing) {\r\n                    suffix = \" \" + suffix;\r\n                }\r\n            }\r\n            else if (mods.indexOf(\"p\") !== -1) {\r\n                var ol = Math.min(value.toString().length + 2, 21);\r\n                //value *= 100;\r\n                value = parseFloat(value.toPrecision(ol));\r\n                prefix = this._root.language.translate(\"_percentPrefix\");\r\n                suffix = this._root.language.translate(\"_percentSuffix\");\r\n                if (prefix == \"\" && suffix == \"\") {\r\n                    suffix = \"%\";\r\n                }\r\n            }\r\n            else if (mods.indexOf(\"%\") !== -1) {\r\n                var ol = Math.min(value.toString().length + 2, 21);\r\n                value *= 100;\r\n                value = parseFloat(value.toPrecision(ol));\r\n                suffix = \"%\";\r\n            }\r\n            else if (mods.indexOf(\"‰\") !== -1) {\r\n                var ol = Math.min(value.toString().length + 3, 21);\r\n                value *= 1000;\r\n                value = parseFloat(value.toPrecision(ol));\r\n                suffix = \"‰\";\r\n            }\r\n            // Round to passive\r\n            if (mods.indexOf(\"e\") !== -1) {\r\n                // convert the value to exponential\r\n                var exp = void 0;\r\n                if (details.decimals.passive >= 0) {\r\n                    exp = value.toExponential(details.decimals.passive).split(\"e\");\r\n                }\r\n                else {\r\n                    exp = value.toExponential().split(\"e\");\r\n                }\r\n                value = Number(exp[0]);\r\n                suffix = \"e\" + exp[1];\r\n                if (details.modSpacing) {\r\n                    suffix = \" \" + suffix;\r\n                }\r\n            }\r\n            else if (details.decimals.passive === 0) {\r\n                value = Math.round(value);\r\n            }\r\n            else if (details.decimals.passive > 0) {\r\n                var d = Math.pow(10, details.decimals.passive);\r\n                value = Math.round(value * d) / d;\r\n            }\r\n            // Init return value\r\n            var res = \"\";\r\n            // Calc integer and decimal parts\r\n            var a = $type.numberToString(value).split(\".\");\r\n            // Format integers\r\n            var ints = a[0];\r\n            // Pad integers to active length\r\n            if (ints.length < details.thousands.active) {\r\n                ints = Array(details.thousands.active - ints.length + 1).join(\"0\") + ints;\r\n            }\r\n            // Insert thousands separators\r\n            if (details.thousands.interval > 0) {\r\n                var ip = [];\r\n                var intsr = ints.split(\"\").reverse().join(\"\");\r\n                for (var i = 0, len = ints.length; i <= len; i += details.thousands.interval) {\r\n                    var c = intsr.substr(i, details.thousands.interval).split(\"\").reverse().join(\"\");\r\n                    if (c !== \"\") {\r\n                        ip.unshift(c);\r\n                    }\r\n                }\r\n                ints = ip.join(details.thousands.separator);\r\n            }\r\n            // Add integers\r\n            res += ints;\r\n            // Add decimals\r\n            if (a.length === 1) {\r\n                a.push(\"\");\r\n            }\r\n            var decs = a[1];\r\n            // Fill zeros?\r\n            if (decs.length < details.decimals.active) {\r\n                decs += Array(details.decimals.active - decs.length + 1).join(\"0\");\r\n            }\r\n            if (decs !== \"\") {\r\n                res += details.decimals.separator + decs;\r\n            }\r\n            // Can't have empty return value\r\n            if (res === \"\") {\r\n                res = \"0\";\r\n            }\r\n            // Add minus sign back\r\n            if (value !== 0 && negative && (mods.indexOf(\"s\") === -1)) {\r\n                res = \"-\" + res;\r\n            }\r\n            // Add suffixes/prefixes\r\n            if (prefix) {\r\n                res = prefix + res;\r\n            }\r\n            if (suffix) {\r\n                res += suffix;\r\n            }\r\n            return res;\r\n        }\r\n    });\r\n    Object.defineProperty(NumberFormatter.prototype, \"applyPrefix\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (value, prefixes, force) {\r\n            if (force === void 0) { force = false; }\r\n            var newvalue = value;\r\n            var prefix = \"\";\r\n            var suffix = \"\";\r\n            var applied = false;\r\n            var k = 1;\r\n            for (var i = 0, len = prefixes.length; i < len; i++) {\r\n                if (prefixes[i].number <= value) {\r\n                    if (prefixes[i].number === 0) {\r\n                        newvalue = 0;\r\n                    }\r\n                    else {\r\n                        newvalue = value / prefixes[i].number;\r\n                        k = prefixes[i].number;\r\n                    }\r\n                    prefix = prefixes[i].prefix;\r\n                    suffix = prefixes[i].suffix;\r\n                    applied = true;\r\n                }\r\n            }\r\n            if (!applied && force && prefixes.length && value != 0) {\r\n                // Prefix was not applied. Use the first prefix.\r\n                newvalue = value / prefixes[0].number;\r\n                prefix = prefixes[0].prefix;\r\n                suffix = prefixes[0].suffix;\r\n                applied = true;\r\n            }\r\n            if (applied) {\r\n                newvalue = parseFloat(newvalue.toPrecision(Math.min(k.toString().length + Math.floor(newvalue).toString().replace(/[^0-9]*/g, \"\").length, 21)));\r\n            }\r\n            return [newvalue, prefix, suffix];\r\n        }\r\n    });\r\n    /**\r\n     * Replaces brackets with temporary placeholders.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text  Input text\r\n     * @return Escaped text\r\n     */\r\n    Object.defineProperty(NumberFormatter.prototype, \"escape\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (text) {\r\n            return text.replace(\"||\", $type.PLACEHOLDER2);\r\n        }\r\n    });\r\n    /**\r\n     * Replaces placeholders back to brackets.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text  Escaped text\r\n     * @return Unescaped text\r\n     */\r\n    Object.defineProperty(NumberFormatter.prototype, \"unescape\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (text) {\r\n            return text.replace($type.PLACEHOLDER2, \"|\");\r\n        }\r\n    });\r\n    return NumberFormatter;\r\n}(Entity));\r\nexport { NumberFormatter };\r\n//# sourceMappingURL=NumberFormatter.js.map","import * as $array from \"./Array\";\r\nexport function keys(object) {\r\n    return Object.keys(object);\r\n}\r\n/**\r\n * Returns an array of object's property names ordered using specific ordering\r\n * function.\r\n *\r\n * @param object  Source object\r\n * @param order   Ordering function\r\n * @returns Object property names\r\n */\r\nexport function keysOrdered(object, order) {\r\n    return keys(object).sort(order);\r\n}\r\nexport function copy(object) {\r\n    return Object.assign({}, object);\r\n}\r\nexport function each(object, f) {\r\n    keys(object).forEach(function (key) {\r\n        f(key, object[key]);\r\n    });\r\n}\r\n/**\r\n * Iterates through all properties of the object calling `fn` for each of them.\r\n *\r\n * If return value of the function evaluates to `false` further iteration is\r\n * cancelled.\r\n *\r\n * @param object  Source object\r\n * @param fn      Callback function\r\n */\r\nexport function eachContinue(object, fn) {\r\n    for (var key in object) {\r\n        if (hasKey(object, key)) {\r\n            if (!fn(key, object[key])) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * Orders object properties using custom `ord` function and iterates through\r\n * them calling `fn` for each of them.\r\n *\r\n * @param object  Source object\r\n * @param fn      Callback function\r\n * @param order   Ordering function\r\n */\r\nexport function eachOrdered(object, fn, ord) {\r\n    $array.each(keysOrdered(object, ord), function (key) {\r\n        fn(key, object[key]);\r\n    });\r\n}\r\n/**\r\n * Checks if `object` has a specific `key`.\r\n *\r\n * @param object  Source object\r\n * @param key     Property name\r\n * @returns Has key?\r\n */\r\nexport function hasKey(object, key) {\r\n    return {}.hasOwnProperty.call(object, key);\r\n}\r\n/**\r\n * Copies all properties of one object to the other, omitting undefined, but only if property in target object doesn't have a value set.\r\n *\r\n * @param fromObject  Source object\r\n * @param toObject    Target object\r\n * @return Updated target object\r\n * @todo Maybe consolidate with utils.copy?\r\n */\r\nexport function softCopyProperties(source, target) {\r\n    each(source, function (key, value) {\r\n        // only if value is set\r\n        //if ($type.hasValue(value) && !($type.hasValue((<any>target)[key]))) {\r\n        if (value != null && target[key] == null) {\r\n            target[key] = value;\r\n        }\r\n    });\r\n    return target;\r\n}\r\n//# sourceMappingURL=Object.js.map","/**\r\n * @ignore\r\n */\r\nexport function compare(left, right) {\r\n    if (left === right) {\r\n        return 0;\r\n    }\r\n    else if (left < right) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function compareArray(left, right, f) {\r\n    var leftLength = left.length;\r\n    var rightLength = right.length;\r\n    var length = Math.min(leftLength, rightLength);\r\n    for (var i = 0; i < length; ++i) {\r\n        var order = f(left[i], right[i]);\r\n        if (order !== 0) {\r\n            return order;\r\n        }\r\n    }\r\n    return compare(leftLength, rightLength);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function reverse(order) {\r\n    if (order < 0) {\r\n        return 1;\r\n    }\r\n    else if (order > 0) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 0;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function compareNumber(a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a < b) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n//# sourceMappingURL=Order.js.map","/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Represents a relative value (percent).\r\n *\r\n * The Percent object, can be instantiated using two ways:\r\n *\r\n * * Via `new Percent(X)`.\r\n * * Via `am5.percent(X)`.\r\n *\r\n * You can also use shortcut functions for `0%`, `50%`, and `100%`:\r\n * * `am5.p0`\r\n * * `am5.p50`\r\n * * `am5.p1000`\r\n */\r\nvar Percent = /** @class */ (function () {\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param percent  Percent value\r\n     */\r\n    function Percent(percent) {\r\n        /**\r\n         * Value in percent.\r\n         */\r\n        Object.defineProperty(this, \"_value\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._value = percent;\r\n    }\r\n    Object.defineProperty(Percent.prototype, \"value\", {\r\n        /**\r\n         * Relative value.\r\n         *\r\n         * E.g. 100% is 1, 50% is 0.5, etc.\r\n         *\r\n         * This is useful to apply transformations to other values. E.g.:\r\n         *\r\n         * ```TypeScript\r\n         * let value = 256;\r\n         * let percent = new am5.p50;\r\n         * console.log(value * percent.value); // outputs 128\r\n         * ```\r\n         * ```JavaScript\r\n         * var value = 256;\r\n         * var percent = new am5.p50;\r\n         * console.log(value * percent.value); // outputs 128\r\n         * ```\r\n         *\r\n         * Alternatively, you can use `am5.percent()` helper function:\r\n         *\r\n         * ```TypeScript\r\n         * let value = 256;\r\n         * let percent = am5.p50;\r\n         * console.log(value * percent.value); // outputs 128\r\n         * ```\r\n         * ```JavaScript\r\n         * var value = 256;\r\n         * var percent = am5.p50;\r\n         * console.log(value * percent.value); // outputs 128\r\n         * ```\r\n         *\r\n         * @readonly\r\n         * @return Relative value\r\n         */\r\n        get: function () {\r\n            return this._value / 100;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Percent.prototype, \"percent\", {\r\n        /**\r\n         * Value in percent.\r\n         *\r\n         * @return Percent\r\n         */\r\n        get: function () {\r\n            return this._value;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Percent.prototype, \"toString\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            return \"\" + this._value + \"%\";\r\n        }\r\n    });\r\n    Object.defineProperty(Percent.prototype, \"interpolate\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (min, max) {\r\n            return min + (this.value * (max - min));\r\n        }\r\n    });\r\n    Object.defineProperty(Percent, \"normalize\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (percent, min, max) {\r\n            if (percent instanceof Percent) {\r\n                return percent;\r\n            }\r\n            else {\r\n                if (min === max) {\r\n                    return new Percent(0);\r\n                }\r\n                else {\r\n                    return new Percent(Math.min(Math.max((percent - min) * (1 / (max - min)), 0), 1) * 100);\r\n                }\r\n            }\r\n        }\r\n    });\r\n    return Percent;\r\n}());\r\nexport { Percent };\r\n/**\r\n * Converts numeric percent value to a proper [[Percent]] object.\r\n *\r\n * ```TypeScript\r\n * pieSeries.set(\"radius\", am5.percent(80));\r\n * ```\r\n * ```JavaScript\r\n * pieSeries.set(\"radius\", am5.percent(80));\r\n * ```\r\n *\r\n * @param value  Percent\r\n * @return Percent object\r\n */\r\nexport function percent(value) {\r\n    return new Percent(value);\r\n}\r\n/**\r\n * A shortcut function to `am5.percent(0)`.\r\n */\r\nexport var p0 = percent(0);\r\n/**\r\n * A shortcut function to `am5.percent(100)`.\r\n */\r\nexport var p100 = percent(100);\r\n/**\r\n * A shortcut function to `am5.percent(50)`.\r\n */\r\nexport var p50 = percent(50);\r\n/**\r\n * Checks if value is a [[Percent]] object.\r\n *\r\n * @ignore Exclude from docs\r\n * @param value  Input value\r\n * @return Is percent?\r\n */\r\nexport function isPercent(value) {\r\n    return value instanceof Percent;\r\n}\r\n//# sourceMappingURL=Percent.js.map","/** @ignore */ /** */\r\nimport * as $type from \"./Type\";\r\nimport * as $utils from \"./Utils\";\r\nimport { Sprite } from \"../render/Sprite\";\r\nimport { TextFormatter } from \"./TextFormatter\";\r\n/**\r\n * @ignore\r\n */\r\nexport function populateString(target, string) {\r\n    if (string != null) {\r\n        string = \"\" + string;\r\n        string = TextFormatter.escape(string);\r\n        var tags = string.match(/\\{([^}]+)\\}/g);\r\n        var i = void 0;\r\n        if (tags) {\r\n            for (i = 0; i < tags.length; i++) {\r\n                var tag = tags[i].replace(/\\{([^}]+)\\}/, \"$1\");\r\n                var value = getTagValue(target, tag, \"\");\r\n                if (value == null) {\r\n                    value = \"\";\r\n                }\r\n                string = string.split(tags[i]).join(value);\r\n            }\r\n        }\r\n        string = TextFormatter.unescape(string);\r\n    }\r\n    else {\r\n        string = \"\";\r\n    }\r\n    // TODO: apply adapter?\r\n    return string;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction getTagValue(target, tagName, format) {\r\n    var value;\r\n    var dataItem = target.dataItem;\r\n    // Parse parts\r\n    var parts = [];\r\n    var reg = /([^.]+)\\(([^)]*)\\)|([^.]+)/g;\r\n    ;\r\n    var matches;\r\n    while (true) {\r\n        matches = reg.exec(tagName);\r\n        if (matches === null) {\r\n            break;\r\n        }\r\n        if (matches[3]) {\r\n            // Simple property\r\n            parts.push({\r\n                prop: matches[3]\r\n            });\r\n            // Check if maybe we should force a formatter on this value\r\n            var dateFields = target.getDateFormatter().get(\"dateFields\", []);\r\n            var numericFields = target.getNumberFormatter().get(\"numericFields\", []);\r\n            var durationFields = target.getDurationFormatter().get(\"durationFields\", []);\r\n            if (dateFields.indexOf(matches[3]) !== -1) {\r\n                parts.push({\r\n                    method: \"formatDate\",\r\n                    params: []\r\n                });\r\n            }\r\n            else if (numericFields.indexOf(matches[3]) !== -1) {\r\n                parts.push({\r\n                    method: \"formatNumber\",\r\n                    params: []\r\n                });\r\n            }\r\n            else if (durationFields.indexOf(matches[3]) !== -1) {\r\n                parts.push({\r\n                    method: \"formatDuration\",\r\n                    params: []\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            // Method\r\n            // Parse parameters\r\n            var params = [];\r\n            if ($utils.trim(matches[2]) != \"\") {\r\n                var reg2 = /'([^']*)'|\"([^\"]*)\"|([0-9\\-]+)/g;\r\n                var matches2 = void 0;\r\n                while (true) {\r\n                    matches2 = reg2.exec(matches[2]);\r\n                    if (matches2 === null) {\r\n                        break;\r\n                    }\r\n                    params.push(matches2[1] || matches2[2] || matches2[3]);\r\n                }\r\n            }\r\n            parts.push({\r\n                method: matches[1],\r\n                params: params\r\n            });\r\n        }\r\n    }\r\n    // Check if we can retrieve the value from data item\r\n    if (dataItem) {\r\n        // Check values\r\n        value = getTagValueFromObject(target, parts, dataItem._settings);\r\n        // Check properties\r\n        if (value == null || $type.isObject(value)) { // isObject helps to solve problem with date axis, as for example dateX will get dateX from values object and won't get to the dateX date.\r\n            value = getTagValueFromObject(target, parts, dataItem);\r\n        }\r\n        // Check data context\r\n        var dataContext = dataItem.dataContext;\r\n        if (value == null && dataContext) {\r\n            value = getTagValueFromObject(target, parts, dataContext);\r\n            // Maybe it's a literal dot-separated name of the key in dataContext?\r\n            if (value == null) {\r\n                value = getTagValueFromObject(target, [{\r\n                        prop: tagName\r\n                    }], dataContext);\r\n            }\r\n            // scond data context level sometimes exist (tree map)\r\n            if (value == null && dataContext.dataContext) {\r\n                value = getTagValueFromObject(target, parts, dataContext.dataContext);\r\n            }\r\n        }\r\n        // Check component's data item\r\n        if (value == null && dataItem.component && dataItem.component.dataItem !== dataItem) {\r\n            value = getTagValue(dataItem.component, tagName, format);\r\n        }\r\n    }\r\n    // Check sprite's properties\r\n    if (value == null) {\r\n        value = getTagValueFromObject(target, parts, target);\r\n    }\r\n    // Finally, check the parent\r\n    if (value == null && target.parent) {\r\n        value = getTagValue(target.parent, tagName, format);\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction getCustomDataValue(target, prop) {\r\n    var customData = target.getPrivate(\"customData\");\r\n    if ($type.isObject(customData)) {\r\n        return customData[prop];\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function getTagValueFromObject(target, parts, object, format) {\r\n    var current = object;\r\n    var formatApplied = false;\r\n    for (var i = 0, len = parts.length; i < len; i++) {\r\n        var part = parts[i];\r\n        if (part.prop) {\r\n            // Regular property\r\n            if (current instanceof Sprite) {\r\n                var tmp = current.get(part.prop);\r\n                if (tmp == null)\r\n                    tmp = current.getPrivate(part.prop);\r\n                if (tmp == null)\r\n                    tmp = current[part.prop];\r\n                if (tmp == null)\r\n                    tmp = getCustomDataValue(current, part.prop);\r\n                current = tmp;\r\n            }\r\n            else if (current.get) {\r\n                var tmp = current.get(part.prop);\r\n                if (tmp == null)\r\n                    tmp = current[part.prop];\r\n                current = tmp;\r\n            }\r\n            else {\r\n                current = current[part.prop];\r\n            }\r\n            if (current == null) {\r\n                // Not set, return undefined\r\n                return;\r\n            }\r\n        }\r\n        else {\r\n            // Method\r\n            switch (part.method) {\r\n                case \"formatNumber\":\r\n                    var numberValue = $type.toNumber(current);\r\n                    if (numberValue != null) {\r\n                        current = target.getNumberFormatter().format(numberValue, format || part.params[0] || undefined);\r\n                        formatApplied = true;\r\n                    }\r\n                    break;\r\n                case \"formatDate\":\r\n                    var dateValue = $type.toDate(current);\r\n                    if (!$type.isDate(dateValue) || $type.isNaN(dateValue.getTime())) {\r\n                        // Was not able to get date out of value, quitting and letting\r\n                        // calling method try another value\r\n                        return;\r\n                    }\r\n                    if (dateValue != null) {\r\n                        current = target.getDateFormatter().format(dateValue, format || part.params[0] || undefined);\r\n                        formatApplied = true;\r\n                    }\r\n                    break;\r\n                case \"formatDuration\":\r\n                    var durationValue = $type.toNumber(current);\r\n                    if (durationValue != null) {\r\n                        current = target.getDurationFormatter().format(durationValue, format || part.params[0] || undefined, part.params[1] || undefined);\r\n                        formatApplied = true;\r\n                    }\r\n                    break;\r\n                case \"urlEncode\":\r\n                case \"encodeURIComponent\":\r\n                    current = encodeURIComponent(current);\r\n                    break;\r\n                default:\r\n                    if (current[part.method]) {\r\n                        current[part.method].apply(object, part.params);\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    // Apply default format if it wasn't applied explicitly\r\n    if (!formatApplied) {\r\n        var formatParts = [{\r\n                method: \"\",\r\n                params: format\r\n            }];\r\n        if (format == null) {\r\n            // Format is not set\r\n            // Determine from the type of the value\r\n            if ($type.isNumber(current)) {\r\n                formatParts[0].method = \"formatNumber\";\r\n                formatParts[0].params = \"\";\r\n            }\r\n            else if ($type.isDate(current)) {\r\n                formatParts[0].method = \"formatDate\";\r\n                formatParts[0].params = \"\";\r\n            }\r\n        }\r\n        else {\r\n            // Format set\r\n            // Try to determine formatter based on the format\r\n            var formatterType = $utils.getFormat(format);\r\n            // format\r\n            if (formatterType === \"number\") {\r\n                formatParts[0].method = \"formatNumber\";\r\n            }\r\n            else if (formatterType === \"date\") {\r\n                formatParts[0].method = \"formatDate\";\r\n            }\r\n            else if (formatterType === \"duration\") {\r\n                formatParts[0].method = \"formatDuration\";\r\n            }\r\n        }\r\n        // Apply format\r\n        if (formatParts[0].method) {\r\n            current = getTagValueFromObject(target, formatParts, current);\r\n        }\r\n    }\r\n    return current;\r\n}\r\n//# sourceMappingURL=PopulateString.js.map","/** @ignore */ /** */\r\nimport * as $array from \"./Array\";\r\nimport * as $utils from \"./Utils\";\r\n/**\r\n * @ignore\r\n */\r\nvar Native = /** @class */ (function () {\r\n    function Native() {\r\n        var _this = this;\r\n        Object.defineProperty(this, \"_observer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_targets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        this._observer = new ResizeObserver(function (entries) {\r\n            $array.each(entries, function (entry) {\r\n                $array.each(_this._targets, function (x) {\r\n                    if (x.target === entry.target) {\r\n                        x.callback();\r\n                    }\r\n                });\r\n            });\r\n        });\r\n    }\r\n    Object.defineProperty(Native.prototype, \"addTarget\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (target, callback) {\r\n            this._observer.observe(target, { box: \"border-box\" });\r\n            this._targets.push({ target: target, callback: callback });\r\n        }\r\n    });\r\n    Object.defineProperty(Native.prototype, \"removeTarget\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (target) {\r\n            this._observer.unobserve(target);\r\n            $array.keepIf(this._targets, function (x) {\r\n                return x.target !== target;\r\n            });\r\n        }\r\n    });\r\n    return Native;\r\n}());\r\n/**\r\n * @ignore\r\n */\r\nvar Raf = /** @class */ (function () {\r\n    function Raf() {\r\n        Object.defineProperty(this, \"_timer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"_targets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n    }\r\n    Object.defineProperty(Raf.prototype, \"addTarget\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (target, callback) {\r\n            var _this = this;\r\n            if (this._timer === null) {\r\n                var lastTime_1 = null;\r\n                var loop_1 = function () {\r\n                    var currentTime = Date.now();\r\n                    if (lastTime_1 === null || currentTime > (lastTime_1 + Raf.delay)) {\r\n                        lastTime_1 = currentTime;\r\n                        $array.each(_this._targets, function (x) {\r\n                            var newSize = x.target.getBoundingClientRect();\r\n                            if (newSize.width !== x.size.width || newSize.height !== x.size.height) {\r\n                                x.size = newSize;\r\n                                x.callback();\r\n                            }\r\n                        });\r\n                    }\r\n                    if (_this._targets.length === 0) {\r\n                        _this._timer = null;\r\n                    }\r\n                    else {\r\n                        _this._timer = requestAnimationFrame(loop_1);\r\n                    }\r\n                };\r\n                this._timer = requestAnimationFrame(loop_1);\r\n            }\r\n            // We start off with fake bounds so that sensor always kicks in\r\n            var size = { width: 0, height: 0, left: 0, right: 0, top: 0, bottom: 0, x: 0, y: 0 };\r\n            this._targets.push({ target: target, callback: callback, size: size });\r\n        }\r\n    });\r\n    Object.defineProperty(Raf.prototype, \"removeTarget\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (target) {\r\n            $array.keepIf(this._targets, function (x) {\r\n                return x.target !== target;\r\n            });\r\n            if (this._targets.length === 0) {\r\n                if (this._timer !== null) {\r\n                    cancelAnimationFrame(this._timer);\r\n                    this._timer = null;\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Raf, \"delay\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: 200\r\n    });\r\n    return Raf;\r\n}());\r\n/**\r\n * @ignore\r\n */\r\nvar observer = null;\r\n/**\r\n * @ignore\r\n */\r\nfunction makeSensor() {\r\n    if (observer === null) {\r\n        if (typeof ResizeObserver !== \"undefined\") {\r\n            observer = new Native();\r\n        }\r\n        else {\r\n            observer = new Raf();\r\n        }\r\n    }\r\n    return observer;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nvar ResizeSensor = /** @class */ (function () {\r\n    function ResizeSensor(element, callback) {\r\n        Object.defineProperty(this, \"_sensor\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_element\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_listener\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        this._sensor = makeSensor();\r\n        this._element = element;\r\n        // This is needed because we need to know when the window is zoomed\r\n        this._listener = $utils.onZoom(callback);\r\n        this._sensor.addTarget(element, callback);\r\n    }\r\n    Object.defineProperty(ResizeSensor.prototype, \"isDisposed\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            return this._disposed;\r\n        }\r\n    });\r\n    Object.defineProperty(ResizeSensor.prototype, \"dispose\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            if (!this._disposed) {\r\n                this._disposed = true;\r\n                this._sensor.removeTarget(this._element);\r\n                this._listener.dispose();\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(ResizeSensor.prototype, \"sensor\", {\r\n        get: function () {\r\n            return this._sensor;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return ResizeSensor;\r\n}());\r\nexport { ResizeSensor };\r\n//# sourceMappingURL=ResizeSensor.js.map","import * as $object from \"./Object\";\r\nimport * as $ease from \"./Ease\";\r\n/**\r\n * An object representing a collection of setting values to apply as required.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/states/} for more info\r\n */\r\nvar State = /** @class */ (function () {\r\n    function State(entity, settings) {\r\n        Object.defineProperty(this, \"_entity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_settings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_userSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        this._entity = entity;\r\n        this._settings = settings;\r\n    }\r\n    Object.defineProperty(State.prototype, \"get\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key, fallback) {\r\n            var value = this._settings[key];\r\n            if (value !== undefined) {\r\n                return value;\r\n            }\r\n            else {\r\n                return fallback;\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Object.defineProperty(State.prototype, \"setRaw\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key, value) {\r\n            this._settings[key] = value;\r\n        }\r\n    });\r\n    /**\r\n     * Sets a setting `value` for the specified `key` to be set when the state\r\n     * is applied.\r\n     *\r\n     * @param   key       Setting key\r\n     * @param   value     Setting value\r\n     * @return            Setting value\r\n     */\r\n    Object.defineProperty(State.prototype, \"set\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key, value) {\r\n            this._userSettings[key] = true;\r\n            this.setRaw(key, value);\r\n        }\r\n    });\r\n    /**\r\n     * Removes a setting value for the specified `key`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     */\r\n    Object.defineProperty(State.prototype, \"remove\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key) {\r\n            delete this._userSettings[key];\r\n            delete this._settings[key];\r\n        }\r\n    });\r\n    /**\r\n     * Sets multiple settings at once.\r\n     *\r\n     * `settings` must be an object with key: value pairs.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param settings Settings\r\n     */\r\n    Object.defineProperty(State.prototype, \"setAll\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (settings) {\r\n            var _this = this;\r\n            $object.keys(settings).forEach(function (key) {\r\n                _this.set(key, settings[key]);\r\n            });\r\n        }\r\n    });\r\n    Object.defineProperty(State.prototype, \"_eachSetting\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (f) {\r\n            $object.each(this._settings, f);\r\n        }\r\n    });\r\n    /**\r\n     * Applies the state to the target element.\r\n     *\r\n     * All setting values are set immediately.\r\n     */\r\n    Object.defineProperty(State.prototype, \"apply\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            var seen = {};\r\n            seen[\"stateAnimationEasing\"] = true;\r\n            seen[\"stateAnimationDuration\"] = true;\r\n            var defaultState = this._entity.states.lookup(\"default\");\r\n            this._eachSetting(function (key, value) {\r\n                if (!seen[key]) {\r\n                    seen[key] = true;\r\n                    // save values to default state\r\n                    if (_this !== defaultState) {\r\n                        if (!(key in defaultState._settings)) {\r\n                            defaultState._settings[key] = _this._entity.get(key);\r\n                        }\r\n                    }\r\n                    _this._entity.set(key, value);\r\n                }\r\n            });\r\n        }\r\n    });\r\n    /**\r\n     * Applies the state to the target element.\r\n     *\r\n     * Returns an object representing all [[Animation]] objects created for\r\n     * each setting key transition.\r\n     *\r\n     * @return           Animations\r\n     */\r\n    Object.defineProperty(State.prototype, \"applyAnimate\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (duration) {\r\n            var _this = this;\r\n            if (duration == null) {\r\n                duration = this._settings.stateAnimationDuration;\r\n            }\r\n            if (duration == null) {\r\n                duration = this.get(\"stateAnimationDuration\", this._entity.get(\"stateAnimationDuration\", 0));\r\n            }\r\n            var easing = this._settings.stateAnimationEasing;\r\n            if (easing == null) {\r\n                easing = this.get(\"stateAnimationEasing\", this._entity.get(\"stateAnimationEasing\", $ease.cubic));\r\n            }\r\n            var defaultState = this._entity.states.lookup(\"default\");\r\n            var seen = {};\r\n            seen[\"stateAnimationEasing\"] = true;\r\n            seen[\"stateAnimationDuration\"] = true;\r\n            var animations = {};\r\n            this._eachSetting(function (key, value) {\r\n                if (!seen[key]) {\r\n                    seen[key] = true;\r\n                    // save values to default state\r\n                    if (_this != defaultState) {\r\n                        if (!(key in defaultState._settings)) {\r\n                            defaultState._settings[key] = _this._entity.get(key);\r\n                        }\r\n                    }\r\n                    var animation = _this._entity.animate({\r\n                        key: key,\r\n                        to: value,\r\n                        duration: duration,\r\n                        easing: easing\r\n                    });\r\n                    if (animation) {\r\n                        animations[key] = animation;\r\n                    }\r\n                }\r\n            });\r\n            return animations;\r\n        }\r\n    });\r\n    return State;\r\n}());\r\nexport { State };\r\n/**\r\n * Collection of [[State]] objects for an element.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/states/} for more info\r\n */\r\nvar States = /** @class */ (function () {\r\n    function States(entity) {\r\n        Object.defineProperty(this, \"_states\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_entity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._entity = entity;\r\n    }\r\n    /**\r\n     * Checks if a state by `name` exists. Returns it there is one.\r\n     *\r\n     * @param  name  State name\r\n     * @return       State\r\n     */\r\n    Object.defineProperty(States.prototype, \"lookup\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (name) {\r\n            return this._states[name];\r\n        }\r\n    });\r\n    /**\r\n     * Sets supplied `settings` on a state by the `name`.\r\n     *\r\n     * If such state does not yet exists, it is created.\r\n     *\r\n     * @param   name      State name\r\n     * @param   settings  Settings\r\n     * @return            New State\r\n     */\r\n    Object.defineProperty(States.prototype, \"create\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (name, settings) {\r\n            var state = this._states[name];\r\n            if (state) {\r\n                state.setAll(settings);\r\n                return state;\r\n            }\r\n            else {\r\n                var state_1 = new State(this._entity, settings);\r\n                this._states[name] = state_1;\r\n                return state_1;\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * Removes the state called `name`.\r\n     *\r\n     * @param   name      State name\r\n     */\r\n    Object.defineProperty(States.prototype, \"remove\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (name) {\r\n            delete this._states[name];\r\n        }\r\n    });\r\n    /**\r\n     * Applies a named state to the target element.\r\n     *\r\n     * @param  newState  State name\r\n     */\r\n    Object.defineProperty(States.prototype, \"apply\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (newState) {\r\n            var state = this._states[newState];\r\n            if (state) {\r\n                state.apply();\r\n            }\r\n            this._entity._applyState(newState);\r\n        }\r\n    });\r\n    /**\r\n     * Applies a named state to the element.\r\n     *\r\n     * Returns an object representing all [[Animation]] objects created for\r\n     * each setting key transition.\r\n     *\r\n     * @param   newState  State name\r\n     * @return            Animations\r\n     */\r\n    Object.defineProperty(States.prototype, \"applyAnimate\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (newState, duration) {\r\n            var animations;\r\n            var state = this._states[newState];\r\n            if (state) {\r\n                animations = state.applyAnimate(duration);\r\n            }\r\n            this._entity._applyStateAnimated(newState, duration);\r\n            return animations;\r\n        }\r\n    });\r\n    return States;\r\n}());\r\nexport { States };\r\n//# sourceMappingURL=States.js.map","import { EventDispatcher } from \"./EventDispatcher\";\r\nimport { Disposer, MultiDisposer } from \"./Disposer\";\r\nimport * as $array from \"./Array\";\r\nimport * as $object from \"./Object\";\r\nvar TemplateState = /** @class */ (function () {\r\n    function TemplateState(name, template, settings) {\r\n        Object.defineProperty(this, \"_settings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_name\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_template\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._name = name;\r\n        this._template = template;\r\n        this._settings = settings;\r\n    }\r\n    Object.defineProperty(TemplateState.prototype, \"get\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key, fallback) {\r\n            var value = this._settings[key];\r\n            if (value !== undefined) {\r\n                return value;\r\n            }\r\n            else {\r\n                return fallback;\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(TemplateState.prototype, \"set\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key, value) {\r\n            this._settings[key] = value;\r\n            // TODO maybe only do this if the value changed ?\r\n            this._template._stateChanged(this._name);\r\n        }\r\n    });\r\n    Object.defineProperty(TemplateState.prototype, \"remove\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key) {\r\n            delete this._settings[key];\r\n            // TODO maybe only do this if the value changed ?\r\n            this._template._stateChanged(this._name);\r\n        }\r\n    });\r\n    Object.defineProperty(TemplateState.prototype, \"setAll\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (settings) {\r\n            var _this = this;\r\n            $object.keys(settings).forEach(function (key) {\r\n                _this._settings[key] = settings[key];\r\n            });\r\n            this._template._stateChanged(this._name);\r\n        }\r\n    });\r\n    Object.defineProperty(TemplateState.prototype, \"_apply\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (other, seen) {\r\n            $object.each(this._settings, function (key, value) {\r\n                if (!seen[key] && !other._userSettings[key]) {\r\n                    seen[key] = true;\r\n                    other.setRaw(key, value);\r\n                }\r\n            });\r\n        }\r\n    });\r\n    return TemplateState;\r\n}());\r\nexport { TemplateState };\r\nvar TemplateStates = /** @class */ (function () {\r\n    function TemplateStates(template) {\r\n        Object.defineProperty(this, \"_template\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_states\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        this._template = template;\r\n    }\r\n    Object.defineProperty(TemplateStates.prototype, \"lookup\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (name) {\r\n            return this._states[name];\r\n        }\r\n    });\r\n    Object.defineProperty(TemplateStates.prototype, \"create\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (name, settings) {\r\n            var state = this._states[name];\r\n            if (state) {\r\n                state.setAll(settings);\r\n                return state;\r\n            }\r\n            else {\r\n                var state_1 = new TemplateState(name, this._template, settings);\r\n                this._states[name] = state_1;\r\n                this._template._stateChanged(name);\r\n                return state_1;\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(TemplateStates.prototype, \"remove\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (name) {\r\n            delete this._states[name];\r\n            this._template._stateChanged(name);\r\n        }\r\n    });\r\n    Object.defineProperty(TemplateStates.prototype, \"_apply\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (entity, state) {\r\n            $object.each(this._states, function (key, value) {\r\n                var seen = state.states[key];\r\n                if (seen == null) {\r\n                    seen = state.states[key] = {};\r\n                }\r\n                var other = entity.states.create(key, {});\r\n                value._apply(other, seen);\r\n            });\r\n        }\r\n    });\r\n    return TemplateStates;\r\n}());\r\nexport { TemplateStates };\r\nvar TemplateAdapters = /** @class */ (function () {\r\n    function TemplateAdapters() {\r\n        Object.defineProperty(this, \"_callbacks\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n    }\r\n    Object.defineProperty(TemplateAdapters.prototype, \"add\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key, callback) {\r\n            var _this = this;\r\n            var callbacks = this._callbacks[key];\r\n            if (callbacks === undefined) {\r\n                callbacks = this._callbacks[key] = [];\r\n            }\r\n            callbacks.push(callback);\r\n            return new Disposer(function () {\r\n                $array.removeFirst(callbacks, callback);\r\n                if (callbacks.length === 0) {\r\n                    delete _this._callbacks[key];\r\n                }\r\n            });\r\n        }\r\n    });\r\n    Object.defineProperty(TemplateAdapters.prototype, \"remove\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key) {\r\n            var callbacks = this._callbacks[key];\r\n            if (callbacks !== undefined) {\r\n                delete this._callbacks[key];\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(TemplateAdapters.prototype, \"_apply\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (entity) {\r\n            var disposers = [];\r\n            $object.each(this._callbacks, function (key, callbacks) {\r\n                $array.each(callbacks, function (callback) {\r\n                    disposers.push(entity.adapters.add(key, callback));\r\n                });\r\n            });\r\n            return new MultiDisposer(disposers);\r\n        }\r\n    });\r\n    return TemplateAdapters;\r\n}());\r\nexport { TemplateAdapters };\r\n// TODO maybe extend from Properties ?\r\nvar Template = /** @class */ (function () {\r\n    function Template(settings, isReal) {\r\n        Object.defineProperty(this, \"_settings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_privateSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        // TODO code duplication with Properties\r\n        Object.defineProperty(this, \"_settingEvents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_privateSettingEvents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_entities\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"states\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new TemplateStates(this)\r\n        });\r\n        Object.defineProperty(this, \"adapters\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new TemplateAdapters()\r\n        });\r\n        Object.defineProperty(this, \"events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new EventDispatcher()\r\n        });\r\n        Object.defineProperty(this, \"setup\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        if (!isReal) {\r\n            throw new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\r\n        }\r\n        this._settings = settings;\r\n    }\r\n    /**\r\n     * Use this method to create an instance of this class.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n     * @param   root      Root element\r\n     * @param   settings  Settings\r\n     * @param   template  Template\r\n     * @return            Instantiated object\r\n     */\r\n    Object.defineProperty(Template, \"new\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (settings) {\r\n            return new Template(settings, true);\r\n        }\r\n    });\r\n    Object.defineProperty(Template.prototype, \"get\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key, fallback) {\r\n            var value = this._settings[key];\r\n            if (value !== undefined) {\r\n                return value;\r\n            }\r\n            else {\r\n                return fallback;\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Template.prototype, \"setRaw\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key, value) {\r\n            this._settings[key] = value;\r\n        }\r\n    });\r\n    Object.defineProperty(Template.prototype, \"set\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key, value) {\r\n            var _this = this;\r\n            if (this._settings[key] !== value) {\r\n                this.setRaw(key, value);\r\n                this._entities.forEach(function (entity) {\r\n                    entity._setTemplateProperty(_this, key, value);\r\n                });\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Template.prototype, \"remove\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key) {\r\n            if (key in this._settings) {\r\n                delete this._settings[key];\r\n                this._entities.forEach(function (entity) {\r\n                    entity._removeTemplateProperty(key);\r\n                });\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Template.prototype, \"removeAll\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            var _this = this;\r\n            $object.each(this._settings, function (key, _value) {\r\n                _this.remove(key);\r\n            });\r\n        }\r\n    });\r\n    Object.defineProperty(Template.prototype, \"getPrivate\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key, fallback) {\r\n            var value = this._privateSettings[key];\r\n            if (value !== undefined) {\r\n                return value;\r\n            }\r\n            else {\r\n                return fallback;\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Template.prototype, \"setPrivateRaw\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key, value) {\r\n            this._privateSettings[key] = value;\r\n            return value;\r\n        }\r\n    });\r\n    Object.defineProperty(Template.prototype, \"setPrivate\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key, value) {\r\n            var _this = this;\r\n            if (this._privateSettings[key] !== value) {\r\n                this.setPrivateRaw(key, value);\r\n                this._entities.forEach(function (entity) {\r\n                    entity._setTemplatePrivateProperty(_this, key, value);\r\n                });\r\n            }\r\n            return value;\r\n        }\r\n    });\r\n    Object.defineProperty(Template.prototype, \"removePrivate\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key) {\r\n            if (key in this._privateSettings) {\r\n                delete this._privateSettings[key];\r\n                this._entities.forEach(function (entity) {\r\n                    entity._removeTemplatePrivateProperty(key);\r\n                });\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(Template.prototype, \"setAll\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (value) {\r\n            var _this = this;\r\n            $object.each(value, function (key, value) {\r\n                _this.set(key, value);\r\n            });\r\n        }\r\n    });\r\n    // TODO code duplication with Properties\r\n    Object.defineProperty(Template.prototype, \"on\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key, callback) {\r\n            var _this = this;\r\n            var events = this._settingEvents[key];\r\n            if (events === undefined) {\r\n                events = this._settingEvents[key] = [];\r\n            }\r\n            events.push(callback);\r\n            return new Disposer(function () {\r\n                $array.removeFirst(events, callback);\r\n                if (events.length === 0) {\r\n                    delete _this._settingEvents[key];\r\n                }\r\n            });\r\n        }\r\n    });\r\n    // TODO code duplication with Properties\r\n    Object.defineProperty(Template.prototype, \"onPrivate\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (key, callback) {\r\n            var _this = this;\r\n            var events = this._privateSettingEvents[key];\r\n            if (events === undefined) {\r\n                events = this._privateSettingEvents[key] = [];\r\n            }\r\n            events.push(callback);\r\n            return new Disposer(function () {\r\n                $array.removeFirst(events, callback);\r\n                if (events.length === 0) {\r\n                    delete _this._privateSettingEvents[key];\r\n                }\r\n            });\r\n        }\r\n    });\r\n    Object.defineProperty(Template.prototype, \"_apply\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (entity, state) {\r\n            var disposers = [];\r\n            $object.each(this._settingEvents, function (key, events) {\r\n                $array.each(events, function (event) {\r\n                    disposers.push(entity.on(key, event));\r\n                });\r\n            });\r\n            $object.each(this._privateSettingEvents, function (key, events) {\r\n                $array.each(events, function (event) {\r\n                    disposers.push(entity.onPrivate(key, event));\r\n                });\r\n            });\r\n            this.states._apply(entity, state);\r\n            disposers.push(this.adapters._apply(entity));\r\n            disposers.push(entity.events.copyFrom(this.events));\r\n            return new MultiDisposer(disposers);\r\n        }\r\n    });\r\n    Object.defineProperty(Template.prototype, \"_setObjectTemplate\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (entity) {\r\n            this._entities.push(entity);\r\n        }\r\n    });\r\n    Object.defineProperty(Template.prototype, \"_removeObjectTemplate\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (entity) {\r\n            $array.remove(this._entities, entity);\r\n        }\r\n    });\r\n    Object.defineProperty(Template.prototype, \"_stateChanged\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (name) {\r\n            this._entities.forEach(function (entity) {\r\n                entity._applyStateByKey(name);\r\n            });\r\n        }\r\n    });\r\n    return Template;\r\n}());\r\nexport { Template };\r\n//# sourceMappingURL=Template.js.map","import { Color } from \"./Color\";\r\nimport * as $type from \"./Type\";\r\nvar TextFormatter = /** @class */ (function () {\r\n    function TextFormatter() {\r\n    }\r\n    /**\r\n     * Replaces brackets with temporary placeholders.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text  Input text\r\n     * @return Escaped text\r\n     */\r\n    Object.defineProperty(TextFormatter, \"escape\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (text) {\r\n            return text.\r\n                replace(/\\[\\[/g, this.prefix + \"1\").\r\n                replace(/([^\\/\\]]{1})\\]\\]/g, \"$1\" + this.prefix + \"2\").\r\n                replace(/\\]\\]/g, this.prefix + \"2\").\r\n                replace(/\\{\\{/g, this.prefix + \"3\").\r\n                replace(/\\}\\}/g, this.prefix + \"4\").\r\n                replace(/\\'\\'/g, this.prefix + \"5\");\r\n        }\r\n    });\r\n    /**\r\n     * Replaces placeholders back to brackets.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text  Escaped text\r\n     * @return Unescaped text\r\n     */\r\n    Object.defineProperty(TextFormatter, \"unescape\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (text) {\r\n            return text.\r\n                replace(new RegExp(this.prefix + \"1\", \"g\"), \"[[\").\r\n                replace(new RegExp(this.prefix + \"2\", \"g\"), \"]]\").\r\n                replace(new RegExp(this.prefix + \"3\", \"g\"), \"{{\").\r\n                replace(new RegExp(this.prefix + \"4\", \"g\"), \"}}\").\r\n                replace(new RegExp(this.prefix + \"5\", \"g\"), \"''\");\r\n        }\r\n    });\r\n    /**\r\n     * Cleans up the text text for leftover double square brackets.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text  Input text\r\n     * @return Cleaned up text\r\n     */\r\n    Object.defineProperty(TextFormatter, \"cleanUp\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (text) {\r\n            return text.\r\n                replace(/\\[\\[/g, \"[\").\r\n                replace(/\\]\\]/g, \"]\").\r\n                replace(/\\{\\{/g, \"{\").\r\n                replace(/\\}\\}/g, \"}\").\r\n                replace(/\\'\\'/g, \"'\");\r\n        }\r\n    });\r\n    /**\r\n     * Splits string into chunks. (style blocks, quoted blocks, regular blocks)\r\n     *\r\n     * If the second parameter `quotedBlocks` is set to `true` this method will\r\n     * also single out text blocks enclosed within single quotes that no\r\n     * formatting should be applied to, and they should be displayed as is.\r\n     *\r\n     * Default for the above is `false`, so that you can use single quote in text\r\n     * without escaping it.\r\n     *\r\n     * If enabled, single quotes can be escaped by doubling it - adding two\r\n     * single quotes, which will be replaced by a one single quote in the final\r\n     * output.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text          Text to chunk\r\n     * @param quotedBlocks  Use quoted blocks\r\n     * @param noFormatting  Formatting blocks will be treated as regular text\r\n     * @return Array of string chunks\r\n     */\r\n    Object.defineProperty(TextFormatter, \"chunk\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (text, quotedBlocks, noFormatting) {\r\n            if (quotedBlocks === void 0) { quotedBlocks = false; }\r\n            if (noFormatting === void 0) { noFormatting = false; }\r\n            // Init result\r\n            var res = [];\r\n            // Replace double (escaped) square spaces and quotes with temporary codes\r\n            text = this.escape(text);\r\n            // Deal with style blocks\r\n            var chunks = quotedBlocks ? text.split(\"'\") : [text];\r\n            for (var i = 0; i < chunks.length; i++) {\r\n                var chunk = chunks[i];\r\n                // Empty?\r\n                if (chunk === \"\") {\r\n                    continue;\r\n                }\r\n                if ((i % 2) === 0) {\r\n                    // Text outside quotes\r\n                    // Parse for style blocks which are \"text\" chunks, the rest chunks are\r\n                    // \"value\"\r\n                    chunk = chunk.replace(/\\]\\[/g, \"]\" + $type.PLACEHOLDER + \"[\");\r\n                    chunk = chunk.replace(/\\[\\]/g, \"[ ]\");\r\n                    var chunks2 = chunk.split(/[\\[\\]]+/);\r\n                    for (var i2 = 0; i2 < chunks2.length; i2++) {\r\n                        var chunk2 = this.cleanUp(this.unescape(chunks2[i2]));\r\n                        // Placeholder?\r\n                        if (chunk2 === $type.PLACEHOLDER) {\r\n                            continue;\r\n                        }\r\n                        // Empty?\r\n                        if (chunk2 === \"\") {\r\n                            continue;\r\n                        }\r\n                        // Block or value\r\n                        if ((i2 % 2) === 0) {\r\n                            res.push({\r\n                                \"type\": \"value\",\r\n                                \"text\": chunk2\r\n                            });\r\n                        }\r\n                        else {\r\n                            res.push({\r\n                                \"type\": noFormatting ? \"value\" : \"format\",\r\n                                \"text\": \"[\" + chunk2 + \"]\"\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    // A text within doublequotes\r\n                    // All chunks are \"text\"\r\n                    var chunks2 = chunk.split(/[\\[\\]]+/);\r\n                    for (var i2 = 0; i2 < chunks2.length; i2++) {\r\n                        var chunk2 = this.cleanUp(this.unescape(chunks2[i2]));\r\n                        // Empty?\r\n                        if (chunk2 === \"\") {\r\n                            continue;\r\n                        }\r\n                        // Block or text\r\n                        if ((i2 % 2) === 0) {\r\n                            res.push({\r\n                                \"type\": \"text\",\r\n                                \"text\": chunk2\r\n                            });\r\n                        }\r\n                        else if (this.isImage(chunk2)) {\r\n                            res.push({\r\n                                \"type\": \"image\",\r\n                                \"text\": \"[\" + chunk2 + \"]\"\r\n                            });\r\n                        }\r\n                        else {\r\n                            res.push({\r\n                                \"type\": \"format\",\r\n                                \"text\": \"[\" + chunk2 + \"]\"\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return res;\r\n        }\r\n    });\r\n    /**\r\n     * Checks if supplied format contains image information and should be\r\n     * formatted as such.\r\n     * I.e.: `[img: myImage.png]`\r\n     *\r\n     * @ignore\r\n     * @param  text  Format\r\n     * @return true if it is an image\r\n     */\r\n    Object.defineProperty(TextFormatter, \"isImage\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (text) {\r\n            return text.match(/img[ ]?:/) ? true : false;\r\n        }\r\n    });\r\n    Object.defineProperty(TextFormatter, \"getTextStyle\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (style) {\r\n            // let textStyle: string[] = [];\r\n            // let textFill: string | undefined;\r\n            var format = {};\r\n            if (style == \"\" || style == \"[ ]\") {\r\n                return {};\r\n            }\r\n            // Pre-process quoted text\r\n            var q = style.match(/('[^']*')|(\"[^\"]*\")/gi);\r\n            if (q) {\r\n                for (var i = 0; i < q.length; i++) {\r\n                    style = style.replace(q[i], q[i].replace(/['\"]*/g, \"\").replace(/[ ]+/g, \"+\"));\r\n                }\r\n            }\r\n            // Get style parts\r\n            var b = style.match(/([\\w\\-]*:[\\s]?[^;\\s\\]]*)|(\\#[\\w]{1,6})|([\\w\\-]+)|(\\/)/gi);\r\n            // Empty?\r\n            if (!b) {\r\n                return {};\r\n            }\r\n            // Check each part\r\n            for (var i = 0; i < b.length; i++) {\r\n                if (b[i].match(/^(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)$/i)) {\r\n                    format.fontWeight = b[i];\r\n                }\r\n                else if (b[i].match(/^(underline|line-through)$/i)) {\r\n                    format.textDecoration = b[i];\r\n                }\r\n                else if (b[i] == \"/\") {\r\n                    // Just closing tag\r\n                    // Do nothing\r\n                }\r\n                else if (!b[i].match(/:/)) {\r\n                    // Color\r\n                    format.fill = Color.fromString(b[i]);\r\n                }\r\n                else {\r\n                    var p = b[i].replace(\"+\", \" \").split(/:[ ]*/);\r\n                    format[p[0]] = p[1];\r\n                    //textStyle.push(b[i].replace(/^[a-zA-Z]:[ ]*/, \"\"));\r\n                    //b[i] = b[i].replace(/\\+/g, \" \");\r\n                }\r\n            }\r\n            return format;\r\n        }\r\n    });\r\n    Object.defineProperty(TextFormatter, \"prefix\", {\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n        value: \"__amcharts__\"\r\n    });\r\n    return TextFormatter;\r\n}());\r\nexport { TextFormatter };\r\n//# sourceMappingURL=TextFormatter.js.map","import { __assign } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport * as $type from \"./Type\";\r\nimport * as $utils from \"./Utils\";\r\n/**\r\n * Returns a `Promise` which can be used to execute code after number of\r\n * milliseconds.\r\n *\r\n * @param   ms  Sleep duration in ms\r\n * @return      Promise\r\n */\r\nexport function sleep(ms) {\r\n    return new Promise(function (resolve, _reject) {\r\n        setTimeout(resolve, ms);\r\n    });\r\n}\r\n/**\r\n * Maps time period names to their numeric representations in milliseconds.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport var timeUnitDurations = {\r\n    millisecond: 1,\r\n    second: 1000,\r\n    minute: 60000,\r\n    hour: 3600000,\r\n    day: 86400000,\r\n    week: 604800000,\r\n    month: 365.242 / 12 * 86400000,\r\n    year: 31536000000\r\n};\r\n/**\r\n * Returns the next time unit that goes after source `unit`.\r\n *\r\n * E.g. \"hour\" is the next unit after \"minute\", etc.\r\n *\r\n * @ignore Exclude from docs\r\n * @param unit  Source time unit\r\n * @return Next time unit\r\n */\r\nexport function getNextUnit(unit) {\r\n    switch (unit) {\r\n        case \"year\":\r\n            return;\r\n        case \"month\":\r\n            return \"year\";\r\n        case \"week\":\r\n            return \"month\";\r\n        case \"day\":\r\n            return \"month\"; // not a mistake\r\n        case \"hour\":\r\n            return \"day\";\r\n        case \"minute\":\r\n            return \"hour\";\r\n        case \"second\":\r\n            return \"minute\";\r\n        case \"millisecond\":\r\n            return \"second\";\r\n    }\r\n}\r\n/**\r\n * Returns number of milliseconds in the `count` of time `unit`.\r\n *\r\n * Available units: \"millisecond\", \"second\", \"minute\", \"hour\", \"day\", \"week\",\r\n * \"month\", and \"year\".\r\n *\r\n * @param unit   Time unit\r\n * @param count  Number of units\r\n * @return Milliseconds\r\n */\r\nexport function getDuration(unit, count) {\r\n    if (count == null) {\r\n        count = 1;\r\n    }\r\n    return timeUnitDurations[unit] * count;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function getIntervalDuration(interval) {\r\n    if (interval) {\r\n        return timeUnitDurations[interval.timeUnit] * interval.count;\r\n    }\r\n    return 0;\r\n}\r\nexport function getDateIntervalDuration(interval, date, firstDateOfWeek, utc, timezone) {\r\n    var unit = interval.timeUnit;\r\n    var count = interval.count;\r\n    if (unit == \"hour\" || unit == \"minute\" || unit == \"second\" || unit == \"millisecond\") {\r\n        return timeUnitDurations[interval.timeUnit] * interval.count;\r\n    }\r\n    else {\r\n        var firstTime = round(new Date(date.getTime()), unit, count, firstDateOfWeek, utc, undefined, timezone).getTime();\r\n        var lastTime = firstTime + count * getDuration(unit) * 1.05;\r\n        lastTime = round(new Date(lastTime), unit, 1, firstDateOfWeek, utc, undefined, timezone).getTime();\r\n        return lastTime - firstTime;\r\n    }\r\n}\r\n/**\r\n * Returns current `Date` object.\r\n *\r\n * @return Current date\r\n */\r\nexport function now() {\r\n    return new Date();\r\n}\r\n/**\r\n * Returns current timestamp.\r\n *\r\n * @return Current timestamp\r\n */\r\nexport function getTime() {\r\n    return now().getTime();\r\n}\r\n/**\r\n * Returns a copy of the `Date` object.\r\n *\r\n * @param date  Source date\r\n * @return Copy\r\n */\r\nexport function copy(date) {\r\n    return new Date(date.getTime()); // todo: check if this is ok. new Date(date) used to strip milliseconds on FF in v3\r\n}\r\n/**\r\n * Checks if the `unit` part of two `Date` objects do not match. Two dates\r\n * represent a \"range\" of time, rather the same time date.\r\n *\r\n * @param timeOne  timestamp\r\n * @param timeTwo  timestamp\r\n * @param unit     Time unit to check\r\n * @return Range?\r\n */\r\nexport function checkChange(timeOne, timeTwo, unit, utc, timezone) {\r\n    // quick\r\n    if ((timeTwo - timeOne) > getDuration(unit, 1.2)) {\r\n        return true;\r\n    }\r\n    var dateOne = new Date(timeOne);\r\n    var dateTwo = new Date(timeTwo);\r\n    if (timezone) {\r\n        dateOne = timezone.convertLocal(dateOne);\r\n        dateTwo = timezone.convertLocal(dateTwo);\r\n    }\r\n    var timeZoneOffset1 = 0;\r\n    var timeZoneOffset2 = 0;\r\n    if (!utc && unit != \"millisecond\") {\r\n        timeZoneOffset1 = dateOne.getTimezoneOffset();\r\n        dateOne.setUTCMinutes(dateOne.getUTCMinutes() - timeZoneOffset1);\r\n        timeZoneOffset2 = dateTwo.getTimezoneOffset();\r\n        dateTwo.setUTCMinutes(dateTwo.getUTCMinutes() - timeZoneOffset2);\r\n    }\r\n    var changed = false;\r\n    switch (unit) {\r\n        case \"year\":\r\n            if (dateOne.getUTCFullYear() != dateTwo.getUTCFullYear()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"month\":\r\n            if (dateOne.getUTCFullYear() != dateTwo.getUTCFullYear()) {\r\n                changed = true;\r\n            }\r\n            else if (dateOne.getUTCMonth() != dateTwo.getUTCMonth()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"day\":\r\n            if (dateOne.getUTCMonth() != dateTwo.getUTCMonth()) {\r\n                changed = true;\r\n            }\r\n            else if (dateOne.getUTCDate() != dateTwo.getUTCDate()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"hour\":\r\n            if (dateOne.getUTCHours() != dateTwo.getUTCHours()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"minute\":\r\n            if (dateOne.getUTCMinutes() != dateTwo.getUTCMinutes()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"second\":\r\n            if (dateOne.getUTCSeconds() != dateTwo.getUTCSeconds()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"millisecond\":\r\n            if (dateOne.getTime() != dateTwo.getTime()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n    }\r\n    if (changed) {\r\n        return changed;\r\n    }\r\n    var nextUnit = getNextUnit(unit);\r\n    if (nextUnit) {\r\n        return checkChange(timeOne, timeTwo, nextUnit, utc, timezone);\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Adds `count` of time `unit` to the source date. Returns a modified `Date` object.\r\n *\r\n * @param date   Source date\r\n * @param unit   Time unit\r\n * @param count  Number of units to add\r\n * @return Modified date\r\n */\r\nexport function add(date, unit, count, utc, timezone) {\r\n    var timeZoneOffset = 0;\r\n    if (!utc && unit != \"millisecond\") {\r\n        timeZoneOffset = date.getTimezoneOffset();\r\n        if (timezone) {\r\n            timeZoneOffset -= timezone.offsetUTC(date);\r\n        }\r\n        date.setUTCMinutes(date.getUTCMinutes() - timeZoneOffset);\r\n    }\r\n    switch (unit) {\r\n        case \"day\":\r\n            var day = date.getUTCDate();\r\n            date.setUTCDate(day + count);\r\n            break;\r\n        case \"second\":\r\n            var seconds = date.getUTCSeconds();\r\n            date.setUTCSeconds(seconds + count);\r\n            break;\r\n        case \"millisecond\":\r\n            var milliseconds = date.getUTCMilliseconds();\r\n            date.setUTCMilliseconds(milliseconds + count);\r\n            break;\r\n        case \"hour\":\r\n            var hours = date.getUTCHours();\r\n            date.setUTCHours(hours + count);\r\n            break;\r\n        case \"minute\":\r\n            var minutes = date.getUTCMinutes();\r\n            date.setUTCMinutes(minutes + count);\r\n            break;\r\n        case \"year\":\r\n            var year = date.getUTCFullYear();\r\n            date.setUTCFullYear(year + count);\r\n            break;\r\n        case \"month\":\r\n            var month = date.getUTCMonth();\r\n            date.setUTCMonth(month + count);\r\n            break;\r\n        case \"week\":\r\n            var wday = date.getUTCDate();\r\n            date.setUTCDate(wday + count * 7);\r\n            break;\r\n    }\r\n    if (!utc && unit != \"millisecond\") {\r\n        date.setUTCMinutes(date.getUTCMinutes() + timeZoneOffset);\r\n        if (unit == \"day\" || unit == \"week\" || unit == \"month\" || unit == \"year\") {\r\n            var newTimeZoneOffset = date.getTimezoneOffset();\r\n            if (timezone) {\r\n                newTimeZoneOffset += timezone.offsetUTC(date);\r\n            }\r\n            if (newTimeZoneOffset != timeZoneOffset) {\r\n                var diff = newTimeZoneOffset - timeZoneOffset;\r\n                date.setUTCMinutes(date.getUTCMinutes() + diff);\r\n                // solves issues if new time falls back to old time zone\r\n                if (date.getTimezoneOffset() != newTimeZoneOffset) {\r\n                    date.setUTCMinutes(date.getUTCMinutes() - diff);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return date;\r\n}\r\n/**\r\n * \"Rounds\" the date to specific time unit.\r\n *\r\n * @param date             Source date\r\n * @param unit             Time unit\r\n * @param count            Number of units to round to\r\n * @param firstDateOfWeek  First day of week\r\n * @param utc              Use UTC timezone\r\n * @param firstDate        First date to round to\r\n * @param roundMinutes     Minutes to round to (some timezones use non-whole hour)\r\n * @param timezone         Use specific named timezone when rounding\r\n * @return New date\r\n */\r\nexport function round(date, unit, count, firstDateOfWeek, utc, firstDate, timezone) {\r\n    if (!timezone || utc) {\r\n        var timeZoneOffset = 0;\r\n        if (!utc && unit != \"millisecond\") {\r\n            timeZoneOffset = date.getTimezoneOffset();\r\n            date.setUTCMinutes(date.getUTCMinutes() - timeZoneOffset);\r\n        }\r\n        switch (unit) {\r\n            case \"day\":\r\n                var day = date.getUTCDate();\r\n                if (count > 1) {\r\n                    //\tday = Math.floor(day / count) * count;\r\n                    if (firstDate) {\r\n                        firstDate = round(firstDate, \"day\", 1);\r\n                        var difference = date.getTime() - firstDate.getTime();\r\n                        var unitCount = Math.floor(difference / getDuration(\"day\") / count);\r\n                        var duration = getDuration(\"day\", unitCount * count);\r\n                        date.setTime(firstDate.getTime() + duration - timeZoneOffset * getDuration(\"minute\"));\r\n                    }\r\n                }\r\n                else {\r\n                    date.setUTCDate(day);\r\n                }\r\n                date.setUTCHours(0, 0, 0, 0);\r\n                break;\r\n            case \"second\":\r\n                var seconds = date.getUTCSeconds();\r\n                if (count > 1) {\r\n                    seconds = Math.floor(seconds / count) * count;\r\n                }\r\n                date.setUTCSeconds(seconds, 0);\r\n                break;\r\n            case \"millisecond\":\r\n                if (count == 1) {\r\n                    return date; // much better for perf!\r\n                }\r\n                var milliseconds = date.getUTCMilliseconds();\r\n                milliseconds = Math.floor(milliseconds / count) * count;\r\n                date.setUTCMilliseconds(milliseconds);\r\n                break;\r\n            case \"hour\":\r\n                var hours = date.getUTCHours();\r\n                if (count > 1) {\r\n                    hours = Math.floor(hours / count) * count;\r\n                }\r\n                date.setUTCHours(hours, 0, 0, 0);\r\n                break;\r\n            case \"minute\":\r\n                var minutes = date.getUTCMinutes();\r\n                milliseconds = date.getUTCMilliseconds();\r\n                if (count > 1) {\r\n                    minutes = Math.floor(minutes / count) * count;\r\n                }\r\n                date.setUTCMinutes(minutes, 0, 0);\r\n                break;\r\n            case \"month\":\r\n                var month = date.getUTCMonth();\r\n                if (count > 1) {\r\n                    month = Math.floor(month / count) * count;\r\n                }\r\n                date.setUTCMonth(month, 1);\r\n                date.setUTCHours(0, 0, 0, 0);\r\n                break;\r\n            case \"year\":\r\n                var year = date.getUTCFullYear();\r\n                if (count > 1) {\r\n                    year = Math.floor(year / count) * count;\r\n                }\r\n                date.setUTCFullYear(year, 0, 1);\r\n                date.setUTCHours(0, 0, 0, 0);\r\n                break;\r\n            case \"week\":\r\n                var wday = date.getUTCDate();\r\n                var weekDay = date.getUTCDay();\r\n                if (!$type.isNumber(firstDateOfWeek)) {\r\n                    firstDateOfWeek = 1;\r\n                }\r\n                if (weekDay >= firstDateOfWeek) {\r\n                    wday = wday - weekDay + firstDateOfWeek;\r\n                }\r\n                else {\r\n                    wday = wday - (7 + weekDay) + firstDateOfWeek;\r\n                }\r\n                date.setUTCDate(wday);\r\n                date.setUTCHours(0, 0, 0, 0);\r\n                break;\r\n        }\r\n        if (!utc && unit != \"millisecond\") {\r\n            date.setUTCMinutes(date.getUTCMinutes() + timeZoneOffset);\r\n            if (unit == \"day\" || unit == \"week\" || unit == \"month\" || unit == \"year\") {\r\n                var newTimeZoneOffset = date.getTimezoneOffset();\r\n                if (newTimeZoneOffset != timeZoneOffset) {\r\n                    var diff = newTimeZoneOffset - timeZoneOffset;\r\n                    date.setUTCMinutes(date.getUTCMinutes() + diff);\r\n                }\r\n            }\r\n        }\r\n        return date;\r\n    }\r\n    else {\r\n        if (isNaN(date.getTime())) {\r\n            return date;\r\n        }\r\n        var tzoffset = timezone.offsetUTC(date);\r\n        var timeZoneOffset = date.getTimezoneOffset();\r\n        var parsedDate = timezone.parseDate(date);\r\n        //console.log(parsedDate)\r\n        var year = parsedDate.year;\r\n        var month = parsedDate.month;\r\n        var day = parsedDate.day;\r\n        var hour = parsedDate.hour;\r\n        var minute = parsedDate.minute;\r\n        var second = parsedDate.second;\r\n        var millisecond = parsedDate.millisecond;\r\n        var weekday = parsedDate.weekday;\r\n        switch (unit) {\r\n            case \"day\":\r\n                if (count > 1 && firstDate) {\r\n                    firstDate = round(firstDate, \"day\", 1, firstDateOfWeek, utc, undefined, timezone);\r\n                    var difference = date.getTime() - firstDate.getTime();\r\n                    var unitCount = Math.floor(difference / getDuration(\"day\") / count);\r\n                    var duration = getDuration(\"day\", unitCount * count);\r\n                    date.setTime(firstDate.getTime() + duration);\r\n                    parsedDate = timezone.parseDate(date);\r\n                    year = parsedDate.year;\r\n                    month = parsedDate.month;\r\n                    day = parsedDate.day;\r\n                }\r\n                hour = 0;\r\n                minute = tzoffset - timeZoneOffset;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n            case \"second\":\r\n                minute += tzoffset - timeZoneOffset;\r\n                if (count > 1) {\r\n                    second = Math.floor(second / count) * count;\r\n                }\r\n                millisecond = 0;\r\n                break;\r\n            case \"millisecond\":\r\n                minute += tzoffset - timeZoneOffset;\r\n                if (count > 1) {\r\n                    millisecond = Math.floor(millisecond / count) * count;\r\n                }\r\n                break;\r\n            case \"hour\":\r\n                if (count > 1) {\r\n                    hour = Math.floor(hour / count) * count;\r\n                }\r\n                minute = tzoffset - timeZoneOffset;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n            case \"minute\":\r\n                if (count > 1) {\r\n                    minute = Math.floor(minute / count) * count;\r\n                }\r\n                minute += tzoffset - timeZoneOffset;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n            case \"month\":\r\n                if (count > 1) {\r\n                    month = Math.floor(month / count) * count;\r\n                }\r\n                day = 1;\r\n                hour = 0;\r\n                minute = tzoffset - timeZoneOffset;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n            case \"year\":\r\n                if (count > 1) {\r\n                    year = Math.floor(year / count) * count;\r\n                }\r\n                month = 0;\r\n                day = 1;\r\n                hour = 0;\r\n                minute = tzoffset - timeZoneOffset;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n            case \"week\":\r\n                if (!$type.isNumber(firstDateOfWeek)) {\r\n                    firstDateOfWeek = 1;\r\n                }\r\n                if (weekday >= firstDateOfWeek) {\r\n                    day = day - weekday + firstDateOfWeek;\r\n                }\r\n                else {\r\n                    day = day - (7 + weekday) + firstDateOfWeek;\r\n                }\r\n                hour = 0;\r\n                minute = tzoffset - timeZoneOffset;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n        }\r\n        date = new Date(year, month, day, hour, minute, second, millisecond);\r\n        var newOffset = date.getTimezoneOffset();\r\n        if (newOffset != timeZoneOffset) {\r\n            date.setTime(date.getTime() + (timeZoneOffset - newOffset) * 60000);\r\n        }\r\n        return date;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function chooseInterval(index, duration, gridCount, intervals) {\r\n    var gridInterval = intervals[index];\r\n    var intervalDuration = getIntervalDuration(gridInterval);\r\n    var lastIndex = intervals.length - 1;\r\n    if (index >= lastIndex) {\r\n        return __assign({}, intervals[lastIndex]);\r\n    }\r\n    var count = Math.ceil(duration / intervalDuration);\r\n    if (duration < intervalDuration && index > 0) {\r\n        return __assign({}, intervals[index - 1]);\r\n    }\r\n    if (count <= gridCount) {\r\n        return __assign({}, intervals[index]);\r\n    }\r\n    else {\r\n        if (index + 1 < intervals.length) {\r\n            return chooseInterval(index + 1, duration, gridCount, intervals);\r\n        }\r\n        else {\r\n            return __assign({}, intervals[index]);\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function getUnitValue(date, unit) {\r\n    switch (unit) {\r\n        case \"day\":\r\n            return date.getDate();\r\n        case \"second\":\r\n            return date.getSeconds();\r\n        case \"millisecond\":\r\n            return date.getMilliseconds();\r\n        case \"hour\":\r\n            return date.getHours();\r\n        case \"minute\":\r\n            return date.getMinutes();\r\n        case \"month\":\r\n            return date.getMonth();\r\n        case \"year\":\r\n            return date.getFullYear();\r\n        case \"week\":\r\n            return $utils.getWeek(date);\r\n    }\r\n}\r\n//# sourceMappingURL=Time.js.map","function parseDate(timezone, date) {\r\n    var year = 0;\r\n    var month = 0;\r\n    var day = 1;\r\n    var hour = 0;\r\n    var minute = 0;\r\n    var second = 0;\r\n    var millisecond = 0;\r\n    var weekday = 0;\r\n    timezone.formatToParts(date).forEach(function (x) {\r\n        switch (x.type) {\r\n            case \"year\":\r\n                year = +x.value;\r\n                break;\r\n            case \"month\":\r\n                month = (+x.value) - 1;\r\n                break;\r\n            case \"day\":\r\n                day = +x.value;\r\n                break;\r\n            case \"hour\":\r\n                hour = +x.value;\r\n                break;\r\n            case \"minute\":\r\n                minute = +x.value;\r\n                break;\r\n            case \"second\":\r\n                second = +x.value;\r\n                break;\r\n            case \"fractionalSecond\":\r\n                millisecond = +x.value;\r\n                break;\r\n            case \"weekday\":\r\n                switch (x.value) {\r\n                    case \"Sun\":\r\n                        weekday = 0;\r\n                        break;\r\n                    case \"Mon\":\r\n                        weekday = 1;\r\n                        break;\r\n                    case \"Tue\":\r\n                        weekday = 2;\r\n                        break;\r\n                    case \"Wed\":\r\n                        weekday = 3;\r\n                        break;\r\n                    case \"Thu\":\r\n                        weekday = 4;\r\n                        break;\r\n                    case \"Fri\":\r\n                        weekday = 5;\r\n                        break;\r\n                    case \"Sat\":\r\n                        weekday = 6;\r\n                        break;\r\n                }\r\n        }\r\n    });\r\n    if (hour === 24) {\r\n        hour = 0;\r\n    }\r\n    return { year: year, month: month, day: day, hour: hour, minute: minute, second: second, millisecond: millisecond, weekday: weekday };\r\n}\r\nfunction toUTCDate(timezone, date) {\r\n    var _a = parseDate(timezone, date), year = _a.year, month = _a.month, day = _a.day, hour = _a.hour, minute = _a.minute, second = _a.second, millisecond = _a.millisecond;\r\n    return Date.UTC(year, month, day, hour, minute, second, millisecond);\r\n}\r\nvar Timezone = /** @class */ (function () {\r\n    function Timezone(timezone, isReal) {\r\n        Object.defineProperty(this, \"_utc\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_dtf\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"name\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        if (!isReal) {\r\n            throw new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\r\n        }\r\n        this.name = timezone;\r\n        this._utc = new Intl.DateTimeFormat(\"UTC\", {\r\n            hour12: false,\r\n            timeZone: \"UTC\",\r\n            year: \"numeric\",\r\n            month: \"2-digit\",\r\n            day: \"2-digit\",\r\n            hour: \"2-digit\",\r\n            minute: \"2-digit\",\r\n            second: \"2-digit\",\r\n            weekday: \"short\",\r\n            fractionalSecondDigits: 3,\r\n        });\r\n        this._dtf = new Intl.DateTimeFormat(\"UTC\", {\r\n            hour12: false,\r\n            timeZone: timezone,\r\n            year: \"numeric\",\r\n            month: \"2-digit\",\r\n            day: \"2-digit\",\r\n            hour: \"2-digit\",\r\n            minute: \"2-digit\",\r\n            second: \"2-digit\",\r\n            weekday: \"short\",\r\n            fractionalSecondDigits: 3,\r\n        });\r\n    }\r\n    /**\r\n     * Use this method to create an instance of this class.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n     * @param   timezone  IANA timezone\r\n     * @return            Instantiated object\r\n     */\r\n    Object.defineProperty(Timezone, \"new\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (timezone) {\r\n            return (new this(timezone, true));\r\n        }\r\n    });\r\n    Object.defineProperty(Timezone.prototype, \"convertLocal\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (date) {\r\n            var offset = this.offsetUTC(date);\r\n            var userOffset = date.getTimezoneOffset();\r\n            var output = new Date(date);\r\n            output.setUTCMinutes(output.getUTCMinutes() - (offset - userOffset));\r\n            var newUserOffset = output.getTimezoneOffset();\r\n            if (userOffset != newUserOffset) {\r\n                output.setUTCMinutes(output.getUTCMinutes() + newUserOffset - userOffset);\r\n            }\r\n            return output;\r\n        }\r\n    });\r\n    Object.defineProperty(Timezone.prototype, \"offsetUTC\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (date) {\r\n            var utc = toUTCDate(this._utc, date);\r\n            var dtf = toUTCDate(this._dtf, date);\r\n            return (utc - dtf) / 60000;\r\n        }\r\n    });\r\n    Object.defineProperty(Timezone.prototype, \"parseDate\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (date) {\r\n            return parseDate(this._dtf, date);\r\n        }\r\n    });\r\n    return Timezone;\r\n}());\r\nexport { Timezone };\r\n//# sourceMappingURL=Timezone.js.map","/**\r\n * A collection of utility functions for various type checks and conversion\r\n * @hidden\r\n */\r\n/**\r\n * ============================================================================\r\n * TYPE CHECK\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Returns `true` if value is not a number (NaN).\r\n *\r\n * @param value Input value\r\n * @return Is NaN?\r\n */\r\nexport function isNaN(value) {\r\n    return Number(value) !== value;\r\n}\r\n/**\r\n * Returns a type of the value.\r\n *\r\n * @param value  Input value\r\n * @return Type of the value\r\n * @ignore\r\n */\r\nexport function getType(value) {\r\n    return ({}).toString.call(value);\r\n}\r\n/**\r\n * ============================================================================\r\n * QUICK CONVERSION\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Converts any value into a `number`.\r\n *\r\n * @param value  Source value\r\n * @return Number representation of value\r\n */\r\nexport function toNumber(value) {\r\n    if (value != null && !isNumber(value)) {\r\n        var converted = Number(value);\r\n        if (isNaN(converted) && isString(value) && value != \"\") {\r\n            return toNumber(value.replace(/[^0-9.\\-]+/g, ''));\r\n        }\r\n        return converted;\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * Converts anything to Date object.\r\n *\r\n * @param value  A value of any type\r\n * @return Date object representing a value\r\n */\r\nexport function toDate(value) {\r\n    if (isDate(value)) {\r\n        // TODO maybe don't create a new Date ?\r\n        return new Date(value);\r\n    }\r\n    else if (isNumber(value)) {\r\n        return new Date(value);\r\n    }\r\n    else {\r\n        // Try converting to number (assuming timestamp)\r\n        var num = Number(value);\r\n        if (!isNumber(num)) {\r\n            return new Date(value);\r\n        }\r\n        else {\r\n            return new Date(num);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Converts numeric value into string. Deals with large or small numbers that\r\n * would otherwise use exponents.\r\n *\r\n * @param value  Numeric value\r\n * @return Numeric value as string\r\n */\r\nexport function numberToString(value) {\r\n    // TODO handle Infinity and -Infinity\r\n    if (isNaN(value)) {\r\n        return \"NaN\";\r\n    }\r\n    if (value === Infinity) {\r\n        return \"Infinity\";\r\n    }\r\n    if (value === -Infinity) {\r\n        return \"-Infinity\";\r\n    }\r\n    // Negative 0\r\n    if ((value === 0) && (1 / value === -Infinity)) {\r\n        return \"-0\";\r\n    }\r\n    // Preserve negative and deal with absoute values\r\n    var negative = value < 0;\r\n    value = Math.abs(value);\r\n    // TODO test this\r\n    var parsed = /^([0-9]+)(?:\\.([0-9]+))?(?:e[\\+\\-]([0-9]+))?$/.exec(\"\" + value);\r\n    var digits = parsed[1];\r\n    var decimals = parsed[2] || \"\";\r\n    var res;\r\n    // Leave the nummber as it is if it does not use exponents\r\n    if (parsed[3] === undefined) {\r\n        res = (decimals === \"\" ? digits : digits + \".\" + decimals);\r\n    }\r\n    else {\r\n        var exponent = +parsed[3];\r\n        // Deal with decimals\r\n        if (value < 1) {\r\n            var zeros = exponent - 1;\r\n            res = \"0.\" + repeat(\"0\", zeros) + digits + decimals;\r\n            // Deal with integers\r\n        }\r\n        else {\r\n            var zeros = exponent - decimals.length;\r\n            if (zeros === 0) {\r\n                res = digits + decimals;\r\n            }\r\n            else if (zeros < 0) {\r\n                res = digits + decimals.slice(0, zeros) + \".\" + decimals.slice(zeros);\r\n            }\r\n            else {\r\n                res = digits + decimals + repeat(\"0\", zeros);\r\n            }\r\n        }\r\n    }\r\n    return negative ? \"-\" + res : res;\r\n}\r\n/**\r\n * Repeats a `string` number of times as set in `amount`.\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Make this faster\r\n * @param string  Source string\r\n * @param amount  Number of times to repeat string\r\n * @return New string\r\n */\r\nexport function repeat(string, amount) {\r\n    return new Array(amount + 1).join(string);\r\n}\r\n/**\r\n * ============================================================================\r\n * TYPE CHECK\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Checks if parameter is `Date`.\r\n *\r\n * @param value  Input value\r\n * @return Is Date?\r\n */\r\nexport function isDate(value) {\r\n    return getType(value) === \"[object Date]\";\r\n}\r\n/**\r\n * Checks if parameter is `string`.\r\n *\r\n * @param value  Input value\r\n * @return Is string?\r\n */\r\nexport function isString(value) {\r\n    return typeof value === \"string\";\r\n}\r\n/**\r\n * Checks if parameter is `number`.\r\n *\r\n * @param value  Input value\r\n * @return Is number?\r\n */\r\nexport function isNumber(value) {\r\n    return typeof value === \"number\" && Number(value) == value;\r\n}\r\n/**\r\n * Checks if parameter is `object`.\r\n *\r\n * @param value  Input value\r\n * @return Is object?\r\n */\r\nexport function isObject(value) {\r\n    return typeof value === \"object\" && value !== null;\r\n}\r\n/**\r\n * Checks if parameter is `Array`.\r\n *\r\n * @param value  Input value\r\n * @return Is Array?\r\n */\r\nexport function isArray(value) {\r\n    return Array.isArray(value);\r\n}\r\n/**\r\n * ============================================================================\r\n * STATIC CONSTANTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * @ignore Exclude from docs\r\n */\r\nexport var PLACEHOLDER = \"__§§§__\";\r\n/**\r\n * @ignore Exclude from docs\r\n */\r\nexport var PLACEHOLDER2 = \"__§§§§__\";\r\n//# sourceMappingURL=Type.js.map","import { __extends, __read, __spreadArray } from \"tslib\";\r\nimport * as $type from \"./Type\";\r\nimport * as $array from \"./Array\";\r\nimport * as $object from \"./Object\";\r\nimport { Disposer, DisposerClass } from \"./Disposer\";\r\n/**\r\n * ============================================================================\r\n * DOM FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Execute a function when DOM is ready.\r\n *\r\n * @since 5.0.2\r\n * @param  f  Callback\r\n */\r\nexport function ready(f) {\r\n    if (document.readyState !== \"loading\") {\r\n        f();\r\n    }\r\n    else {\r\n        var listener_1 = function () {\r\n            if (document.readyState !== \"loading\") {\r\n                document.removeEventListener(\"readystatechange\", listener_1);\r\n                f();\r\n            }\r\n        };\r\n        document.addEventListener(\"readystatechange\", listener_1);\r\n    }\r\n}\r\n/**\r\n * Removes a DOM element.\r\n * @param  el  Target element\r\n */\r\nexport function removeElement(el) {\r\n    if (el.parentNode) {\r\n        el.parentNode.removeChild(el);\r\n    }\r\n}\r\n/**\r\n * Function that adds a disposable event listener directly to a DOM element.\r\n *\r\n * @ignore Exclude from docs\r\n * @param dom       A DOM element to add event to\r\n * @param type      Event type\r\n * @param listener  Event listener\r\n * @returns Disposable event\r\n */\r\nexport function addEventListener(dom, type, listener, options) {\r\n    //@todo proper type check for options: EventListenerOptions | boolean (TS for some reason gives error on passive parameter)\r\n    //console.log(type, dom);\r\n    dom.addEventListener(type, listener, options || false);\r\n    return new Disposer(function () {\r\n        dom.removeEventListener(type, listener, options || false);\r\n    });\r\n}\r\n/**\r\n * Function that adds an event listener which is triggered when the browser's zoom changes.\r\n *\r\n * @param listener  Event listener\r\n * @returns Disposable event\r\n */\r\nexport function onZoom(listener) {\r\n    // TODO use matchMedia instead ?\r\n    return addEventListener(window, \"resize\", function (_ev) {\r\n        listener();\r\n    });\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function supports(cap) {\r\n    switch (cap) {\r\n        case \"touchevents\":\r\n            //return \"ontouchstart\" in document.documentElement;\r\n            return window.hasOwnProperty(\"TouchEvent\");\r\n        case \"pointerevents\":\r\n            return window.hasOwnProperty(\"PointerEvent\");\r\n        case \"mouseevents\":\r\n            return window.hasOwnProperty(\"MouseEvent\");\r\n        case \"wheelevents\":\r\n            return window.hasOwnProperty(\"WheelEvent\");\r\n        case \"keyboardevents\":\r\n            return window.hasOwnProperty(\"KeyboardEvent\");\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function getPointerId(event) {\r\n    var id = event.pointerId || 0;\r\n    //console.log(event);\r\n    return id;\r\n}\r\n/**\r\n * Removes focus from any element by shifting focus to body.\r\n *\r\n * @ignore\r\n */\r\nexport function blur() {\r\n    if (document.activeElement && document.activeElement != document.body) {\r\n        if (document.activeElement.blur) {\r\n            document.activeElement.blur();\r\n        }\r\n        else {\r\n            var input = document.createElement(\"button\");\r\n            input.style.position = \"fixed\";\r\n            input.style.top = \"0px\";\r\n            input.style.left = \"-10000px\";\r\n            document.body.appendChild(input);\r\n            input.focus();\r\n            input.blur();\r\n            document.body.removeChild(input);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Focuses element.\r\n *\r\n * @ignore\r\n */\r\nexport function focus(el) {\r\n    if (el) {\r\n        el.focus();\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function getRendererEvent(key) {\r\n    if (supports(\"pointerevents\")) {\r\n        return key;\r\n    }\r\n    else if (supports(\"touchevents\")) {\r\n        switch (key) {\r\n            case \"pointerover\": return \"touchstart\";\r\n            case \"pointerout\": return \"touchend\";\r\n            case \"pointerdown\": return \"touchstart\";\r\n            case \"pointermove\": return \"touchmove\";\r\n            case \"pointerup\": return \"touchend\";\r\n            case \"click\": return \"click\";\r\n            case \"dblclick\": return \"dblclick\";\r\n        }\r\n    }\r\n    else if (supports(\"mouseevents\")) {\r\n        switch (key) {\r\n            case \"pointerover\": return \"mouseover\";\r\n            case \"pointerout\": return \"mouseout\";\r\n            case \"pointerdown\": return \"mousedown\";\r\n            case \"pointermove\": return \"mousemove\";\r\n            case \"pointerup\": return \"mouseup\";\r\n            case \"click\": return \"click\";\r\n            case \"dblclick\": return \"dblclick\";\r\n        }\r\n    }\r\n    return key;\r\n}\r\n/**\r\n * Determines if pointer event originated from a touch pointer or mouse.\r\n *\r\n * @param ev  Original event\r\n * @return Touch pointer?\r\n */\r\nexport function isTouchEvent(ev) {\r\n    if (typeof Touch !== \"undefined\" && ev instanceof Touch) {\r\n        return true;\r\n    }\r\n    else if (typeof PointerEvent !== \"undefined\" && ev instanceof PointerEvent && ev.pointerType != null) {\r\n        switch (ev.pointerType) {\r\n            case \"touch\":\r\n            case \"pen\":\r\n            case 2:\r\n                return true;\r\n            case \"mouse\":\r\n            case 4:\r\n                return false;\r\n            default:\r\n                return !(ev instanceof MouseEvent);\r\n        }\r\n    }\r\n    else if (ev.type != null) {\r\n        if (ev.type.match(/^mouse/)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Sets style property on DOM element.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport function setStyle(dom, property, value) {\r\n    dom.style[property] = value;\r\n}\r\nexport function getStyle(dom, property) {\r\n    return dom.style[property];\r\n}\r\n/**\r\n * Checks of element `a` contains element `b`.\r\n *\r\n * @param a  Aleged ascendant\r\n * @param b  Aleged descendant\r\n * @return Contains?\r\n */\r\nexport function contains(a, b) {\r\n    var cursor = b;\r\n    while (true) {\r\n        if (a === cursor) {\r\n            return true;\r\n        }\r\n        else if (cursor.parentNode === null) {\r\n            // TODO better ShadowRoot detection\r\n            if (cursor.host == null) {\r\n                return false;\r\n            }\r\n            else {\r\n                cursor = cursor.host;\r\n            }\r\n        }\r\n        else {\r\n            cursor = cursor.parentNode;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Returns `true` if pointer event originated on an element within Root.\r\n *\r\n * @since 5.2.8\r\n * @param  event   Event\r\n * @param  target  Target element\r\n */\r\nexport function isLocalEvent(event, target) {\r\n    return event.target && contains(target.root.dom, event.target);\r\n}\r\n/**\r\n * Disables or enables interactivity of a DOM element.\r\n *\r\n * @param  target       Target element\r\n * @param  interactive  Interactive?\r\n */\r\nexport function setInteractive(target, interactive) {\r\n    if (interactive) {\r\n        target.style.pointerEvents = \"auto\";\r\n    }\r\n    else {\r\n        target.style.pointerEvents = \"none\";\r\n    }\r\n}\r\n/**\r\n * Returns the shadow root of the element or null\r\n *\r\n * @param a  Node\r\n * @return Root\r\n */\r\nexport function getShadowRoot(a) {\r\n    var cursor = a;\r\n    while (true) {\r\n        if (cursor.parentNode === null) {\r\n            // TODO better ShadowRoot detection\r\n            if (cursor.host != null) {\r\n                return cursor;\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            cursor = cursor.parentNode;\r\n        }\r\n    }\r\n}\r\n/**\r\n * [rootStylesheet description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nvar rootStylesheet;\r\n/**\r\n * @ignore Exclude from docs\r\n */\r\nfunction createStylesheet(element, text, nonce) {\r\n    if (nonce === void 0) { nonce = \"\"; }\r\n    // TODO use createElementNS ?\r\n    var e = document.createElement(\"style\");\r\n    e.type = \"text/css\";\r\n    if (nonce != \"\") {\r\n        e.setAttribute(\"nonce\", nonce);\r\n    }\r\n    e.textContent = text;\r\n    if (element === null) {\r\n        document.head.appendChild(e);\r\n    }\r\n    else {\r\n        element.appendChild(e);\r\n    }\r\n    return e;\r\n}\r\n/**\r\n * [getStylesheet description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @return [description]\r\n */\r\nfunction getStylesheet(element, nonce) {\r\n    if (nonce === void 0) { nonce = \"\"; }\r\n    if (element === null) {\r\n        if (rootStylesheet == null) {\r\n            // TODO use createElementNS ?\r\n            var e = document.createElement(\"style\");\r\n            e.type = \"text/css\";\r\n            if (nonce != \"\") {\r\n                e.setAttribute(\"nonce\", nonce);\r\n            }\r\n            document.head.appendChild(e);\r\n            rootStylesheet = e.sheet;\r\n        }\r\n        return rootStylesheet;\r\n    }\r\n    else {\r\n        // TODO use createElementNS ?\r\n        var e = document.createElement(\"style\");\r\n        e.type = \"text/css\";\r\n        if (nonce != \"\") {\r\n            e.setAttribute(\"nonce\", nonce);\r\n        }\r\n        element.appendChild(e);\r\n        return e.sheet;\r\n    }\r\n}\r\n/**\r\n * [makeStylesheet description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param selector  [description]\r\n * @return [description]\r\n */\r\nfunction appendStylesheet(root, selector) {\r\n    var index = root.cssRules.length;\r\n    root.insertRule(selector + \"{}\", index);\r\n    return root.cssRules[index];\r\n}\r\n/**\r\n * Defines a class for a CSS rule.\r\n *\r\n * Can be used to dynamically add CSS to the document.\r\n */\r\nvar StyleRule = /** @class */ (function (_super) {\r\n    __extends(StyleRule, _super);\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param selector  CSS selector\r\n     * @param styles    An object of style attribute - value pairs\r\n     */\r\n    function StyleRule(element, selector, styles, nonce) {\r\n        if (nonce === void 0) { nonce = \"\"; }\r\n        var _this = _super.call(this) || this;\r\n        Object.defineProperty(_this, \"_root\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * CSS rule.\r\n         */\r\n        Object.defineProperty(_this, \"_rule\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        _this._root = getStylesheet(element, nonce);\r\n        _this._rule = appendStylesheet(_this._root, selector);\r\n        $object.each(styles, function (key, value) {\r\n            _this.setStyle(key, value);\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(StyleRule.prototype, \"selector\", {\r\n        /**\r\n         * @return CSS selector\r\n         */\r\n        get: function () {\r\n            return this._rule.selectorText;\r\n        },\r\n        /**\r\n         * A CSS selector text.\r\n         *\r\n         * E.g.: `.myClass p`\r\n         *\r\n         * @param selector  CSS selector\r\n         */\r\n        set: function (selector) {\r\n            this._rule.selectorText = selector;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    // TODO test this\r\n    Object.defineProperty(StyleRule.prototype, \"_dispose\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            // TODO a bit hacky\r\n            var index = $array.indexOf(this._root.cssRules, this._rule);\r\n            if (index === -1) {\r\n                throw new Error(\"Could not dispose StyleRule\");\r\n            }\r\n            else {\r\n                // TODO if it's empty remove it from the DOM ?\r\n                this._root.deleteRule(index);\r\n            }\r\n        }\r\n    });\r\n    /**\r\n     * Sets the same style properties with browser-specific prefixes.\r\n     *\r\n     * @param name   Attribute name\r\n     * @param value  Attribute value\r\n     */\r\n    Object.defineProperty(StyleRule.prototype, \"_setVendorPrefixName\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (name, value) {\r\n            var style = this._rule.style;\r\n            style.setProperty(\"-webkit-\" + name, value, \"\");\r\n            style.setProperty(\"-moz-\" + name, value, \"\");\r\n            style.setProperty(\"-ms-\" + name, value, \"\");\r\n            style.setProperty(\"-o-\" + name, value, \"\");\r\n            style.setProperty(name, value, \"\");\r\n        }\r\n    });\r\n    /**\r\n     * Sets a value for specific style attribute.\r\n     *\r\n     * @param name   Attribute\r\n     * @param value  Value\r\n     */\r\n    Object.defineProperty(StyleRule.prototype, \"setStyle\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function (name, value) {\r\n            if (name === \"transition\") {\r\n                this._setVendorPrefixName(name, value);\r\n            }\r\n            else {\r\n                this._rule.style.setProperty(name, value, \"\");\r\n            }\r\n        }\r\n    });\r\n    return StyleRule;\r\n}(DisposerClass));\r\nexport { StyleRule };\r\n/**\r\n * Defines a class for an entire CSS style sheet.\r\n *\r\n * Can be used to dynamically add CSS to the document.\r\n */\r\nvar StyleSheet = /** @class */ (function (_super) {\r\n    __extends(StyleSheet, _super);\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param text  CSS stylesheet\r\n     */\r\n    function StyleSheet(element, text, nonce) {\r\n        if (nonce === void 0) { nonce = \"\"; }\r\n        var _this = _super.call(this) || this;\r\n        Object.defineProperty(_this, \"_element\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        _this._element = createStylesheet(element, text, nonce);\r\n        return _this;\r\n    }\r\n    Object.defineProperty(StyleSheet.prototype, \"_dispose\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            if (this._element.parentNode) {\r\n                this._element.parentNode.removeChild(this._element);\r\n            }\r\n        }\r\n    });\r\n    return StyleSheet;\r\n}(DisposerClass));\r\nexport { StyleSheet };\r\n/**\r\n * Adds a class name to an HTML or SVG element.\r\n *\r\n * @ignore Exclude from docs\r\n * @param element    Element\r\n * @param className  Class name to add\r\n */\r\nexport function addClass(element, className) {\r\n    if (!element) {\r\n        return;\r\n    }\r\n    if (element.classList) {\r\n        var classes = className.split(\" \");\r\n        $array.each(classes, function (name) {\r\n            element.classList.add(name);\r\n        });\r\n    }\r\n    else {\r\n        var currentClassName = element.getAttribute(\"class\");\r\n        if (currentClassName) {\r\n            element.setAttribute(\"class\", currentClassName.split(\" \").filter(function (item) {\r\n                return item !== className;\r\n            }).join(\" \") + \" \" + className);\r\n        }\r\n        else {\r\n            element.setAttribute(\"class\", className);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Removes a class name from an HTML or SVG element.\r\n *\r\n * @ignore Exclude from docs\r\n * @param element    Element\r\n * @param className  Class name to add\r\n */\r\nexport function removeClass(element, className) {\r\n    if (!element) {\r\n        return;\r\n    }\r\n    if (element.classList) {\r\n        element.classList.remove(className);\r\n    }\r\n    else {\r\n        var currentClassName = element.getAttribute(\"class\");\r\n        if (currentClassName) {\r\n            element.setAttribute(\"class\", currentClassName.split(\" \").filter(function (item) {\r\n                return item !== className;\r\n            }).join(\" \"));\r\n        }\r\n    }\r\n}\r\n// /**\r\n//  * Applies a set of styles to an element. Stores the original styles so they\r\n//  * can be restored later.\r\n//  *\r\n//  * @ignore\r\n//  * @param io      Element\r\n//   */\r\n// export function prepElementForDrag(dom: HTMLElement): void {\r\n// \t// @todo: save current values\r\n// \t// Define possible props\r\n// \tlet props = [\r\n// \t\t\"touchAction\", \"webkitTouchAction\", \"MozTouchAction\", \"MSTouchAction\", \"msTouchAction\", \"oTouchAction\",\r\n// \t\t\"userSelect\", \"webkitUserSelect\", \"MozUserSelect\", \"MSUserSelect\", \"msUserSelect\", \"oUserSelect\",\r\n// \t\t\"touchSelect\", \"webkitTouchSelect\", \"MozTouchSelect\", \"MSTouchSelect\", \"msTouchSelect\", \"oTouchSelect\",\r\n// \t\t\"touchCallout\", \"webkitTouchCallout\", \"MozTouchCallout\", \"MSTouchCallout\", \"msTouchCallout\", \"oTouchCallout\",\r\n// \t\t\"contentZooming\", \"webkitContentZooming\", \"MozContentZooming\", \"MSContentZooming\", \"msContentZooming\", \"oContentZooming\",\r\n// \t\t\"userDrag\", \"webkitUserDrag\", \"MozUserDrag\", \"MSUserDrag\", \"msUserDrag\", \"oUserDrag\"\r\n// \t];\r\n// \tfor (let i = 0; i < props.length; i++) {\r\n// \t\tif (props[i] in dom.style) {\r\n// \t\t\tsetStyle(dom, props[i], \"none\");\r\n// \t\t}\r\n// \t}\r\n// \t// Remove iOS-specific selection;\r\n// \tsetStyle(dom, \"tapHighlightColor\", \"rgba(0, 0, 0, 0)\");\r\n// }\r\n// /**\r\n//  * Restores replaced styles\r\n//  *\r\n//  * @ignore\r\n//  * @param  io  Element\r\n//  */\r\n// export function unprepElementForDrag(dom: HTMLElement): void {\r\n// \t// Define possible props\r\n// \tlet props = [\r\n// \t\t\"touchAction\", \"webkitTouchAction\", \"MozTouchAction\", \"MSTouchAction\", \"msTouchAction\", \"oTouchAction\",\r\n// \t\t\"userSelect\", \"webkitUserSelect\", \"MozUserSelect\", \"MSUserSelect\", \"msUserSelect\", \"oUserSelect\",\r\n// \t\t\"touchSelect\", \"webkitTouchSelect\", \"MozTouchSelect\", \"MSTouchSelect\", \"msTouchSelect\", \"oTouchSelect\",\r\n// \t\t\"touchCallout\", \"webkitTouchCallout\", \"MozTouchCallout\", \"MSTouchCallout\", \"msTouchCallout\", \"oTouchCallout\",\r\n// \t\t\"contentZooming\", \"webkitContentZooming\", \"MozContentZooming\", \"MSContentZooming\", \"msContentZooming\", \"oContentZooming\",\r\n// \t\t\"userDrag\", \"webkitUserDrag\", \"MozUserDrag\", \"MSUserDrag\", \"msUserDrag\", \"oUserDrag\"\r\n// \t];\r\n// \tfor (let i = 0; i < props.length; i++) {\r\n// \t\tif (props[i] in dom.style) {\r\n// \t\t\tsetStyle(dom, props[i], \"\");\r\n// \t\t}\r\n// \t}\r\n// \t// Remove iOS-specific selection;\r\n// \tsetStyle(dom, \"tapHighlightColor\", \"\");\r\n// }\r\nexport function iOS() {\r\n    return /apple/i.test(navigator.vendor) && \"ontouchend\" in document;\r\n}\r\nexport function getSafeResolution() {\r\n    return iOS() ? 1 : undefined;\r\n}\r\nexport function relativeToValue(percent, full) {\r\n    if ($type.isNumber(percent)) {\r\n        return percent;\r\n    }\r\n    else if (percent != null && $type.isNumber(percent.value) && $type.isNumber(full)) {\r\n        return full * percent.value;\r\n    }\r\n    else {\r\n        return 0;\r\n    }\r\n}\r\n/**\r\n * Returns number of decimals\r\n *\r\n * @ignore Exclude from docs\r\n * @param number  Input number\r\n * @return Number of decimals\r\n */\r\nexport function decimalPlaces(number) {\r\n    var match = ('' + number).match(/(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/);\r\n    if (!match) {\r\n        return 0;\r\n    }\r\n    return Math.max(0, (match[1] ? match[1].length : 0) - (match[2] ? +match[2] : 0));\r\n}\r\n/**\r\n * ============================================================================\r\n * STRING FORMATTING FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Pads a string with additional characters to certain length.\r\n *\r\n * @param value  A numeric value\r\n * @param len    Result string length in characters\r\n * @param char   A character to use for padding\r\n * @return Padded value as string\r\n */\r\nexport function padString(value, len, char) {\r\n    if (len === void 0) { len = 0; }\r\n    if (char === void 0) { char = \"0\"; }\r\n    if (typeof value !== \"string\") {\r\n        value = value.toString();\r\n    }\r\n    return len > value.length ? Array(len - value.length + 1).join(char) + value : value;\r\n}\r\nexport function trimLeft(text) {\r\n    return text.replace(/^[\\s]*/, \"\");\r\n}\r\nexport function trimRight(text) {\r\n    return text.replace(/[\\s]*$/, \"\");\r\n}\r\nexport function trim(text) {\r\n    return trimLeft(trimRight(text));\r\n}\r\n/**\r\n * Tries to determine format type.\r\n *\r\n * @ignore Exclude from docs\r\n * @param format  Format string\r\n * @return Format type (\"string\" | \"number\" | \"date\" | \"duration\")\r\n */\r\nexport function getFormat(format) {\r\n    // Undefined?\r\n    if (typeof format === \"undefined\") {\r\n        return \"string\";\r\n    }\r\n    // Cleanup and lowercase format\r\n    format = format.toLowerCase().replace(/^\\[[^\\]]*\\]/, \"\");\r\n    // Remove style tags\r\n    format = format.replace(/\\[[^\\]]+\\]/, \"\");\r\n    // Trim\r\n    format = format.trim();\r\n    // Check for any explicit format hints (i.e. /Date)\r\n    var hints = format.match(/\\/(date|number|duration)$/);\r\n    if (hints) {\r\n        return hints[1];\r\n    }\r\n    // Check for explicit hints\r\n    if (format === \"number\") {\r\n        return \"number\";\r\n    }\r\n    if (format === \"date\") {\r\n        return \"date\";\r\n    }\r\n    if (format === \"duration\") {\r\n        return \"duration\";\r\n    }\r\n    // Detect number formatting symbols\r\n    if (format.match(/[#0]/)) {\r\n        return \"number\";\r\n    }\r\n    // Detect date formatting symbols\r\n    if (format.match(/[ymwdhnsqaxkzgtei]/)) {\r\n        return \"date\";\r\n    }\r\n    // Nothing? Let's display as string\r\n    return \"string\";\r\n}\r\n/**\r\n * Cleans up format:\r\n * * Strips out formatter hints\r\n *\r\n * @ignore Exclude from docs\r\n * @param format  Format\r\n * @return Cleaned format\r\n */\r\nexport function cleanFormat(format) {\r\n    return format.replace(/\\/(date|number|duration)$/i, \"\");\r\n}\r\n/**\r\n * Strips all tags from the string.\r\n *\r\n * @param text  Source string\r\n * @return String without tags\r\n */\r\nexport function stripTags(text) {\r\n    return text ? text.replace(/<[^>]*>/g, \"\") : text;\r\n}\r\n/**\r\n * Removes new lines and tags from a string.\r\n *\r\n * @param text  String to conver\r\n * @return Converted string\r\n */\r\nexport function plainText(text) {\r\n    return text ? stripTags((\"\" + text).replace(/[\\n\\r]+/g, \". \")) : text;\r\n}\r\n/**\r\n * Escapes string so it can safely be used in a Regex.\r\n *\r\n * @param value  Unsescaped string\r\n * @return Escaped string\r\n */\r\nexport function escapeForRgex(value) {\r\n    return value.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\r\n}\r\n/**\r\n * ============================================================================\r\n * DATE-RELATED FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Returns a year day.\r\n *\r\n * @param date  Date\r\n * @param utc   Assume UTC dates?\r\n * @return Year day\r\n * @todo Account for UTC\r\n */\r\nexport function getYearDay(date, utc) {\r\n    if (utc === void 0) { utc = false; }\r\n    // TODO: utc needed?\r\n    utc;\r\n    var start = new Date(date.getFullYear(), 0, 0);\r\n    var diff = (date.getTime() - start.getTime()) + ((start.getTimezoneOffset() - date.getTimezoneOffset()) * 60 * 1000);\r\n    var oneDay = 1000 * 60 * 60 * 24;\r\n    return Math.floor(diff / oneDay);\r\n}\r\n/**\r\n * Returns week number for a given date.\r\n *\r\n * @param date  Date\r\n * @param utc   Assume UTC dates?\r\n * @return Week number\r\n * @todo Account for UTC\r\n */\r\nexport function getWeek(date, _utc) {\r\n    if (_utc === void 0) { _utc = false; }\r\n    var d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\r\n    var day = d.getUTCDay() || 7;\r\n    d.setUTCDate(d.getUTCDate() + 4 - day);\r\n    var firstDay = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\r\n    return Math.ceil((((d.getTime() - firstDay.getTime()) / 86400000) + 1) / 7);\r\n}\r\n/**\r\n * Returns a week number in the month.\r\n *\r\n * @param date  Source Date\r\n * @param utc   Assume UTC dates?\r\n * @return Week number in month\r\n */\r\nexport function getMonthWeek(date, utc) {\r\n    if (utc === void 0) { utc = false; }\r\n    var firstWeek = getWeek(new Date(date.getFullYear(), date.getMonth(), 1), utc);\r\n    var currentWeek = getWeek(date, utc);\r\n    if (currentWeek == 1) {\r\n        currentWeek = 53;\r\n    }\r\n    return currentWeek - firstWeek + 1;\r\n}\r\n/**\r\n * Returns a year day out of the given week number.\r\n *\r\n * @param week     Week\r\n * @param year     Year\r\n * @param weekday  Weekday\r\n * @param utc      Assume UTC dates\r\n * @return Day in a year\r\n */\r\nexport function getDayFromWeek(week, year, weekday, utc) {\r\n    if (weekday === void 0) { weekday = 1; }\r\n    if (utc === void 0) { utc = false; }\r\n    var date = new Date(year, 0, 4, 0, 0, 0, 0);\r\n    if (utc) {\r\n        date.setUTCFullYear(year);\r\n    }\r\n    var day = week * 7 + weekday - ((date.getDay() || 7) + 3);\r\n    return day;\r\n}\r\n/**\r\n * Returns 12-hour representation out of the 24-hour hours.\r\n *\r\n * @param hours  24-hour number\r\n * @return 12-hour number\r\n */\r\nexport function get12Hours(hours, base) {\r\n    if (hours > 12) {\r\n        hours -= 12;\r\n    }\r\n    else if (hours === 0) {\r\n        hours = 12;\r\n    }\r\n    return base != null ? hours + (base - 1) : hours;\r\n}\r\n/**\r\n * Returns a string name of the time zone.\r\n *\r\n * @param date     Date object\r\n * @param long     Should return long (\"Pacific Standard Time\") or short abbreviation (\"PST\")\r\n * @param savings  Include information if it's in daylight savings mode\r\n * @param utc      Assume UTC dates\r\n * @return Time zone name\r\n */\r\nexport function getTimeZone(date, long, savings, utc) {\r\n    if (long === void 0) { long = false; }\r\n    if (savings === void 0) { savings = false; }\r\n    if (utc === void 0) { utc = false; }\r\n    if (utc) {\r\n        return long ? \"Coordinated Universal Time\" : \"UTC\";\r\n    }\r\n    var wotz = date.toLocaleString(\"UTC\");\r\n    var wtz = date.toLocaleString(\"UTC\", { timeZoneName: long ? \"long\" : \"short\" }).substr(wotz.length);\r\n    //wtz = wtz.replace(/[+-]+[0-9]+$/, \"\");\r\n    if (savings === false) {\r\n        wtz = wtz.replace(/ (standard|daylight|summer|winter) /i, \" \");\r\n    }\r\n    return wtz;\r\n}\r\nexport function getTimezoneOffset(timezone) {\r\n    var date = new Date(Date.UTC(2012, 0, 1, 0, 0, 0, 0));\r\n    var utcDate = new Date(date.toLocaleString('en-US', { timeZone: 'UTC' }));\r\n    var tzDate = new Date(date.toLocaleString('en-US', { timeZone: timezone }));\r\n    return (tzDate.getTime() - utcDate.getTime()) / 6e4 * -1;\r\n}\r\nexport function capitalizeFirst(text) {\r\n    return text.charAt(0).toUpperCase() + text.slice(1);\r\n}\r\n/**\r\n * The functions below are taken and adapted from Garry Tan's blog post:\r\n * http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\r\n *\r\n * The further attributions go mjijackson.com, which now seems to be defunct.\r\n */\r\n/**\r\n * Converts an HSL color value to RGB. Conversion formula\r\n * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\r\n * Assumes h, s, and l are contained in the set [0, 1] and\r\n * returns r, g, and b in the set [0, 255].\r\n *\r\n * Function adapted from:\r\n * http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\r\n *\r\n * @ignore Exclude from docs\r\n * @param h       The hue\r\n * @param s       The saturation\r\n * @param l       The lightness\r\n * @return The RGB representation\r\n */\r\nexport function hslToRgb(color) {\r\n    var r, g, b;\r\n    var h = color.h;\r\n    var s = color.s;\r\n    var l = color.l;\r\n    if (s == 0) {\r\n        r = g = b = l; // achromatic\r\n    }\r\n    else {\r\n        var hue2rgb = function hue2rgb(p, q, t) {\r\n            if (t < 0) {\r\n                t += 1;\r\n            }\r\n            if (t > 1) {\r\n                t -= 1;\r\n            }\r\n            if (t < 1 / 6) {\r\n                return p + (q - p) * 6 * t;\r\n            }\r\n            if (t < 1 / 2) {\r\n                return q;\r\n            }\r\n            if (t < 2 / 3) {\r\n                return p + (q - p) * (2 / 3 - t) * 6;\r\n            }\r\n            return p;\r\n        };\r\n        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n        var p = 2 * l - q;\r\n        r = hue2rgb(p, q, h + 1 / 3);\r\n        g = hue2rgb(p, q, h);\r\n        b = hue2rgb(p, q, h - 1 / 3);\r\n    }\r\n    return {\r\n        r: Math.round(r * 255),\r\n        g: Math.round(g * 255),\r\n        b: Math.round(b * 255)\r\n    };\r\n}\r\n/**\r\n * Converts an RGB color value to HSL. Conversion formula\r\n * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\r\n * Assumes r, g, and b are contained in the set [0, 255] and\r\n * returns h, s, and l in the set [0, 1].\r\n *\r\n * Function adapted from:\r\n * http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\r\n *\r\n * @ignore Exclude from docs\r\n * @param r       The red color value\r\n * @param g       The green color value\r\n * @param b       The blue color value\r\n * @return The HSL representation\r\n */\r\nexport function rgbToHsl(color) {\r\n    var r = color.r / 255;\r\n    var g = color.g / 255;\r\n    var b = color.b / 255;\r\n    var max = Math.max(r, g, b);\r\n    var min = Math.min(r, g, b);\r\n    var h = 0;\r\n    var s = 0;\r\n    var l = (max + min) / 2;\r\n    if (max === min) {\r\n        h = s = 0; // achromatic\r\n    }\r\n    else {\r\n        var d = max - min;\r\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n        switch (max) {\r\n            case r:\r\n                h = (g - b) / d + (g < b ? 6 : 0);\r\n                break;\r\n            case g:\r\n                h = (b - r) / d + 2;\r\n                break;\r\n            case b:\r\n                h = (r - g) / d + 4;\r\n                break;\r\n        }\r\n        h /= 6;\r\n    }\r\n    return {\r\n        h: h,\r\n        s: s,\r\n        l: l\r\n    };\r\n}\r\n/**\r\n * Returns a color that is `percent` brighter than the reference color.\r\n *\r\n * @ignore Exclude from docs\r\n * @param color    Reference color\r\n * @param percent  Brightness percent\r\n * @return Hex code of the new color\r\n */\r\nexport function lighten(rgb, percent) {\r\n    if (rgb) {\r\n        return {\r\n            r: Math.max(0, Math.min(255, rgb.r + getLightnessStep(rgb.r, percent))),\r\n            g: Math.max(0, Math.min(255, rgb.g + getLightnessStep(rgb.g, percent))),\r\n            b: Math.max(0, Math.min(255, rgb.b + getLightnessStep(rgb.b, percent))),\r\n            a: rgb.a\r\n        };\r\n    }\r\n    else {\r\n        // TODO is this correct ?\r\n        return rgb;\r\n    }\r\n}\r\n;\r\n/**\r\n * Gets lightness step.\r\n *\r\n * @ignore Exclude from docs\r\n * @param value    Value\r\n * @param percent  Percent\r\n * @return Step\r\n */\r\nexport function getLightnessStep(value, percent) {\r\n    var base = percent > 0 ? 255 - value : value;\r\n    return Math.round(base * percent);\r\n}\r\n/**\r\n * Returns a color that is `percent` brighter than the source `color`.\r\n *\r\n * @ignore Exclude from docs\r\n * @param color    Source color\r\n * @param percent  Brightness percent\r\n * @return New color\r\n */\r\nexport function brighten(rgb, percent) {\r\n    if (rgb) {\r\n        var base = Math.min(Math.max(rgb.r, rgb.g, rgb.b), 230);\r\n        //let base = Math.max(rgb.r, rgb.g, rgb.b);\r\n        var step = getLightnessStep(base, percent);\r\n        return {\r\n            r: Math.max(0, Math.min(255, Math.round(rgb.r + step))),\r\n            g: Math.max(0, Math.min(255, Math.round(rgb.g + step))),\r\n            b: Math.max(0, Math.min(255, Math.round(rgb.b + step))),\r\n            a: rgb.a\r\n        };\r\n    }\r\n    else {\r\n        // TODO is this correct ?\r\n        return rgb;\r\n    }\r\n}\r\n;\r\n/**\r\n * Returns brightness step.\r\n *\r\n * @ignore Exclude from docs\r\n * @param value    Value\r\n * @param percent  Percent\r\n * @return Step\r\n */\r\nexport function getBrightnessStep(_value, percent) {\r\n    var base = 255; //percent > 0 ? 255 - value : value;\r\n    return Math.round(base * percent);\r\n}\r\n/**\r\n * Returns `true` if color is \"light\". Useful indetermining which contrasting\r\n * color to use for elements over this color. E.g.: you would want to use\r\n * black text over light background, and vice versa.\r\n *\r\n * @ignore Exclude from docs\r\n * @param color  Source color\r\n * @return Light?\r\n */\r\nexport function isLight(color) {\r\n    return ((color.r * 299) + (color.g * 587) + (color.b * 114)) / 1000 >= 128;\r\n}\r\n/**\r\n * Returns a new [[iRGB]] object based on `rgb` parameter with specific\r\n * saturation applied.\r\n *\r\n * `saturation` can be in the range of 0 (fully desaturated) to 1 (fully\r\n * saturated).\r\n *\r\n * @ignore Exclude from docs\r\n * @param color       Base color\r\n * @param saturation  Saturation (0-1)\r\n * @return New color\r\n */\r\nexport function saturate(rgb, saturation) {\r\n    if (rgb === undefined || saturation == 1) {\r\n        return rgb;\r\n    }\r\n    var hsl = rgbToHsl(rgb);\r\n    hsl.s = saturation;\r\n    return hslToRgb(hsl);\r\n}\r\nexport function alternativeColor(color, lightAlternative, darkAlternative) {\r\n    if (lightAlternative === void 0) { lightAlternative = { r: 255, g: 255, b: 255 }; }\r\n    if (darkAlternative === void 0) { darkAlternative = { r: 255, g: 255, b: 255 }; }\r\n    var light = lightAlternative;\r\n    var dark = darkAlternative;\r\n    if (isLight(darkAlternative)) {\r\n        light = darkAlternative;\r\n        dark = lightAlternative;\r\n    }\r\n    return isLight(color) ? dark : light;\r\n}\r\n/**\r\n * @ignore\r\n * @deprecated\r\n */\r\n// export function unshiftThemeClass(settings: any, themeClass: string) {\r\n// \tlet themeClasses = settings.themeClasses;\r\n// \tif (!themeClasses) {\r\n// \t\tthemeClasses = [];\r\n// \t}\r\n// \tthemeClasses.unshift(themeClass);\r\n// \tsettings.themeClasses = themeClasses;\r\n// }\r\n/**\r\n * @ignore\r\n * @deprecated\r\n */\r\n// export function pushThemeClass(settings: any, themeClass: string) {\r\n// \tlet themeClasses = settings.themeClasses;\r\n// \tif (!themeClasses) {\r\n// \t\tthemeClasses = [];\r\n// \t}\r\n// \tthemeClasses.push(themeClass);\r\n// \tsettings.themeClasses = themeClasses;\r\n// }\r\n/**\r\n * @ignore\r\n */\r\nexport function mergeTags(tags1, tags2) {\r\n    if (!tags1) {\r\n        tags1 = [];\r\n    }\r\n    return __spreadArray(__spreadArray([], __read(tags1), false), __read(tags2), false).filter(function (value, index, self) {\r\n        return self.indexOf(value) === index;\r\n    });\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function sameBounds(a, b) {\r\n    if (!b) {\r\n        return false;\r\n    }\r\n    if (a.left != b.left) {\r\n        return false;\r\n    }\r\n    if (a.right != b.right) {\r\n        return false;\r\n    }\r\n    if (a.top != b.top) {\r\n        return false;\r\n    }\r\n    if (a.bottom != b.bottom) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n//# sourceMappingURL=Utils.js.map","import { __extends } from \"tslib\";\r\nimport { Theme } from \"../core/Theme\";\r\nimport { p100, p50 } from \"../core/util/Percent\";\r\nimport { Color } from \"../core/util/Color\";\r\nimport { GridLayout } from \"../core/render/GridLayout\";\r\nimport * as $ease from \"../core/util/Ease\";\r\n/**\r\n * @ignore\r\n */\r\nexport function setColor(rule, key, ic, name) {\r\n    // TODO this shouldn't use get, figure out a better way\r\n    rule.set(key, ic.get(name));\r\n    ic.on(name, function (value) {\r\n        rule.set(key, value);\r\n    });\r\n}\r\n/**\r\n * @ignore\r\n */\r\nvar DefaultTheme = /** @class */ (function (_super) {\r\n    __extends(DefaultTheme, _super);\r\n    function DefaultTheme() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(DefaultTheme.prototype, \"setupDefaultRules\", {\r\n        enumerable: false,\r\n        configurable: true,\r\n        writable: true,\r\n        value: function () {\r\n            _super.prototype.setupDefaultRules.call(this);\r\n            var language = this._root.language;\r\n            var ic = this._root.interfaceColors;\r\n            var horizontalLayout = this._root.horizontalLayout;\r\n            var verticalLayout = this._root.verticalLayout;\r\n            var r = this.rule.bind(this);\r\n            /**\r\n             * ========================================================================\r\n             * core\r\n             * ========================================================================\r\n             */\r\n            r(\"InterfaceColors\").setAll({\r\n                stroke: Color.fromHex(0xe5e5e5),\r\n                fill: Color.fromHex(0xf3f3f3),\r\n                primaryButton: Color.fromHex(0x6794dc),\r\n                primaryButtonHover: Color.fromHex(0x6771dc),\r\n                primaryButtonDown: Color.fromHex(0x68dc76),\r\n                primaryButtonActive: Color.fromHex(0x68dc76),\r\n                primaryButtonText: Color.fromHex(0xffffff),\r\n                primaryButtonStroke: Color.fromHex(0xffffff),\r\n                secondaryButton: Color.fromHex(0xd9d9d9),\r\n                secondaryButtonHover: Color.fromHex(0xa3a3a3),\r\n                secondaryButtonDown: Color.fromHex(0x8d8d8d),\r\n                secondaryButtonActive: Color.fromHex(0xe6e6e6),\r\n                secondaryButtonText: Color.fromHex(0x000000),\r\n                secondaryButtonStroke: Color.fromHex(0xffffff),\r\n                grid: Color.fromHex(0x000000),\r\n                background: Color.fromHex(0xffffff),\r\n                alternativeBackground: Color.fromHex(0x000000),\r\n                text: Color.fromHex(0x000000),\r\n                alternativeText: Color.fromHex(0xffffff),\r\n                disabled: Color.fromHex(0xadadad),\r\n                positive: Color.fromHex(0x50b300),\r\n                negative: Color.fromHex(0xb30000)\r\n            });\r\n            {\r\n                var rule = r(\"ColorSet\");\r\n                rule.setAll({\r\n                    passOptions: {\r\n                        hue: 0.05,\r\n                        saturation: 0,\r\n                        lightness: 0\r\n                    },\r\n                    colors: [\r\n                        Color.fromHex(0x67b7dc)\r\n                    ],\r\n                    step: 1,\r\n                    //baseColor: Color.fromRGB(103, 183, 220),\r\n                    //count: 20,\r\n                    reuse: false,\r\n                    startIndex: 0\r\n                });\r\n                rule.setPrivate(\"currentStep\", 0);\r\n                rule.setPrivate(\"currentPass\", 0);\r\n            }\r\n            r(\"Entity\").setAll({\r\n                stateAnimationDuration: 0,\r\n                stateAnimationEasing: $ease.out($ease.cubic)\r\n            });\r\n            r(\"Component\").setAll({\r\n                interpolationDuration: 0,\r\n                interpolationEasing: $ease.out($ease.cubic)\r\n            });\r\n            r(\"Sprite\").setAll({\r\n                visible: true,\r\n                scale: 1,\r\n                opacity: 1,\r\n                rotation: 0,\r\n                position: \"relative\",\r\n                tooltipX: p50,\r\n                tooltipY: p50,\r\n                tooltipPosition: \"fixed\",\r\n                isMeasured: true\r\n            });\r\n            r(\"Sprite\").states.create(\"default\", { \"visible\": true, opacity: 1 });\r\n            r(\"Container\").setAll({\r\n                interactiveChildren: true,\r\n                setStateOnChildren: false\r\n            });\r\n            r(\"Graphics\").setAll({\r\n                strokeWidth: 1\r\n            });\r\n            r(\"Chart\").setAll({\r\n                width: p100,\r\n                height: p100,\r\n                interactiveChildren: false\r\n            });\r\n            /**\r\n             * ------------------------------------------------------------------------\r\n             * core: alignment\r\n             * ------------------------------------------------------------------------\r\n             */\r\n            r(\"Sprite\", [\"horizontal\", \"center\"]).setAll({\r\n                centerX: p50,\r\n                x: p50\r\n            });\r\n            r(\"Sprite\", [\"vertical\", \"center\"]).setAll({\r\n                centerY: p50,\r\n                y: p50\r\n            });\r\n            r(\"Container\", [\"horizontal\", \"layout\"]).setAll({\r\n                layout: horizontalLayout\r\n            });\r\n            r(\"Container\", [\"vertical\", \"layout\"]).setAll({\r\n                layout: verticalLayout\r\n            });\r\n            /**\r\n             * ------------------------------------------------------------------------\r\n             * core: patterns\r\n             * ------------------------------------------------------------------------\r\n             */\r\n            r(\"Pattern\").setAll({\r\n                repetition: \"repeat\",\r\n                width: 50,\r\n                height: 50,\r\n                rotation: 0,\r\n                fillOpacity: 1\r\n            });\r\n            r(\"LinePattern\").setAll({\r\n                gap: 6,\r\n                colorOpacity: 1,\r\n                width: 49,\r\n                height: 49\r\n            });\r\n            r(\"RectanglePattern\").setAll({\r\n                gap: 6,\r\n                checkered: false,\r\n                centered: true,\r\n                maxWidth: 5,\r\n                maxHeight: 5,\r\n                width: 48,\r\n                height: 48,\r\n                strokeWidth: 0\r\n            });\r\n            r(\"CirclePattern\").setAll({\r\n                gap: 5,\r\n                checkered: false,\r\n                centered: false,\r\n                radius: 3,\r\n                strokeWidth: 0,\r\n                width: 45,\r\n                height: 45\r\n            });\r\n            /**\r\n             * ------------------------------------------------------------------------\r\n             * core: gradients\r\n             * ------------------------------------------------------------------------\r\n             */\r\n            r(\"LinearGradient\").setAll({\r\n                rotation: 90\r\n            });\r\n            /**\r\n             * ------------------------------------------------------------------------\r\n             * core: Legend\r\n             * ------------------------------------------------------------------------\r\n             */\r\n            r(\"Legend\").setAll({\r\n                fillField: \"fill\",\r\n                strokeField: \"stroke\",\r\n                nameField: \"name\",\r\n                layout: GridLayout.new(this._root, {}),\r\n                layer: 30,\r\n                clickTarget: \"itemContainer\"\r\n            });\r\n            // Class: Container\r\n            r(\"Container\", [\"legend\", \"item\", \"itemcontainer\"]).setAll({\r\n                paddingLeft: 5,\r\n                paddingRight: 5,\r\n                paddingBottom: 5,\r\n                paddingTop: 5,\r\n                layout: horizontalLayout,\r\n                setStateOnChildren: true,\r\n                interactiveChildren: false,\r\n                ariaChecked: true,\r\n                focusable: true,\r\n                ariaLabel: language.translate(\"Press ENTER to toggle\"),\r\n                role: \"checkbox\"\r\n            });\r\n            {\r\n                var rule = r(\"Rectangle\", [\"legend\", \"item\", \"background\"]);\r\n                rule.setAll({\r\n                    fillOpacity: 0,\r\n                });\r\n                setColor(rule, \"fill\", ic, \"background\");\r\n            }\r\n            r(\"Container\", [\"legend\", \"marker\"]).setAll({\r\n                setStateOnChildren: true,\r\n                centerY: p50,\r\n                paddingLeft: 0,\r\n                paddingRight: 0,\r\n                paddingBottom: 0,\r\n                paddingTop: 0,\r\n                width: 18,\r\n                height: 18\r\n            });\r\n            r(\"RoundedRectangle\", [\"legend\", \"marker\", \"rectangle\"]).setAll({\r\n                width: p100,\r\n                height: p100,\r\n                cornerRadiusBL: 3,\r\n                cornerRadiusTL: 3,\r\n                cornerRadiusBR: 3,\r\n                cornerRadiusTR: 3\r\n            });\r\n            {\r\n                var rule = r(\"RoundedRectangle\", [\"legend\", \"marker\", \"rectangle\"]).states.create(\"disabled\", {});\r\n                setColor(rule, \"fill\", ic, \"disabled\");\r\n                setColor(rule, \"stroke\", ic, \"disabled\");\r\n            }\r\n            r(\"Label\", [\"legend\", \"label\"]).setAll({\r\n                centerY: p50,\r\n                marginLeft: 5,\r\n                paddingRight: 0,\r\n                paddingLeft: 0,\r\n                paddingTop: 0,\r\n                paddingBottom: 0,\r\n                populateText: true\r\n            });\r\n            {\r\n                var rule = r(\"Label\", [\"legend\", \"label\"]).states.create(\"disabled\", {});\r\n                setColor(rule, \"fill\", ic, \"disabled\");\r\n            }\r\n            r(\"Label\", [\"legend\", \"value\", \"label\"]).setAll({\r\n                centerY: p50,\r\n                marginLeft: 5,\r\n                paddingRight: 0,\r\n                paddingLeft: 0,\r\n                paddingTop: 0,\r\n                paddingBottom: 0,\r\n                width: 50,\r\n                centerX: p100,\r\n                populateText: true\r\n            });\r\n            {\r\n                var rule = r(\"Label\", [\"legend\", \"value\", \"label\"]).states.create(\"disabled\", {});\r\n                setColor(rule, \"fill\", ic, \"disabled\");\r\n            }\r\n            /**\r\n             * ------------------------------------------------------------------------\r\n             * core: HeatLegend\r\n             * ------------------------------------------------------------------------\r\n             */\r\n            r(\"HeatLegend\").setAll({\r\n                stepCount: 1\r\n            });\r\n            r(\"RoundedRectangle\", [\"heatlegend\", \"marker\"]).setAll({\r\n                cornerRadiusTR: 0,\r\n                cornerRadiusBR: 0,\r\n                cornerRadiusTL: 0,\r\n                cornerRadiusBL: 0\r\n            });\r\n            r(\"RoundedRectangle\", [\"vertical\", \"heatlegend\", \"marker\"]).setAll({\r\n                height: p100,\r\n                width: 15\r\n            });\r\n            r(\"RoundedRectangle\", [\"horizontal\", \"heatlegend\", \"marker\"]).setAll({\r\n                width: p100,\r\n                height: 15\r\n            });\r\n            r(\"HeatLegend\", [\"vertical\"]).setAll({\r\n                height: p100\r\n            });\r\n            r(\"HeatLegend\", [\"horizontal\"]).setAll({\r\n                width: p100\r\n            });\r\n            r(\"Label\", [\"heatlegend\", \"start\"]).setAll({\r\n                paddingLeft: 5,\r\n                paddingRight: 5,\r\n                paddingTop: 5,\r\n                paddingBottom: 5\r\n            });\r\n            r(\"Label\", [\"heatlegend\", \"end\"]).setAll({\r\n                paddingLeft: 5,\r\n                paddingRight: 5,\r\n                paddingTop: 5,\r\n                paddingBottom: 5\r\n            });\r\n            /**\r\n             * ------------------------------------------------------------------------\r\n             * core: Labels\r\n             * ------------------------------------------------------------------------\r\n             */\r\n            {\r\n                var rule = r(\"Label\");\r\n                rule.setAll({\r\n                    paddingTop: 8,\r\n                    paddingBottom: 8,\r\n                    paddingLeft: 10,\r\n                    paddingRight: 10,\r\n                    fontFamily: \"-apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, Helvetica, Arial, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\"\",\r\n                    fontSize: \"1em\",\r\n                    populateText: false\r\n                });\r\n                setColor(rule, \"fill\", ic, \"text\");\r\n            }\r\n            r(\"RadialLabel\").setAll({\r\n                textType: \"regular\",\r\n                centerY: p50,\r\n                centerX: p50,\r\n                inside: false,\r\n                radius: 0,\r\n                baseRadius: p100,\r\n                orientation: \"auto\",\r\n                textAlign: \"center\"\r\n            });\r\n            /**\r\n             * ------------------------------------------------------------------------\r\n             * core: Elements and shapes\r\n             * ------------------------------------------------------------------------\r\n             */\r\n            r(\"RoundedRectangle\").setAll({\r\n                cornerRadiusTL: 8,\r\n                cornerRadiusBL: 8,\r\n                cornerRadiusTR: 8,\r\n                cornerRadiusBR: 8\r\n            });\r\n            r(\"PointedRectangle\").setAll({\r\n                pointerBaseWidth: 15,\r\n                pointerLength: 10,\r\n                cornerRadius: 8\r\n            });\r\n            r(\"Slice\").setAll({\r\n                shiftRadius: 0,\r\n                dRadius: 0,\r\n                dInnerRadius: 0\r\n            });\r\n            {\r\n                var rule = r(\"Tick\");\r\n                rule.setAll({\r\n                    strokeOpacity: .15,\r\n                    isMeasured: false,\r\n                    length: 5,\r\n                    position: \"absolute\"\r\n                });\r\n                setColor(rule, \"stroke\", ic, \"grid\");\r\n            }\r\n            r(\"Bullet\").setAll({\r\n                locationX: 0.5,\r\n                locationY: 0.5\r\n            });\r\n            /**\r\n             * ------------------------------------------------------------------------\r\n             * core: Tooltip\r\n             * ------------------------------------------------------------------------\r\n             */\r\n            r(\"Tooltip\").setAll({\r\n                position: \"absolute\",\r\n                getFillFromSprite: true,\r\n                getStrokeFromSprite: false,\r\n                autoTextColor: true,\r\n                paddingTop: 9,\r\n                paddingBottom: 8,\r\n                paddingLeft: 10,\r\n                paddingRight: 10,\r\n                marginBottom: 5,\r\n                pointerOrientation: \"vertical\",\r\n                centerX: p50,\r\n                centerY: p50,\r\n                animationEasing: $ease.out($ease.cubic),\r\n                exportable: false\r\n                //layer: 100\r\n            });\r\n            {\r\n                var rule = r(\"PointedRectangle\", [\"tooltip\", \"background\"]);\r\n                rule.setAll({\r\n                    strokeOpacity: 0.9,\r\n                    cornerRadius: 4,\r\n                    pointerLength: 4,\r\n                    pointerBaseWidth: 8,\r\n                    fillOpacity: 0.9,\r\n                    stroke: Color.fromHex(0xffffff)\r\n                });\r\n            }\r\n            {\r\n                var rule = r(\"Label\", [\"tooltip\"]);\r\n                rule.setAll({\r\n                    role: \"tooltip\",\r\n                    populateText: true,\r\n                    paddingRight: 0,\r\n                    paddingTop: 0,\r\n                    paddingLeft: 0,\r\n                    paddingBottom: 0\r\n                });\r\n                setColor(rule, \"fill\", ic, \"alternativeText\");\r\n            }\r\n            /**\r\n             * ------------------------------------------------------------------------\r\n             * core: Button\r\n             * ------------------------------------------------------------------------\r\n             */\r\n            r(\"Button\").setAll({\r\n                paddingTop: 8,\r\n                paddingBottom: 8,\r\n                paddingLeft: 10,\r\n                paddingRight: 10,\r\n                interactive: true,\r\n                layout: horizontalLayout,\r\n                interactiveChildren: false,\r\n                setStateOnChildren: true,\r\n                focusable: true\r\n            });\r\n            r(\"Button\").states.create(\"hover\", {});\r\n            r(\"Button\").states.create(\"down\", { stateAnimationDuration: 0 });\r\n            r(\"Button\").states.create(\"active\", {});\r\n            {\r\n                var rule = r(\"RoundedRectangle\", [\"button\", \"background\"]);\r\n                setColor(rule, \"fill\", ic, \"primaryButton\");\r\n                setColor(rule, \"stroke\", ic, \"primaryButtonStroke\");\r\n            }\r\n            {\r\n                var rule = r(\"RoundedRectangle\", [\"button\", \"background\"]).states.create(\"hover\", {});\r\n                setColor(rule, \"fill\", ic, \"primaryButtonHover\");\r\n            }\r\n            {\r\n                var rule = r(\"RoundedRectangle\", [\"button\", \"background\"]).states.create(\"down\", { stateAnimationDuration: 0 });\r\n                setColor(rule, \"fill\", ic, \"primaryButtonDown\");\r\n            }\r\n            {\r\n                var rule = r(\"RoundedRectangle\", [\"button\", \"background\"]).states.create(\"active\", {});\r\n                setColor(rule, \"fill\", ic, \"primaryButtonActive\");\r\n            }\r\n            {\r\n                var rule = r(\"Graphics\", [\"button\", \"icon\"]);\r\n                setColor(rule, \"stroke\", ic, \"primaryButtonText\");\r\n            }\r\n            {\r\n                var rule = r(\"Label\", [\"button\"]);\r\n                setColor(rule, \"fill\", ic, \"primaryButtonText\");\r\n            }\r\n            /**\r\n             * ------------------------------------------------------------------------\r\n             * charts/xy: ZoomOutButton\r\n             * ------------------------------------------------------------------------\r\n             */\r\n            r(\"Button\", [\"zoom\"]).setAll({\r\n                paddingTop: 18,\r\n                paddingBottom: 18,\r\n                paddingLeft: 12,\r\n                paddingRight: 12,\r\n                centerX: 46,\r\n                centerY: -10,\r\n                y: 0,\r\n                x: p100,\r\n                role: \"button\",\r\n                ariaLabel: language.translate(\"Zoom Out\"),\r\n                layer: 30\r\n            });\r\n            {\r\n                var rule = r(\"RoundedRectangle\", [\"background\", \"button\", \"zoom\"]);\r\n                rule.setAll({\r\n                    cornerRadiusBL: 40,\r\n                    cornerRadiusBR: 40,\r\n                    cornerRadiusTL: 40,\r\n                    cornerRadiusTR: 40\r\n                });\r\n                setColor(rule, \"fill\", ic, \"primaryButton\");\r\n            }\r\n            {\r\n                var rule = r(\"RoundedRectangle\", [\"background\", \"button\", \"zoom\"]).states.create(\"hover\", {});\r\n                setColor(rule, \"fill\", ic, \"primaryButtonHover\");\r\n            }\r\n            {\r\n                var rule = r(\"RoundedRectangle\", [\"background\", \"button\", \"zoom\"]).states.create(\"down\", { stateAnimationDuration: 0 });\r\n                setColor(rule, \"fill\", ic, \"primaryButtonDown\");\r\n            }\r\n            {\r\n                var rule = r(\"Graphics\", [\"icon\", \"button\", \"zoom\"]);\r\n                rule.setAll({\r\n                    strokeOpacity: 0.7,\r\n                    draw: function (display) {\r\n                        display.moveTo(0, 0);\r\n                        display.lineTo(12, 0);\r\n                    }\r\n                });\r\n                setColor(rule, \"stroke\", ic, \"primaryButtonText\");\r\n            }\r\n            /**\r\n             * ------------------------------------------------------------------------\r\n             * core: ResizeButton\r\n             * ------------------------------------------------------------------------\r\n             */\r\n            r(\"Button\", [\"resize\"]).setAll({\r\n                paddingTop: 9,\r\n                paddingBottom: 9,\r\n                paddingLeft: 13,\r\n                paddingRight: 13,\r\n                draggable: true,\r\n                centerX: p50,\r\n                centerY: p50,\r\n                position: \"absolute\",\r\n                role: \"slider\",\r\n                ariaValueMin: \"0\",\r\n                ariaValueMax: \"100\",\r\n                ariaLabel: language.translate(\"Use up and down arrows to move selection\")\r\n            });\r\n            {\r\n                var rule = r(\"RoundedRectangle\", [\"background\", \"resize\", \"button\"]);\r\n                rule.setAll({\r\n                    cornerRadiusBL: 40,\r\n                    cornerRadiusBR: 40,\r\n                    cornerRadiusTL: 40,\r\n                    cornerRadiusTR: 40\r\n                });\r\n                setColor(rule, \"fill\", ic, \"secondaryButton\");\r\n                setColor(rule, \"stroke\", ic, \"secondaryButtonStroke\");\r\n            }\r\n            {\r\n                var rule = r(\"RoundedRectangle\", [\"background\", \"resize\", \"button\"]).states.create(\"hover\", {});\r\n                setColor(rule, \"fill\", ic, \"secondaryButtonHover\");\r\n            }\r\n            {\r\n                var rule = r(\"RoundedRectangle\", [\"background\", \"resize\", \"button\"]).states.create(\"down\", { stateAnimationDuration: 0 });\r\n                setColor(rule, \"fill\", ic, \"secondaryButtonDown\");\r\n            }\r\n            {\r\n                var rule = r(\"Graphics\", [\"resize\", \"button\", \"icon\"]);\r\n                rule.setAll({\r\n                    strokeOpacity: 0.7,\r\n                    draw: function (display) {\r\n                        display.moveTo(0, 0);\r\n                        display.lineTo(0, 12);\r\n                        display.moveTo(4, 0);\r\n                        display.lineTo(4, 12);\r\n                    }\r\n                });\r\n                setColor(rule, \"stroke\", ic, \"secondaryButtonText\");\r\n            }\r\n            r(\"Button\", [\"resize\", \"vertical\"]).setAll({\r\n                rotation: 90,\r\n                cursorOverStyle: \"ns-resize\"\r\n            });\r\n            r(\"Button\", [\"resize\", \"horizontal\"]).setAll({\r\n                cursorOverStyle: \"ew-resize\"\r\n            });\r\n            /**\r\n             * ------------------------------------------------------------------------\r\n             * core: PlayButton\r\n             * ------------------------------------------------------------------------\r\n             */\r\n            r(\"Button\", [\"play\"]).setAll({\r\n                paddingTop: 13,\r\n                paddingBottom: 13,\r\n                paddingLeft: 14,\r\n                paddingRight: 14,\r\n                ariaLabel: language.translate(\"Play\"),\r\n                toggleKey: \"active\"\r\n            });\r\n            {\r\n                var rule = r(\"RoundedRectangle\", [\"play\", \"background\"]);\r\n                rule.setAll({\r\n                    strokeOpacity: 0.5,\r\n                    cornerRadiusBL: 100,\r\n                    cornerRadiusBR: 100,\r\n                    cornerRadiusTL: 100,\r\n                    cornerRadiusTR: 100\r\n                });\r\n                setColor(rule, \"fill\", ic, \"primaryButton\");\r\n            }\r\n            {\r\n                var rule = r(\"Graphics\", [\"play\", \"icon\"]);\r\n                rule.setAll({\r\n                    stateAnimationDuration: 0,\r\n                    dx: 1,\r\n                    draw: function (display) {\r\n                        display.moveTo(0, -5);\r\n                        display.lineTo(8, 0);\r\n                        display.lineTo(0, 5);\r\n                        display.lineTo(0, -5);\r\n                    }\r\n                });\r\n                setColor(rule, \"fill\", ic, \"primaryButtonText\");\r\n            }\r\n            r(\"Graphics\", [\"play\", \"icon\"]).states.create(\"default\", {\r\n                stateAnimationDuration: 0\r\n            });\r\n            r(\"Graphics\", [\"play\", \"icon\"]).states.create(\"active\", {\r\n                stateAnimationDuration: 0,\r\n                draw: function (display) {\r\n                    display.moveTo(-4, -5);\r\n                    display.lineTo(-1, -5);\r\n                    display.lineTo(-1, 5);\r\n                    display.lineTo(-4, 5);\r\n                    display.lineTo(-4, -5);\r\n                    display.moveTo(4, -5);\r\n                    display.lineTo(1, -5);\r\n                    display.lineTo(1, 5);\r\n                    display.lineTo(4, 5);\r\n                    display.lineTo(4, -5);\r\n                }\r\n            });\r\n            /**\r\n             * ------------------------------------------------------------------------\r\n             * core: SwitchButton\r\n             * ------------------------------------------------------------------------\r\n             */\r\n            r(\"Button\", [\"switch\"]).setAll({\r\n                paddingTop: 4,\r\n                paddingBottom: 4,\r\n                paddingLeft: 4,\r\n                paddingRight: 4,\r\n                ariaLabel: language.translate(\"Press ENTER to toggle\"),\r\n                toggleKey: \"active\",\r\n                width: 40,\r\n                height: 24,\r\n                layout: null\r\n            });\r\n            {\r\n                var rule = r(\"RoundedRectangle\", [\"switch\", \"background\"]);\r\n                rule.setAll({\r\n                    strokeOpacity: 0.5,\r\n                    cornerRadiusBL: 100,\r\n                    cornerRadiusBR: 100,\r\n                    cornerRadiusTL: 100,\r\n                    cornerRadiusTR: 100\r\n                });\r\n                setColor(rule, \"fill\", ic, \"primaryButton\");\r\n            }\r\n            {\r\n                var rule = r(\"Circle\", [\"switch\", \"icon\"]);\r\n                rule.setAll({\r\n                    radius: 8,\r\n                    centerY: 0,\r\n                    centerX: 0,\r\n                    dx: 0\r\n                });\r\n                setColor(rule, \"fill\", ic, \"primaryButtonText\");\r\n            }\r\n            r(\"Graphics\", [\"switch\", \"icon\"]).states.create(\"active\", {\r\n                dx: 16\r\n            });\r\n            /**\r\n             * ------------------------------------------------------------------------\r\n             * core: Scrollbar\r\n             * ------------------------------------------------------------------------\r\n             */\r\n            r(\"Scrollbar\").setAll({\r\n                start: 0,\r\n                end: 1,\r\n                layer: 30,\r\n                animationEasing: $ease.out($ease.cubic)\r\n            });\r\n            r(\"Scrollbar\", [\"vertical\"]).setAll({\r\n                marginRight: 13,\r\n                marginLeft: 13,\r\n                minWidth: 12,\r\n                height: p100\r\n            });\r\n            r(\"Scrollbar\", [\"horizontal\"]).setAll({\r\n                marginTop: 13,\r\n                marginBottom: 13,\r\n                minHeight: 12,\r\n                width: p100\r\n            });\r\n            this.rule(\"Button\", [\"scrollbar\"]).setAll({\r\n                exportable: false\r\n            });\r\n            {\r\n                var rule = r(\"RoundedRectangle\", [\"scrollbar\", \"main\", \"background\"]);\r\n                rule.setAll({\r\n                    cornerRadiusTL: 8,\r\n                    cornerRadiusBL: 8,\r\n                    cornerRadiusTR: 8,\r\n                    cornerRadiusBR: 8,\r\n                    fillOpacity: 0.8,\r\n                });\r\n                setColor(rule, \"fill\", ic, \"fill\");\r\n            }\r\n            {\r\n                var rule = r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\"]);\r\n                rule.setAll({\r\n                    role: \"slider\",\r\n                    ariaLive: \"polite\",\r\n                    position: \"absolute\",\r\n                    draggable: true\r\n                });\r\n                setColor(rule, \"fill\", ic, \"secondaryButton\");\r\n            }\r\n            {\r\n                var rule = r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\"]).states.create(\"hover\", {});\r\n                setColor(rule, \"fill\", ic, \"secondaryButtonHover\");\r\n            }\r\n            {\r\n                var rule = r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\"]).states.create(\"down\", { stateAnimationDuration: 0 });\r\n                setColor(rule, \"fill\", ic, \"secondaryButtonDown\");\r\n            }\r\n            r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\", \"vertical\"]).setAll({\r\n                x: p50,\r\n                width: p100,\r\n                centerX: p50,\r\n                ariaLabel: language.translate(\"Use up and down arrows to move selection\")\r\n            });\r\n            r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\", \"horizontal\"]).setAll({\r\n                y: p50,\r\n                centerY: p50,\r\n                height: p100,\r\n                ariaLabel: language.translate(\"Use left and right arrows to move selection\")\r\n            });\r\n            // @todo: is this needed? used to be \"ContentScrollbar\"\r\n            // r(\"Scrollbar\", [\"content?\"]).setAll({\r\n            // \tmarginRight: 0,\r\n            // \tmarginLeft: 5,\r\n            // \tlayer: 5\r\n            // });\r\n            /**\r\n             * ========================================================================\r\n             * charts/xy\r\n             * ========================================================================\r\n             *\r\n             * This needs to be in DefaultTheme because it's the only theme that is\r\n             * automatically applied to Root, and tooltips different ancestors\r\n             * than actual charts using them.\r\n             */\r\n            {\r\n                var rule = r(\"PointedRectangle\", [\"axis\", \"tooltip\", \"background\"]);\r\n                rule.setAll({\r\n                    cornerRadius: 0\r\n                });\r\n                setColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n            }\r\n            r(\"Label\", [\"axis\", \"tooltip\"]).setAll({\r\n                role: undefined\r\n            });\r\n            r(\"Label\", [\"axis\", \"tooltip\", \"y\"]).setAll({\r\n                textAlign: \"right\"\r\n            });\r\n            r(\"Label\", [\"axis\", \"tooltip\", \"y\", \"opposite\"]).setAll({\r\n                textAlign: \"left\"\r\n            });\r\n            r(\"Label\", [\"axis\", \"tooltip\", \"x\"]).setAll({\r\n                textAlign: \"center\"\r\n            });\r\n            r(\"Tooltip\", [\"categoryaxis\"]).setAll({\r\n                labelText: \"{category}\"\r\n            });\r\n            /**\r\n             * ------------------------------------------------------------------------\r\n             * Shapes\r\n             * ------------------------------------------------------------------------\r\n             */\r\n            // Class: Graphics\r\n            r(\"Star\").setAll({\r\n                spikes: 5,\r\n                innerRadius: 5,\r\n                radius: 10\r\n            });\r\n            // STOCK\r\n            r(\"Tooltip\", [\"stock\"]).setAll({\r\n                paddingTop: 6,\r\n                paddingBottom: 5,\r\n                paddingLeft: 7,\r\n                paddingRight: 7\r\n            });\r\n            r(\"PointedRectangle\", [\"tooltip\", \"stock\", \"axis\"]).setAll({\r\n                pointerLength: 0,\r\n                pointerBaseWidth: 0,\r\n                cornerRadius: 3\r\n            });\r\n            r(\"Label\", [\"tooltip\", \"stock\"]).setAll({\r\n                fontSize: \"0.8em\"\r\n            });\r\n            // resizer\r\n            r(\"SpriteResizer\").setAll({\r\n                rotationStep: 10\r\n            });\r\n            {\r\n                var rule = r(\"Container\", [\"resizer\", \"grip\"]);\r\n                rule.states.create(\"hover\", {});\r\n            }\r\n            {\r\n                var rule = r(\"RoundedRectangle\", [\"resizer\", \"grip\"]);\r\n                rule.setAll({\r\n                    strokeOpacity: 0.7,\r\n                    strokeWidth: 1,\r\n                    fillOpacity: 1,\r\n                    width: 12,\r\n                    height: 12\r\n                });\r\n                setColor(rule, \"fill\", ic, \"background\");\r\n                setColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n            }\r\n            {\r\n                var rule = r(\"RoundedRectangle\", [\"resizer\", \"grip\", \"outline\"]);\r\n                rule.setAll({\r\n                    strokeOpacity: 0,\r\n                    fillOpacity: 0,\r\n                    width: 20,\r\n                    height: 20\r\n                });\r\n                rule.states.create(\"hover\", {\r\n                    fillOpacity: 0.3\r\n                });\r\n                setColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n            }\r\n            r(\"RoundedRectangle\", [\"resizer\", \"grip\", \"left\"]).setAll({\r\n                cornerRadiusBL: 0,\r\n                cornerRadiusBR: 0,\r\n                cornerRadiusTL: 0,\r\n                cornerRadiusTR: 0\r\n            });\r\n            r(\"RoundedRectangle\", [\"resizer\", \"grip\", \"right\"]).setAll({\r\n                cornerRadiusBL: 0,\r\n                cornerRadiusBR: 0,\r\n                cornerRadiusTL: 0,\r\n                cornerRadiusTR: 0\r\n            });\r\n            {\r\n                var rule = r(\"Rectangle\", [\"resizer\", \"rectangle\"]);\r\n                rule.setAll({\r\n                    strokeDasharray: [2, 2],\r\n                    strokeOpacity: 0.5,\r\n                    strokeWidth: 1\r\n                });\r\n                setColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n            }\r\n        }\r\n    });\r\n    return DefaultTheme;\r\n}(Theme));\r\nexport { DefaultTheme };\r\n//# sourceMappingURL=DefaultTheme.js.map","export { Root } from \"./.internal/core/Root\";\r\nexport { Theme } from \"./.internal/core/Theme\";\r\nexport { addLicense, registry, disposeAllRootElements } from \"./.internal/core/Registry\";\r\nexport { ready } from \"./.internal/core/util/Utils\";\r\nexport { Modal } from \"./.internal/core/util/Modal\";\r\nexport { Entity } from \"./.internal/core/util/Entity\";\r\nexport { Disposer, ArrayDisposer, MultiDisposer, MutableValueDisposer, CounterDisposer } from \"./.internal/core/util/Disposer\";\r\nexport { Bullet } from \"./.internal/core/render/Bullet\";\r\nexport { Button } from \"./.internal/core/render/Button\";\r\nexport { Circle } from \"./.internal/core/render/Circle\";\r\nexport { Ellipse } from \"./.internal/core/render/Ellipse\";\r\nexport { Star } from \"./.internal/core/render/Star\";\r\nexport { Component, DataItem } from \"./.internal/core/render/Component\";\r\nexport { Container } from \"./.internal/core/render/Container\";\r\nexport { Graphics } from \"./.internal/core/render/Graphics\";\r\nexport { GridLayout } from \"./.internal/core/render/GridLayout\";\r\nexport { HeatLegend } from \"./.internal/core/render/HeatLegend\";\r\nexport { HorizontalLayout } from \"./.internal/core/render/HorizontalLayout\";\r\nexport { Label } from \"./.internal/core/render/Label\";\r\nexport { Layout } from \"./.internal/core/render/Layout\";\r\nexport { Legend } from \"./.internal/core/render/Legend\";\r\nexport { Line } from \"./.internal/core/render/Line\";\r\nexport { Picture } from \"./.internal/core/render/Picture\";\r\nexport { PointedRectangle } from \"./.internal/core/render/PointedRectangle\";\r\nexport { RadialLabel } from \"./.internal/core/render/RadialLabel\";\r\nexport { RadialText } from \"./.internal/core/render/RadialText\";\r\nexport { Rectangle } from \"./.internal/core/render/Rectangle\";\r\nexport { Triangle } from \"./.internal/core/render/Triangle\";\r\nexport { RoundedRectangle } from \"./.internal/core/render/RoundedRectangle\";\r\nexport { Scrollbar } from \"./.internal/core/render/Scrollbar\";\r\nexport { Slider } from \"./.internal/core/render/Slider\";\r\nexport { Slice } from \"./.internal/core/render/Slice\";\r\nexport { Sprite } from \"./.internal/core/render/Sprite\";\r\nexport { Series } from \"./.internal/core/render/Series\";\r\nexport { Chart } from \"./.internal/core/render/Chart\";\r\nexport { SerialChart } from \"./.internal/core/render/SerialChart\";\r\nexport { Text } from \"./.internal/core/render/Text\";\r\nexport { Tick } from \"./.internal/core/render/Tick\";\r\nexport { Tooltip } from \"./.internal/core/render/Tooltip\";\r\nexport { VerticalLayout } from \"./.internal/core/render/VerticalLayout\";\r\nexport { Timezone } from \"./.internal/core/util/Timezone\";\r\nexport { Gradient } from \"./.internal/core/render/gradients/Gradient\";\r\nexport { LinearGradient } from \"./.internal/core/render/gradients/LinearGradient\";\r\nexport { RadialGradient } from \"./.internal/core/render/gradients/RadialGradient\";\r\nexport { CirclePattern } from \"./.internal/core/render/patterns/CirclePattern\";\r\nexport { LinePattern } from \"./.internal/core/render/patterns/LinePattern\";\r\nexport { Pattern } from \"./.internal/core/render/patterns/Pattern\";\r\nexport { PicturePattern } from \"./.internal/core/render/patterns/PicturePattern\";\r\nexport { RectanglePattern } from \"./.internal/core/render/patterns/RectanglePattern\";\r\nexport { Color, color } from \"./.internal/core/util/Color\";\r\nexport { ColorSet } from \"./.internal/core/util/ColorSet\";\r\nexport { ListData, JsonData } from \"./.internal/core/util/Data\";\r\nexport { JSONParser, CSVParser } from \"./.internal/core/util/DataParser\";\r\nexport { DataProcessor } from \"./.internal/core/util/DataProcessor\";\r\nexport { DateFormatter } from \"./.internal/core/util/DateFormatter\";\r\nexport { DurationFormatter } from \"./.internal/core/util/DurationFormatter\";\r\nexport { InterfaceColors } from \"./.internal/core/util/InterfaceColors\";\r\n//export { Language, ILanguageSettings } from \"./.internal/core/util/Language\";\r\n//export { List, IListSettings } from \"./.internal/core/util/List\";\r\nexport { NumberFormatter } from \"./.internal/core/util/NumberFormatter\";\r\nexport { Percent, percent, p100, p50, p0 } from \"./.internal/core/util/Percent\";\r\nexport { Template } from \"./.internal/core/util/Template\";\r\nexport { TextFormatter } from \"./.internal/core/util/TextFormatter\";\r\nexport { SpriteResizer } from \"./.internal/core/render/SpriteResizer\";\r\nimport * as array from \"./.internal/core/util/Array\";\r\nexport { array };\r\nimport * as ease from \"./.internal/core/util/Ease\";\r\nexport { ease };\r\nimport * as math from \"./.internal/core/util/Math\";\r\nexport { math };\r\nimport * as net from \"./.internal/core/util/Net\";\r\nexport { net };\r\nimport * as object from \"./.internal/core/util/Object\";\r\nexport { object };\r\nimport * as time from \"./.internal/core/util/Time\";\r\nexport { time };\r\nimport * as type from \"./.internal/core/util/Type\";\r\nexport { type };\r\nimport * as utils from \"./.internal/core/util/Utils\";\r\nexport { utils };\r\n//# sourceMappingURL=index.js.map","/**\r\n * amCharts 5 locale\r\n *\r\n * Locale: en\r\n * Language: International English\r\n * Author: Martynas Majeris\r\n *\r\n * Follow instructions in [on this page](https://www.amcharts.com/docs/v5/tutorials/creating-translations/) to make corrections or add new translations.\r\n *\r\n * ---\r\n * Edit but leave the header section above this line. You can remove any\r\n * subsequent comment sections.\r\n * ---\r\n *\r\n * Use this file as a template to create translations. Leave the key part in\r\n * English intact. Fill the value with a translation.\r\n *\r\n * Empty string means no translation, so default \"International English\"\r\n * will be used.\r\n *\r\n * If you need the translation to literally be an empty string, use `null`\r\n * instead.\r\n *\r\n * IMPORTANT:\r\n * When translating make good effort to keep the translation length\r\n * at least the same chartcount as the English, especially for short prompts.\r\n *\r\n * Having significantly longer prompts may distort the actual charts.\r\n *\r\n * NOTE:\r\n * Some prompts - like months or weekdays - come in two versions: full and\r\n * shortened.\r\n *\r\n * If there's no official shortened version of these in your language, and it\r\n * would not be possible to invent such short versions that don't seem weird\r\n * to native speakers of that language, fill those with the same as full\r\n * version.\r\n *\r\n * PLACEHOLDERS:\r\n * Some prompts have placeholders like \"%1\". Those will be replaced by actual\r\n * values during translation and should be retained in the translated prompts.\r\n *\r\n * Placeholder positions may be changed to better suit structure of the\r\n * sentence.\r\n *\r\n * For example \"From %1 to %2\", when actually used will replace \"%1\" with an\r\n * actual value representing range start, and \"%2\" will be replaced by end\r\n * value.\r\n *\r\n * E.g. in a Scrollbar for Value axis \"From %1 to %2\" will become\r\n * \"From 100 to 200\". You may translate \"From\" and \"to\", as well as re-arrange\r\n * the order of the prompt itself, but make sure the \"%1\" and \"%2\" remain, in\r\n * places where they will make sense.\r\n *\r\n * Save the file as language_LOCALE, i.e. `en_GB.ts`, `fr_FR.ts`, etc.\r\n */\r\nexport default {\r\n    \"firstDayOfWeek\": 1,\r\n    // Number formatting options.\r\n    // \r\n    // Please check with the local standards which separator is accepted to be\r\n    // used for separating decimals, and which for thousands.\r\n    \"_decimalSeparator\": \".\",\r\n    \"_thousandSeparator\": \",\",\r\n    // Position of the percent sign in numbers\r\n    \"_percentPrefix\": null,\r\n    \"_percentSuffix\": \"%\",\r\n    // Suffixes for numbers\r\n    // When formatting numbers, big or small numers might be reformatted to\r\n    // shorter version, by applying a suffix.\r\n    // \r\n    // For example, 1000000 might become \"1m\".\r\n    // Or 1024 might become \"1KB\" if we're formatting byte numbers.\r\n    // \r\n    // This section defines such suffixes for all such cases.\r\n    \"_big_number_suffix_3\": \"k\",\r\n    \"_big_number_suffix_6\": \"M\",\r\n    \"_big_number_suffix_9\": \"G\",\r\n    \"_big_number_suffix_12\": \"T\",\r\n    \"_big_number_suffix_15\": \"P\",\r\n    \"_big_number_suffix_18\": \"E\",\r\n    \"_big_number_suffix_21\": \"Z\",\r\n    \"_big_number_suffix_24\": \"Y\",\r\n    \"_small_number_suffix_3\": \"m\",\r\n    \"_small_number_suffix_6\": \"μ\",\r\n    \"_small_number_suffix_9\": \"n\",\r\n    \"_small_number_suffix_12\": \"p\",\r\n    \"_small_number_suffix_15\": \"f\",\r\n    \"_small_number_suffix_18\": \"a\",\r\n    \"_small_number_suffix_21\": \"z\",\r\n    \"_small_number_suffix_24\": \"y\",\r\n    \"_byte_suffix_B\": \"B\",\r\n    \"_byte_suffix_KB\": \"KB\",\r\n    \"_byte_suffix_MB\": \"MB\",\r\n    \"_byte_suffix_GB\": \"GB\",\r\n    \"_byte_suffix_TB\": \"TB\",\r\n    \"_byte_suffix_PB\": \"PB\",\r\n    // Default date formats for various periods.\r\n    // \r\n    // This should reflect official or de facto formatting universally accepted\r\n    // in the country translation is being made for\r\n    // Available format codes here:\r\n    // https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/#Format_codes\r\n    // \r\n    // This will be used when formatting date/time for particular granularity,\r\n    // e.g. \"_date_hour\" will be shown whenever we need to show time as hours.\r\n    // \r\n    // \"date\" is used as in default date format when showing standalone dates.\r\n    \"_date\": \"yyyy-MM-dd\",\r\n    \"_date_millisecond\": \"mm:ss SSS\",\r\n    \"_date_millisecond_full\": \"HH:mm:ss SSS\",\r\n    \"_date_second\": \"HH:mm:ss\",\r\n    \"_date_second_full\": \"HH:mm:ss\",\r\n    \"_date_minute\": \"HH:mm\",\r\n    \"_date_minute_full\": \"HH:mm - MMM dd, yyyy\",\r\n    \"_date_hour\": \"HH:mm\",\r\n    \"_date_hour_full\": \"HH:mm - MMM dd, yyyy\",\r\n    \"_date_day\": \"MMM dd\",\r\n    \"_date_day_full\": \"MMM dd, yyyy\",\r\n    \"_date_week\": \"ww\",\r\n    \"_date_week_full\": \"MMM dd, yyyy\",\r\n    \"_date_month\": \"MMM\",\r\n    \"_date_month_full\": \"MMM, yyyy\",\r\n    \"_date_year\": \"yyyy\",\r\n    // Default duration formats for various base units.\r\n    // \r\n    // This will be used by DurationFormatter to format numeric values into\r\n    // duration.\r\n    // \r\n    // Notice how each duration unit comes in several versions. This is to ensure\r\n    // that each base unit is shown correctly.\r\n    // \r\n    // For example, if we have baseUnit set to \"second\", meaning our duration is\r\n    // in seconds.\r\n    // \r\n    // If we pass in `50` to formatter, it will know that we have just 50 seconds\r\n    // (less than a minute) so it will use format in `\"_duration_second\"` (\"ss\"),\r\n    // and the formatted result will be in like `\"50\"`.\r\n    // \r\n    // If we pass in `70`, which is more than a minute, the formatter will switch\r\n    // to `\"_duration_second_minute\"` (\"mm:ss\"), resulting in \"01:10\" formatted\r\n    // text.\r\n    // \r\n    // Available codes here:\r\n    // https://www.amcharts.com/docs/v4/concepts/formatters/formatting-duration/#Available_Codes\r\n    \"_duration_millisecond\": \"SSS\",\r\n    \"_duration_millisecond_second\": \"ss.SSS\",\r\n    \"_duration_millisecond_minute\": \"mm:ss SSS\",\r\n    \"_duration_millisecond_hour\": \"hh:mm:ss SSS\",\r\n    \"_duration_millisecond_day\": \"d'd' mm:ss SSS\",\r\n    \"_duration_millisecond_week\": \"d'd' mm:ss SSS\",\r\n    \"_duration_millisecond_month\": \"M'm' dd'd' mm:ss SSS\",\r\n    \"_duration_millisecond_year\": \"y'y' MM'm' dd'd' mm:ss SSS\",\r\n    \"_duration_second\": \"ss\",\r\n    \"_duration_second_minute\": \"mm:ss\",\r\n    \"_duration_second_hour\": \"hh:mm:ss\",\r\n    \"_duration_second_day\": \"d'd' hh:mm:ss\",\r\n    \"_duration_second_week\": \"d'd' hh:mm:ss\",\r\n    \"_duration_second_month\": \"M'm' dd'd' hh:mm:ss\",\r\n    \"_duration_second_year\": \"y'y' MM'm' dd'd' hh:mm:ss\",\r\n    \"_duration_minute\": \"mm\",\r\n    \"_duration_minute_hour\": \"hh:mm\",\r\n    \"_duration_minute_day\": \"d'd' hh:mm\",\r\n    \"_duration_minute_week\": \"d'd' hh:mm\",\r\n    \"_duration_minute_month\": \"M'm' dd'd' hh:mm\",\r\n    \"_duration_minute_year\": \"y'y' MM'm' dd'd' hh:mm\",\r\n    \"_duration_hour\": \"hh'h'\",\r\n    \"_duration_hour_day\": \"d'd' hh'h'\",\r\n    \"_duration_hour_week\": \"d'd' hh'h'\",\r\n    \"_duration_hour_month\": \"M'm' dd'd' hh'h'\",\r\n    \"_duration_hour_year\": \"y'y' MM'm' dd'd' hh'h'\",\r\n    \"_duration_day\": \"d'd'\",\r\n    \"_duration_day_week\": \"d'd'\",\r\n    \"_duration_day_month\": \"M'm' dd'd'\",\r\n    \"_duration_day_year\": \"y'y' MM'm' dd'd'\",\r\n    \"_duration_week\": \"w'w'\",\r\n    \"_duration_week_month\": \"w'w'\",\r\n    \"_duration_week_year\": \"w'w'\",\r\n    \"_duration_month\": \"M'm'\",\r\n    \"_duration_month_year\": \"y'y' MM'm'\",\r\n    \"_duration_year\": \"y'y'\",\r\n    // Era translations\r\n    \"_era_ad\": \"AD\",\r\n    \"_era_bc\": \"BC\",\r\n    // Day part, used in 12-hour formats, e.g. 5 P.M.\r\n    // Please note that these come in 3 variants:\r\n    // * one letter (e.g. \"A\")\r\n    // * two letters (e.g. \"AM\")\r\n    // * two letters with dots (e.g. \"A.M.\")\r\n    // \r\n    // All three need to to be translated even if they are all the same. Some\r\n    // users might use one, some the other.\r\n    \"A\": \"\",\r\n    \"P\": \"\",\r\n    \"AM\": \"\",\r\n    \"PM\": \"\",\r\n    \"A.M.\": \"\",\r\n    \"P.M.\": \"\",\r\n    // Date-related stuff.\r\n    // \r\n    // When translating months, if there's a difference, use the form which is\r\n    // best for a full date, e.g. as you would use it in \"2018 January 1\".\r\n    // \r\n    // Note that May is listed twice. This is because in English May is the same\r\n    // in both long and short forms, while in other languages it may not be the\r\n    // case. Translate \"May\" to full word, while \"May(short)\" to shortened\r\n    // version.\r\n    // \r\n    // Should month names and weekdays be capitalized or not?\r\n    // \r\n    // Rule of thumb is this: if the names should always be capitalized,\r\n    // regardless of name position within date (\"January\", \"21st January 2018\",\r\n    // etc.) use capitalized names. Otherwise enter all lowercase.\r\n    // \r\n    // The date formatter will automatically capitalize names if they are the\r\n    // first (or only) word in resulting date.\r\n    \"January\": \"\",\r\n    \"February\": \"\",\r\n    \"March\": \"\",\r\n    \"April\": \"\",\r\n    \"May\": \"\",\r\n    \"June\": \"\",\r\n    \"July\": \"\",\r\n    \"August\": \"\",\r\n    \"September\": \"\",\r\n    \"October\": \"\",\r\n    \"November\": \"\",\r\n    \"December\": \"\",\r\n    \"Jan\": \"\",\r\n    \"Feb\": \"\",\r\n    \"Mar\": \"\",\r\n    \"Apr\": \"\",\r\n    \"May(short)\": \"May\",\r\n    \"Jun\": \"\",\r\n    \"Jul\": \"\",\r\n    \"Aug\": \"\",\r\n    \"Sep\": \"\",\r\n    \"Oct\": \"\",\r\n    \"Nov\": \"\",\r\n    \"Dec\": \"\",\r\n    // Weekdays.\r\n    \"Sunday\": \"\",\r\n    \"Monday\": \"\",\r\n    \"Tuesday\": \"\",\r\n    \"Wednesday\": \"\",\r\n    \"Thursday\": \"\",\r\n    \"Friday\": \"\",\r\n    \"Saturday\": \"\",\r\n    \"Sun\": \"\",\r\n    \"Mon\": \"\",\r\n    \"Tue\": \"\",\r\n    \"Wed\": \"\",\r\n    \"Thu\": \"\",\r\n    \"Fri\": \"\",\r\n    \"Sat\": \"\",\r\n    // Date ordinal function.\r\n    // \r\n    // This is used when adding number ordinal when formatting days in dates.\r\n    // \r\n    // E.g. \"January 1st\", \"February 2nd\".\r\n    // \r\n    // The function accepts day number, and returns a string to be added to the\r\n    // day, like in default English translation, if we pass in 2, we will receive\r\n    // \"nd\" back.\r\n    \"_dateOrd\": function (day) {\r\n        var res = \"th\";\r\n        if ((day < 11) || (day > 13)) {\r\n            switch (day % 10) {\r\n                case 1:\r\n                    res = \"st\";\r\n                    break;\r\n                case 2:\r\n                    res = \"nd\";\r\n                    break;\r\n                case 3:\r\n                    res = \"rd\";\r\n                    break;\r\n            }\r\n        }\r\n        return res;\r\n    },\r\n    // Various chart controls.\r\n    // Shown as a tooltip on zoom out button.\r\n    \"Zoom Out\": \"\",\r\n    // Timeline buttons\r\n    \"Play\": \"\",\r\n    \"Stop\": \"\",\r\n    // Chart's Legend screen reader title.\r\n    \"Legend\": \"\",\r\n    // Legend's item screen reader indicator.\r\n    \"Press ENTER to toggle\": \"\",\r\n    // Shown when the chart is busy loading something.\r\n    \"Loading\": \"\",\r\n    // Shown as the first button in the breadcrumb navigation, e.g.:\r\n    // Home > First level > ...\r\n    \"Home\": \"\",\r\n    // Chart types.\r\n    // Those are used as default screen reader titles for the main chart element\r\n    // unless developer has set some more descriptive title.\r\n    \"Chart\": \"\",\r\n    \"Serial chart\": \"\",\r\n    \"X/Y chart\": \"\",\r\n    \"Pie chart\": \"\",\r\n    \"Gauge chart\": \"\",\r\n    \"Radar chart\": \"\",\r\n    \"Sankey diagram\": \"\",\r\n    \"Flow diagram\": \"\",\r\n    \"Chord diagram\": \"\",\r\n    \"TreeMap chart\": \"\",\r\n    \"Force directed tree\": \"\",\r\n    \"Sliced chart\": \"\",\r\n    // Series types.\r\n    // Used to name series by type for screen readers if they do not have their\r\n    // name set.\r\n    \"Series\": \"\",\r\n    \"Candlestick Series\": \"\",\r\n    \"OHLC Series\": \"\",\r\n    \"Column Series\": \"\",\r\n    \"Line Series\": \"\",\r\n    \"Pie Slice Series\": \"\",\r\n    \"Funnel Series\": \"\",\r\n    \"Pyramid Series\": \"\",\r\n    \"X/Y Series\": \"\",\r\n    // Map-related stuff.\r\n    \"Map\": \"\",\r\n    \"Press ENTER to zoom in\": \"\",\r\n    \"Press ENTER to zoom out\": \"\",\r\n    \"Use arrow keys to zoom in and out\": \"\",\r\n    \"Use plus and minus keys on your keyboard to zoom in and out\": \"\",\r\n    // Export-related stuff.\r\n    // These prompts are used in Export menu labels.\r\n    // \r\n    // \"Export\" is the top-level menu item.\r\n    // \r\n    // \"Image\", \"Data\", \"Print\" as second-level indicating type of export\r\n    // operation.\r\n    // \r\n    // Leave actual format untranslated, unless you absolutely know that they\r\n    // would convey more meaning in some other way.\r\n    \"Export\": \"\",\r\n    \"Image\": \"\",\r\n    \"Data\": \"\",\r\n    \"Print\": \"\",\r\n    \"Press ENTER or use arrow keys to navigate\": \"\",\r\n    \"Press ENTER to open\": \"\",\r\n    \"Press ENTER to print.\": \"\",\r\n    \"Press ENTER to export as %1.\": \"\",\r\n    \"(Press ESC to close this message)\": \"\",\r\n    \"Image Export Complete\": \"\",\r\n    \"Export operation took longer than expected. Something might have gone wrong.\": \"\",\r\n    \"Saved from\": \"\",\r\n    \"PNG\": \"\",\r\n    \"JPG\": \"\",\r\n    \"GIF\": \"\",\r\n    \"SVG\": \"\",\r\n    \"PDF\": \"\",\r\n    \"JSON\": \"\",\r\n    \"CSV\": \"\",\r\n    \"XLSX\": \"\",\r\n    \"HTML\": \"\",\r\n    // Scrollbar-related stuff.\r\n    // \r\n    // Scrollbar is a control which can zoom and pan the axes on the chart.\r\n    // \r\n    // Each scrollbar has two grips: left or right (for horizontal scrollbar) or\r\n    // upper and lower (for vertical one).\r\n    // \r\n    // Prompts change in relation to whether Scrollbar is vertical or horizontal.\r\n    // \r\n    // The final section is used to indicate the current range of selection.\r\n    \"Use TAB to select grip buttons or left and right arrows to change selection\": \"\",\r\n    \"Use left and right arrows to move selection\": \"\",\r\n    \"Use left and right arrows to move left selection\": \"\",\r\n    \"Use left and right arrows to move right selection\": \"\",\r\n    \"Use TAB select grip buttons or up and down arrows to change selection\": \"\",\r\n    \"Use up and down arrows to move selection\": \"\",\r\n    \"Use up and down arrows to move lower selection\": \"\",\r\n    \"Use up and down arrows to move upper selection\": \"\",\r\n    \"From %1 to %2\": \"\",\r\n    \"From %1\": \"\",\r\n    \"To %1\": \"\",\r\n    // Data loader-related.\r\n    \"No parser available for file: %1\": \"\",\r\n    \"Error parsing file: %1\": \"\",\r\n    \"Unable to load file: %1\": \"\",\r\n    \"Invalid date\": \"\",\r\n    // Common actions\r\n    \"Close\": \"\",\r\n    \"Minimize\": \"\"\r\n};\r\n//# sourceMappingURL=en.js.map","export { PercentChart } from \"./.internal/charts/percent/PercentChart\";\r\nexport { PercentSeries } from \"./.internal/charts/percent/PercentSeries\";\r\nexport { PieChart } from \"./.internal/charts/pie/PieChart\";\r\nexport { PieSeries } from \"./.internal/charts/pie/PieSeries\";\r\nexport { FunnelSeries } from \"./.internal/charts/funnel/FunnelSeries\";\r\nexport { FunnelSlice } from \"./.internal/charts/funnel/FunnelSlice\";\r\nexport { PictorialStackedSeries } from \"./.internal/charts/funnel/PictorialStackedSeries\";\r\nexport { PyramidSeries } from \"./.internal/charts/funnel/PyramidSeries\";\r\nexport { SlicedChart } from \"./.internal/charts/funnel/SlicedChart\";\r\nimport { PercentDefaultTheme } from \"./.internal/charts/percent/PercentDefaultTheme\";\r\nexport { PercentDefaultTheme as DefaultTheme };\r\n//# sourceMappingURL=percent.js.map","export { XYChart } from \"./.internal/charts/xy/XYChart\";\r\nexport { XYChartScrollbar } from \"./.internal/charts/xy/XYChartScrollbar\";\r\nexport { XYCursor } from \"./.internal/charts/xy/XYCursor\";\r\nexport { BaseColumnSeries } from \"./.internal/charts/xy/series/BaseColumnSeries\";\r\nexport { Axis } from \"./.internal/charts/xy/axes/Axis\";\r\nexport { CategoryAxis } from \"./.internal/charts/xy/axes/CategoryAxis\";\r\nexport { CategoryDateAxis } from \"./.internal/charts/xy/axes/CategoryDateAxis\";\r\nexport { DateAxis } from \"./.internal/charts/xy/axes/DateAxis\";\r\nexport { GaplessDateAxis } from \"./.internal/charts/xy/axes/GaplessDateAxis\";\r\nexport { DurationAxis } from \"./.internal/charts/xy/axes/DurationAxis\";\r\nexport { ValueAxis } from \"./.internal/charts/xy/axes/ValueAxis\";\r\nexport { AxisBullet } from \"./.internal/charts/xy/axes/AxisBullet\";\r\nexport { AxisLabel } from \"./.internal/charts/xy/axes/AxisLabel\";\r\nexport { AxisLabelRadial } from \"./.internal/charts/xy/axes/AxisLabelRadial\";\r\nexport { AxisTick } from \"./.internal/charts/xy/axes/AxisTick\";\r\nexport { Grid } from \"./.internal/charts/xy/axes/Grid\";\r\nexport { AxisRenderer } from \"./.internal/charts/xy/axes/AxisRenderer\";\r\nexport { AxisRendererX } from \"./.internal/charts/xy/axes/AxisRendererX\";\r\nexport { AxisRendererY } from \"./.internal/charts/xy/axes/AxisRendererY\";\r\nexport { XYSeries } from \"./.internal/charts/xy/series/XYSeries\";\r\nexport { Candlestick } from \"./.internal/charts/xy/series/Candlestick\";\r\nexport { CandlestickSeries } from \"./.internal/charts/xy/series/CandlestickSeries\";\r\nexport { OHLC } from \"./.internal/charts/xy/series/OHLC\";\r\nexport { OHLCSeries } from \"./.internal/charts/xy/series/OHLCSeries\";\r\nexport { ColumnSeries } from \"./.internal/charts/xy/series/ColumnSeries\";\r\nexport { LineSeries } from \"./.internal/charts/xy/series/LineSeries\";\r\nexport { SmoothedYLineSeries } from \"./.internal/charts/xy/series/SmoothedYLineSeries\";\r\nexport { SmoothedXLineSeries } from \"./.internal/charts/xy/series/SmoothedXLineSeries\";\r\nexport { SmoothedXYLineSeries } from \"./.internal/charts/xy/series/SmoothedXYLineSeries\";\r\nexport { StepLineSeries } from \"./.internal/charts/xy/series/StepLineSeries\";\r\nimport { XYChartDefaultTheme } from \"./.internal/charts/xy/XYChartDefaultTheme\";\r\nexport { XYChartDefaultTheme as DefaultTheme };\r\n//# sourceMappingURL=xy.js.map","export {default as path} from \"./path.js\";\n","const pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","import {path} from \"d3-path\";\nimport constant from \"./constant.js\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math.js\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = y32 * x10 - x32 * y10;\n  if (t * t < epsilon) return;\n  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00),\n            oc;\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi && (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10))) {\n          var ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n","import {path} from \"d3-path\";\nimport array from \"./array.js\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport line from \"./line.js\";\nimport {x as pointX, y as pointY} from \"./point.js\";\n\nexport default function(x0, y0, y1) {\n  var x1 = null,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  x0 = typeof x0 === \"function\" ? x0 : (x0 === undefined) ? pointX : constant(+x0);\n  y0 = typeof y0 === \"function\" ? y0 : (y0 === undefined) ? constant(0) : constant(+y0);\n  y1 = typeof y1 === \"function\" ? y1 : (y1 === undefined) ? pointY : constant(+y1);\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = (data = array(data)).length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n","import curveRadial, {curveRadialLinear} from \"./curve/radial.js\";\nimport area from \"./area.js\";\nimport {lineRadial} from \"./lineRadial.js\";\n\nexport default function() {\n  var a = area().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return lineRadial(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return lineRadial(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return lineRadial(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return lineRadial(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n}\n","export var slice = Array.prototype.slice;\n\nexport default function(x) {\n  return typeof x === \"object\" && \"length\" in x\n    ? x // Array, TypedArray, NodeList, array-like\n    : Array.from(x); // Map, Set, iterable, string, or anything else\n}\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nexport function Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // falls through\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // falls through\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new Basis(context);\n}\n","import noop from \"../noop.js\";\nimport {point} from \"./basis.js\";\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisClosed(context);\n}\n","import {point} from \"./basis.js\";\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // falls through\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisOpen(context);\n}\n","import pointRadial from \"../pointRadial.js\";\n\nclass Bump {\n  constructor(context, x) {\n    this._context = context;\n    this._x = x;\n  }\n  areaStart() {\n    this._line = 0;\n  }\n  areaEnd() {\n    this._line = NaN;\n  }\n  lineStart() {\n    this._point = 0;\n  }\n  lineEnd() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  }\n  point(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: {\n        this._point = 1;\n        if (this._line) this._context.lineTo(x, y);\n        else this._context.moveTo(x, y);\n        break;\n      }\n      case 1: this._point = 2; // falls through\n      default: {\n        if (this._x) this._context.bezierCurveTo(this._x0 = (this._x0 + x) / 2, this._y0, this._x0, y, x, y);\n        else this._context.bezierCurveTo(this._x0, this._y0 = (this._y0 + y) / 2, x, this._y0, x, y);\n        break;\n      }\n    }\n    this._x0 = x, this._y0 = y;\n  }\n}\n\nclass BumpRadial {\n  constructor(context) {\n    this._context = context;\n  }\n  lineStart() {\n    this._point = 0;\n  }\n  lineEnd() {}\n  point(x, y) {\n    x = +x, y = +y;\n    if (this._point++ === 0) {\n      this._x0 = x, this._y0 = y;\n    } else {\n      const p0 = pointRadial(this._x0, this._y0);\n      const p1 = pointRadial(this._x0, this._y0 = (this._y0 + y) / 2);\n      const p2 = pointRadial(x, this._y0);\n      const p3 = pointRadial(x, y);\n      this._context.moveTo(...p0);\n      this._context.bezierCurveTo(...p1, ...p2, ...p3);\n    }\n  }\n}\n\nexport function bumpX(context) {\n  return new Bump(context, true);\n}\n\nexport function bumpY(context) {\n  return new Bump(context, false);\n}\n\nexport function bumpRadial(context) {\n  return new BumpRadial(context);\n}\n","import {Basis} from \"./basis.js\";\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nexport default (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // falls through\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import noop from \"../noop.js\";\nimport {point} from \"./cardinal.js\";\n\nexport function CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {point} from \"./cardinal.js\";\n\nexport function CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // falls through\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {epsilon} from \"../math.js\";\nimport {Cardinal} from \"./cardinal.js\";\n\nexport function point(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // falls through\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalClosed} from \"./cardinalClosed.js\";\nimport noop from \"../noop.js\";\nimport {point} from \"./catmullRom.js\";\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalOpen} from \"./cardinalOpen.js\";\nimport {point} from \"./catmullRom.js\";\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // falls through\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // falls through\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","import noop from \"../noop.js\";\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nexport default function(context) {\n  return new LinearClosed(context);\n}\n","function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n","function Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nexport default function(context) {\n  return new Natural(context);\n}\n","import curveLinear from \"./linear.js\";\n\nexport var curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nexport default function curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // falls through\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(d) {\n  return d;\n}\n","export {default as arc} from \"./arc.js\";\nexport {default as area} from \"./area.js\";\nexport {default as line} from \"./line.js\";\nexport {default as pie} from \"./pie.js\";\nexport {default as areaRadial, default as radialArea} from \"./areaRadial.js\"; // Note: radialArea is deprecated!\nexport {default as lineRadial, default as radialLine} from \"./lineRadial.js\"; // Note: radialLine is deprecated!\nexport {default as pointRadial} from \"./pointRadial.js\";\nexport {link, linkHorizontal, linkVertical, linkRadial} from \"./link.js\";\n\nexport {default as symbol, symbolsStroke, symbolsFill, symbolsFill as symbols} from \"./symbol.js\";\nexport {default as symbolAsterisk} from \"./symbol/asterisk.js\";\nexport {default as symbolCircle} from \"./symbol/circle.js\";\nexport {default as symbolCross} from \"./symbol/cross.js\";\nexport {default as symbolDiamond} from \"./symbol/diamond.js\";\nexport {default as symbolDiamond2} from \"./symbol/diamond2.js\";\nexport {default as symbolPlus} from \"./symbol/plus.js\";\nexport {default as symbolSquare} from \"./symbol/square.js\";\nexport {default as symbolSquare2} from \"./symbol/square2.js\";\nexport {default as symbolStar} from \"./symbol/star.js\";\nexport {default as symbolTriangle} from \"./symbol/triangle.js\";\nexport {default as symbolTriangle2} from \"./symbol/triangle2.js\";\nexport {default as symbolWye} from \"./symbol/wye.js\";\nexport {default as symbolX} from \"./symbol/x.js\";\n\nexport {default as curveBasisClosed} from \"./curve/basisClosed.js\";\nexport {default as curveBasisOpen} from \"./curve/basisOpen.js\";\nexport {default as curveBasis} from \"./curve/basis.js\";\nexport {bumpX as curveBumpX, bumpY as curveBumpY} from \"./curve/bump.js\";\nexport {default as curveBundle} from \"./curve/bundle.js\";\nexport {default as curveCardinalClosed} from \"./curve/cardinalClosed.js\";\nexport {default as curveCardinalOpen} from \"./curve/cardinalOpen.js\";\nexport {default as curveCardinal} from \"./curve/cardinal.js\";\nexport {default as curveCatmullRomClosed} from \"./curve/catmullRomClosed.js\";\nexport {default as curveCatmullRomOpen} from \"./curve/catmullRomOpen.js\";\nexport {default as curveCatmullRom} from \"./curve/catmullRom.js\";\nexport {default as curveLinearClosed} from \"./curve/linearClosed.js\";\nexport {default as curveLinear} from \"./curve/linear.js\";\nexport {monotoneX as curveMonotoneX, monotoneY as curveMonotoneY} from \"./curve/monotone.js\";\nexport {default as curveNatural} from \"./curve/natural.js\";\nexport {default as curveStep, stepAfter as curveStepAfter, stepBefore as curveStepBefore} from \"./curve/step.js\";\n\nexport {default as stack} from \"./stack.js\";\nexport {default as stackOffsetExpand} from \"./offset/expand.js\";\nexport {default as stackOffsetDiverging} from \"./offset/diverging.js\";\nexport {default as stackOffsetNone} from \"./offset/none.js\";\nexport {default as stackOffsetSilhouette} from \"./offset/silhouette.js\";\nexport {default as stackOffsetWiggle} from \"./offset/wiggle.js\";\nexport {default as stackOrderAppearance} from \"./order/appearance.js\";\nexport {default as stackOrderAscending} from \"./order/ascending.js\";\nexport {default as stackOrderDescending} from \"./order/descending.js\";\nexport {default as stackOrderInsideOut} from \"./order/insideOut.js\";\nexport {default as stackOrderNone} from \"./order/none.js\";\nexport {default as stackOrderReverse} from \"./order/reverse.js\";\n","import {path} from \"d3-path\";\nimport array from \"./array.js\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport {x as pointX, y as pointY} from \"./point.js\";\n\nexport default function(x, y) {\n  var defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  x = typeof x === \"function\" ? x : (x === undefined) ? pointX : constant(x);\n  y = typeof y === \"function\" ? y : (y === undefined) ? pointY : constant(y);\n\n  function line(data) {\n    var i,\n        n = (data = array(data)).length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","import curveRadial, {curveRadialLinear} from \"./curve/radial.js\";\nimport line from \"./line.js\";\n\nexport function lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nexport default function() {\n  return lineRadial(line().curve(curveRadialLinear));\n}\n","import {path} from \"d3-path\";\nimport {slice} from \"./array.js\";\nimport constant from \"./constant.js\";\nimport {bumpX, bumpY, bumpRadial} from \"./curve/bump.js\";\nimport {x as pointX, y as pointY} from \"./point.js\";\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nexport function link(curve) {\n  let source = linkSource;\n  let target = linkTarget;\n  let x = pointX;\n  let y = pointY;\n  let context = null;\n  let output = null;\n\n  function link() {\n    let buffer;\n    const argv = slice.call(arguments);\n    const s = source.apply(this, argv);\n    const t = target.apply(this, argv);\n    if (context == null) output = curve(buffer = path());\n    output.lineStart();\n    argv[0] = s, output.point(+x.apply(this, argv), +y.apply(this, argv));\n    argv[0] = t, output.point(+x.apply(this, argv), +y.apply(this, argv));\n    output.lineEnd();\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), link) : x;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), link) : y;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), link) : context;\n  };\n\n  return link;\n}\n\nexport function linkHorizontal() {\n  return link(bumpX);\n}\n\nexport function linkVertical() {\n  return link(bumpY);\n}\n\nexport function linkRadial() {\n  const l = link(bumpRadial);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n","export const abs = Math.abs;\nexport const atan2 = Math.atan2;\nexport const cos = Math.cos;\nexport const max = Math.max;\nexport const min = Math.min;\nexport const sin = Math.sin;\nexport const sqrt = Math.sqrt;\n\nexport const epsilon = 1e-12;\nexport const pi = Math.PI;\nexport const halfPi = pi / 2;\nexport const tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","export default function() {}\n","export default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) > 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = 0, d[1] = dy;\n      }\n    }\n  }\n}\n","import none from \"./none.js\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n","import none from \"./none.js\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none(series, order);\n}\n","import none from \"./none.js\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n}\n","import none from \"./none.js\";\n\nexport default function(series) {\n  var peaks = series.map(peak);\n  return none(series).sort(function(a, b) { return peaks[a] - peaks[b]; });\n}\n\nfunction peak(series) {\n  var i = -1, j = 0, n = series.length, vi, vj = -Infinity;\n  while (++i < n) if ((vi = +series[i][1]) > vj) vj = vi, j = i;\n  return j;\n}\n","import none from \"./none.js\";\n\nexport default function(series) {\n  var sums = series.map(sum);\n  return none(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nexport function sum(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n","import ascending from \"./ascending.js\";\n\nexport default function(series) {\n  return ascending(series).reverse();\n}\n","import appearance from \"./appearance.js\";\nimport {sum} from \"./ascending.js\";\n\nexport default function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum),\n      order = appearance(series),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n}\n","export default function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n","import none from \"./none.js\";\n\nexport default function(series) {\n  return none(series).reverse();\n}\n","import array from \"./array.js\";\nimport constant from \"./constant.js\";\nimport descending from \"./descending.js\";\nimport identity from \"./identity.js\";\nimport {tau} from \"./math.js\";\n\nexport default function() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = (data = array(data)).length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","export default function(x, y) {\n  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n}\n","import array from \"./array.js\";\nimport constant from \"./constant.js\";\nimport offsetNone from \"./offset/none.js\";\nimport orderNone from \"./order/none.js\";\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nfunction stackSeries(key) {\n  const series = [];\n  series.key = key;\n  return series;\n}\n\nexport default function() {\n  var keys = constant([]),\n      order = orderNone,\n      offset = offsetNone,\n      value = stackValue;\n\n  function stack(data) {\n    var sz = Array.from(keys.apply(this, arguments), stackSeries),\n        i, n = sz.length, j = -1,\n        oz;\n\n    for (const d of data) {\n      for (i = 0, ++j; i < n; ++i) {\n        (sz[i][j] = [0, +value(d, sz[i].key, j, data)]).data = d;\n      }\n    }\n\n    for (i = 0, oz = array(order(sz)); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(Array.from(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? orderNone : typeof _ === \"function\" ? _ : constant(Array.from(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? offsetNone : _, stack) : offset;\n  };\n\n  return stack;\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant.js\";\nimport asterisk from \"./symbol/asterisk.js\";\nimport circle from \"./symbol/circle.js\";\nimport cross from \"./symbol/cross.js\";\nimport diamond from \"./symbol/diamond.js\";\nimport diamond2 from \"./symbol/diamond2.js\";\nimport plus from \"./symbol/plus.js\";\nimport square from \"./symbol/square.js\";\nimport square2 from \"./symbol/square2.js\";\nimport star from \"./symbol/star.js\";\nimport triangle from \"./symbol/triangle.js\";\nimport triangle2 from \"./symbol/triangle2.js\";\nimport wye from \"./symbol/wye.js\";\nimport x from \"./symbol/x.js\";\n\n// These symbols are designed to be filled.\nexport const symbolsFill = [\n  circle,\n  cross,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\n// These symbols are designed to be stroked (with a width of 1.5px and round caps).\nexport const symbolsStroke = [\n  circle,\n  plus,\n  x,\n  triangle2,\n  asterisk,\n  square2,\n  diamond2\n];\n\nexport default function Symbol(type, size) {\n  let context = null;\n\n  type = typeof type === \"function\" ? type : constant(type || circle);\n  size = typeof size === \"function\" ? size : constant(size === undefined ? 64 : +size);\n\n  function symbol() {\n    let buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n","import {min, sqrt} from \"../math.js\";\n\nconst sqrt3 = sqrt(3);\n\nexport default {\n  draw(context, size) {\n    const r = sqrt(size + min(size / 28, 0.75)) * 0.59436;\n    const t = r / 2;\n    const u = t * sqrt3;\n    context.moveTo(0, r);\n    context.lineTo(0, -r);\n    context.moveTo(-u, -t);\n    context.lineTo(u, t);\n    context.moveTo(-u, t);\n    context.lineTo(u, -t);\n  }\n};\n","import {pi, sqrt, tau} from \"../math.js\";\n\nexport default {\n  draw(context, size) {\n    const r = sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n","import {sqrt} from \"../math.js\";\n\nexport default {\n  draw(context, size) {\n    const r = sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n","import {sqrt} from \"../math.js\";\n\nconst tan30 = sqrt(1 / 3);\nconst tan30_2 = tan30 * 2;\n\nexport default {\n  draw(context, size) {\n    const y = sqrt(size / tan30_2);\n    const x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n","import {sqrt} from \"../math.js\";\n\nexport default {\n  draw(context, size) {\n    const r = sqrt(size) * 0.62625;\n    context.moveTo(0, -r);\n    context.lineTo(r, 0);\n    context.lineTo(0, r);\n    context.lineTo(-r, 0);\n    context.closePath();\n  }\n};\n","import {min, sqrt} from \"../math.js\";\n\nexport default {\n  draw(context, size) {\n    const r = sqrt(size - min(size / 7, 2)) * 0.87559;\n    context.moveTo(-r, 0);\n    context.lineTo(r, 0);\n    context.moveTo(0, r);\n    context.lineTo(0, -r);\n  }\n};\n","import {sqrt} from \"../math.js\";\n\nexport default {\n  draw(context, size) {\n    const w = sqrt(size);\n    const x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n","import {sqrt} from \"../math.js\";\n\nexport default {\n  draw(context, size) {\n    const r = sqrt(size) * 0.4431;\n    context.moveTo(r, r);\n    context.lineTo(r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, r);\n    context.closePath();\n  }\n};\n","import {sin, cos, sqrt, pi, tau} from \"../math.js\";\n\nconst ka = 0.89081309152928522810;\nconst kr = sin(pi / 10) / sin(7 * pi / 10);\nconst kx = sin(tau / 10) * kr;\nconst ky = -cos(tau / 10) * kr;\n\nexport default {\n  draw(context, size) {\n    const r = sqrt(size * ka);\n    const x = kx * r;\n    const y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (let i = 1; i < 5; ++i) {\n      const a = tau * i / 5;\n      const c = cos(a);\n      const s = sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n","import {sqrt} from \"../math.js\";\n\nconst sqrt3 = sqrt(3);\n\nexport default {\n  draw(context, size) {\n    const y = -sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n","import {sqrt} from \"../math.js\";\n\nconst sqrt3 = sqrt(3);\n\nexport default {\n  draw(context, size) {\n    const s = sqrt(size) * 0.6824;\n    const t = s  / 2;\n    const u = (s * sqrt3) / 2; // cos(Math.PI / 6)\n    context.moveTo(0, -s);\n    context.lineTo(u, t);\n    context.lineTo(-u, t);\n    context.closePath();\n  }\n};\n","import {sqrt} from \"../math.js\";\n\nconst c = -0.5;\nconst s = sqrt(3) / 2;\nconst k = 1 / sqrt(12);\nconst a = (k / 2 + 1) * 3;\n\nexport default {\n  draw(context, size) {\n    const r = sqrt(size / a);\n    const x0 = r / 2, y0 = r * k;\n    const x1 = x0, y1 = r * k + r;\n    const x2 = -x1, y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n","import {min, sqrt} from \"../math.js\";\n\nexport default {\n  draw(context, size) {\n    const r = sqrt(size - min(size / 6, 1.7)) * 0.6189;\n    context.moveTo(-r, -r);\n    context.lineTo(r, r);\n    context.moveTo(-r, r);\n    context.lineTo(r, -r);\n  }\n};\n","import { Injectable, NgModule, Pipe } from '@angular/core';\r\n\r\nimport * as ɵngcc0 from '@angular/core';\r\nclass Ng2SearchPipe {\r\n    /**\r\n     * @param {?} items object from array\r\n     * @param {?} term term's search\r\n     * @return {?}\r\n     */\r\n    transform(items, term) {\r\n        if (!term || !items)\r\n            return items;\r\n        return Ng2SearchPipe.filter(items, term);\r\n    }\r\n    /**\r\n     *\r\n     * @param {?} items List of items to filter\r\n     * @param {?} term  a string term to compare with every property of the list\r\n     *\r\n     * @return {?}\r\n     */\r\n    static filter(items, term) {\r\n        const /** @type {?} */ toCompare = term.toLowerCase();\r\n        /**\r\n         * @param {?} item\r\n         * @param {?} term\r\n         * @return {?}\r\n         */\r\n        function checkInside(item, term) {\r\n            for (let /** @type {?} */ property in item) {\r\n                if (item[property] === null || item[property] == undefined) {\r\n                    continue;\r\n                }\r\n                if (typeof item[property] === 'object') {\r\n                    if (checkInside(item[property], term)) {\r\n                        return true;\r\n                    }\r\n                }\r\n                if (item[property].toString().toLowerCase().includes(toCompare)) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n        return items.filter(function (item) {\r\n            return checkInside(item, term);\r\n        });\r\n    }\r\n}\r\nNg2SearchPipe.ɵfac = function Ng2SearchPipe_Factory(t) { return new (t || Ng2SearchPipe)(); };\r\nNg2SearchPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: \"filter\", type: Ng2SearchPipe, pure: false });\r\nNg2SearchPipe.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: Ng2SearchPipe, factory: Ng2SearchPipe.ɵfac });\r\n/**\r\n * @nocollapse\r\n */\r\nNg2SearchPipe.ctorParameters = () => [];\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Ng2SearchPipe, [{\r\n        type: Pipe,\r\n        args: [{\r\n                name: 'filter',\r\n                pure: false\r\n            }]\r\n    }, {\r\n        type: Injectable\r\n    }], null, null); })();\r\n\r\nclass Ng2SearchPipeModule {\r\n}\r\nNg2SearchPipeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: Ng2SearchPipeModule });\r\nNg2SearchPipeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function Ng2SearchPipeModule_Factory(t) { return new (t || Ng2SearchPipeModule)(); } });\r\n/**\r\n * @nocollapse\r\n */\r\nNg2SearchPipeModule.ctorParameters = () => [];\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(Ng2SearchPipeModule, { declarations: [Ng2SearchPipe], exports: [Ng2SearchPipe] }); })();\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Ng2SearchPipeModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                declarations: [Ng2SearchPipe],\r\n                exports: [Ng2SearchPipe]\r\n            }]\r\n    }], null, null); })();\r\n\r\n/**\r\n * Generated bundle index. Do not edit.\r\n */\r\n\r\nexport { Ng2SearchPipeModule, Ng2SearchPipe };\r\n\r\n//# sourceMappingURL=ng2-search-filter.js.map","var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\r\n\r\nvar TAU = Math.PI * 2;\r\n\r\nvar mapToEllipse = function mapToEllipse(_ref, rx, ry, cosphi, sinphi, centerx, centery) {\r\n  var x = _ref.x,\r\n      y = _ref.y;\r\n\r\n  x *= rx;\r\n  y *= ry;\r\n\r\n  var xp = cosphi * x - sinphi * y;\r\n  var yp = sinphi * x + cosphi * y;\r\n\r\n  return {\r\n    x: xp + centerx,\r\n    y: yp + centery\r\n  };\r\n};\r\n\r\nvar approxUnitArc = function approxUnitArc(ang1, ang2) {\r\n  // If 90 degree circular arc, use a constant\r\n  // as derived from http://spencermortensen.com/articles/bezier-circle\r\n  var a = ang2 === 1.5707963267948966 ? 0.551915024494 : ang2 === -1.5707963267948966 ? -0.551915024494 : 4 / 3 * Math.tan(ang2 / 4);\r\n\r\n  var x1 = Math.cos(ang1);\r\n  var y1 = Math.sin(ang1);\r\n  var x2 = Math.cos(ang1 + ang2);\r\n  var y2 = Math.sin(ang1 + ang2);\r\n\r\n  return [{\r\n    x: x1 - y1 * a,\r\n    y: y1 + x1 * a\r\n  }, {\r\n    x: x2 + y2 * a,\r\n    y: y2 - x2 * a\r\n  }, {\r\n    x: x2,\r\n    y: y2\r\n  }];\r\n};\r\n\r\nvar vectorAngle = function vectorAngle(ux, uy, vx, vy) {\r\n  var sign = ux * vy - uy * vx < 0 ? -1 : 1;\r\n\r\n  var dot = ux * vx + uy * vy;\r\n\r\n  if (dot > 1) {\r\n    dot = 1;\r\n  }\r\n\r\n  if (dot < -1) {\r\n    dot = -1;\r\n  }\r\n\r\n  return sign * Math.acos(dot);\r\n};\r\n\r\nvar getArcCenter = function getArcCenter(px, py, cx, cy, rx, ry, largeArcFlag, sweepFlag, sinphi, cosphi, pxp, pyp) {\r\n  var rxsq = Math.pow(rx, 2);\r\n  var rysq = Math.pow(ry, 2);\r\n  var pxpsq = Math.pow(pxp, 2);\r\n  var pypsq = Math.pow(pyp, 2);\r\n\r\n  var radicant = rxsq * rysq - rxsq * pypsq - rysq * pxpsq;\r\n\r\n  if (radicant < 0) {\r\n    radicant = 0;\r\n  }\r\n\r\n  radicant /= rxsq * pypsq + rysq * pxpsq;\r\n  radicant = Math.sqrt(radicant) * (largeArcFlag === sweepFlag ? -1 : 1);\r\n\r\n  var centerxp = radicant * rx / ry * pyp;\r\n  var centeryp = radicant * -ry / rx * pxp;\r\n\r\n  var centerx = cosphi * centerxp - sinphi * centeryp + (px + cx) / 2;\r\n  var centery = sinphi * centerxp + cosphi * centeryp + (py + cy) / 2;\r\n\r\n  var vx1 = (pxp - centerxp) / rx;\r\n  var vy1 = (pyp - centeryp) / ry;\r\n  var vx2 = (-pxp - centerxp) / rx;\r\n  var vy2 = (-pyp - centeryp) / ry;\r\n\r\n  var ang1 = vectorAngle(1, 0, vx1, vy1);\r\n  var ang2 = vectorAngle(vx1, vy1, vx2, vy2);\r\n\r\n  if (sweepFlag === 0 && ang2 > 0) {\r\n    ang2 -= TAU;\r\n  }\r\n\r\n  if (sweepFlag === 1 && ang2 < 0) {\r\n    ang2 += TAU;\r\n  }\r\n\r\n  return [centerx, centery, ang1, ang2];\r\n};\r\n\r\nvar arcToBezier = function arcToBezier(_ref2) {\r\n  var px = _ref2.px,\r\n      py = _ref2.py,\r\n      cx = _ref2.cx,\r\n      cy = _ref2.cy,\r\n      rx = _ref2.rx,\r\n      ry = _ref2.ry,\r\n      _ref2$xAxisRotation = _ref2.xAxisRotation,\r\n      xAxisRotation = _ref2$xAxisRotation === undefined ? 0 : _ref2$xAxisRotation,\r\n      _ref2$largeArcFlag = _ref2.largeArcFlag,\r\n      largeArcFlag = _ref2$largeArcFlag === undefined ? 0 : _ref2$largeArcFlag,\r\n      _ref2$sweepFlag = _ref2.sweepFlag,\r\n      sweepFlag = _ref2$sweepFlag === undefined ? 0 : _ref2$sweepFlag;\r\n\r\n  var curves = [];\r\n\r\n  if (rx === 0 || ry === 0) {\r\n    return [];\r\n  }\r\n\r\n  var sinphi = Math.sin(xAxisRotation * TAU / 360);\r\n  var cosphi = Math.cos(xAxisRotation * TAU / 360);\r\n\r\n  var pxp = cosphi * (px - cx) / 2 + sinphi * (py - cy) / 2;\r\n  var pyp = -sinphi * (px - cx) / 2 + cosphi * (py - cy) / 2;\r\n\r\n  if (pxp === 0 && pyp === 0) {\r\n    return [];\r\n  }\r\n\r\n  rx = Math.abs(rx);\r\n  ry = Math.abs(ry);\r\n\r\n  var lambda = Math.pow(pxp, 2) / Math.pow(rx, 2) + Math.pow(pyp, 2) / Math.pow(ry, 2);\r\n\r\n  if (lambda > 1) {\r\n    rx *= Math.sqrt(lambda);\r\n    ry *= Math.sqrt(lambda);\r\n  }\r\n\r\n  var _getArcCenter = getArcCenter(px, py, cx, cy, rx, ry, largeArcFlag, sweepFlag, sinphi, cosphi, pxp, pyp),\r\n      _getArcCenter2 = _slicedToArray(_getArcCenter, 4),\r\n      centerx = _getArcCenter2[0],\r\n      centery = _getArcCenter2[1],\r\n      ang1 = _getArcCenter2[2],\r\n      ang2 = _getArcCenter2[3];\r\n\r\n  // If 'ang2' == 90.0000000001, then `ratio` will evaluate to\r\n  // 1.0000000001. This causes `segments` to be greater than one, which is an\r\n  // unecessary split, and adds extra points to the bezier curve. To alleviate\r\n  // this issue, we round to 1.0 when the ratio is close to 1.0.\r\n\r\n\r\n  var ratio = Math.abs(ang2) / (TAU / 4);\r\n  if (Math.abs(1.0 - ratio) < 0.0000001) {\r\n    ratio = 1.0;\r\n  }\r\n\r\n  var segments = Math.max(Math.ceil(ratio), 1);\r\n\r\n  ang2 /= segments;\r\n\r\n  for (var i = 0; i < segments; i++) {\r\n    curves.push(approxUnitArc(ang1, ang2));\r\n    ang1 += ang2;\r\n  }\r\n\r\n  return curves.map(function (curve) {\r\n    var _mapToEllipse = mapToEllipse(curve[0], rx, ry, cosphi, sinphi, centerx, centery),\r\n        x1 = _mapToEllipse.x,\r\n        y1 = _mapToEllipse.y;\r\n\r\n    var _mapToEllipse2 = mapToEllipse(curve[1], rx, ry, cosphi, sinphi, centerx, centery),\r\n        x2 = _mapToEllipse2.x,\r\n        y2 = _mapToEllipse2.y;\r\n\r\n    var _mapToEllipse3 = mapToEllipse(curve[2], rx, ry, cosphi, sinphi, centerx, centery),\r\n        x = _mapToEllipse3.x,\r\n        y = _mapToEllipse3.y;\r\n\r\n    return { x1: x1, y1: y1, x2: x2, y2: y2, x: x, y: y };\r\n  });\r\n};\r\n\r\nexport default arcToBezier;","/*!\r\n* sweetalert2 v11.4.23\r\n* Released under the MIT License.\r\n*/\r\n(function (global, factory) {\r\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\r\n  typeof define === 'function' && define.amd ? define(factory) :\r\n  (global = global || self, global.Sweetalert2 = factory());\r\n}(this, function () { 'use strict';\r\n\r\n  const consolePrefix = 'SweetAlert2:';\r\n  /**\r\n   * Filter the unique values into a new array\r\n   * @param arr\r\n   */\r\n\r\n  const uniqueArray = arr => {\r\n    const result = [];\r\n\r\n    for (let i = 0; i < arr.length; i++) {\r\n      if (result.indexOf(arr[i]) === -1) {\r\n        result.push(arr[i]);\r\n      }\r\n    }\r\n\r\n    return result;\r\n  };\r\n  /**\r\n   * Capitalize the first letter of a string\r\n   * @param {string} str\r\n   * @returns {string}\r\n   */\r\n\r\n  const capitalizeFirstLetter = str => str.charAt(0).toUpperCase() + str.slice(1);\r\n  /**\r\n   * @param {NodeList | HTMLCollection | NamedNodeMap | DOMTokenList} nodeList\r\n   * @returns {array}\r\n   */\r\n\r\n  const toArray = nodeList => Array.prototype.slice.call(nodeList);\r\n  /**\r\n   * Standardize console warnings\r\n   * @param {string | array} message\r\n   */\r\n\r\n  const warn = message => {\r\n    console.warn(\"\".concat(consolePrefix, \" \").concat(typeof message === 'object' ? message.join(' ') : message));\r\n  };\r\n  /**\r\n   * Standardize console errors\r\n   * @param {string} message\r\n   */\r\n\r\n  const error = message => {\r\n    console.error(\"\".concat(consolePrefix, \" \").concat(message));\r\n  };\r\n  /**\r\n   * Private global state for `warnOnce`\r\n   * @type {Array}\r\n   * @private\r\n   */\r\n\r\n  const previousWarnOnceMessages = [];\r\n  /**\r\n   * Show a console warning, but only if it hasn't already been shown\r\n   * @param {string} message\r\n   */\r\n\r\n  const warnOnce = message => {\r\n    if (!previousWarnOnceMessages.includes(message)) {\r\n      previousWarnOnceMessages.push(message);\r\n      warn(message);\r\n    }\r\n  };\r\n  /**\r\n   * Show a one-time console warning about deprecated params/methods\r\n   */\r\n\r\n  const warnAboutDeprecation = (deprecatedParam, useInstead) => {\r\n    warnOnce(\"\\\"\".concat(deprecatedParam, \"\\\" is deprecated and will be removed in the next major release. Please use \\\"\").concat(useInstead, \"\\\" instead.\"));\r\n  };\r\n  /**\r\n   * If `arg` is a function, call it (with no arguments or context) and return the result.\r\n   * Otherwise, just pass the value through\r\n   * @param arg\r\n   */\r\n\r\n  const callIfFunction = arg => typeof arg === 'function' ? arg() : arg;\r\n  const hasToPromiseFn = arg => arg && typeof arg.toPromise === 'function';\r\n  const asPromise = arg => hasToPromiseFn(arg) ? arg.toPromise() : Promise.resolve(arg);\r\n  const isPromise = arg => arg && Promise.resolve(arg) === arg;\r\n  const getRandomElement = arr => arr[Math.floor(Math.random() * arr.length)];\r\n\r\n  const defaultParams = {\r\n    title: '',\r\n    titleText: '',\r\n    text: '',\r\n    html: '',\r\n    footer: '',\r\n    icon: undefined,\r\n    iconColor: undefined,\r\n    iconHtml: undefined,\r\n    template: undefined,\r\n    toast: false,\r\n    showClass: {\r\n      popup: 'swal2-show',\r\n      backdrop: 'swal2-backdrop-show',\r\n      icon: 'swal2-icon-show'\r\n    },\r\n    hideClass: {\r\n      popup: 'swal2-hide',\r\n      backdrop: 'swal2-backdrop-hide',\r\n      icon: 'swal2-icon-hide'\r\n    },\r\n    customClass: {},\r\n    target: 'body',\r\n    color: undefined,\r\n    backdrop: true,\r\n    heightAuto: true,\r\n    allowOutsideClick: true,\r\n    allowEscapeKey: true,\r\n    allowEnterKey: true,\r\n    stopKeydownPropagation: true,\r\n    keydownListenerCapture: false,\r\n    showConfirmButton: true,\r\n    showDenyButton: false,\r\n    showCancelButton: false,\r\n    preConfirm: undefined,\r\n    preDeny: undefined,\r\n    confirmButtonText: 'OK',\r\n    confirmButtonAriaLabel: '',\r\n    confirmButtonColor: undefined,\r\n    denyButtonText: 'No',\r\n    denyButtonAriaLabel: '',\r\n    denyButtonColor: undefined,\r\n    cancelButtonText: 'Cancel',\r\n    cancelButtonAriaLabel: '',\r\n    cancelButtonColor: undefined,\r\n    buttonsStyling: true,\r\n    reverseButtons: false,\r\n    focusConfirm: true,\r\n    focusDeny: false,\r\n    focusCancel: false,\r\n    returnFocus: true,\r\n    showCloseButton: false,\r\n    closeButtonHtml: '&times;',\r\n    closeButtonAriaLabel: 'Close this dialog',\r\n    loaderHtml: '',\r\n    showLoaderOnConfirm: false,\r\n    showLoaderOnDeny: false,\r\n    imageUrl: undefined,\r\n    imageWidth: undefined,\r\n    imageHeight: undefined,\r\n    imageAlt: '',\r\n    timer: undefined,\r\n    timerProgressBar: false,\r\n    width: undefined,\r\n    padding: undefined,\r\n    background: undefined,\r\n    input: undefined,\r\n    inputPlaceholder: '',\r\n    inputLabel: '',\r\n    inputValue: '',\r\n    inputOptions: {},\r\n    inputAutoTrim: true,\r\n    inputAttributes: {},\r\n    inputValidator: undefined,\r\n    returnInputValueOnDeny: false,\r\n    validationMessage: undefined,\r\n    grow: false,\r\n    position: 'center',\r\n    progressSteps: [],\r\n    currentProgressStep: undefined,\r\n    progressStepsDistance: undefined,\r\n    willOpen: undefined,\r\n    didOpen: undefined,\r\n    didRender: undefined,\r\n    willClose: undefined,\r\n    didClose: undefined,\r\n    didDestroy: undefined,\r\n    scrollbarPadding: true\r\n  };\r\n  const updatableParams = ['allowEscapeKey', 'allowOutsideClick', 'background', 'buttonsStyling', 'cancelButtonAriaLabel', 'cancelButtonColor', 'cancelButtonText', 'closeButtonAriaLabel', 'closeButtonHtml', 'color', 'confirmButtonAriaLabel', 'confirmButtonColor', 'confirmButtonText', 'currentProgressStep', 'customClass', 'denyButtonAriaLabel', 'denyButtonColor', 'denyButtonText', 'didClose', 'didDestroy', 'footer', 'hideClass', 'html', 'icon', 'iconColor', 'iconHtml', 'imageAlt', 'imageHeight', 'imageUrl', 'imageWidth', 'preConfirm', 'preDeny', 'progressSteps', 'returnFocus', 'reverseButtons', 'showCancelButton', 'showCloseButton', 'showConfirmButton', 'showDenyButton', 'text', 'title', 'titleText', 'willClose'];\r\n  const deprecatedParams = {};\r\n  const toastIncompatibleParams = ['allowOutsideClick', 'allowEnterKey', 'backdrop', 'focusConfirm', 'focusDeny', 'focusCancel', 'returnFocus', 'heightAuto', 'keydownListenerCapture'];\r\n  /**\r\n   * Is valid parameter\r\n   * @param {string} paramName\r\n   */\r\n\r\n  const isValidParameter = paramName => {\r\n    return Object.prototype.hasOwnProperty.call(defaultParams, paramName);\r\n  };\r\n  /**\r\n   * Is valid parameter for Swal.update() method\r\n   * @param {string} paramName\r\n   */\r\n\r\n  const isUpdatableParameter = paramName => {\r\n    return updatableParams.indexOf(paramName) !== -1;\r\n  };\r\n  /**\r\n   * Is deprecated parameter\r\n   * @param {string} paramName\r\n   */\r\n\r\n  const isDeprecatedParameter = paramName => {\r\n    return deprecatedParams[paramName];\r\n  };\r\n\r\n  const checkIfParamIsValid = param => {\r\n    if (!isValidParameter(param)) {\r\n      warn(\"Unknown parameter \\\"\".concat(param, \"\\\"\"));\r\n    }\r\n  };\r\n\r\n  const checkIfToastParamIsValid = param => {\r\n    if (toastIncompatibleParams.includes(param)) {\r\n      warn(\"The parameter \\\"\".concat(param, \"\\\" is incompatible with toasts\"));\r\n    }\r\n  };\r\n\r\n  const checkIfParamIsDeprecated = param => {\r\n    if (isDeprecatedParameter(param)) {\r\n      warnAboutDeprecation(param, isDeprecatedParameter(param));\r\n    }\r\n  };\r\n  /**\r\n   * Show relevant warnings for given params\r\n   *\r\n   * @param params\r\n   */\r\n\r\n\r\n  const showWarningsForParams = params => {\r\n    if (!params.backdrop && params.allowOutsideClick) {\r\n      warn('\"allowOutsideClick\" parameter requires `backdrop` parameter to be set to `true`');\r\n    }\r\n\r\n    for (const param in params) {\r\n      checkIfParamIsValid(param);\r\n\r\n      if (params.toast) {\r\n        checkIfToastParamIsValid(param);\r\n      }\r\n\r\n      checkIfParamIsDeprecated(param);\r\n    }\r\n  };\r\n\r\n  const swalPrefix = 'swal2-';\r\n  /**\r\n   * @param {string[]} items\r\n   * @returns {object}\r\n   */\r\n\r\n  const prefix = items => {\r\n    const result = {};\r\n\r\n    for (const i in items) {\r\n      result[items[i]] = swalPrefix + items[i];\r\n    }\r\n\r\n    return result;\r\n  };\r\n  const swalClasses = prefix(['container', 'shown', 'height-auto', 'iosfix', 'popup', 'modal', 'no-backdrop', 'no-transition', 'toast', 'toast-shown', 'show', 'hide', 'close', 'title', 'html-container', 'actions', 'confirm', 'deny', 'cancel', 'default-outline', 'footer', 'icon', 'icon-content', 'image', 'input', 'file', 'range', 'select', 'radio', 'checkbox', 'label', 'textarea', 'inputerror', 'input-label', 'validation-message', 'progress-steps', 'active-progress-step', 'progress-step', 'progress-step-line', 'loader', 'loading', 'styled', 'top', 'top-start', 'top-end', 'top-left', 'top-right', 'center', 'center-start', 'center-end', 'center-left', 'center-right', 'bottom', 'bottom-start', 'bottom-end', 'bottom-left', 'bottom-right', 'grow-row', 'grow-column', 'grow-fullscreen', 'rtl', 'timer-progress-bar', 'timer-progress-bar-container', 'scrollbar-measure', 'icon-success', 'icon-warning', 'icon-info', 'icon-question', 'icon-error', 'no-war']);\r\n  const iconTypes = prefix(['success', 'warning', 'info', 'question', 'error']);\r\n\r\n  /**\r\n   * Gets the popup container which contains the backdrop and the popup itself.\r\n   *\r\n   * @returns {HTMLElement | null}\r\n   */\r\n\r\n  const getContainer = () => document.body.querySelector(\".\".concat(swalClasses.container));\r\n  /**\r\n   * @param {string} selectorString\r\n   * @returns {HTMLElement | null}\r\n   */\r\n\r\n  const elementBySelector = selectorString => {\r\n    const container = getContainer();\r\n    return container ? container.querySelector(selectorString) : null;\r\n  };\r\n  /**\r\n   * @param {string} className\r\n   * @returns {HTMLElement | null}\r\n   */\r\n\r\n  const elementByClass = className => {\r\n    return elementBySelector(\".\".concat(className));\r\n  };\r\n  /**\r\n   * @returns {HTMLElement | null}\r\n   */\r\n\r\n\r\n  const getPopup = () => elementByClass(swalClasses.popup);\r\n  /**\r\n   * @returns {HTMLElement | null}\r\n   */\r\n\r\n  const getIcon = () => elementByClass(swalClasses.icon);\r\n  /**\r\n   * @returns {HTMLElement | null}\r\n   */\r\n\r\n  const getTitle = () => elementByClass(swalClasses.title);\r\n  /**\r\n   * @returns {HTMLElement | null}\r\n   */\r\n\r\n  const getHtmlContainer = () => elementByClass(swalClasses['html-container']);\r\n  /**\r\n   * @returns {HTMLElement | null}\r\n   */\r\n\r\n  const getImage = () => elementByClass(swalClasses.image);\r\n  /**\r\n   * @returns {HTMLElement | null}\r\n   */\r\n\r\n  const getProgressSteps = () => elementByClass(swalClasses['progress-steps']);\r\n  /**\r\n   * @returns {HTMLElement | null}\r\n   */\r\n\r\n  const getValidationMessage = () => elementByClass(swalClasses['validation-message']);\r\n  /**\r\n   * @returns {HTMLElement | null}\r\n   */\r\n\r\n  const getConfirmButton = () => elementBySelector(\".\".concat(swalClasses.actions, \" .\").concat(swalClasses.confirm));\r\n  /**\r\n   * @returns {HTMLElement | null}\r\n   */\r\n\r\n  const getDenyButton = () => elementBySelector(\".\".concat(swalClasses.actions, \" .\").concat(swalClasses.deny));\r\n  /**\r\n   * @returns {HTMLElement | null}\r\n   */\r\n\r\n  const getInputLabel = () => elementByClass(swalClasses['input-label']);\r\n  /**\r\n   * @returns {HTMLElement | null}\r\n   */\r\n\r\n  const getLoader = () => elementBySelector(\".\".concat(swalClasses.loader));\r\n  /**\r\n   * @returns {HTMLElement | null}\r\n   */\r\n\r\n  const getCancelButton = () => elementBySelector(\".\".concat(swalClasses.actions, \" .\").concat(swalClasses.cancel));\r\n  /**\r\n   * @returns {HTMLElement | null}\r\n   */\r\n\r\n  const getActions = () => elementByClass(swalClasses.actions);\r\n  /**\r\n   * @returns {HTMLElement | null}\r\n   */\r\n\r\n  const getFooter = () => elementByClass(swalClasses.footer);\r\n  /**\r\n   * @returns {HTMLElement | null}\r\n   */\r\n\r\n  const getTimerProgressBar = () => elementByClass(swalClasses['timer-progress-bar']);\r\n  /**\r\n   * @returns {HTMLElement | null}\r\n   */\r\n\r\n  const getCloseButton = () => elementByClass(swalClasses.close); // https://github.com/jkup/focusable/blob/master/index.js\r\n\r\n  const focusable = \"\\n  a[href],\\n  area[href],\\n  input:not([disabled]),\\n  select:not([disabled]),\\n  textarea:not([disabled]),\\n  button:not([disabled]),\\n  iframe,\\n  object,\\n  embed,\\n  [tabindex=\\\"0\\\"],\\n  [contenteditable],\\n  audio[controls],\\n  video[controls],\\n  summary\\n\";\r\n  /**\r\n   * @returns {HTMLElement[]}\r\n   */\r\n\r\n  const getFocusableElements = () => {\r\n    const focusableElementsWithTabindex = toArray(getPopup().querySelectorAll('[tabindex]:not([tabindex=\"-1\"]):not([tabindex=\"0\"])')) // sort according to tabindex\r\n    .sort((a, b) => {\r\n      const tabindexA = parseInt(a.getAttribute('tabindex'));\r\n      const tabindexB = parseInt(b.getAttribute('tabindex'));\r\n\r\n      if (tabindexA > tabindexB) {\r\n        return 1;\r\n      } else if (tabindexA < tabindexB) {\r\n        return -1;\r\n      }\r\n\r\n      return 0;\r\n    });\r\n    const otherFocusableElements = toArray(getPopup().querySelectorAll(focusable)).filter(el => el.getAttribute('tabindex') !== '-1');\r\n    return uniqueArray(focusableElementsWithTabindex.concat(otherFocusableElements)).filter(el => isVisible(el));\r\n  };\r\n  /**\r\n   * @returns {boolean}\r\n   */\r\n\r\n  const isModal = () => {\r\n    return hasClass(document.body, swalClasses.shown) && !hasClass(document.body, swalClasses['toast-shown']) && !hasClass(document.body, swalClasses['no-backdrop']);\r\n  };\r\n  /**\r\n   * @returns {boolean}\r\n   */\r\n\r\n  const isToast = () => {\r\n    return getPopup() && hasClass(getPopup(), swalClasses.toast);\r\n  };\r\n  /**\r\n   * @returns {boolean}\r\n   */\r\n\r\n  const isLoading = () => {\r\n    return getPopup().hasAttribute('data-loading');\r\n  };\r\n\r\n  const states = {\r\n    previousBodyPadding: null\r\n  };\r\n  /**\r\n   * Securely set innerHTML of an element\r\n   * https://github.com/sweetalert2/sweetalert2/issues/1926\r\n   *\r\n   * @param {HTMLElement} elem\r\n   * @param {string} html\r\n   */\r\n\r\n  const setInnerHtml = (elem, html) => {\r\n    elem.textContent = '';\r\n\r\n    if (html) {\r\n      const parser = new DOMParser();\r\n      const parsed = parser.parseFromString(html, \"text/html\");\r\n      toArray(parsed.querySelector('head').childNodes).forEach(child => {\r\n        elem.appendChild(child);\r\n      });\r\n      toArray(parsed.querySelector('body').childNodes).forEach(child => {\r\n        elem.appendChild(child);\r\n      });\r\n    }\r\n  };\r\n  /**\r\n   * @param {HTMLElement} elem\r\n   * @param {string} className\r\n   * @returns {boolean}\r\n   */\r\n\r\n  const hasClass = (elem, className) => {\r\n    if (!className) {\r\n      return false;\r\n    }\r\n\r\n    const classList = className.split(/\\s+/);\r\n\r\n    for (let i = 0; i < classList.length; i++) {\r\n      if (!elem.classList.contains(classList[i])) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  };\r\n  /**\r\n   * @param {HTMLElement} elem\r\n   * @param {SweetAlertOptions} params\r\n   */\r\n\r\n  const removeCustomClasses = (elem, params) => {\r\n    toArray(elem.classList).forEach(className => {\r\n      if (!Object.values(swalClasses).includes(className) && !Object.values(iconTypes).includes(className) && !Object.values(params.showClass).includes(className)) {\r\n        elem.classList.remove(className);\r\n      }\r\n    });\r\n  };\r\n  /**\r\n   * @param {HTMLElement} elem\r\n   * @param {SweetAlertOptions} params\r\n   * @param {string} className\r\n   */\r\n\r\n\r\n  const applyCustomClass = (elem, params, className) => {\r\n    removeCustomClasses(elem, params);\r\n\r\n    if (params.customClass && params.customClass[className]) {\r\n      if (typeof params.customClass[className] !== 'string' && !params.customClass[className].forEach) {\r\n        return warn(\"Invalid type of customClass.\".concat(className, \"! Expected string or iterable object, got \\\"\").concat(typeof params.customClass[className], \"\\\"\"));\r\n      }\r\n\r\n      addClass(elem, params.customClass[className]);\r\n    }\r\n  };\r\n  /**\r\n   * @param {HTMLElement} popup\r\n   * @param {import('./renderers/renderInput').InputClass} inputClass\r\n   * @returns {HTMLInputElement | null}\r\n   */\r\n\r\n  const getInput = (popup, inputClass) => {\r\n    if (!inputClass) {\r\n      return null;\r\n    }\r\n\r\n    switch (inputClass) {\r\n      case 'select':\r\n      case 'textarea':\r\n      case 'file':\r\n        return popup.querySelector(\".\".concat(swalClasses.popup, \" > .\").concat(swalClasses[inputClass]));\r\n\r\n      case 'checkbox':\r\n        return popup.querySelector(\".\".concat(swalClasses.popup, \" > .\").concat(swalClasses.checkbox, \" input\"));\r\n\r\n      case 'radio':\r\n        return popup.querySelector(\".\".concat(swalClasses.popup, \" > .\").concat(swalClasses.radio, \" input:checked\")) || popup.querySelector(\".\".concat(swalClasses.popup, \" > .\").concat(swalClasses.radio, \" input:first-child\"));\r\n\r\n      case 'range':\r\n        return popup.querySelector(\".\".concat(swalClasses.popup, \" > .\").concat(swalClasses.range, \" input\"));\r\n\r\n      default:\r\n        return popup.querySelector(\".\".concat(swalClasses.popup, \" > .\").concat(swalClasses.input));\r\n    }\r\n  };\r\n  /**\r\n   * @param {HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement} input\r\n   */\r\n\r\n  const focusInput = input => {\r\n    input.focus(); // place cursor at end of text in text input\r\n\r\n    if (input.type !== 'file') {\r\n      // http://stackoverflow.com/a/2345915\r\n      const val = input.value;\r\n      input.value = '';\r\n      input.value = val;\r\n    }\r\n  };\r\n  /**\r\n   * @param {HTMLElement | HTMLElement[] | null} target\r\n   * @param {string | string[] | readonly string[]} classList\r\n   * @param {boolean} condition\r\n   */\r\n\r\n  const toggleClass = (target, classList, condition) => {\r\n    if (!target || !classList) {\r\n      return;\r\n    }\r\n\r\n    if (typeof classList === 'string') {\r\n      classList = classList.split(/\\s+/).filter(Boolean);\r\n    }\r\n\r\n    classList.forEach(className => {\r\n      if (Array.isArray(target)) {\r\n        target.forEach(elem => {\r\n          condition ? elem.classList.add(className) : elem.classList.remove(className);\r\n        });\r\n      } else {\r\n        condition ? target.classList.add(className) : target.classList.remove(className);\r\n      }\r\n    });\r\n  };\r\n  /**\r\n   * @param {HTMLElement | HTMLElement[] | null} target\r\n   * @param {string | string[] | readonly string[]} classList\r\n   */\r\n\r\n  const addClass = (target, classList) => {\r\n    toggleClass(target, classList, true);\r\n  };\r\n  /**\r\n   * @param {HTMLElement | HTMLElement[] | null} target\r\n   * @param {string | string[] | readonly string[]} classList\r\n   */\r\n\r\n  const removeClass = (target, classList) => {\r\n    toggleClass(target, classList, false);\r\n  };\r\n  /**\r\n   * Get direct child of an element by class name\r\n   *\r\n   * @param {HTMLElement} elem\r\n   * @param {string} className\r\n   * @returns {HTMLElement | null}\r\n   */\r\n\r\n  const getDirectChildByClass = (elem, className) => {\r\n    const childNodes = toArray(elem.childNodes);\r\n\r\n    for (let i = 0; i < childNodes.length; i++) {\r\n      if (hasClass(childNodes[i], className)) {\r\n        return childNodes[i];\r\n      }\r\n    }\r\n  };\r\n  /**\r\n   * @param {HTMLElement} elem\r\n   * @param {string} property\r\n   * @param {*} value\r\n   */\r\n\r\n  const applyNumericalStyle = (elem, property, value) => {\r\n    if (value === \"\".concat(parseInt(value))) {\r\n      value = parseInt(value);\r\n    }\r\n\r\n    if (value || parseInt(value) === 0) {\r\n      elem.style[property] = typeof value === 'number' ? \"\".concat(value, \"px\") : value;\r\n    } else {\r\n      elem.style.removeProperty(property);\r\n    }\r\n  };\r\n  /**\r\n   * @param {HTMLElement} elem\r\n   * @param {string} display\r\n   */\r\n\r\n  const show = function (elem) {\r\n    let display = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'flex';\r\n    elem.style.display = display;\r\n  };\r\n  /**\r\n   * @param {HTMLElement} elem\r\n   */\r\n\r\n  const hide = elem => {\r\n    elem.style.display = 'none';\r\n  };\r\n  /**\r\n   * @param {HTMLElement} parent\r\n   * @param {string} selector\r\n   * @param {string} property\r\n   * @param {string} value\r\n   */\r\n\r\n  const setStyle = (parent, selector, property, value) => {\r\n    /** @type {HTMLElement} */\r\n    const el = parent.querySelector(selector);\r\n\r\n    if (el) {\r\n      el.style[property] = value;\r\n    }\r\n  };\r\n  /**\r\n   * @param {HTMLElement} elem\r\n   * @param {any} condition\r\n   * @param {string} display\r\n   */\r\n\r\n  const toggle = function (elem, condition) {\r\n    let display = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'flex';\r\n    condition ? show(elem, display) : hide(elem);\r\n  };\r\n  /**\r\n   * borrowed from jquery $(elem).is(':visible') implementation\r\n   *\r\n   * @param {HTMLElement} elem\r\n   * @returns {boolean}\r\n   */\r\n\r\n  const isVisible = elem => !!(elem && (elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length));\r\n  /**\r\n   * @returns {boolean}\r\n   */\r\n\r\n  const allButtonsAreHidden = () => !isVisible(getConfirmButton()) && !isVisible(getDenyButton()) && !isVisible(getCancelButton());\r\n  /**\r\n   * @returns {boolean}\r\n   */\r\n\r\n  const isScrollable = elem => !!(elem.scrollHeight > elem.clientHeight);\r\n  /**\r\n   * borrowed from https://stackoverflow.com/a/46352119\r\n   *\r\n   * @param {HTMLElement} elem\r\n   * @returns {boolean}\r\n   */\r\n\r\n  const hasCssAnimation = elem => {\r\n    const style = window.getComputedStyle(elem);\r\n    const animDuration = parseFloat(style.getPropertyValue('animation-duration') || '0');\r\n    const transDuration = parseFloat(style.getPropertyValue('transition-duration') || '0');\r\n    return animDuration > 0 || transDuration > 0;\r\n  };\r\n  /**\r\n   * @param {number} timer\r\n   * @param {boolean} reset\r\n   */\r\n\r\n  const animateTimerProgressBar = function (timer) {\r\n    let reset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\r\n    const timerProgressBar = getTimerProgressBar();\r\n\r\n    if (isVisible(timerProgressBar)) {\r\n      if (reset) {\r\n        timerProgressBar.style.transition = 'none';\r\n        timerProgressBar.style.width = '100%';\r\n      }\r\n\r\n      setTimeout(() => {\r\n        timerProgressBar.style.transition = \"width \".concat(timer / 1000, \"s linear\");\r\n        timerProgressBar.style.width = '0%';\r\n      }, 10);\r\n    }\r\n  };\r\n  const stopTimerProgressBar = () => {\r\n    const timerProgressBar = getTimerProgressBar();\r\n    const timerProgressBarWidth = parseInt(window.getComputedStyle(timerProgressBar).width);\r\n    timerProgressBar.style.removeProperty('transition');\r\n    timerProgressBar.style.width = '100%';\r\n    const timerProgressBarFullWidth = parseInt(window.getComputedStyle(timerProgressBar).width);\r\n    const timerProgressBarPercent = timerProgressBarWidth / timerProgressBarFullWidth * 100;\r\n    timerProgressBar.style.removeProperty('transition');\r\n    timerProgressBar.style.width = \"\".concat(timerProgressBarPercent, \"%\");\r\n  };\r\n\r\n  /**\r\n   * Detect Node env\r\n   *\r\n   * @returns {boolean}\r\n   */\r\n  const isNodeEnv = () => typeof window === 'undefined' || typeof document === 'undefined';\r\n\r\n  const RESTORE_FOCUS_TIMEOUT = 100;\r\n\r\n  /** @type {GlobalState} */\r\n\r\n  const globalState = {};\r\n\r\n  const focusPreviousActiveElement = () => {\r\n    if (globalState.previousActiveElement instanceof HTMLElement) {\r\n      globalState.previousActiveElement.focus();\r\n      globalState.previousActiveElement = null;\r\n    } else if (document.body) {\r\n      document.body.focus();\r\n    }\r\n  };\r\n  /**\r\n   * Restore previous active (focused) element\r\n   *\r\n   * @param {boolean} returnFocus\r\n   * @returns {Promise}\r\n   */\r\n\r\n\r\n  const restoreActiveElement = returnFocus => {\r\n    return new Promise(resolve => {\r\n      if (!returnFocus) {\r\n        return resolve();\r\n      }\r\n\r\n      const x = window.scrollX;\r\n      const y = window.scrollY;\r\n      globalState.restoreFocusTimeout = setTimeout(() => {\r\n        focusPreviousActiveElement();\r\n        resolve();\r\n      }, RESTORE_FOCUS_TIMEOUT); // issues/900\r\n\r\n      window.scrollTo(x, y);\r\n    });\r\n  };\r\n\r\n  const sweetHTML = \"\\n <div aria-labelledby=\\\"\".concat(swalClasses.title, \"\\\" aria-describedby=\\\"\").concat(swalClasses['html-container'], \"\\\" class=\\\"\").concat(swalClasses.popup, \"\\\" tabindex=\\\"-1\\\">\\n   <button type=\\\"button\\\" class=\\\"\").concat(swalClasses.close, \"\\\"></button>\\n   <ul class=\\\"\").concat(swalClasses['progress-steps'], \"\\\"></ul>\\n   <div class=\\\"\").concat(swalClasses.icon, \"\\\"></div>\\n   <img class=\\\"\").concat(swalClasses.image, \"\\\" />\\n   <h2 class=\\\"\").concat(swalClasses.title, \"\\\" id=\\\"\").concat(swalClasses.title, \"\\\"></h2>\\n   <div class=\\\"\").concat(swalClasses['html-container'], \"\\\" id=\\\"\").concat(swalClasses['html-container'], \"\\\"></div>\\n   <input class=\\\"\").concat(swalClasses.input, \"\\\" />\\n   <input type=\\\"file\\\" class=\\\"\").concat(swalClasses.file, \"\\\" />\\n   <div class=\\\"\").concat(swalClasses.range, \"\\\">\\n     <input type=\\\"range\\\" />\\n     <output></output>\\n   </div>\\n   <select class=\\\"\").concat(swalClasses.select, \"\\\"></select>\\n   <div class=\\\"\").concat(swalClasses.radio, \"\\\"></div>\\n   <label for=\\\"\").concat(swalClasses.checkbox, \"\\\" class=\\\"\").concat(swalClasses.checkbox, \"\\\">\\n     <input type=\\\"checkbox\\\" />\\n     <span class=\\\"\").concat(swalClasses.label, \"\\\"></span>\\n   </label>\\n   <textarea class=\\\"\").concat(swalClasses.textarea, \"\\\"></textarea>\\n   <div class=\\\"\").concat(swalClasses['validation-message'], \"\\\" id=\\\"\").concat(swalClasses['validation-message'], \"\\\"></div>\\n   <div class=\\\"\").concat(swalClasses.actions, \"\\\">\\n     <div class=\\\"\").concat(swalClasses.loader, \"\\\"></div>\\n     <button type=\\\"button\\\" class=\\\"\").concat(swalClasses.confirm, \"\\\"></button>\\n     <button type=\\\"button\\\" class=\\\"\").concat(swalClasses.deny, \"\\\"></button>\\n     <button type=\\\"button\\\" class=\\\"\").concat(swalClasses.cancel, \"\\\"></button>\\n   </div>\\n   <div class=\\\"\").concat(swalClasses.footer, \"\\\"></div>\\n   <div class=\\\"\").concat(swalClasses['timer-progress-bar-container'], \"\\\">\\n     <div class=\\\"\").concat(swalClasses['timer-progress-bar'], \"\\\"></div>\\n   </div>\\n </div>\\n\").replace(/(^|\\n)\\s*/g, '');\r\n  /**\r\n   * @returns {boolean}\r\n   */\r\n\r\n  const resetOldContainer = () => {\r\n    const oldContainer = getContainer();\r\n\r\n    if (!oldContainer) {\r\n      return false;\r\n    }\r\n\r\n    oldContainer.remove();\r\n    removeClass([document.documentElement, document.body], [swalClasses['no-backdrop'], swalClasses['toast-shown'], swalClasses['has-column']]);\r\n    return true;\r\n  };\r\n\r\n  const resetValidationMessage = () => {\r\n    globalState.currentInstance.resetValidationMessage();\r\n  };\r\n\r\n  const addInputChangeListeners = () => {\r\n    const popup = getPopup();\r\n    const input = getDirectChildByClass(popup, swalClasses.input);\r\n    const file = getDirectChildByClass(popup, swalClasses.file);\r\n    /** @type {HTMLInputElement} */\r\n\r\n    const range = popup.querySelector(\".\".concat(swalClasses.range, \" input\"));\r\n    /** @type {HTMLOutputElement} */\r\n\r\n    const rangeOutput = popup.querySelector(\".\".concat(swalClasses.range, \" output\"));\r\n    const select = getDirectChildByClass(popup, swalClasses.select);\r\n    /** @type {HTMLInputElement} */\r\n\r\n    const checkbox = popup.querySelector(\".\".concat(swalClasses.checkbox, \" input\"));\r\n    const textarea = getDirectChildByClass(popup, swalClasses.textarea);\r\n    input.oninput = resetValidationMessage;\r\n    file.onchange = resetValidationMessage;\r\n    select.onchange = resetValidationMessage;\r\n    checkbox.onchange = resetValidationMessage;\r\n    textarea.oninput = resetValidationMessage;\r\n\r\n    range.oninput = () => {\r\n      resetValidationMessage();\r\n      rangeOutput.value = range.value;\r\n    };\r\n\r\n    range.onchange = () => {\r\n      resetValidationMessage();\r\n      rangeOutput.value = range.value;\r\n    };\r\n  };\r\n  /**\r\n   * @param {string | HTMLElement} target\r\n   * @returns {HTMLElement}\r\n   */\r\n\r\n\r\n  const getTarget = target => typeof target === 'string' ? document.querySelector(target) : target;\r\n  /**\r\n   * @param {SweetAlertOptions} params\r\n   */\r\n\r\n\r\n  const setupAccessibility = params => {\r\n    const popup = getPopup();\r\n    popup.setAttribute('role', params.toast ? 'alert' : 'dialog');\r\n    popup.setAttribute('aria-live', params.toast ? 'polite' : 'assertive');\r\n\r\n    if (!params.toast) {\r\n      popup.setAttribute('aria-modal', 'true');\r\n    }\r\n  };\r\n  /**\r\n   * @param {HTMLElement} targetElement\r\n   */\r\n\r\n\r\n  const setupRTL = targetElement => {\r\n    if (window.getComputedStyle(targetElement).direction === 'rtl') {\r\n      addClass(getContainer(), swalClasses.rtl);\r\n    }\r\n  };\r\n  /**\r\n   * Add modal + backdrop + no-war message for Russians to DOM\r\n   *\r\n   * @param {SweetAlertOptions} params\r\n   */\r\n\r\n\r\n  const init = params => {\r\n    // Clean up the old popup container if it exists\r\n    const oldContainerExisted = resetOldContainer();\r\n    /* istanbul ignore if */\r\n\r\n    if (isNodeEnv()) {\r\n      error('SweetAlert2 requires document to initialize');\r\n      return;\r\n    }\r\n\r\n    const container = document.createElement('div');\r\n    container.className = swalClasses.container;\r\n\r\n    if (oldContainerExisted) {\r\n      addClass(container, swalClasses['no-transition']);\r\n    }\r\n\r\n    setInnerHtml(container, sweetHTML);\r\n    const targetElement = getTarget(params.target);\r\n    targetElement.appendChild(container);\r\n    setupAccessibility(params);\r\n    setupRTL(targetElement);\r\n    addInputChangeListeners();\r\n  };\r\n\r\n  /**\r\n   * @param {HTMLElement | object | string} param\r\n   * @param {HTMLElement} target\r\n   */\r\n\r\n  const parseHtmlToContainer = (param, target) => {\r\n    // DOM element\r\n    if (param instanceof HTMLElement) {\r\n      target.appendChild(param);\r\n    } // Object\r\n    else if (typeof param === 'object') {\r\n      handleObject(param, target);\r\n    } // Plain string\r\n    else if (param) {\r\n      setInnerHtml(target, param);\r\n    }\r\n  };\r\n  /**\r\n   * @param {object} param\r\n   * @param {HTMLElement} target\r\n   */\r\n\r\n  const handleObject = (param, target) => {\r\n    // JQuery element(s)\r\n    if (param.jquery) {\r\n      handleJqueryElem(target, param);\r\n    } // For other objects use their string representation\r\n    else {\r\n      setInnerHtml(target, param.toString());\r\n    }\r\n  };\r\n  /**\r\n   * @param {HTMLElement} target\r\n   * @param {HTMLElement} elem\r\n   */\r\n\r\n\r\n  const handleJqueryElem = (target, elem) => {\r\n    target.textContent = '';\r\n\r\n    if (0 in elem) {\r\n      for (let i = 0; (i in elem); i++) {\r\n        target.appendChild(elem[i].cloneNode(true));\r\n      }\r\n    } else {\r\n      target.appendChild(elem.cloneNode(true));\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @returns {'webkitAnimationEnd' | 'animationend' | false}\r\n   */\r\n\r\n  const animationEndEvent = (() => {\r\n    // Prevent run in Node env\r\n\r\n    /* istanbul ignore if */\r\n    if (isNodeEnv()) {\r\n      return false;\r\n    }\r\n\r\n    const testEl = document.createElement('div');\r\n    const transEndEventNames = {\r\n      WebkitAnimation: 'webkitAnimationEnd',\r\n      // Chrome, Safari and Opera\r\n      animation: 'animationend' // Standard syntax\r\n\r\n    };\r\n\r\n    for (const i in transEndEventNames) {\r\n      if (Object.prototype.hasOwnProperty.call(transEndEventNames, i) && typeof testEl.style[i] !== 'undefined') {\r\n        return transEndEventNames[i];\r\n      }\r\n    }\r\n\r\n    return false;\r\n  })();\r\n\r\n  /**\r\n   * Measure scrollbar width for padding body during modal show/hide\r\n   * https://github.com/twbs/bootstrap/blob/master/js/src/modal.js\r\n   *\r\n   * @returns {number}\r\n   */\r\n\r\n  const measureScrollbar = () => {\r\n    const scrollDiv = document.createElement('div');\r\n    scrollDiv.className = swalClasses['scrollbar-measure'];\r\n    document.body.appendChild(scrollDiv);\r\n    const scrollbarWidth = scrollDiv.getBoundingClientRect().width - scrollDiv.clientWidth;\r\n    document.body.removeChild(scrollDiv);\r\n    return scrollbarWidth;\r\n  };\r\n\r\n  /**\r\n   * @param {SweetAlert2} instance\r\n   * @param {SweetAlertOptions} params\r\n   */\r\n\r\n  const renderActions = (instance, params) => {\r\n    const actions = getActions();\r\n    const loader = getLoader(); // Actions (buttons) wrapper\r\n\r\n    if (!params.showConfirmButton && !params.showDenyButton && !params.showCancelButton) {\r\n      hide(actions);\r\n    } else {\r\n      show(actions);\r\n    } // Custom class\r\n\r\n\r\n    applyCustomClass(actions, params, 'actions'); // Render all the buttons\r\n\r\n    renderButtons(actions, loader, params); // Loader\r\n\r\n    setInnerHtml(loader, params.loaderHtml);\r\n    applyCustomClass(loader, params, 'loader');\r\n  };\r\n  /**\r\n   * @param {HTMLElement} actions\r\n   * @param {HTMLElement} loader\r\n   * @param {SweetAlertOptions} params\r\n   */\r\n\r\n  function renderButtons(actions, loader, params) {\r\n    const confirmButton = getConfirmButton();\r\n    const denyButton = getDenyButton();\r\n    const cancelButton = getCancelButton(); // Render buttons\r\n\r\n    renderButton(confirmButton, 'confirm', params);\r\n    renderButton(denyButton, 'deny', params);\r\n    renderButton(cancelButton, 'cancel', params);\r\n    handleButtonsStyling(confirmButton, denyButton, cancelButton, params);\r\n\r\n    if (params.reverseButtons) {\r\n      if (params.toast) {\r\n        actions.insertBefore(cancelButton, confirmButton);\r\n        actions.insertBefore(denyButton, confirmButton);\r\n      } else {\r\n        actions.insertBefore(cancelButton, loader);\r\n        actions.insertBefore(denyButton, loader);\r\n        actions.insertBefore(confirmButton, loader);\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * @param {HTMLElement} confirmButton\r\n   * @param {HTMLElement} denyButton\r\n   * @param {HTMLElement} cancelButton\r\n   * @param {SweetAlertOptions} params\r\n   */\r\n\r\n\r\n  function handleButtonsStyling(confirmButton, denyButton, cancelButton, params) {\r\n    if (!params.buttonsStyling) {\r\n      return removeClass([confirmButton, denyButton, cancelButton], swalClasses.styled);\r\n    }\r\n\r\n    addClass([confirmButton, denyButton, cancelButton], swalClasses.styled); // Buttons background colors\r\n\r\n    if (params.confirmButtonColor) {\r\n      confirmButton.style.backgroundColor = params.confirmButtonColor;\r\n      addClass(confirmButton, swalClasses['default-outline']);\r\n    }\r\n\r\n    if (params.denyButtonColor) {\r\n      denyButton.style.backgroundColor = params.denyButtonColor;\r\n      addClass(denyButton, swalClasses['default-outline']);\r\n    }\r\n\r\n    if (params.cancelButtonColor) {\r\n      cancelButton.style.backgroundColor = params.cancelButtonColor;\r\n      addClass(cancelButton, swalClasses['default-outline']);\r\n    }\r\n  }\r\n  /**\r\n   * @param {HTMLElement} button\r\n   * @param {'confirm' | 'deny' | 'cancel'} buttonType\r\n   * @param {SweetAlertOptions} params\r\n   */\r\n\r\n\r\n  function renderButton(button, buttonType, params) {\r\n    toggle(button, params[\"show\".concat(capitalizeFirstLetter(buttonType), \"Button\")], 'inline-block');\r\n    setInnerHtml(button, params[\"\".concat(buttonType, \"ButtonText\")]); // Set caption text\r\n\r\n    button.setAttribute('aria-label', params[\"\".concat(buttonType, \"ButtonAriaLabel\")]); // ARIA label\r\n    // Add buttons custom classes\r\n\r\n    button.className = swalClasses[buttonType];\r\n    applyCustomClass(button, params, \"\".concat(buttonType, \"Button\"));\r\n    addClass(button, params[\"\".concat(buttonType, \"ButtonClass\")]);\r\n  }\r\n\r\n  /**\r\n   * @param {SweetAlert2} instance\r\n   * @param {SweetAlertOptions} params\r\n   */\r\n\r\n  const renderContainer = (instance, params) => {\r\n    const container = getContainer();\r\n\r\n    if (!container) {\r\n      return;\r\n    }\r\n\r\n    handleBackdropParam(container, params.backdrop);\r\n    handlePositionParam(container, params.position);\r\n    handleGrowParam(container, params.grow); // Custom class\r\n\r\n    applyCustomClass(container, params, 'container');\r\n  };\r\n  /**\r\n   * @param {HTMLElement} container\r\n   * @param {SweetAlertOptions['backdrop']} backdrop\r\n   */\r\n\r\n  function handleBackdropParam(container, backdrop) {\r\n    if (typeof backdrop === 'string') {\r\n      container.style.background = backdrop;\r\n    } else if (!backdrop) {\r\n      addClass([document.documentElement, document.body], swalClasses['no-backdrop']);\r\n    }\r\n  }\r\n  /**\r\n   * @param {HTMLElement} container\r\n   * @param {SweetAlertOptions['position']} position\r\n   */\r\n\r\n\r\n  function handlePositionParam(container, position) {\r\n    if (position in swalClasses) {\r\n      addClass(container, swalClasses[position]);\r\n    } else {\r\n      warn('The \"position\" parameter is not valid, defaulting to \"center\"');\r\n      addClass(container, swalClasses.center);\r\n    }\r\n  }\r\n  /**\r\n   * @param {HTMLElement} container\r\n   * @param {SweetAlertOptions['grow']} grow\r\n   */\r\n\r\n\r\n  function handleGrowParam(container, grow) {\r\n    if (grow && typeof grow === 'string') {\r\n      const growClass = \"grow-\".concat(grow);\r\n\r\n      if (growClass in swalClasses) {\r\n        addClass(container, swalClasses[growClass]);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This module contains `WeakMap`s for each effectively-\"private  property\" that a `Swal` has.\r\n   * For example, to set the private property \"foo\" of `this` to \"bar\", you can `privateProps.foo.set(this, 'bar')`\r\n   * This is the approach that Babel will probably take to implement private methods/fields\r\n   *   https://github.com/tc39/proposal-private-methods\r\n   *   https://github.com/babel/babel/pull/7555\r\n   * Once we have the changes from that PR in Babel, and our core class fits reasonable in *one module*\r\n   *   then we can use that language feature.\r\n   */\r\n  var privateProps = {\r\n    awaitingPromise: new WeakMap(),\r\n    promise: new WeakMap(),\r\n    innerParams: new WeakMap(),\r\n    domCache: new WeakMap()\r\n  };\r\n\r\n  /// <reference path=\"../../../../sweetalert2.d.ts\"/>\r\n  /** @type {InputClass[]} */\r\n\r\n  const inputClasses = ['input', 'file', 'range', 'select', 'radio', 'checkbox', 'textarea'];\r\n  /**\r\n   * @param {SweetAlert2} instance\r\n   * @param {SweetAlertOptions} params\r\n   */\r\n\r\n  const renderInput = (instance, params) => {\r\n    const popup = getPopup();\r\n    const innerParams = privateProps.innerParams.get(instance);\r\n    const rerender = !innerParams || params.input !== innerParams.input;\r\n    inputClasses.forEach(inputClass => {\r\n      const inputContainer = getDirectChildByClass(popup, swalClasses[inputClass]); // set attributes\r\n\r\n      setAttributes(inputClass, params.inputAttributes); // set class\r\n\r\n      inputContainer.className = swalClasses[inputClass];\r\n\r\n      if (rerender) {\r\n        hide(inputContainer);\r\n      }\r\n    });\r\n\r\n    if (params.input) {\r\n      if (rerender) {\r\n        showInput(params);\r\n      } // set custom class\r\n\r\n\r\n      setCustomClass(params);\r\n    }\r\n  };\r\n  /**\r\n   * @param {SweetAlertOptions} params\r\n   */\r\n\r\n  const showInput = params => {\r\n    if (!renderInputType[params.input]) {\r\n      return error(\"Unexpected type of input! Expected \\\"text\\\", \\\"email\\\", \\\"password\\\", \\\"number\\\", \\\"tel\\\", \\\"select\\\", \\\"radio\\\", \\\"checkbox\\\", \\\"textarea\\\", \\\"file\\\" or \\\"url\\\", got \\\"\".concat(params.input, \"\\\"\"));\r\n    }\r\n\r\n    const inputContainer = getInputContainer(params.input);\r\n    const input = renderInputType[params.input](inputContainer, params);\r\n    show(inputContainer); // input autofocus\r\n\r\n    setTimeout(() => {\r\n      focusInput(input);\r\n    });\r\n  };\r\n  /**\r\n   * @param {HTMLInputElement} input\r\n   */\r\n\r\n\r\n  const removeAttributes = input => {\r\n    for (let i = 0; i < input.attributes.length; i++) {\r\n      const attrName = input.attributes[i].name;\r\n\r\n      if (!['type', 'value', 'style'].includes(attrName)) {\r\n        input.removeAttribute(attrName);\r\n      }\r\n    }\r\n  };\r\n  /**\r\n   * @param {InputClass} inputClass\r\n   * @param {SweetAlertOptions['inputAttributes']} inputAttributes\r\n   */\r\n\r\n\r\n  const setAttributes = (inputClass, inputAttributes) => {\r\n    const input = getInput(getPopup(), inputClass);\r\n\r\n    if (!input) {\r\n      return;\r\n    }\r\n\r\n    removeAttributes(input);\r\n\r\n    for (const attr in inputAttributes) {\r\n      input.setAttribute(attr, inputAttributes[attr]);\r\n    }\r\n  };\r\n  /**\r\n   * @param {SweetAlertOptions} params\r\n   */\r\n\r\n\r\n  const setCustomClass = params => {\r\n    const inputContainer = getInputContainer(params.input);\r\n\r\n    if (typeof params.customClass === 'object') {\r\n      addClass(inputContainer, params.customClass.input);\r\n    }\r\n  };\r\n  /**\r\n   * @param {HTMLInputElement | HTMLTextAreaElement} input\r\n   * @param {SweetAlertOptions} params\r\n   */\r\n\r\n\r\n  const setInputPlaceholder = (input, params) => {\r\n    if (!input.placeholder || params.inputPlaceholder) {\r\n      input.placeholder = params.inputPlaceholder;\r\n    }\r\n  };\r\n  /**\r\n   * @param {Input} input\r\n   * @param {Input} prependTo\r\n   * @param {SweetAlertOptions} params\r\n   */\r\n\r\n\r\n  const setInputLabel = (input, prependTo, params) => {\r\n    if (params.inputLabel) {\r\n      input.id = swalClasses.input;\r\n      const label = document.createElement('label');\r\n      const labelClass = swalClasses['input-label'];\r\n      label.setAttribute('for', input.id);\r\n      label.className = labelClass;\r\n\r\n      if (typeof params.customClass === 'object') {\r\n        addClass(label, params.customClass.inputLabel);\r\n      }\r\n\r\n      label.innerText = params.inputLabel;\r\n      prependTo.insertAdjacentElement('beforebegin', label);\r\n    }\r\n  };\r\n  /**\r\n   * @param {SweetAlertOptions['input']} inputType\r\n   * @returns {HTMLElement}\r\n   */\r\n\r\n\r\n  const getInputContainer = inputType => {\r\n    return getDirectChildByClass(getPopup(), swalClasses[inputType] || swalClasses.input);\r\n  };\r\n  /**\r\n   * @param {HTMLInputElement | HTMLOutputElement | HTMLTextAreaElement} input\r\n   * @param {SweetAlertOptions['inputValue']} inputValue\r\n   */\r\n\r\n\r\n  const checkAndSetInputValue = (input, inputValue) => {\r\n    if (['string', 'number'].includes(typeof inputValue)) {\r\n      input.value = \"\".concat(inputValue);\r\n    } else if (!isPromise(inputValue)) {\r\n      warn(\"Unexpected type of inputValue! Expected \\\"string\\\", \\\"number\\\" or \\\"Promise\\\", got \\\"\".concat(typeof inputValue, \"\\\"\"));\r\n    }\r\n  };\r\n  /** @type Record<string, (input: Input | HTMLElement, params: SweetAlertOptions) => Input> */\r\n\r\n\r\n  const renderInputType = {};\r\n  /**\r\n   * @param {HTMLInputElement} input\r\n   * @param {SweetAlertOptions} params\r\n   * @returns {HTMLInputElement}\r\n   */\r\n\r\n  renderInputType.text = renderInputType.email = renderInputType.password = renderInputType.number = renderInputType.tel = renderInputType.url = (input, params) => {\r\n    checkAndSetInputValue(input, params.inputValue);\r\n    setInputLabel(input, input, params);\r\n    setInputPlaceholder(input, params);\r\n    input.type = params.input;\r\n    return input;\r\n  };\r\n  /**\r\n   * @param {HTMLInputElement} input\r\n   * @param {SweetAlertOptions} params\r\n   * @returns {HTMLInputElement}\r\n   */\r\n\r\n\r\n  renderInputType.file = (input, params) => {\r\n    setInputLabel(input, input, params);\r\n    setInputPlaceholder(input, params);\r\n    return input;\r\n  };\r\n  /**\r\n   * @param {HTMLInputElement} range\r\n   * @param {SweetAlertOptions} params\r\n   * @returns {HTMLInputElement}\r\n   */\r\n\r\n\r\n  renderInputType.range = (range, params) => {\r\n    const rangeInput = range.querySelector('input');\r\n    const rangeOutput = range.querySelector('output');\r\n    checkAndSetInputValue(rangeInput, params.inputValue);\r\n    rangeInput.type = params.input;\r\n    checkAndSetInputValue(rangeOutput, params.inputValue);\r\n    setInputLabel(rangeInput, range, params);\r\n    return range;\r\n  };\r\n  /**\r\n   * @param {HTMLSelectElement} select\r\n   * @param {SweetAlertOptions} params\r\n   * @returns {HTMLSelectElement}\r\n   */\r\n\r\n\r\n  renderInputType.select = (select, params) => {\r\n    select.textContent = '';\r\n\r\n    if (params.inputPlaceholder) {\r\n      const placeholder = document.createElement('option');\r\n      setInnerHtml(placeholder, params.inputPlaceholder);\r\n      placeholder.value = '';\r\n      placeholder.disabled = true;\r\n      placeholder.selected = true;\r\n      select.appendChild(placeholder);\r\n    }\r\n\r\n    setInputLabel(select, select, params);\r\n    return select;\r\n  };\r\n  /**\r\n   * @param {HTMLInputElement} radio\r\n   * @returns {HTMLInputElement}\r\n   */\r\n\r\n\r\n  renderInputType.radio = radio => {\r\n    radio.textContent = '';\r\n    return radio;\r\n  };\r\n  /**\r\n   * @param {HTMLLabelElement} checkboxContainer\r\n   * @param {SweetAlertOptions} params\r\n   * @returns {HTMLInputElement}\r\n   */\r\n\r\n\r\n  renderInputType.checkbox = (checkboxContainer, params) => {\r\n    const checkbox = getInput(getPopup(), 'checkbox');\r\n    checkbox.value = '1';\r\n    checkbox.id = swalClasses.checkbox;\r\n    checkbox.checked = Boolean(params.inputValue);\r\n    const label = checkboxContainer.querySelector('span');\r\n    setInnerHtml(label, params.inputPlaceholder);\r\n    return checkbox;\r\n  };\r\n  /**\r\n   * @param {HTMLTextAreaElement} textarea\r\n   * @param {SweetAlertOptions} params\r\n   * @returns {HTMLTextAreaElement}\r\n   */\r\n\r\n\r\n  renderInputType.textarea = (textarea, params) => {\r\n    checkAndSetInputValue(textarea, params.inputValue);\r\n    setInputPlaceholder(textarea, params);\r\n    setInputLabel(textarea, textarea, params);\r\n    /**\r\n     * @param {HTMLElement} el\r\n     * @returns {number}\r\n     */\r\n\r\n    const getMargin = el => parseInt(window.getComputedStyle(el).marginLeft) + parseInt(window.getComputedStyle(el).marginRight); // https://github.com/sweetalert2/sweetalert2/issues/2291\r\n\r\n\r\n    setTimeout(() => {\r\n      // https://github.com/sweetalert2/sweetalert2/issues/1699\r\n      if ('MutationObserver' in window) {\r\n        const initialPopupWidth = parseInt(window.getComputedStyle(getPopup()).width);\r\n\r\n        const textareaResizeHandler = () => {\r\n          const textareaWidth = textarea.offsetWidth + getMargin(textarea);\r\n\r\n          if (textareaWidth > initialPopupWidth) {\r\n            getPopup().style.width = \"\".concat(textareaWidth, \"px\");\r\n          } else {\r\n            getPopup().style.width = null;\r\n          }\r\n        };\r\n\r\n        new MutationObserver(textareaResizeHandler).observe(textarea, {\r\n          attributes: true,\r\n          attributeFilter: ['style']\r\n        });\r\n      }\r\n    });\r\n    return textarea;\r\n  };\r\n\r\n  /**\r\n   * @param {SweetAlert2} instance\r\n   * @param {SweetAlertOptions} params\r\n   */\r\n\r\n  const renderContent = (instance, params) => {\r\n    const htmlContainer = getHtmlContainer();\r\n    applyCustomClass(htmlContainer, params, 'htmlContainer'); // Content as HTML\r\n\r\n    if (params.html) {\r\n      parseHtmlToContainer(params.html, htmlContainer);\r\n      show(htmlContainer, 'block');\r\n    } // Content as plain text\r\n    else if (params.text) {\r\n      htmlContainer.textContent = params.text;\r\n      show(htmlContainer, 'block');\r\n    } // No content\r\n    else {\r\n      hide(htmlContainer);\r\n    }\r\n\r\n    renderInput(instance, params);\r\n  };\r\n\r\n  /**\r\n   * @param {SweetAlert2} instance\r\n   * @param {SweetAlertOptions} params\r\n   */\r\n\r\n  const renderFooter = (instance, params) => {\r\n    const footer = getFooter();\r\n    toggle(footer, params.footer);\r\n\r\n    if (params.footer) {\r\n      parseHtmlToContainer(params.footer, footer);\r\n    } // Custom class\r\n\r\n\r\n    applyCustomClass(footer, params, 'footer');\r\n  };\r\n\r\n  /**\r\n   * @param {SweetAlert2} instance\r\n   * @param {SweetAlertOptions} params\r\n   */\r\n\r\n  const renderCloseButton = (instance, params) => {\r\n    const closeButton = getCloseButton();\r\n    setInnerHtml(closeButton, params.closeButtonHtml); // Custom class\r\n\r\n    applyCustomClass(closeButton, params, 'closeButton');\r\n    toggle(closeButton, params.showCloseButton);\r\n    closeButton.setAttribute('aria-label', params.closeButtonAriaLabel);\r\n  };\r\n\r\n  /**\r\n   * @param {SweetAlert2} instance\r\n   * @param {SweetAlertOptions} params\r\n   */\r\n\r\n  const renderIcon = (instance, params) => {\r\n    const innerParams = privateProps.innerParams.get(instance);\r\n    const icon = getIcon(); // if the given icon already rendered, apply the styling without re-rendering the icon\r\n\r\n    if (innerParams && params.icon === innerParams.icon) {\r\n      // Custom or default content\r\n      setContent(icon, params);\r\n      applyStyles(icon, params);\r\n      return;\r\n    }\r\n\r\n    if (!params.icon && !params.iconHtml) {\r\n      hide(icon);\r\n      return;\r\n    }\r\n\r\n    if (params.icon && Object.keys(iconTypes).indexOf(params.icon) === -1) {\r\n      error(\"Unknown icon! Expected \\\"success\\\", \\\"error\\\", \\\"warning\\\", \\\"info\\\" or \\\"question\\\", got \\\"\".concat(params.icon, \"\\\"\"));\r\n      hide(icon);\r\n      return;\r\n    }\r\n\r\n    show(icon); // Custom or default content\r\n\r\n    setContent(icon, params);\r\n    applyStyles(icon, params); // Animate icon\r\n\r\n    addClass(icon, params.showClass.icon);\r\n  };\r\n  /**\r\n   * @param {HTMLElement} icon\r\n   * @param {SweetAlertOptions} params\r\n   */\r\n\r\n  const applyStyles = (icon, params) => {\r\n    for (const iconType in iconTypes) {\r\n      if (params.icon !== iconType) {\r\n        removeClass(icon, iconTypes[iconType]);\r\n      }\r\n    }\r\n\r\n    addClass(icon, iconTypes[params.icon]); // Icon color\r\n\r\n    setColor(icon, params); // Success icon background color\r\n\r\n    adjustSuccessIconBackgroundColor(); // Custom class\r\n\r\n    applyCustomClass(icon, params, 'icon');\r\n  }; // Adjust success icon background color to match the popup background color\r\n\r\n\r\n  const adjustSuccessIconBackgroundColor = () => {\r\n    const popup = getPopup();\r\n    const popupBackgroundColor = window.getComputedStyle(popup).getPropertyValue('background-color');\r\n    /** @type {NodeListOf<HTMLElement>} */\r\n\r\n    const successIconParts = popup.querySelectorAll('[class^=swal2-success-circular-line], .swal2-success-fix');\r\n\r\n    for (let i = 0; i < successIconParts.length; i++) {\r\n      successIconParts[i].style.backgroundColor = popupBackgroundColor;\r\n    }\r\n  };\r\n\r\n  const successIconHtml = \"\\n  <div class=\\\"swal2-success-circular-line-left\\\"></div>\\n  <span class=\\\"swal2-success-line-tip\\\"></span> <span class=\\\"swal2-success-line-long\\\"></span>\\n  <div class=\\\"swal2-success-ring\\\"></div> <div class=\\\"swal2-success-fix\\\"></div>\\n  <div class=\\\"swal2-success-circular-line-right\\\"></div>\\n\";\r\n  const errorIconHtml = \"\\n  <span class=\\\"swal2-x-mark\\\">\\n    <span class=\\\"swal2-x-mark-line-left\\\"></span>\\n    <span class=\\\"swal2-x-mark-line-right\\\"></span>\\n  </span>\\n\";\r\n  /**\r\n   * @param {HTMLElement} icon\r\n   * @param {SweetAlertOptions} params\r\n   */\r\n\r\n  const setContent = (icon, params) => {\r\n    let oldContent = icon.innerHTML;\r\n    let newContent;\r\n\r\n    if (params.iconHtml) {\r\n      newContent = iconContent(params.iconHtml);\r\n    } else if (params.icon === 'success') {\r\n      newContent = successIconHtml;\r\n      oldContent = oldContent.replace(/ style=\".*?\"/g, ''); // undo adjustSuccessIconBackgroundColor()\r\n    } else if (params.icon === 'error') {\r\n      newContent = errorIconHtml;\r\n    } else {\r\n      const defaultIconHtml = {\r\n        question: '?',\r\n        warning: '!',\r\n        info: 'i'\r\n      };\r\n      newContent = iconContent(defaultIconHtml[params.icon]);\r\n    }\r\n\r\n    if (oldContent.trim() !== newContent.trim()) {\r\n      setInnerHtml(icon, newContent);\r\n    }\r\n  };\r\n  /**\r\n   * @param {HTMLElement} icon\r\n   * @param {SweetAlertOptions} params\r\n   */\r\n\r\n\r\n  const setColor = (icon, params) => {\r\n    if (!params.iconColor) {\r\n      return;\r\n    }\r\n\r\n    icon.style.color = params.iconColor;\r\n    icon.style.borderColor = params.iconColor;\r\n\r\n    for (const sel of ['.swal2-success-line-tip', '.swal2-success-line-long', '.swal2-x-mark-line-left', '.swal2-x-mark-line-right']) {\r\n      setStyle(icon, sel, 'backgroundColor', params.iconColor);\r\n    }\r\n\r\n    setStyle(icon, '.swal2-success-ring', 'borderColor', params.iconColor);\r\n  };\r\n  /**\r\n   * @param {string} content\r\n   * @returns {string}\r\n   */\r\n\r\n\r\n  const iconContent = content => \"<div class=\\\"\".concat(swalClasses['icon-content'], \"\\\">\").concat(content, \"</div>\");\r\n\r\n  /**\r\n   * @param {SweetAlert2} instance\r\n   * @param {SweetAlertOptions} params\r\n   */\r\n\r\n  const renderImage = (instance, params) => {\r\n    const image = getImage();\r\n\r\n    if (!params.imageUrl) {\r\n      return hide(image);\r\n    }\r\n\r\n    show(image, ''); // Src, alt\r\n\r\n    image.setAttribute('src', params.imageUrl);\r\n    image.setAttribute('alt', params.imageAlt); // Width, height\r\n\r\n    applyNumericalStyle(image, 'width', params.imageWidth);\r\n    applyNumericalStyle(image, 'height', params.imageHeight); // Class\r\n\r\n    image.className = swalClasses.image;\r\n    applyCustomClass(image, params, 'image');\r\n  };\r\n\r\n  /**\r\n   * @param {SweetAlert2} instance\r\n   * @param {SweetAlertOptions} params\r\n   */\r\n\r\n  const renderProgressSteps = (instance, params) => {\r\n    const progressStepsContainer = getProgressSteps();\r\n\r\n    if (!params.progressSteps || params.progressSteps.length === 0) {\r\n      return hide(progressStepsContainer);\r\n    }\r\n\r\n    show(progressStepsContainer);\r\n    progressStepsContainer.textContent = '';\r\n\r\n    if (params.currentProgressStep >= params.progressSteps.length) {\r\n      warn('Invalid currentProgressStep parameter, it should be less than progressSteps.length ' + '(currentProgressStep like JS arrays starts from 0)');\r\n    }\r\n\r\n    params.progressSteps.forEach((step, index) => {\r\n      const stepEl = createStepElement(step);\r\n      progressStepsContainer.appendChild(stepEl);\r\n\r\n      if (index === params.currentProgressStep) {\r\n        addClass(stepEl, swalClasses['active-progress-step']);\r\n      }\r\n\r\n      if (index !== params.progressSteps.length - 1) {\r\n        const lineEl = createLineElement(params);\r\n        progressStepsContainer.appendChild(lineEl);\r\n      }\r\n    });\r\n  };\r\n  /**\r\n   * @param {string} step\r\n   * @returns {HTMLLIElement}\r\n   */\r\n\r\n  const createStepElement = step => {\r\n    const stepEl = document.createElement('li');\r\n    addClass(stepEl, swalClasses['progress-step']);\r\n    setInnerHtml(stepEl, step);\r\n    return stepEl;\r\n  };\r\n  /**\r\n   * @param {SweetAlertOptions} params\r\n   * @returns {HTMLLIElement}\r\n   */\r\n\r\n\r\n  const createLineElement = params => {\r\n    const lineEl = document.createElement('li');\r\n    addClass(lineEl, swalClasses['progress-step-line']);\r\n\r\n    if (params.progressStepsDistance) {\r\n      applyNumericalStyle(lineEl, 'width', params.progressStepsDistance);\r\n    }\r\n\r\n    return lineEl;\r\n  };\r\n\r\n  /**\r\n   * @param {SweetAlert2} instance\r\n   * @param {SweetAlertOptions} params\r\n   */\r\n\r\n  const renderTitle = (instance, params) => {\r\n    const title = getTitle();\r\n    toggle(title, params.title || params.titleText, 'block');\r\n\r\n    if (params.title) {\r\n      parseHtmlToContainer(params.title, title);\r\n    }\r\n\r\n    if (params.titleText) {\r\n      title.innerText = params.titleText;\r\n    } // Custom class\r\n\r\n\r\n    applyCustomClass(title, params, 'title');\r\n  };\r\n\r\n  /**\r\n   * @param {SweetAlert2} instance\r\n   * @param {SweetAlertOptions} params\r\n   */\r\n\r\n  const renderPopup = (instance, params) => {\r\n    const container = getContainer();\r\n    const popup = getPopup(); // Width\r\n    // https://github.com/sweetalert2/sweetalert2/issues/2170\r\n\r\n    if (params.toast) {\r\n      applyNumericalStyle(container, 'width', params.width);\r\n      popup.style.width = '100%';\r\n      popup.insertBefore(getLoader(), getIcon());\r\n    } else {\r\n      applyNumericalStyle(popup, 'width', params.width);\r\n    } // Padding\r\n\r\n\r\n    applyNumericalStyle(popup, 'padding', params.padding); // Color\r\n\r\n    if (params.color) {\r\n      popup.style.color = params.color;\r\n    } // Background\r\n\r\n\r\n    if (params.background) {\r\n      popup.style.background = params.background;\r\n    }\r\n\r\n    hide(getValidationMessage()); // Classes\r\n\r\n    addClasses(popup, params);\r\n  };\r\n  /**\r\n   * @param {HTMLElement} popup\r\n   * @param {SweetAlertOptions} params\r\n   */\r\n\r\n  const addClasses = (popup, params) => {\r\n    // Default Class + showClass when updating Swal.update({})\r\n    popup.className = \"\".concat(swalClasses.popup, \" \").concat(isVisible(popup) ? params.showClass.popup : '');\r\n\r\n    if (params.toast) {\r\n      addClass([document.documentElement, document.body], swalClasses['toast-shown']);\r\n      addClass(popup, swalClasses.toast);\r\n    } else {\r\n      addClass(popup, swalClasses.modal);\r\n    } // Custom class\r\n\r\n\r\n    applyCustomClass(popup, params, 'popup');\r\n\r\n    if (typeof params.customClass === 'string') {\r\n      addClass(popup, params.customClass);\r\n    } // Icon class (#1842)\r\n\r\n\r\n    if (params.icon) {\r\n      addClass(popup, swalClasses[\"icon-\".concat(params.icon)]);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {SweetAlert2} instance\r\n   * @param {SweetAlertOptions} params\r\n   */\r\n\r\n  const render = (instance, params) => {\r\n    renderPopup(instance, params);\r\n    renderContainer(instance, params);\r\n    renderProgressSteps(instance, params);\r\n    renderIcon(instance, params);\r\n    renderImage(instance, params);\r\n    renderTitle(instance, params);\r\n    renderCloseButton(instance, params);\r\n    renderContent(instance, params);\r\n    renderActions(instance, params);\r\n    renderFooter(instance, params);\r\n\r\n    if (typeof params.didRender === 'function') {\r\n      params.didRender(getPopup());\r\n    }\r\n  };\r\n\r\n  const DismissReason = Object.freeze({\r\n    cancel: 'cancel',\r\n    backdrop: 'backdrop',\r\n    close: 'close',\r\n    esc: 'esc',\r\n    timer: 'timer'\r\n  });\r\n\r\n  // Adding aria-hidden=\"true\" to elements outside of the active modal dialog ensures that\r\n  // elements not within the active modal dialog will not be surfaced if a user opens a screen\r\n  // reader’s list of elements (headings, form controls, landmarks, etc.) in the document.\r\n\r\n  const setAriaHidden = () => {\r\n    const bodyChildren = toArray(document.body.children);\r\n    bodyChildren.forEach(el => {\r\n      if (el === getContainer() || el.contains(getContainer())) {\r\n        return;\r\n      }\r\n\r\n      if (el.hasAttribute('aria-hidden')) {\r\n        el.setAttribute('data-previous-aria-hidden', el.getAttribute('aria-hidden'));\r\n      }\r\n\r\n      el.setAttribute('aria-hidden', 'true');\r\n    });\r\n  };\r\n  const unsetAriaHidden = () => {\r\n    const bodyChildren = toArray(document.body.children);\r\n    bodyChildren.forEach(el => {\r\n      if (el.hasAttribute('data-previous-aria-hidden')) {\r\n        el.setAttribute('aria-hidden', el.getAttribute('data-previous-aria-hidden'));\r\n        el.removeAttribute('data-previous-aria-hidden');\r\n      } else {\r\n        el.removeAttribute('aria-hidden');\r\n      }\r\n    });\r\n  };\r\n\r\n  const swalStringParams = ['swal-title', 'swal-html', 'swal-footer'];\r\n  const getTemplateParams = params => {\r\n    const template = typeof params.template === 'string' ? document.querySelector(params.template) : params.template;\r\n\r\n    if (!template) {\r\n      return {};\r\n    }\r\n    /** @type {DocumentFragment} */\r\n\r\n\r\n    const templateContent = template.content;\r\n    showWarningsForElements(templateContent);\r\n    const result = Object.assign(getSwalParams(templateContent), getSwalButtons(templateContent), getSwalImage(templateContent), getSwalIcon(templateContent), getSwalInput(templateContent), getSwalStringParams(templateContent, swalStringParams));\r\n    return result;\r\n  };\r\n  /**\r\n   * @param {DocumentFragment} templateContent\r\n   */\r\n\r\n  const getSwalParams = templateContent => {\r\n    const result = {};\r\n    toArray(templateContent.querySelectorAll('swal-param')).forEach(param => {\r\n      showWarningsForAttributes(param, ['name', 'value']);\r\n      const paramName = param.getAttribute('name');\r\n      const value = param.getAttribute('value');\r\n\r\n      if (typeof defaultParams[paramName] === 'boolean' && value === 'false') {\r\n        result[paramName] = false;\r\n      }\r\n\r\n      if (typeof defaultParams[paramName] === 'object') {\r\n        result[paramName] = JSON.parse(value);\r\n      }\r\n    });\r\n    return result;\r\n  };\r\n  /**\r\n   * @param {DocumentFragment} templateContent\r\n   */\r\n\r\n\r\n  const getSwalButtons = templateContent => {\r\n    const result = {};\r\n    toArray(templateContent.querySelectorAll('swal-button')).forEach(button => {\r\n      showWarningsForAttributes(button, ['type', 'color', 'aria-label']);\r\n      const type = button.getAttribute('type');\r\n      result[\"\".concat(type, \"ButtonText\")] = button.innerHTML;\r\n      result[\"show\".concat(capitalizeFirstLetter(type), \"Button\")] = true;\r\n\r\n      if (button.hasAttribute('color')) {\r\n        result[\"\".concat(type, \"ButtonColor\")] = button.getAttribute('color');\r\n      }\r\n\r\n      if (button.hasAttribute('aria-label')) {\r\n        result[\"\".concat(type, \"ButtonAriaLabel\")] = button.getAttribute('aria-label');\r\n      }\r\n    });\r\n    return result;\r\n  };\r\n  /**\r\n   * @param {DocumentFragment} templateContent\r\n   */\r\n\r\n\r\n  const getSwalImage = templateContent => {\r\n    const result = {};\r\n    /** @type {HTMLElement} */\r\n\r\n    const image = templateContent.querySelector('swal-image');\r\n\r\n    if (image) {\r\n      showWarningsForAttributes(image, ['src', 'width', 'height', 'alt']);\r\n\r\n      if (image.hasAttribute('src')) {\r\n        result.imageUrl = image.getAttribute('src');\r\n      }\r\n\r\n      if (image.hasAttribute('width')) {\r\n        result.imageWidth = image.getAttribute('width');\r\n      }\r\n\r\n      if (image.hasAttribute('height')) {\r\n        result.imageHeight = image.getAttribute('height');\r\n      }\r\n\r\n      if (image.hasAttribute('alt')) {\r\n        result.imageAlt = image.getAttribute('alt');\r\n      }\r\n    }\r\n\r\n    return result;\r\n  };\r\n  /**\r\n   * @param {DocumentFragment} templateContent\r\n   */\r\n\r\n\r\n  const getSwalIcon = templateContent => {\r\n    const result = {};\r\n    /** @type {HTMLElement} */\r\n\r\n    const icon = templateContent.querySelector('swal-icon');\r\n\r\n    if (icon) {\r\n      showWarningsForAttributes(icon, ['type', 'color']);\r\n\r\n      if (icon.hasAttribute('type')) {\r\n        result.icon = icon.getAttribute('type');\r\n      }\r\n\r\n      if (icon.hasAttribute('color')) {\r\n        result.iconColor = icon.getAttribute('color');\r\n      }\r\n\r\n      result.iconHtml = icon.innerHTML;\r\n    }\r\n\r\n    return result;\r\n  };\r\n  /**\r\n   * @param {DocumentFragment} templateContent\r\n   */\r\n\r\n\r\n  const getSwalInput = templateContent => {\r\n    const result = {};\r\n    /** @type {HTMLElement} */\r\n\r\n    const input = templateContent.querySelector('swal-input');\r\n\r\n    if (input) {\r\n      showWarningsForAttributes(input, ['type', 'label', 'placeholder', 'value']);\r\n      result.input = input.getAttribute('type') || 'text';\r\n\r\n      if (input.hasAttribute('label')) {\r\n        result.inputLabel = input.getAttribute('label');\r\n      }\r\n\r\n      if (input.hasAttribute('placeholder')) {\r\n        result.inputPlaceholder = input.getAttribute('placeholder');\r\n      }\r\n\r\n      if (input.hasAttribute('value')) {\r\n        result.inputValue = input.getAttribute('value');\r\n      }\r\n    }\r\n\r\n    const inputOptions = templateContent.querySelectorAll('swal-input-option');\r\n\r\n    if (inputOptions.length) {\r\n      result.inputOptions = {};\r\n      toArray(inputOptions).forEach(option => {\r\n        showWarningsForAttributes(option, ['value']);\r\n        const optionValue = option.getAttribute('value');\r\n        const optionName = option.innerHTML;\r\n        result.inputOptions[optionValue] = optionName;\r\n      });\r\n    }\r\n\r\n    return result;\r\n  };\r\n  /**\r\n   * @param {DocumentFragment} templateContent\r\n   * @param {string[]} paramNames\r\n   */\r\n\r\n\r\n  const getSwalStringParams = (templateContent, paramNames) => {\r\n    const result = {};\r\n\r\n    for (const i in paramNames) {\r\n      const paramName = paramNames[i];\r\n      /** @type {HTMLElement} */\r\n\r\n      const tag = templateContent.querySelector(paramName);\r\n\r\n      if (tag) {\r\n        showWarningsForAttributes(tag, []);\r\n        result[paramName.replace(/^swal-/, '')] = tag.innerHTML.trim();\r\n      }\r\n    }\r\n\r\n    return result;\r\n  };\r\n  /**\r\n   * @param {DocumentFragment} templateContent\r\n   */\r\n\r\n\r\n  const showWarningsForElements = templateContent => {\r\n    const allowedElements = swalStringParams.concat(['swal-param', 'swal-button', 'swal-image', 'swal-icon', 'swal-input', 'swal-input-option']);\r\n    toArray(templateContent.children).forEach(el => {\r\n      const tagName = el.tagName.toLowerCase();\r\n\r\n      if (allowedElements.indexOf(tagName) === -1) {\r\n        warn(\"Unrecognized element <\".concat(tagName, \">\"));\r\n      }\r\n    });\r\n  };\r\n  /**\r\n   * @param {HTMLElement} el\r\n   * @param {string[]} allowedAttributes\r\n   */\r\n\r\n\r\n  const showWarningsForAttributes = (el, allowedAttributes) => {\r\n    toArray(el.attributes).forEach(attribute => {\r\n      if (allowedAttributes.indexOf(attribute.name) === -1) {\r\n        warn([\"Unrecognized attribute \\\"\".concat(attribute.name, \"\\\" on <\").concat(el.tagName.toLowerCase(), \">.\"), \"\".concat(allowedAttributes.length ? \"Allowed attributes are: \".concat(allowedAttributes.join(', ')) : 'To set the value, use HTML within the element.')]);\r\n      }\r\n    });\r\n  };\r\n\r\n  var defaultInputValidators = {\r\n    /**\r\n     * @param {string} string\r\n     * @param {string} validationMessage\r\n     * @returns {Promise<void | string>}\r\n     */\r\n    email: (string, validationMessage) => {\r\n      return /^[a-zA-Z0-9.+_-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z0-9-]{2,24}$/.test(string) ? Promise.resolve() : Promise.resolve(validationMessage || 'Invalid email address');\r\n    },\r\n\r\n    /**\r\n     * @param {string} string\r\n     * @param {string} validationMessage\r\n     * @returns {Promise<void | string>}\r\n     */\r\n    url: (string, validationMessage) => {\r\n      // taken from https://stackoverflow.com/a/3809435 with a small change from #1306 and #2013\r\n      return /^https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-z]{2,63}\\b([-a-zA-Z0-9@:%_+.~#?&/=]*)$/.test(string) ? Promise.resolve() : Promise.resolve(validationMessage || 'Invalid URL');\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {SweetAlertOptions} params\r\n   */\r\n\r\n  function setDefaultInputValidators(params) {\r\n    // Use default `inputValidator` for supported input types if not provided\r\n    if (!params.inputValidator) {\r\n      Object.keys(defaultInputValidators).forEach(key => {\r\n        if (params.input === key) {\r\n          params.inputValidator = defaultInputValidators[key];\r\n        }\r\n      });\r\n    }\r\n  }\r\n  /**\r\n   * @param {SweetAlertOptions} params\r\n   */\r\n\r\n\r\n  function validateCustomTargetElement(params) {\r\n    // Determine if the custom target element is valid\r\n    if (!params.target || typeof params.target === 'string' && !document.querySelector(params.target) || typeof params.target !== 'string' && !params.target.appendChild) {\r\n      warn('Target parameter is not valid, defaulting to \"body\"');\r\n      params.target = 'body';\r\n    }\r\n  }\r\n  /**\r\n   * Set type, text and actions on popup\r\n   *\r\n   * @param {SweetAlertOptions} params\r\n   */\r\n\r\n\r\n  function setParameters(params) {\r\n    setDefaultInputValidators(params); // showLoaderOnConfirm && preConfirm\r\n\r\n    if (params.showLoaderOnConfirm && !params.preConfirm) {\r\n      warn('showLoaderOnConfirm is set to true, but preConfirm is not defined.\\n' + 'showLoaderOnConfirm should be used together with preConfirm, see usage example:\\n' + 'https://sweetalert2.github.io/#ajax-request');\r\n    }\r\n\r\n    validateCustomTargetElement(params); // Replace newlines with <br> in title\r\n\r\n    if (typeof params.title === 'string') {\r\n      params.title = params.title.split('\\n').join('<br />');\r\n    }\r\n\r\n    init(params);\r\n  }\r\n\r\n  class Timer {\r\n    constructor(callback, delay) {\r\n      this.callback = callback;\r\n      this.remaining = delay;\r\n      this.running = false;\r\n      this.start();\r\n    }\r\n\r\n    start() {\r\n      if (!this.running) {\r\n        this.running = true;\r\n        this.started = new Date();\r\n        this.id = setTimeout(this.callback, this.remaining);\r\n      }\r\n\r\n      return this.remaining;\r\n    }\r\n\r\n    stop() {\r\n      if (this.running) {\r\n        this.running = false;\r\n        clearTimeout(this.id);\r\n        this.remaining -= new Date().getTime() - this.started.getTime();\r\n      }\r\n\r\n      return this.remaining;\r\n    }\r\n\r\n    increase(n) {\r\n      const running = this.running;\r\n\r\n      if (running) {\r\n        this.stop();\r\n      }\r\n\r\n      this.remaining += n;\r\n\r\n      if (running) {\r\n        this.start();\r\n      }\r\n\r\n      return this.remaining;\r\n    }\r\n\r\n    getTimerLeft() {\r\n      if (this.running) {\r\n        this.stop();\r\n        this.start();\r\n      }\r\n\r\n      return this.remaining;\r\n    }\r\n\r\n    isRunning() {\r\n      return this.running;\r\n    }\r\n\r\n  }\r\n\r\n  const fixScrollbar = () => {\r\n    // for queues, do not do this more than once\r\n    if (states.previousBodyPadding !== null) {\r\n      return;\r\n    } // if the body has overflow\r\n\r\n\r\n    if (document.body.scrollHeight > window.innerHeight) {\r\n      // add padding so the content doesn't shift after removal of scrollbar\r\n      states.previousBodyPadding = parseInt(window.getComputedStyle(document.body).getPropertyValue('padding-right'));\r\n      document.body.style.paddingRight = \"\".concat(states.previousBodyPadding + measureScrollbar(), \"px\");\r\n    }\r\n  };\r\n  const undoScrollbar = () => {\r\n    if (states.previousBodyPadding !== null) {\r\n      document.body.style.paddingRight = \"\".concat(states.previousBodyPadding, \"px\");\r\n      states.previousBodyPadding = null;\r\n    }\r\n  };\r\n\r\n  /* istanbul ignore file */\r\n\r\n  const iOSfix = () => {\r\n    const iOS = // @ts-ignore\r\n    /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream || navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1;\r\n\r\n    if (iOS && !hasClass(document.body, swalClasses.iosfix)) {\r\n      const offset = document.body.scrollTop;\r\n      document.body.style.top = \"\".concat(offset * -1, \"px\");\r\n      addClass(document.body, swalClasses.iosfix);\r\n      lockBodyScroll();\r\n      addBottomPaddingForTallPopups();\r\n    }\r\n  };\r\n  /**\r\n   * https://github.com/sweetalert2/sweetalert2/issues/1948\r\n   */\r\n\r\n  const addBottomPaddingForTallPopups = () => {\r\n    const ua = navigator.userAgent;\r\n    const iOS = !!ua.match(/iPad/i) || !!ua.match(/iPhone/i);\r\n    const webkit = !!ua.match(/WebKit/i);\r\n    const iOSSafari = iOS && webkit && !ua.match(/CriOS/i);\r\n\r\n    if (iOSSafari) {\r\n      const bottomPanelHeight = 44;\r\n\r\n      if (getPopup().scrollHeight > window.innerHeight - bottomPanelHeight) {\r\n        getContainer().style.paddingBottom = \"\".concat(bottomPanelHeight, \"px\");\r\n      }\r\n    }\r\n  };\r\n  /**\r\n   * https://github.com/sweetalert2/sweetalert2/issues/1246\r\n   */\r\n\r\n\r\n  const lockBodyScroll = () => {\r\n    const container = getContainer();\r\n    let preventTouchMove;\r\n\r\n    container.ontouchstart = e => {\r\n      preventTouchMove = shouldPreventTouchMove(e);\r\n    };\r\n\r\n    container.ontouchmove = e => {\r\n      if (preventTouchMove) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n      }\r\n    };\r\n  };\r\n\r\n  const shouldPreventTouchMove = event => {\r\n    const target = event.target;\r\n    const container = getContainer();\r\n\r\n    if (isStylus(event) || isZoom(event)) {\r\n      return false;\r\n    }\r\n\r\n    if (target === container) {\r\n      return true;\r\n    }\r\n\r\n    if (!isScrollable(container) && target.tagName !== 'INPUT' && // #1603\r\n    target.tagName !== 'TEXTAREA' && // #2266\r\n    !(isScrollable(getHtmlContainer()) && // #1944\r\n    getHtmlContainer().contains(target))) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n  /**\r\n   * https://github.com/sweetalert2/sweetalert2/issues/1786\r\n   *\r\n   * @param {*} event\r\n   * @returns {boolean}\r\n   */\r\n\r\n\r\n  const isStylus = event => {\r\n    return event.touches && event.touches.length && event.touches[0].touchType === 'stylus';\r\n  };\r\n  /**\r\n   * https://github.com/sweetalert2/sweetalert2/issues/1891\r\n   *\r\n   * @param {TouchEvent} event\r\n   * @returns {boolean}\r\n   */\r\n\r\n\r\n  const isZoom = event => {\r\n    return event.touches && event.touches.length > 1;\r\n  };\r\n\r\n  const undoIOSfix = () => {\r\n    if (hasClass(document.body, swalClasses.iosfix)) {\r\n      const offset = parseInt(document.body.style.top, 10);\r\n      removeClass(document.body, swalClasses.iosfix);\r\n      document.body.style.top = '';\r\n      document.body.scrollTop = offset * -1;\r\n    }\r\n  };\r\n\r\n  const SHOW_CLASS_TIMEOUT = 10;\r\n  /**\r\n   * Open popup, add necessary classes and styles, fix scrollbar\r\n   *\r\n   * @param params\r\n   */\r\n\r\n  const openPopup = params => {\r\n    const container = getContainer();\r\n    const popup = getPopup();\r\n\r\n    if (typeof params.willOpen === 'function') {\r\n      params.willOpen(popup);\r\n    }\r\n\r\n    const bodyStyles = window.getComputedStyle(document.body);\r\n    const initialBodyOverflow = bodyStyles.overflowY;\r\n    addClasses$1(container, popup, params); // scrolling is 'hidden' until animation is done, after that 'auto'\r\n\r\n    setTimeout(() => {\r\n      setScrollingVisibility(container, popup);\r\n    }, SHOW_CLASS_TIMEOUT);\r\n\r\n    if (isModal()) {\r\n      fixScrollContainer(container, params.scrollbarPadding, initialBodyOverflow);\r\n      setAriaHidden();\r\n    }\r\n\r\n    if (!isToast() && !globalState.previousActiveElement) {\r\n      globalState.previousActiveElement = document.activeElement;\r\n    }\r\n\r\n    if (typeof params.didOpen === 'function') {\r\n      setTimeout(() => params.didOpen(popup));\r\n    }\r\n\r\n    removeClass(container, swalClasses['no-transition']);\r\n  };\r\n\r\n  const swalOpenAnimationFinished = event => {\r\n    const popup = getPopup();\r\n\r\n    if (event.target !== popup) {\r\n      return;\r\n    }\r\n\r\n    const container = getContainer();\r\n    popup.removeEventListener(animationEndEvent, swalOpenAnimationFinished);\r\n    container.style.overflowY = 'auto';\r\n  };\r\n\r\n  const setScrollingVisibility = (container, popup) => {\r\n    if (animationEndEvent && hasCssAnimation(popup)) {\r\n      container.style.overflowY = 'hidden';\r\n      popup.addEventListener(animationEndEvent, swalOpenAnimationFinished);\r\n    } else {\r\n      container.style.overflowY = 'auto';\r\n    }\r\n  };\r\n\r\n  const fixScrollContainer = (container, scrollbarPadding, initialBodyOverflow) => {\r\n    iOSfix();\r\n\r\n    if (scrollbarPadding && initialBodyOverflow !== 'hidden') {\r\n      fixScrollbar();\r\n    } // sweetalert2/issues/1247\r\n\r\n\r\n    setTimeout(() => {\r\n      container.scrollTop = 0;\r\n    });\r\n  };\r\n\r\n  const addClasses$1 = (container, popup, params) => {\r\n    addClass(container, params.showClass.backdrop); // this workaround with opacity is needed for https://github.com/sweetalert2/sweetalert2/issues/2059\r\n\r\n    popup.style.setProperty('opacity', '0', 'important');\r\n    show(popup, 'grid');\r\n    setTimeout(() => {\r\n      // Animate popup right after showing it\r\n      addClass(popup, params.showClass.popup); // and remove the opacity workaround\r\n\r\n      popup.style.removeProperty('opacity');\r\n    }, SHOW_CLASS_TIMEOUT); // 10ms in order to fix #2062\r\n\r\n    addClass([document.documentElement, document.body], swalClasses.shown);\r\n\r\n    if (params.heightAuto && params.backdrop && !params.toast) {\r\n      addClass([document.documentElement, document.body], swalClasses['height-auto']);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Shows loader (spinner), this is useful with AJAX requests.\r\n   * By default the loader be shown instead of the \"Confirm\" button.\r\n   */\r\n\r\n  const showLoading = buttonToReplace => {\r\n    let popup = getPopup();\r\n\r\n    if (!popup) {\r\n      new Swal(); // eslint-disable-line no-new\r\n    }\r\n\r\n    popup = getPopup();\r\n    const loader = getLoader();\r\n\r\n    if (isToast()) {\r\n      hide(getIcon());\r\n    } else {\r\n      replaceButton(popup, buttonToReplace);\r\n    }\r\n\r\n    show(loader);\r\n    popup.setAttribute('data-loading', 'true');\r\n    popup.setAttribute('aria-busy', 'true');\r\n    popup.focus();\r\n  };\r\n\r\n  const replaceButton = (popup, buttonToReplace) => {\r\n    const actions = getActions();\r\n    const loader = getLoader();\r\n\r\n    if (!buttonToReplace && isVisible(getConfirmButton())) {\r\n      buttonToReplace = getConfirmButton();\r\n    }\r\n\r\n    show(actions);\r\n\r\n    if (buttonToReplace) {\r\n      hide(buttonToReplace);\r\n      loader.setAttribute('data-button-to-replace', buttonToReplace.className);\r\n    }\r\n\r\n    loader.parentNode.insertBefore(loader, buttonToReplace);\r\n    addClass([popup, actions], swalClasses.loading);\r\n  };\r\n\r\n  const handleInputOptionsAndValue = (instance, params) => {\r\n    if (params.input === 'select' || params.input === 'radio') {\r\n      handleInputOptions(instance, params);\r\n    } else if (['text', 'email', 'number', 'tel', 'textarea'].includes(params.input) && (hasToPromiseFn(params.inputValue) || isPromise(params.inputValue))) {\r\n      showLoading(getConfirmButton());\r\n      handleInputValue(instance, params);\r\n    }\r\n  };\r\n  const getInputValue = (instance, innerParams) => {\r\n    const input = instance.getInput();\r\n\r\n    if (!input) {\r\n      return null;\r\n    }\r\n\r\n    switch (innerParams.input) {\r\n      case 'checkbox':\r\n        return getCheckboxValue(input);\r\n\r\n      case 'radio':\r\n        return getRadioValue(input);\r\n\r\n      case 'file':\r\n        return getFileValue(input);\r\n\r\n      default:\r\n        return innerParams.inputAutoTrim ? input.value.trim() : input.value;\r\n    }\r\n  };\r\n\r\n  const getCheckboxValue = input => input.checked ? 1 : 0;\r\n\r\n  const getRadioValue = input => input.checked ? input.value : null;\r\n\r\n  const getFileValue = input => input.files.length ? input.getAttribute('multiple') !== null ? input.files : input.files[0] : null;\r\n\r\n  const handleInputOptions = (instance, params) => {\r\n    const popup = getPopup();\r\n\r\n    const processInputOptions = inputOptions => populateInputOptions[params.input](popup, formatInputOptions(inputOptions), params);\r\n\r\n    if (hasToPromiseFn(params.inputOptions) || isPromise(params.inputOptions)) {\r\n      showLoading(getConfirmButton());\r\n      asPromise(params.inputOptions).then(inputOptions => {\r\n        instance.hideLoading();\r\n        processInputOptions(inputOptions);\r\n      });\r\n    } else if (typeof params.inputOptions === 'object') {\r\n      processInputOptions(params.inputOptions);\r\n    } else {\r\n      error(\"Unexpected type of inputOptions! Expected object, Map or Promise, got \".concat(typeof params.inputOptions));\r\n    }\r\n  };\r\n\r\n  const handleInputValue = (instance, params) => {\r\n    const input = instance.getInput();\r\n    hide(input);\r\n    asPromise(params.inputValue).then(inputValue => {\r\n      input.value = params.input === 'number' ? parseFloat(inputValue) || 0 : \"\".concat(inputValue);\r\n      show(input);\r\n      input.focus();\r\n      instance.hideLoading();\r\n    }).catch(err => {\r\n      error(\"Error in inputValue promise: \".concat(err));\r\n      input.value = '';\r\n      show(input);\r\n      input.focus();\r\n      instance.hideLoading();\r\n    });\r\n  };\r\n\r\n  const populateInputOptions = {\r\n    select: (popup, inputOptions, params) => {\r\n      const select = getDirectChildByClass(popup, swalClasses.select);\r\n\r\n      const renderOption = (parent, optionLabel, optionValue) => {\r\n        const option = document.createElement('option');\r\n        option.value = optionValue;\r\n        setInnerHtml(option, optionLabel);\r\n        option.selected = isSelected(optionValue, params.inputValue);\r\n        parent.appendChild(option);\r\n      };\r\n\r\n      inputOptions.forEach(inputOption => {\r\n        const optionValue = inputOption[0];\r\n        const optionLabel = inputOption[1]; // <optgroup> spec:\r\n        // https://www.w3.org/TR/html401/interact/forms.html#h-17.6\r\n        // \"...all OPTGROUP elements must be specified directly within a SELECT element (i.e., groups may not be nested)...\"\r\n        // check whether this is a <optgroup>\r\n\r\n        if (Array.isArray(optionLabel)) {\r\n          // if it is an array, then it is an <optgroup>\r\n          const optgroup = document.createElement('optgroup');\r\n          optgroup.label = optionValue;\r\n          optgroup.disabled = false; // not configurable for now\r\n\r\n          select.appendChild(optgroup);\r\n          optionLabel.forEach(o => renderOption(optgroup, o[1], o[0]));\r\n        } else {\r\n          // case of <option>\r\n          renderOption(select, optionLabel, optionValue);\r\n        }\r\n      });\r\n      select.focus();\r\n    },\r\n    radio: (popup, inputOptions, params) => {\r\n      const radio = getDirectChildByClass(popup, swalClasses.radio);\r\n      inputOptions.forEach(inputOption => {\r\n        const radioValue = inputOption[0];\r\n        const radioLabel = inputOption[1];\r\n        const radioInput = document.createElement('input');\r\n        const radioLabelElement = document.createElement('label');\r\n        radioInput.type = 'radio';\r\n        radioInput.name = swalClasses.radio;\r\n        radioInput.value = radioValue;\r\n\r\n        if (isSelected(radioValue, params.inputValue)) {\r\n          radioInput.checked = true;\r\n        }\r\n\r\n        const label = document.createElement('span');\r\n        setInnerHtml(label, radioLabel);\r\n        label.className = swalClasses.label;\r\n        radioLabelElement.appendChild(radioInput);\r\n        radioLabelElement.appendChild(label);\r\n        radio.appendChild(radioLabelElement);\r\n      });\r\n      const radios = radio.querySelectorAll('input');\r\n\r\n      if (radios.length) {\r\n        radios[0].focus();\r\n      }\r\n    }\r\n  };\r\n  /**\r\n   * Converts `inputOptions` into an array of `[value, label]`s\r\n   * @param inputOptions\r\n   */\r\n\r\n  const formatInputOptions = inputOptions => {\r\n    const result = [];\r\n\r\n    if (typeof Map !== 'undefined' && inputOptions instanceof Map) {\r\n      inputOptions.forEach((value, key) => {\r\n        let valueFormatted = value;\r\n\r\n        if (typeof valueFormatted === 'object') {\r\n          // case of <optgroup>\r\n          valueFormatted = formatInputOptions(valueFormatted);\r\n        }\r\n\r\n        result.push([key, valueFormatted]);\r\n      });\r\n    } else {\r\n      Object.keys(inputOptions).forEach(key => {\r\n        let valueFormatted = inputOptions[key];\r\n\r\n        if (typeof valueFormatted === 'object') {\r\n          // case of <optgroup>\r\n          valueFormatted = formatInputOptions(valueFormatted);\r\n        }\r\n\r\n        result.push([key, valueFormatted]);\r\n      });\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  const isSelected = (optionValue, inputValue) => {\r\n    return inputValue && inputValue.toString() === optionValue.toString();\r\n  };\r\n\r\n  /**\r\n   * Hides loader and shows back the button which was hidden by .showLoading()\r\n   */\r\n\r\n  function hideLoading() {\r\n    // do nothing if popup is closed\r\n    const innerParams = privateProps.innerParams.get(this);\r\n\r\n    if (!innerParams) {\r\n      return;\r\n    }\r\n\r\n    const domCache = privateProps.domCache.get(this);\r\n    hide(domCache.loader);\r\n\r\n    if (isToast()) {\r\n      if (innerParams.icon) {\r\n        show(getIcon());\r\n      }\r\n    } else {\r\n      showRelatedButton(domCache);\r\n    }\r\n\r\n    removeClass([domCache.popup, domCache.actions], swalClasses.loading);\r\n    domCache.popup.removeAttribute('aria-busy');\r\n    domCache.popup.removeAttribute('data-loading');\r\n    domCache.confirmButton.disabled = false;\r\n    domCache.denyButton.disabled = false;\r\n    domCache.cancelButton.disabled = false;\r\n  }\r\n\r\n  const showRelatedButton = domCache => {\r\n    const buttonToReplace = domCache.popup.getElementsByClassName(domCache.loader.getAttribute('data-button-to-replace'));\r\n\r\n    if (buttonToReplace.length) {\r\n      show(buttonToReplace[0], 'inline-block');\r\n    } else if (allButtonsAreHidden()) {\r\n      hide(domCache.actions);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Gets the input DOM node, this method works with input parameter.\r\n   * @returns {HTMLElement | null}\r\n   */\r\n\r\n  function getInput$1(instance) {\r\n    const innerParams = privateProps.innerParams.get(instance || this);\r\n    const domCache = privateProps.domCache.get(instance || this);\r\n\r\n    if (!domCache) {\r\n      return null;\r\n    }\r\n\r\n    return getInput(domCache.popup, innerParams.input);\r\n  }\r\n\r\n  /**\r\n   * This module contains `WeakMap`s for each effectively-\"private  property\" that a `Swal` has.\r\n   * For example, to set the private property \"foo\" of `this` to \"bar\", you can `privateProps.foo.set(this, 'bar')`\r\n   * This is the approach that Babel will probably take to implement private methods/fields\r\n   *   https://github.com/tc39/proposal-private-methods\r\n   *   https://github.com/babel/babel/pull/7555\r\n   * Once we have the changes from that PR in Babel, and our core class fits reasonable in *one module*\r\n   *   then we can use that language feature.\r\n   */\r\n  var privateMethods = {\r\n    swalPromiseResolve: new WeakMap(),\r\n    swalPromiseReject: new WeakMap()\r\n  };\r\n\r\n  /*\r\n   * Global function to determine if SweetAlert2 popup is shown\r\n   */\r\n\r\n  const isVisible$1 = () => {\r\n    return isVisible(getPopup());\r\n  };\r\n  /*\r\n   * Global function to click 'Confirm' button\r\n   */\r\n\r\n  const clickConfirm = () => getConfirmButton() && getConfirmButton().click();\r\n  /*\r\n   * Global function to click 'Deny' button\r\n   */\r\n\r\n  const clickDeny = () => getDenyButton() && getDenyButton().click();\r\n  /*\r\n   * Global function to click 'Cancel' button\r\n   */\r\n\r\n  const clickCancel = () => getCancelButton() && getCancelButton().click();\r\n\r\n  /**\r\n   * @param {GlobalState} globalState\r\n   */\r\n\r\n  const removeKeydownHandler = globalState => {\r\n    if (globalState.keydownTarget && globalState.keydownHandlerAdded) {\r\n      globalState.keydownTarget.removeEventListener('keydown', globalState.keydownHandler, {\r\n        capture: globalState.keydownListenerCapture\r\n      });\r\n      globalState.keydownHandlerAdded = false;\r\n    }\r\n  };\r\n  /**\r\n   * @param {SweetAlert2} instance\r\n   * @param {GlobalState} globalState\r\n   * @param {SweetAlertOptions} innerParams\r\n   * @param {*} dismissWith\r\n   */\r\n\r\n  const addKeydownHandler = (instance, globalState, innerParams, dismissWith) => {\r\n    removeKeydownHandler(globalState);\r\n\r\n    if (!innerParams.toast) {\r\n      globalState.keydownHandler = e => keydownHandler(instance, e, dismissWith);\r\n\r\n      globalState.keydownTarget = innerParams.keydownListenerCapture ? window : getPopup();\r\n      globalState.keydownListenerCapture = innerParams.keydownListenerCapture;\r\n      globalState.keydownTarget.addEventListener('keydown', globalState.keydownHandler, {\r\n        capture: globalState.keydownListenerCapture\r\n      });\r\n      globalState.keydownHandlerAdded = true;\r\n    }\r\n  };\r\n  /**\r\n   * @param {SweetAlertOptions} innerParams\r\n   * @param {number} index\r\n   * @param {number} increment\r\n   */\r\n\r\n  const setFocus = (innerParams, index, increment) => {\r\n    const focusableElements = getFocusableElements(); // search for visible elements and select the next possible match\r\n\r\n    if (focusableElements.length) {\r\n      index = index + increment; // rollover to first item\r\n\r\n      if (index === focusableElements.length) {\r\n        index = 0; // go to last item\r\n      } else if (index === -1) {\r\n        index = focusableElements.length - 1;\r\n      }\r\n\r\n      return focusableElements[index].focus();\r\n    } // no visible focusable elements, focus the popup\r\n\r\n\r\n    getPopup().focus();\r\n  };\r\n  const arrowKeysNextButton = ['ArrowRight', 'ArrowDown'];\r\n  const arrowKeysPreviousButton = ['ArrowLeft', 'ArrowUp'];\r\n  /**\r\n   * @param {SweetAlert2} instance\r\n   * @param {KeyboardEvent} e\r\n   * @param {function} dismissWith\r\n   */\r\n\r\n  const keydownHandler = (instance, e, dismissWith) => {\r\n    const innerParams = privateProps.innerParams.get(instance);\r\n\r\n    if (!innerParams) {\r\n      return; // This instance has already been destroyed\r\n    } // Ignore keydown during IME composition\r\n    // https://developer.mozilla.org/en-US/docs/Web/API/Document/keydown_event#ignoring_keydown_during_ime_composition\r\n    // https://github.com/sweetalert2/sweetalert2/issues/720\r\n    // https://github.com/sweetalert2/sweetalert2/issues/2406\r\n\r\n\r\n    if (e.isComposing || e.keyCode === 229) {\r\n      return;\r\n    }\r\n\r\n    if (innerParams.stopKeydownPropagation) {\r\n      e.stopPropagation();\r\n    } // ENTER\r\n\r\n\r\n    if (e.key === 'Enter') {\r\n      handleEnter(instance, e, innerParams);\r\n    } // TAB\r\n    else if (e.key === 'Tab') {\r\n      handleTab(e, innerParams);\r\n    } // ARROWS - switch focus between buttons\r\n    else if ([...arrowKeysNextButton, ...arrowKeysPreviousButton].includes(e.key)) {\r\n      handleArrows(e.key);\r\n    } // ESC\r\n    else if (e.key === 'Escape') {\r\n      handleEsc(e, innerParams, dismissWith);\r\n    }\r\n  };\r\n  /**\r\n   * @param {SweetAlert2} instance\r\n   * @param {KeyboardEvent} e\r\n   * @param {SweetAlertOptions} innerParams\r\n   */\r\n\r\n\r\n  const handleEnter = (instance, e, innerParams) => {\r\n    // https://github.com/sweetalert2/sweetalert2/issues/2386\r\n    if (!callIfFunction(innerParams.allowEnterKey)) {\r\n      return;\r\n    }\r\n\r\n    if (e.target && instance.getInput() && e.target instanceof HTMLElement && e.target.outerHTML === instance.getInput().outerHTML) {\r\n      if (['textarea', 'file'].includes(innerParams.input)) {\r\n        return; // do not submit\r\n      }\r\n\r\n      clickConfirm();\r\n      e.preventDefault();\r\n    }\r\n  };\r\n  /**\r\n   * @param {KeyboardEvent} e\r\n   * @param {SweetAlertOptions} innerParams\r\n   */\r\n\r\n\r\n  const handleTab = (e, innerParams) => {\r\n    const targetElement = e.target;\r\n    const focusableElements = getFocusableElements();\r\n    let btnIndex = -1;\r\n\r\n    for (let i = 0; i < focusableElements.length; i++) {\r\n      if (targetElement === focusableElements[i]) {\r\n        btnIndex = i;\r\n        break;\r\n      }\r\n    } // Cycle to the next button\r\n\r\n\r\n    if (!e.shiftKey) {\r\n      setFocus(innerParams, btnIndex, 1);\r\n    } // Cycle to the prev button\r\n    else {\r\n      setFocus(innerParams, btnIndex, -1);\r\n    }\r\n\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n  };\r\n  /**\r\n   * @param {string} key\r\n   */\r\n\r\n\r\n  const handleArrows = key => {\r\n    const confirmButton = getConfirmButton();\r\n    const denyButton = getDenyButton();\r\n    const cancelButton = getCancelButton();\r\n\r\n    if (document.activeElement instanceof HTMLElement && ![confirmButton, denyButton, cancelButton].includes(document.activeElement)) {\r\n      return;\r\n    }\r\n\r\n    const sibling = arrowKeysNextButton.includes(key) ? 'nextElementSibling' : 'previousElementSibling';\r\n    let buttonToFocus = document.activeElement;\r\n\r\n    for (let i = 0; i < getActions().children.length; i++) {\r\n      buttonToFocus = buttonToFocus[sibling];\r\n\r\n      if (!buttonToFocus) {\r\n        return;\r\n      }\r\n\r\n      if (buttonToFocus instanceof HTMLButtonElement && isVisible(buttonToFocus)) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (buttonToFocus instanceof HTMLButtonElement) {\r\n      buttonToFocus.focus();\r\n    }\r\n  };\r\n  /**\r\n   * @param {KeyboardEvent} e\r\n   * @param {SweetAlertOptions} innerParams\r\n   * @param {function} dismissWith\r\n   */\r\n\r\n\r\n  const handleEsc = (e, innerParams, dismissWith) => {\r\n    if (callIfFunction(innerParams.allowEscapeKey)) {\r\n      e.preventDefault();\r\n      dismissWith(DismissReason.esc);\r\n    }\r\n  };\r\n\r\n  /*\r\n   * Instance method to close sweetAlert\r\n   */\r\n\r\n  function removePopupAndResetState(instance, container, returnFocus, didClose) {\r\n    if (isToast()) {\r\n      triggerDidCloseAndDispose(instance, didClose);\r\n    } else {\r\n      restoreActiveElement(returnFocus).then(() => triggerDidCloseAndDispose(instance, didClose));\r\n      removeKeydownHandler(globalState);\r\n    }\r\n\r\n    const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent); // workaround for #2088\r\n    // for some reason removing the container in Safari will scroll the document to bottom\r\n\r\n    if (isSafari) {\r\n      container.setAttribute('style', 'display:none !important');\r\n      container.removeAttribute('class');\r\n      container.innerHTML = '';\r\n    } else {\r\n      container.remove();\r\n    }\r\n\r\n    if (isModal()) {\r\n      undoScrollbar();\r\n      undoIOSfix();\r\n      unsetAriaHidden();\r\n    }\r\n\r\n    removeBodyClasses();\r\n  }\r\n\r\n  function removeBodyClasses() {\r\n    removeClass([document.documentElement, document.body], [swalClasses.shown, swalClasses['height-auto'], swalClasses['no-backdrop'], swalClasses['toast-shown']]);\r\n  }\r\n\r\n  function close(resolveValue) {\r\n    resolveValue = prepareResolveValue(resolveValue);\r\n    const swalPromiseResolve = privateMethods.swalPromiseResolve.get(this);\r\n    const didClose = triggerClosePopup(this);\r\n\r\n    if (this.isAwaitingPromise()) {\r\n      // A swal awaiting for a promise (after a click on Confirm or Deny) cannot be dismissed anymore #2335\r\n      if (!resolveValue.isDismissed) {\r\n        handleAwaitingPromise(this);\r\n        swalPromiseResolve(resolveValue);\r\n      }\r\n    } else if (didClose) {\r\n      // Resolve Swal promise\r\n      swalPromiseResolve(resolveValue);\r\n    }\r\n  }\r\n  function isAwaitingPromise() {\r\n    return !!privateProps.awaitingPromise.get(this);\r\n  }\r\n\r\n  const triggerClosePopup = instance => {\r\n    const popup = getPopup();\r\n\r\n    if (!popup) {\r\n      return false;\r\n    }\r\n\r\n    const innerParams = privateProps.innerParams.get(instance);\r\n\r\n    if (!innerParams || hasClass(popup, innerParams.hideClass.popup)) {\r\n      return false;\r\n    }\r\n\r\n    removeClass(popup, innerParams.showClass.popup);\r\n    addClass(popup, innerParams.hideClass.popup);\r\n    const backdrop = getContainer();\r\n    removeClass(backdrop, innerParams.showClass.backdrop);\r\n    addClass(backdrop, innerParams.hideClass.backdrop);\r\n    handlePopupAnimation(instance, popup, innerParams);\r\n    return true;\r\n  };\r\n\r\n  function rejectPromise(error) {\r\n    const rejectPromise = privateMethods.swalPromiseReject.get(this);\r\n    handleAwaitingPromise(this);\r\n\r\n    if (rejectPromise) {\r\n      // Reject Swal promise\r\n      rejectPromise(error);\r\n    }\r\n  }\r\n  const handleAwaitingPromise = instance => {\r\n    if (instance.isAwaitingPromise()) {\r\n      privateProps.awaitingPromise.delete(instance); // The instance might have been previously partly destroyed, we must resume the destroy process in this case #2335\r\n\r\n      if (!privateProps.innerParams.get(instance)) {\r\n        instance._destroy();\r\n      }\r\n    }\r\n  };\r\n\r\n  const prepareResolveValue = resolveValue => {\r\n    // When user calls Swal.close()\r\n    if (typeof resolveValue === 'undefined') {\r\n      return {\r\n        isConfirmed: false,\r\n        isDenied: false,\r\n        isDismissed: true\r\n      };\r\n    }\r\n\r\n    return Object.assign({\r\n      isConfirmed: false,\r\n      isDenied: false,\r\n      isDismissed: false\r\n    }, resolveValue);\r\n  };\r\n\r\n  const handlePopupAnimation = (instance, popup, innerParams) => {\r\n    const container = getContainer(); // If animation is supported, animate\r\n\r\n    const animationIsSupported = animationEndEvent && hasCssAnimation(popup);\r\n\r\n    if (typeof innerParams.willClose === 'function') {\r\n      innerParams.willClose(popup);\r\n    }\r\n\r\n    if (animationIsSupported) {\r\n      animatePopup(instance, popup, container, innerParams.returnFocus, innerParams.didClose);\r\n    } else {\r\n      // Otherwise, remove immediately\r\n      removePopupAndResetState(instance, container, innerParams.returnFocus, innerParams.didClose);\r\n    }\r\n  };\r\n\r\n  const animatePopup = (instance, popup, container, returnFocus, didClose) => {\r\n    globalState.swalCloseEventFinishedCallback = removePopupAndResetState.bind(null, instance, container, returnFocus, didClose);\r\n    popup.addEventListener(animationEndEvent, function (e) {\r\n      if (e.target === popup) {\r\n        globalState.swalCloseEventFinishedCallback();\r\n        delete globalState.swalCloseEventFinishedCallback;\r\n      }\r\n    });\r\n  };\r\n\r\n  const triggerDidCloseAndDispose = (instance, didClose) => {\r\n    setTimeout(() => {\r\n      if (typeof didClose === 'function') {\r\n        didClose.bind(instance.params)();\r\n      }\r\n\r\n      instance._destroy();\r\n    });\r\n  };\r\n\r\n  function setButtonsDisabled(instance, buttons, disabled) {\r\n    const domCache = privateProps.domCache.get(instance);\r\n    buttons.forEach(button => {\r\n      domCache[button].disabled = disabled;\r\n    });\r\n  }\r\n\r\n  function setInputDisabled(input, disabled) {\r\n    if (!input) {\r\n      return false;\r\n    }\r\n\r\n    if (input.type === 'radio') {\r\n      const radiosContainer = input.parentNode.parentNode;\r\n      const radios = radiosContainer.querySelectorAll('input');\r\n\r\n      for (let i = 0; i < radios.length; i++) {\r\n        radios[i].disabled = disabled;\r\n      }\r\n    } else {\r\n      input.disabled = disabled;\r\n    }\r\n  }\r\n\r\n  function enableButtons() {\r\n    setButtonsDisabled(this, ['confirmButton', 'denyButton', 'cancelButton'], false);\r\n  }\r\n  function disableButtons() {\r\n    setButtonsDisabled(this, ['confirmButton', 'denyButton', 'cancelButton'], true);\r\n  }\r\n  function enableInput() {\r\n    return setInputDisabled(this.getInput(), false);\r\n  }\r\n  function disableInput() {\r\n    return setInputDisabled(this.getInput(), true);\r\n  }\r\n\r\n  function showValidationMessage(error) {\r\n    const domCache = privateProps.domCache.get(this);\r\n    const params = privateProps.innerParams.get(this);\r\n    setInnerHtml(domCache.validationMessage, error);\r\n    domCache.validationMessage.className = swalClasses['validation-message'];\r\n\r\n    if (params.customClass && params.customClass.validationMessage) {\r\n      addClass(domCache.validationMessage, params.customClass.validationMessage);\r\n    }\r\n\r\n    show(domCache.validationMessage);\r\n    const input = this.getInput();\r\n\r\n    if (input) {\r\n      input.setAttribute('aria-invalid', true);\r\n      input.setAttribute('aria-describedby', swalClasses['validation-message']);\r\n      focusInput(input);\r\n      addClass(input, swalClasses.inputerror);\r\n    }\r\n  } // Hide block with validation message\r\n\r\n  function resetValidationMessage$1() {\r\n    const domCache = privateProps.domCache.get(this);\r\n\r\n    if (domCache.validationMessage) {\r\n      hide(domCache.validationMessage);\r\n    }\r\n\r\n    const input = this.getInput();\r\n\r\n    if (input) {\r\n      input.removeAttribute('aria-invalid');\r\n      input.removeAttribute('aria-describedby');\r\n      removeClass(input, swalClasses.inputerror);\r\n    }\r\n  }\r\n\r\n  function getProgressSteps$1() {\r\n    const domCache = privateProps.domCache.get(this);\r\n    return domCache.progressSteps;\r\n  }\r\n\r\n  /**\r\n   * Updates popup parameters.\r\n   */\r\n\r\n  function update(params) {\r\n    const popup = getPopup();\r\n    const innerParams = privateProps.innerParams.get(this);\r\n\r\n    if (!popup || hasClass(popup, innerParams.hideClass.popup)) {\r\n      return warn(\"You're trying to update the closed or closing popup, that won't work. Use the update() method in preConfirm parameter or show a new popup.\");\r\n    }\r\n\r\n    const validUpdatableParams = filterValidParams(params);\r\n    const updatedParams = Object.assign({}, innerParams, validUpdatableParams);\r\n    render(this, updatedParams);\r\n    privateProps.innerParams.set(this, updatedParams);\r\n    Object.defineProperties(this, {\r\n      params: {\r\n        value: Object.assign({}, this.params, params),\r\n        writable: false,\r\n        enumerable: true\r\n      }\r\n    });\r\n  }\r\n\r\n  const filterValidParams = params => {\r\n    const validUpdatableParams = {};\r\n    Object.keys(params).forEach(param => {\r\n      if (isUpdatableParameter(param)) {\r\n        validUpdatableParams[param] = params[param];\r\n      } else {\r\n        warn(\"Invalid parameter to update: \".concat(param));\r\n      }\r\n    });\r\n    return validUpdatableParams;\r\n  };\r\n\r\n  function _destroy() {\r\n    const domCache = privateProps.domCache.get(this);\r\n    const innerParams = privateProps.innerParams.get(this);\r\n\r\n    if (!innerParams) {\r\n      disposeWeakMaps(this); // The WeakMaps might have been partly destroyed, we must recall it to dispose any remaining WeakMaps #2335\r\n\r\n      return; // This instance has already been destroyed\r\n    } // Check if there is another Swal closing\r\n\r\n\r\n    if (domCache.popup && globalState.swalCloseEventFinishedCallback) {\r\n      globalState.swalCloseEventFinishedCallback();\r\n      delete globalState.swalCloseEventFinishedCallback;\r\n    }\r\n\r\n    if (typeof innerParams.didDestroy === 'function') {\r\n      innerParams.didDestroy();\r\n    }\r\n\r\n    disposeSwal(this);\r\n  }\r\n  /**\r\n   * @param {SweetAlert2} instance\r\n   */\r\n\r\n  const disposeSwal = instance => {\r\n    disposeWeakMaps(instance); // Unset this.params so GC will dispose it (#1569)\r\n    // @ts-ignore\r\n\r\n    delete instance.params; // Unset globalState props so GC will dispose globalState (#1569)\r\n\r\n    delete globalState.keydownHandler;\r\n    delete globalState.keydownTarget; // Unset currentInstance\r\n\r\n    delete globalState.currentInstance;\r\n  };\r\n  /**\r\n   * @param {SweetAlert2} instance\r\n   */\r\n\r\n\r\n  const disposeWeakMaps = instance => {\r\n    // If the current instance is awaiting a promise result, we keep the privateMethods to call them once the promise result is retrieved #2335\r\n    // @ts-ignore\r\n    if (instance.isAwaitingPromise()) {\r\n      unsetWeakMaps(privateProps, instance);\r\n      privateProps.awaitingPromise.set(instance, true);\r\n    } else {\r\n      unsetWeakMaps(privateMethods, instance);\r\n      unsetWeakMaps(privateProps, instance);\r\n    }\r\n  };\r\n  /**\r\n   * @param {object} obj\r\n   * @param {SweetAlert2} instance\r\n   */\r\n\r\n\r\n  const unsetWeakMaps = (obj, instance) => {\r\n    for (const i in obj) {\r\n      obj[i].delete(instance);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  var instanceMethods = /*#__PURE__*/Object.freeze({\r\n    hideLoading: hideLoading,\r\n    disableLoading: hideLoading,\r\n    getInput: getInput$1,\r\n    close: close,\r\n    isAwaitingPromise: isAwaitingPromise,\r\n    rejectPromise: rejectPromise,\r\n    handleAwaitingPromise: handleAwaitingPromise,\r\n    closePopup: close,\r\n    closeModal: close,\r\n    closeToast: close,\r\n    enableButtons: enableButtons,\r\n    disableButtons: disableButtons,\r\n    enableInput: enableInput,\r\n    disableInput: disableInput,\r\n    showValidationMessage: showValidationMessage,\r\n    resetValidationMessage: resetValidationMessage$1,\r\n    getProgressSteps: getProgressSteps$1,\r\n    update: update,\r\n    _destroy: _destroy\r\n  });\r\n\r\n  /**\r\n   * @param {SweetAlert2} instance\r\n   */\r\n\r\n  const handleConfirmButtonClick = instance => {\r\n    const innerParams = privateProps.innerParams.get(instance);\r\n    instance.disableButtons();\r\n\r\n    if (innerParams.input) {\r\n      handleConfirmOrDenyWithInput(instance, 'confirm');\r\n    } else {\r\n      confirm(instance, true);\r\n    }\r\n  };\r\n  /**\r\n   * @param {SweetAlert2} instance\r\n   */\r\n\r\n  const handleDenyButtonClick = instance => {\r\n    const innerParams = privateProps.innerParams.get(instance);\r\n    instance.disableButtons();\r\n\r\n    if (innerParams.returnInputValueOnDeny) {\r\n      handleConfirmOrDenyWithInput(instance, 'deny');\r\n    } else {\r\n      deny(instance, false);\r\n    }\r\n  };\r\n  /**\r\n   * @param {SweetAlert2} instance\r\n   * @param {Function} dismissWith\r\n   */\r\n\r\n  const handleCancelButtonClick = (instance, dismissWith) => {\r\n    instance.disableButtons();\r\n    dismissWith(DismissReason.cancel);\r\n  };\r\n  /**\r\n   * @param {SweetAlert2} instance\r\n   * @param {'confirm' | 'deny'} type\r\n   */\r\n\r\n  const handleConfirmOrDenyWithInput = (instance, type) => {\r\n    const innerParams = privateProps.innerParams.get(instance);\r\n\r\n    if (!innerParams.input) {\r\n      error(\"The \\\"input\\\" parameter is needed to be set when using returnInputValueOn\".concat(capitalizeFirstLetter(type)));\r\n      return;\r\n    }\r\n\r\n    const inputValue = getInputValue(instance, innerParams);\r\n\r\n    if (innerParams.inputValidator) {\r\n      handleInputValidator(instance, inputValue, type);\r\n    } else if (!instance.getInput().checkValidity()) {\r\n      instance.enableButtons();\r\n      instance.showValidationMessage(innerParams.validationMessage);\r\n    } else if (type === 'deny') {\r\n      deny(instance, inputValue);\r\n    } else {\r\n      confirm(instance, inputValue);\r\n    }\r\n  };\r\n  /**\r\n   * @param {SweetAlert2} instance\r\n   * @param {string} inputValue\r\n   * @param {'confirm' | 'deny'} type\r\n   */\r\n\r\n\r\n  const handleInputValidator = (instance, inputValue, type) => {\r\n    const innerParams = privateProps.innerParams.get(instance);\r\n    instance.disableInput();\r\n    const validationPromise = Promise.resolve().then(() => asPromise(innerParams.inputValidator(inputValue, innerParams.validationMessage)));\r\n    validationPromise.then(validationMessage => {\r\n      instance.enableButtons();\r\n      instance.enableInput();\r\n\r\n      if (validationMessage) {\r\n        instance.showValidationMessage(validationMessage);\r\n      } else if (type === 'deny') {\r\n        deny(instance, inputValue);\r\n      } else {\r\n        confirm(instance, inputValue);\r\n      }\r\n    });\r\n  };\r\n  /**\r\n   * @param {SweetAlert2} instance\r\n   * @param {any} value\r\n   */\r\n\r\n\r\n  const deny = (instance, value) => {\r\n    const innerParams = privateProps.innerParams.get(instance || undefined);\r\n\r\n    if (innerParams.showLoaderOnDeny) {\r\n      showLoading(getDenyButton());\r\n    }\r\n\r\n    if (innerParams.preDeny) {\r\n      privateProps.awaitingPromise.set(instance || undefined, true); // Flagging the instance as awaiting a promise so it's own promise's reject/resolve methods doesn't get destroyed until the result from this preDeny's promise is received\r\n\r\n      const preDenyPromise = Promise.resolve().then(() => asPromise(innerParams.preDeny(value, innerParams.validationMessage)));\r\n      preDenyPromise.then(preDenyValue => {\r\n        if (preDenyValue === false) {\r\n          instance.hideLoading();\r\n          handleAwaitingPromise(instance);\r\n        } else {\r\n          instance.close({\r\n            isDenied: true,\r\n            value: typeof preDenyValue === 'undefined' ? value : preDenyValue\r\n          });\r\n        }\r\n      }).catch(error$$1 => rejectWith(instance || undefined, error$$1));\r\n    } else {\r\n      instance.close({\r\n        isDenied: true,\r\n        value\r\n      });\r\n    }\r\n  };\r\n  /**\r\n   * @param {SweetAlert2} instance\r\n   * @param {any} value\r\n   */\r\n\r\n\r\n  const succeedWith = (instance, value) => {\r\n    instance.close({\r\n      isConfirmed: true,\r\n      value\r\n    });\r\n  };\r\n  /**\r\n   *\r\n   * @param {SweetAlert2} instance\r\n   * @param {string} error\r\n   */\r\n\r\n\r\n  const rejectWith = (instance, error$$1) => {\r\n    // @ts-ignore\r\n    instance.rejectPromise(error$$1);\r\n  };\r\n  /**\r\n   *\r\n   * @param {SweetAlert2} instance\r\n   * @param {any} value\r\n   */\r\n\r\n\r\n  const confirm = (instance, value) => {\r\n    const innerParams = privateProps.innerParams.get(instance || undefined);\r\n\r\n    if (innerParams.showLoaderOnConfirm) {\r\n      showLoading();\r\n    }\r\n\r\n    if (innerParams.preConfirm) {\r\n      instance.resetValidationMessage();\r\n      privateProps.awaitingPromise.set(instance || undefined, true); // Flagging the instance as awaiting a promise so it's own promise's reject/resolve methods doesn't get destroyed until the result from this preConfirm's promise is received\r\n\r\n      const preConfirmPromise = Promise.resolve().then(() => asPromise(innerParams.preConfirm(value, innerParams.validationMessage)));\r\n      preConfirmPromise.then(preConfirmValue => {\r\n        if (isVisible(getValidationMessage()) || preConfirmValue === false) {\r\n          instance.hideLoading();\r\n          handleAwaitingPromise(instance);\r\n        } else {\r\n          succeedWith(instance, typeof preConfirmValue === 'undefined' ? value : preConfirmValue);\r\n        }\r\n      }).catch(error$$1 => rejectWith(instance || undefined, error$$1));\r\n    } else {\r\n      succeedWith(instance, value);\r\n    }\r\n  };\r\n\r\n  const handlePopupClick = (instance, domCache, dismissWith) => {\r\n    const innerParams = privateProps.innerParams.get(instance);\r\n\r\n    if (innerParams.toast) {\r\n      handleToastClick(instance, domCache, dismissWith);\r\n    } else {\r\n      // Ignore click events that had mousedown on the popup but mouseup on the container\r\n      // This can happen when the user drags a slider\r\n      handleModalMousedown(domCache); // Ignore click events that had mousedown on the container but mouseup on the popup\r\n\r\n      handleContainerMousedown(domCache);\r\n      handleModalClick(instance, domCache, dismissWith);\r\n    }\r\n  };\r\n\r\n  const handleToastClick = (instance, domCache, dismissWith) => {\r\n    // Closing toast by internal click\r\n    domCache.popup.onclick = () => {\r\n      const innerParams = privateProps.innerParams.get(instance);\r\n\r\n      if (innerParams && (isAnyButtonShown(innerParams) || innerParams.timer || innerParams.input)) {\r\n        return;\r\n      }\r\n\r\n      dismissWith(DismissReason.close);\r\n    };\r\n  };\r\n  /**\r\n   * @param {*} innerParams\r\n   * @returns {boolean}\r\n   */\r\n\r\n\r\n  const isAnyButtonShown = innerParams => {\r\n    return innerParams.showConfirmButton || innerParams.showDenyButton || innerParams.showCancelButton || innerParams.showCloseButton;\r\n  };\r\n\r\n  let ignoreOutsideClick = false;\r\n\r\n  const handleModalMousedown = domCache => {\r\n    domCache.popup.onmousedown = () => {\r\n      domCache.container.onmouseup = function (e) {\r\n        domCache.container.onmouseup = undefined; // We only check if the mouseup target is the container because usually it doesn't\r\n        // have any other direct children aside of the popup\r\n\r\n        if (e.target === domCache.container) {\r\n          ignoreOutsideClick = true;\r\n        }\r\n      };\r\n    };\r\n  };\r\n\r\n  const handleContainerMousedown = domCache => {\r\n    domCache.container.onmousedown = () => {\r\n      domCache.popup.onmouseup = function (e) {\r\n        domCache.popup.onmouseup = undefined; // We also need to check if the mouseup target is a child of the popup\r\n\r\n        if (e.target === domCache.popup || domCache.popup.contains(e.target)) {\r\n          ignoreOutsideClick = true;\r\n        }\r\n      };\r\n    };\r\n  };\r\n\r\n  const handleModalClick = (instance, domCache, dismissWith) => {\r\n    domCache.container.onclick = e => {\r\n      const innerParams = privateProps.innerParams.get(instance);\r\n\r\n      if (ignoreOutsideClick) {\r\n        ignoreOutsideClick = false;\r\n        return;\r\n      }\r\n\r\n      if (e.target === domCache.container && callIfFunction(innerParams.allowOutsideClick)) {\r\n        dismissWith(DismissReason.backdrop);\r\n      }\r\n    };\r\n  };\r\n\r\n  const isJqueryElement = elem => typeof elem === 'object' && elem.jquery;\r\n\r\n  const isElement = elem => elem instanceof Element || isJqueryElement(elem);\r\n\r\n  const argsToParams = args => {\r\n    const params = {};\r\n\r\n    if (typeof args[0] === 'object' && !isElement(args[0])) {\r\n      Object.assign(params, args[0]);\r\n    } else {\r\n      ['title', 'html', 'icon'].forEach((name, index) => {\r\n        const arg = args[index];\r\n\r\n        if (typeof arg === 'string' || isElement(arg)) {\r\n          params[name] = arg;\r\n        } else if (arg !== undefined) {\r\n          error(\"Unexpected type of \".concat(name, \"! Expected \\\"string\\\" or \\\"Element\\\", got \").concat(typeof arg));\r\n        }\r\n      });\r\n    }\r\n\r\n    return params;\r\n  };\r\n\r\n  function fire() {\r\n    const Swal = this; // eslint-disable-line @typescript-eslint/no-this-alias\r\n\r\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\r\n      args[_key] = arguments[_key];\r\n    }\r\n\r\n    return new Swal(...args);\r\n  }\r\n\r\n  /**\r\n   * Returns an extended version of `Swal` containing `params` as defaults.\r\n   * Useful for reusing Swal configuration.\r\n   *\r\n   * For example:\r\n   *\r\n   * Before:\r\n   * const textPromptOptions = { input: 'text', showCancelButton: true }\r\n   * const {value: firstName} = await Swal.fire({ ...textPromptOptions, title: 'What is your first name?' })\r\n   * const {value: lastName} = await Swal.fire({ ...textPromptOptions, title: 'What is your last name?' })\r\n   *\r\n   * After:\r\n   * const TextPrompt = Swal.mixin({ input: 'text', showCancelButton: true })\r\n   * const {value: firstName} = await TextPrompt('What is your first name?')\r\n   * const {value: lastName} = await TextPrompt('What is your last name?')\r\n   *\r\n   * @param mixinParams\r\n   */\r\n  function mixin(mixinParams) {\r\n    class MixinSwal extends this {\r\n      _main(params, priorityMixinParams) {\r\n        return super._main(params, Object.assign({}, mixinParams, priorityMixinParams));\r\n      }\r\n\r\n    }\r\n\r\n    return MixinSwal;\r\n  }\r\n\r\n  /**\r\n   * If `timer` parameter is set, returns number of milliseconds of timer remained.\r\n   * Otherwise, returns undefined.\r\n   */\r\n\r\n  const getTimerLeft = () => {\r\n    return globalState.timeout && globalState.timeout.getTimerLeft();\r\n  };\r\n  /**\r\n   * Stop timer. Returns number of milliseconds of timer remained.\r\n   * If `timer` parameter isn't set, returns undefined.\r\n   */\r\n\r\n  const stopTimer = () => {\r\n    if (globalState.timeout) {\r\n      stopTimerProgressBar();\r\n      return globalState.timeout.stop();\r\n    }\r\n  };\r\n  /**\r\n   * Resume timer. Returns number of milliseconds of timer remained.\r\n   * If `timer` parameter isn't set, returns undefined.\r\n   */\r\n\r\n  const resumeTimer = () => {\r\n    if (globalState.timeout) {\r\n      const remaining = globalState.timeout.start();\r\n      animateTimerProgressBar(remaining);\r\n      return remaining;\r\n    }\r\n  };\r\n  /**\r\n   * Resume timer. Returns number of milliseconds of timer remained.\r\n   * If `timer` parameter isn't set, returns undefined.\r\n   */\r\n\r\n  const toggleTimer = () => {\r\n    const timer = globalState.timeout;\r\n    return timer && (timer.running ? stopTimer() : resumeTimer());\r\n  };\r\n  /**\r\n   * Increase timer. Returns number of milliseconds of an updated timer.\r\n   * If `timer` parameter isn't set, returns undefined.\r\n   */\r\n\r\n  const increaseTimer = n => {\r\n    if (globalState.timeout) {\r\n      const remaining = globalState.timeout.increase(n);\r\n      animateTimerProgressBar(remaining, true);\r\n      return remaining;\r\n    }\r\n  };\r\n  /**\r\n   * Check if timer is running. Returns true if timer is running\r\n   * or false if timer is paused or stopped.\r\n   * If `timer` parameter isn't set, returns undefined\r\n   */\r\n\r\n  const isTimerRunning = () => {\r\n    return globalState.timeout && globalState.timeout.isRunning();\r\n  };\r\n\r\n  let bodyClickListenerAdded = false;\r\n  const clickHandlers = {};\r\n  function bindClickHandler() {\r\n    let attr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'data-swal-template';\r\n    clickHandlers[attr] = this;\r\n\r\n    if (!bodyClickListenerAdded) {\r\n      document.body.addEventListener('click', bodyClickListener);\r\n      bodyClickListenerAdded = true;\r\n    }\r\n  }\r\n\r\n  const bodyClickListener = event => {\r\n    for (let el = event.target; el && el !== document; el = el.parentNode) {\r\n      for (const attr in clickHandlers) {\r\n        const template = el.getAttribute(attr);\r\n\r\n        if (template) {\r\n          clickHandlers[attr].fire({\r\n            template\r\n          });\r\n          return;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n\r\n  var staticMethods = /*#__PURE__*/Object.freeze({\r\n    isValidParameter: isValidParameter,\r\n    isUpdatableParameter: isUpdatableParameter,\r\n    isDeprecatedParameter: isDeprecatedParameter,\r\n    argsToParams: argsToParams,\r\n    isVisible: isVisible$1,\r\n    clickConfirm: clickConfirm,\r\n    clickDeny: clickDeny,\r\n    clickCancel: clickCancel,\r\n    getContainer: getContainer,\r\n    getPopup: getPopup,\r\n    getTitle: getTitle,\r\n    getHtmlContainer: getHtmlContainer,\r\n    getImage: getImage,\r\n    getIcon: getIcon,\r\n    getInputLabel: getInputLabel,\r\n    getCloseButton: getCloseButton,\r\n    getActions: getActions,\r\n    getConfirmButton: getConfirmButton,\r\n    getDenyButton: getDenyButton,\r\n    getCancelButton: getCancelButton,\r\n    getLoader: getLoader,\r\n    getFooter: getFooter,\r\n    getTimerProgressBar: getTimerProgressBar,\r\n    getFocusableElements: getFocusableElements,\r\n    getValidationMessage: getValidationMessage,\r\n    isLoading: isLoading,\r\n    fire: fire,\r\n    mixin: mixin,\r\n    showLoading: showLoading,\r\n    enableLoading: showLoading,\r\n    getTimerLeft: getTimerLeft,\r\n    stopTimer: stopTimer,\r\n    resumeTimer: resumeTimer,\r\n    toggleTimer: toggleTimer,\r\n    increaseTimer: increaseTimer,\r\n    isTimerRunning: isTimerRunning,\r\n    bindClickHandler: bindClickHandler\r\n  });\r\n\r\n  let currentInstance;\r\n\r\n  class SweetAlert {\r\n    constructor() {\r\n      // Prevent run in Node env\r\n      if (typeof window === 'undefined') {\r\n        return;\r\n      }\r\n\r\n      currentInstance = this; // @ts-ignore\r\n\r\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\r\n        args[_key] = arguments[_key];\r\n      }\r\n\r\n      const outerParams = Object.freeze(this.constructor.argsToParams(args));\r\n      Object.defineProperties(this, {\r\n        params: {\r\n          value: outerParams,\r\n          writable: false,\r\n          enumerable: true,\r\n          configurable: true\r\n        }\r\n      }); // @ts-ignore\r\n\r\n      const promise = currentInstance._main(currentInstance.params);\r\n\r\n      privateProps.promise.set(this, promise);\r\n    }\r\n\r\n    _main(userParams) {\r\n      let mixinParams = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n      showWarningsForParams(Object.assign({}, mixinParams, userParams));\r\n\r\n      if (globalState.currentInstance) {\r\n        // @ts-ignore\r\n        globalState.currentInstance._destroy();\r\n\r\n        if (isModal()) {\r\n          unsetAriaHidden();\r\n        }\r\n      }\r\n\r\n      globalState.currentInstance = currentInstance;\r\n      const innerParams = prepareParams(userParams, mixinParams);\r\n      setParameters(innerParams);\r\n      Object.freeze(innerParams); // clear the previous timer\r\n\r\n      if (globalState.timeout) {\r\n        globalState.timeout.stop();\r\n        delete globalState.timeout;\r\n      } // clear the restore focus timeout\r\n\r\n\r\n      clearTimeout(globalState.restoreFocusTimeout);\r\n      const domCache = populateDomCache(currentInstance);\r\n      render(currentInstance, innerParams);\r\n      privateProps.innerParams.set(currentInstance, innerParams);\r\n      return swalPromise(currentInstance, domCache, innerParams);\r\n    } // `catch` cannot be the name of a module export, so we define our thenable methods here instead\r\n\r\n\r\n    then(onFulfilled) {\r\n      const promise = privateProps.promise.get(this);\r\n      return promise.then(onFulfilled);\r\n    }\r\n\r\n    finally(onFinally) {\r\n      const promise = privateProps.promise.get(this);\r\n      return promise.finally(onFinally);\r\n    }\r\n\r\n  }\r\n\r\n  const swalPromise = (instance, domCache, innerParams) => {\r\n    return new Promise((resolve, reject) => {\r\n      // functions to handle all closings/dismissals\r\n      const dismissWith = dismiss => {\r\n        instance.closePopup({\r\n          isDismissed: true,\r\n          dismiss\r\n        });\r\n      };\r\n\r\n      privateMethods.swalPromiseResolve.set(instance, resolve);\r\n      privateMethods.swalPromiseReject.set(instance, reject);\r\n\r\n      domCache.confirmButton.onclick = () => handleConfirmButtonClick(instance);\r\n\r\n      domCache.denyButton.onclick = () => handleDenyButtonClick(instance);\r\n\r\n      domCache.cancelButton.onclick = () => handleCancelButtonClick(instance, dismissWith);\r\n\r\n      domCache.closeButton.onclick = () => dismissWith(DismissReason.close);\r\n\r\n      handlePopupClick(instance, domCache, dismissWith);\r\n      addKeydownHandler(instance, globalState, innerParams, dismissWith);\r\n      handleInputOptionsAndValue(instance, innerParams);\r\n      openPopup(innerParams);\r\n      setupTimer(globalState, innerParams, dismissWith);\r\n      initFocus(domCache, innerParams); // Scroll container to top on open (#1247, #1946)\r\n\r\n      setTimeout(() => {\r\n        domCache.container.scrollTop = 0;\r\n      });\r\n    });\r\n  };\r\n\r\n  const prepareParams = (userParams, mixinParams) => {\r\n    const templateParams = getTemplateParams(userParams);\r\n    const params = Object.assign({}, defaultParams, mixinParams, templateParams, userParams); // precedence is described in #2131\r\n\r\n    params.showClass = Object.assign({}, defaultParams.showClass, params.showClass);\r\n    params.hideClass = Object.assign({}, defaultParams.hideClass, params.hideClass);\r\n    return params;\r\n  };\r\n  /**\r\n   * @param {SweetAlert2} instance\r\n   * @returns {DomCache}\r\n   */\r\n\r\n\r\n  const populateDomCache = instance => {\r\n    const domCache = {\r\n      popup: getPopup(),\r\n      container: getContainer(),\r\n      actions: getActions(),\r\n      confirmButton: getConfirmButton(),\r\n      denyButton: getDenyButton(),\r\n      cancelButton: getCancelButton(),\r\n      loader: getLoader(),\r\n      closeButton: getCloseButton(),\r\n      validationMessage: getValidationMessage(),\r\n      progressSteps: getProgressSteps()\r\n    };\r\n    privateProps.domCache.set(instance, domCache);\r\n    return domCache;\r\n  };\r\n  /**\r\n   * @param {GlobalState} globalState\r\n   * @param {SweetAlertOptions} innerParams\r\n   * @param {function} dismissWith\r\n   */\r\n\r\n\r\n  const setupTimer = (globalState$$1, innerParams, dismissWith) => {\r\n    const timerProgressBar = getTimerProgressBar();\r\n    hide(timerProgressBar);\r\n\r\n    if (innerParams.timer) {\r\n      globalState$$1.timeout = new Timer(() => {\r\n        dismissWith('timer');\r\n        delete globalState$$1.timeout;\r\n      }, innerParams.timer);\r\n\r\n      if (innerParams.timerProgressBar) {\r\n        show(timerProgressBar);\r\n        applyCustomClass(timerProgressBar, innerParams, 'timerProgressBar');\r\n        setTimeout(() => {\r\n          if (globalState$$1.timeout && globalState$$1.timeout.running) {\r\n            // timer can be already stopped or unset at this point\r\n            animateTimerProgressBar(innerParams.timer);\r\n          }\r\n        });\r\n      }\r\n    }\r\n  };\r\n  /**\r\n   * @param {DomCache} domCache\r\n   * @param {SweetAlertOptions} innerParams\r\n   */\r\n\r\n\r\n  const initFocus = (domCache, innerParams) => {\r\n    if (innerParams.toast) {\r\n      return;\r\n    }\r\n\r\n    if (!callIfFunction(innerParams.allowEnterKey)) {\r\n      return blurActiveElement();\r\n    }\r\n\r\n    if (!focusButton(domCache, innerParams)) {\r\n      setFocus(innerParams, -1, 1);\r\n    }\r\n  };\r\n  /**\r\n   * @param {DomCache} domCache\r\n   * @param {SweetAlertOptions} innerParams\r\n   * @returns {boolean}\r\n   */\r\n\r\n\r\n  const focusButton = (domCache, innerParams) => {\r\n    if (innerParams.focusDeny && isVisible(domCache.denyButton)) {\r\n      domCache.denyButton.focus();\r\n      return true;\r\n    }\r\n\r\n    if (innerParams.focusCancel && isVisible(domCache.cancelButton)) {\r\n      domCache.cancelButton.focus();\r\n      return true;\r\n    }\r\n\r\n    if (innerParams.focusConfirm && isVisible(domCache.confirmButton)) {\r\n      domCache.confirmButton.focus();\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  const blurActiveElement = () => {\r\n    if (document.activeElement instanceof HTMLElement && typeof document.activeElement.blur === 'function') {\r\n      document.activeElement.blur();\r\n    }\r\n  }; // This anti-war message will only be shown to Russian users visiting Russian sites\r\n\r\n\r\n  if (typeof window !== 'undefined' && /^ru\\b/.test(navigator.language) && location.host.match(/\\.(ru|su|xn--p1ai)$/)) {\r\n    if (Math.random() < 0.1) {\r\n      const noWar = document.createElement('div');\r\n      noWar.className = 'leave-russia-now-and-apply-your-skills-to-the-world';\r\n      const video = getRandomElement([{\r\n        text: \"\\u0412 \\u043D\\u0438\\u0436\\u0435\\u043F\\u0440\\u0438\\u0432\\u0435\\u0434\\u0451\\u043D\\u043D\\u043E\\u043C \\u0432\\u0438\\u0434\\u0435\\u043E \\u043E\\u0431\\u044A\\u044F\\u0441\\u043D\\u044F\\u0435\\u0442\\u0441\\u044F \\u043A\\u0430\\u043A \\u043A\\u0430\\u0436\\u0434\\u044B\\u0439 \\u0438\\u0437 \\u043D\\u0430\\u0441 \\u043C\\u043E\\u0436\\u0435\\u0442 \\u043F\\u043E\\u043C\\u043E\\u0447\\u044C \\u0432 \\u0442\\u043E\\u043C,\\n        <strong>\\u0447\\u0442\\u043E\\u0431\\u044B \\u044D\\u0442\\u0430 \\u0431\\u0435\\u0441\\u0441\\u043C\\u044B\\u0441\\u043B\\u0435\\u043D\\u043D\\u0430\\u044F \\u0438 \\u0431\\u0435\\u0441\\u0447\\u0435\\u043B\\u043E\\u0432\\u0435\\u0447\\u043D\\u0430\\u044F \\u0432\\u043E\\u0439\\u043D\\u0430 \\u043E\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u0438\\u043B\\u0430\\u0441\\u044C</strong>:\",\r\n        id: '4CfDhaRkw7I'\r\n      }, {\r\n        text: 'Эмпатия - главное <strong>человеческое</strong> чувство. Способность сопереживать. <strong>Способность поставить себя на место другого.</strong>',\r\n        id: 's-GLAIY4DXA'\r\n      }]);\r\n      setInnerHtml(noWar, \"\\n      <div>\\n        \\u0415\\u0441\\u043B\\u0438 \\u043C\\u044B \\u043D\\u0435 \\u043E\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u0438\\u043C \\u0432\\u043E\\u0439\\u043D\\u0443, \\u043E\\u043D\\u0430 \\u043F\\u0440\\u0438\\u0434\\u0435\\u0442 \\u0432 \\u0434\\u043E\\u043C <strong>\\u043A\\u0430\\u0436\\u0434\\u043E\\u0433\\u043E \\u0438\\u0437 \\u043D\\u0430\\u0441</strong> \\u0438 \\u0435\\u0451 \\u043F\\u043E\\u0441\\u043B\\u0435\\u0434\\u0441\\u0442\\u0432\\u0438\\u044F \\u0431\\u0443\\u0434\\u0443\\u0442 <strong>\\u0443\\u0436\\u0430\\u0441\\u0430\\u044E\\u0449\\u0438\\u043C\\u0438</strong>.\\n      </div>\\n      <div>\\n        \\u041F\\u0443\\u0442\\u0438\\u043D\\u0441\\u043A\\u0438\\u0439 \\u0440\\u0435\\u0436\\u0438\\u043C \\u0437\\u0430 20 \\u0441 \\u043B\\u0438\\u0448\\u043D\\u0438\\u043C \\u043B\\u0435\\u0442 \\u0441\\u0432\\u043E\\u0435\\u0433\\u043E \\u0441\\u0443\\u0449\\u0435\\u0441\\u0442\\u0432\\u043E\\u0432\\u0430\\u043D\\u0438\\u044F \\u0432\\u0434\\u043E\\u043B\\u0431\\u0438\\u043B \\u043D\\u0430\\u043C, \\u0447\\u0442\\u043E \\u043C\\u044B \\u0431\\u0435\\u0441\\u0441\\u0438\\u043B\\u044C\\u043D\\u044B \\u0438 \\u043E\\u0434\\u0438\\u043D \\u0447\\u0435\\u043B\\u043E\\u0432\\u0435\\u043A \\u043D\\u0435 \\u043C\\u043E\\u0436\\u0435\\u0442 \\u043D\\u0438\\u0447\\u0435\\u0433\\u043E \\u0441\\u0434\\u0435\\u043B\\u0430\\u0442\\u044C. <strong>\\u042D\\u0442\\u043E \\u043D\\u0435 \\u0442\\u0430\\u043A!</strong>\\n      </div>\\n      <div>\\n        \".concat(video.text, \"\\n      </div>\\n      <iframe width=\\\"560\\\" height=\\\"315\\\" src=\\\"https://www.youtube.com/embed/\").concat(video.id, \"\\\" frameborder=\\\"0\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe>\\n      <div>\\n        \\u041D\\u0435\\u0442 \\u0432\\u043E\\u0439\\u043D\\u0435!\\n      </div>\\n      \"));\r\n      const closeButton = document.createElement('button');\r\n      closeButton.innerHTML = '&times;';\r\n\r\n      closeButton.onclick = () => noWar.remove();\r\n\r\n      noWar.appendChild(closeButton);\r\n      window.addEventListener('load', () => {\r\n        setTimeout(() => {\r\n          document.body.appendChild(noWar);\r\n        }, 1000);\r\n      });\r\n    }\r\n  } // Assign instance methods from src/instanceMethods/*.js to prototype\r\n\r\n\r\n  Object.assign(SweetAlert.prototype, instanceMethods); // Assign static methods from src/staticMethods/*.js to constructor\r\n\r\n  Object.assign(SweetAlert, staticMethods); // Proxy to instance methods to constructor, for now, for backwards compatibility\r\n\r\n  Object.keys(instanceMethods).forEach(key => {\r\n    SweetAlert[key] = function () {\r\n      if (currentInstance) {\r\n        return currentInstance[key](...arguments);\r\n      }\r\n    };\r\n  });\r\n  SweetAlert.DismissReason = DismissReason;\r\n  SweetAlert.version = '11.4.23';\r\n\r\n  const Swal = SweetAlert; // @ts-ignore\r\n\r\n  Swal.default = Swal;\r\n\r\n  return Swal;\r\n\r\n}));\r\nif (typeof this !== 'undefined' && this.Sweetalert2){  this.swal = this.sweetAlert = this.Swal = this.SweetAlert = this.Sweetalert2}\r\n\r\n\"undefined\"!=typeof document&&function(e,t){var n=e.createElement(\"style\");if(e.getElementsByTagName(\"head\")[0].appendChild(n),n.styleSheet)n.styleSheet.disabled||(n.styleSheet.cssText=t);else try{n.innerHTML=t}catch(e){n.innerText=t}}(document,\".swal2-popup.swal2-toast{box-sizing:border-box;grid-column:1/4!important;grid-row:1/4!important;grid-template-columns:1fr 99fr 1fr;padding:1em;overflow-y:hidden;background:#fff;box-shadow:0 0 1px hsla(0deg,0%,0%,.075),0 1px 2px hsla(0deg,0%,0%,.075),1px 2px 4px hsla(0deg,0%,0%,.075),1px 3px 8px hsla(0deg,0%,0%,.075),2px 4px 16px hsla(0deg,0%,0%,.075);pointer-events:all}.swal2-popup.swal2-toast>*{grid-column:2}.swal2-popup.swal2-toast .swal2-title{margin:.5em 1em;padding:0;font-size:1em;text-align:initial}.swal2-popup.swal2-toast .swal2-loading{justify-content:center}.swal2-popup.swal2-toast .swal2-input{height:2em;margin:.5em;font-size:1em}.swal2-popup.swal2-toast .swal2-validation-message{font-size:1em}.swal2-popup.swal2-toast .swal2-footer{margin:.5em 0 0;padding:.5em 0 0;font-size:.8em}.swal2-popup.swal2-toast .swal2-close{grid-column:3/3;grid-row:1/99;align-self:center;width:.8em;height:.8em;margin:0;font-size:2em}.swal2-popup.swal2-toast .swal2-html-container{margin:.5em 1em;padding:0;font-size:1em;text-align:initial}.swal2-popup.swal2-toast .swal2-html-container:empty{padding:0}.swal2-popup.swal2-toast .swal2-loader{grid-column:1;grid-row:1/99;align-self:center;width:2em;height:2em;margin:.25em}.swal2-popup.swal2-toast .swal2-icon{grid-column:1;grid-row:1/99;align-self:center;width:2em;min-width:2em;height:2em;margin:0 .5em 0 0}.swal2-popup.swal2-toast .swal2-icon .swal2-icon-content{display:flex;align-items:center;font-size:1.8em;font-weight:700}.swal2-popup.swal2-toast .swal2-icon.swal2-success .swal2-success-ring{width:2em;height:2em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line]{top:.875em;width:1.375em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=left]{left:.3125em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=right]{right:.3125em}.swal2-popup.swal2-toast .swal2-actions{justify-content:flex-start;height:auto;margin:0;margin-top:.5em;padding:0 .5em}.swal2-popup.swal2-toast .swal2-styled{margin:.25em .5em;padding:.4em .6em;font-size:1em}.swal2-popup.swal2-toast .swal2-success{border-color:#a5dc86}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line]{position:absolute;width:1.6em;height:3em;transform:rotate(45deg);border-radius:50%}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line][class$=left]{top:-.8em;left:-.5em;transform:rotate(-45deg);transform-origin:2em 2em;border-radius:4em 0 0 4em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line][class$=right]{top:-.25em;left:.9375em;transform-origin:0 1.5em;border-radius:0 4em 4em 0}.swal2-popup.swal2-toast .swal2-success .swal2-success-ring{width:2em;height:2em}.swal2-popup.swal2-toast .swal2-success .swal2-success-fix{top:0;left:.4375em;width:.4375em;height:2.6875em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line]{height:.3125em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line][class$=tip]{top:1.125em;left:.1875em;width:.75em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line][class$=long]{top:.9375em;right:.1875em;width:1.375em}.swal2-popup.swal2-toast .swal2-success.swal2-icon-show .swal2-success-line-tip{-webkit-animation:swal2-toast-animate-success-line-tip .75s;animation:swal2-toast-animate-success-line-tip .75s}.swal2-popup.swal2-toast .swal2-success.swal2-icon-show .swal2-success-line-long{-webkit-animation:swal2-toast-animate-success-line-long .75s;animation:swal2-toast-animate-success-line-long .75s}.swal2-popup.swal2-toast.swal2-show{-webkit-animation:swal2-toast-show .5s;animation:swal2-toast-show .5s}.swal2-popup.swal2-toast.swal2-hide{-webkit-animation:swal2-toast-hide .1s forwards;animation:swal2-toast-hide .1s forwards}.swal2-container{display:grid;position:fixed;z-index:1060;top:0;right:0;bottom:0;left:0;box-sizing:border-box;grid-template-areas:\\\"top-start     top            top-end\\\" \\\"center-start  center         center-end\\\" \\\"bottom-start  bottom-center  bottom-end\\\";grid-template-rows:minmax(-webkit-min-content,auto) minmax(-webkit-min-content,auto) minmax(-webkit-min-content,auto);grid-template-rows:minmax(min-content,auto) minmax(min-content,auto) minmax(min-content,auto);height:100%;padding:.625em;overflow-x:hidden;transition:background-color .1s;-webkit-overflow-scrolling:touch}.swal2-container.swal2-backdrop-show,.swal2-container.swal2-noanimation{background:rgba(0,0,0,.4)}.swal2-container.swal2-backdrop-hide{background:0 0!important}.swal2-container.swal2-bottom-start,.swal2-container.swal2-center-start,.swal2-container.swal2-top-start{grid-template-columns:minmax(0,1fr) auto auto}.swal2-container.swal2-bottom,.swal2-container.swal2-center,.swal2-container.swal2-top{grid-template-columns:auto minmax(0,1fr) auto}.swal2-container.swal2-bottom-end,.swal2-container.swal2-center-end,.swal2-container.swal2-top-end{grid-template-columns:auto auto minmax(0,1fr)}.swal2-container.swal2-top-start>.swal2-popup{align-self:start}.swal2-container.swal2-top>.swal2-popup{grid-column:2;align-self:start;justify-self:center}.swal2-container.swal2-top-end>.swal2-popup,.swal2-container.swal2-top-right>.swal2-popup{grid-column:3;align-self:start;justify-self:end}.swal2-container.swal2-center-left>.swal2-popup,.swal2-container.swal2-center-start>.swal2-popup{grid-row:2;align-self:center}.swal2-container.swal2-center>.swal2-popup{grid-column:2;grid-row:2;align-self:center;justify-self:center}.swal2-container.swal2-center-end>.swal2-popup,.swal2-container.swal2-center-right>.swal2-popup{grid-column:3;grid-row:2;align-self:center;justify-self:end}.swal2-container.swal2-bottom-left>.swal2-popup,.swal2-container.swal2-bottom-start>.swal2-popup{grid-column:1;grid-row:3;align-self:end}.swal2-container.swal2-bottom>.swal2-popup{grid-column:2;grid-row:3;justify-self:center;align-self:end}.swal2-container.swal2-bottom-end>.swal2-popup,.swal2-container.swal2-bottom-right>.swal2-popup{grid-column:3;grid-row:3;align-self:end;justify-self:end}.swal2-container.swal2-grow-fullscreen>.swal2-popup,.swal2-container.swal2-grow-row>.swal2-popup{grid-column:1/4;width:100%}.swal2-container.swal2-grow-column>.swal2-popup,.swal2-container.swal2-grow-fullscreen>.swal2-popup{grid-row:1/4;align-self:stretch}.swal2-container.swal2-no-transition{transition:none!important}.swal2-popup{display:none;position:relative;box-sizing:border-box;grid-template-columns:minmax(0,100%);width:32em;max-width:100%;padding:0 0 1.25em;border:none;border-radius:5px;background:#fff;color:#545454;font-family:inherit;font-size:1rem}.swal2-popup:focus{outline:0}.swal2-popup.swal2-loading{overflow-y:hidden}.swal2-title{position:relative;max-width:100%;margin:0;padding:.8em 1em 0;color:inherit;font-size:1.875em;font-weight:600;text-align:center;text-transform:none;word-wrap:break-word}.swal2-actions{display:flex;z-index:1;box-sizing:border-box;flex-wrap:wrap;align-items:center;justify-content:center;width:auto;margin:1.25em auto 0;padding:0}.swal2-actions:not(.swal2-loading) .swal2-styled[disabled]{opacity:.4}.swal2-actions:not(.swal2-loading) .swal2-styled:hover{background-image:linear-gradient(rgba(0,0,0,.1),rgba(0,0,0,.1))}.swal2-actions:not(.swal2-loading) .swal2-styled:active{background-image:linear-gradient(rgba(0,0,0,.2),rgba(0,0,0,.2))}.swal2-loader{display:none;align-items:center;justify-content:center;width:2.2em;height:2.2em;margin:0 1.875em;-webkit-animation:swal2-rotate-loading 1.5s linear 0s infinite normal;animation:swal2-rotate-loading 1.5s linear 0s infinite normal;border-width:.25em;border-style:solid;border-radius:100%;border-color:#2778c4 transparent #2778c4 transparent}.swal2-styled{margin:.3125em;padding:.625em 1.1em;transition:box-shadow .1s;box-shadow:0 0 0 3px transparent;font-weight:500}.swal2-styled:not([disabled]){cursor:pointer}.swal2-styled.swal2-confirm{border:0;border-radius:.25em;background:initial;background-color:#7066e0;color:#fff;font-size:1em}.swal2-styled.swal2-confirm:focus{box-shadow:0 0 0 3px rgba(112,102,224,.5)}.swal2-styled.swal2-deny{border:0;border-radius:.25em;background:initial;background-color:#dc3741;color:#fff;font-size:1em}.swal2-styled.swal2-deny:focus{box-shadow:0 0 0 3px rgba(220,55,65,.5)}.swal2-styled.swal2-cancel{border:0;border-radius:.25em;background:initial;background-color:#6e7881;color:#fff;font-size:1em}.swal2-styled.swal2-cancel:focus{box-shadow:0 0 0 3px rgba(110,120,129,.5)}.swal2-styled.swal2-default-outline:focus{box-shadow:0 0 0 3px rgba(100,150,200,.5)}.swal2-styled:focus{outline:0}.swal2-styled::-moz-focus-inner{border:0}.swal2-footer{justify-content:center;margin:1em 0 0;padding:1em 1em 0;border-top:1px solid #eee;color:inherit;font-size:1em}.swal2-timer-progress-bar-container{position:absolute;right:0;bottom:0;left:0;grid-column:auto!important;overflow:hidden;border-bottom-right-radius:5px;border-bottom-left-radius:5px}.swal2-timer-progress-bar{width:100%;height:.25em;background:rgba(0,0,0,.2)}.swal2-image{max-width:100%;margin:2em auto 1em}.swal2-close{z-index:2;align-items:center;justify-content:center;width:1.2em;height:1.2em;margin-top:0;margin-right:0;margin-bottom:-1.2em;padding:0;overflow:hidden;transition:color .1s,box-shadow .1s;border:none;border-radius:5px;background:0 0;color:#ccc;font-family:serif;font-family:monospace;font-size:2.5em;cursor:pointer;justify-self:end}.swal2-close:hover{transform:none;background:0 0;color:#f27474}.swal2-close:focus{outline:0;box-shadow:inset 0 0 0 3px rgba(100,150,200,.5)}.swal2-close::-moz-focus-inner{border:0}.swal2-html-container{z-index:1;justify-content:center;margin:1em 1.6em .3em;padding:0;overflow:auto;color:inherit;font-size:1.125em;font-weight:400;line-height:normal;text-align:center;word-wrap:break-word;word-break:break-word}.swal2-checkbox,.swal2-file,.swal2-input,.swal2-radio,.swal2-select,.swal2-textarea{margin:1em 2em 3px}.swal2-file,.swal2-input,.swal2-textarea{box-sizing:border-box;width:auto;transition:border-color .1s,box-shadow .1s;border:1px solid #d9d9d9;border-radius:.1875em;background:0 0;box-shadow:inset 0 1px 1px rgba(0,0,0,.06),0 0 0 3px transparent;color:inherit;font-size:1.125em}.swal2-file.swal2-inputerror,.swal2-input.swal2-inputerror,.swal2-textarea.swal2-inputerror{border-color:#f27474!important;box-shadow:0 0 2px #f27474!important}.swal2-file:focus,.swal2-input:focus,.swal2-textarea:focus{border:1px solid #b4dbed;outline:0;box-shadow:inset 0 1px 1px rgba(0,0,0,.06),0 0 0 3px rgba(100,150,200,.5)}.swal2-file::-moz-placeholder,.swal2-input::-moz-placeholder,.swal2-textarea::-moz-placeholder{color:#ccc}.swal2-file:-ms-input-placeholder,.swal2-input:-ms-input-placeholder,.swal2-textarea:-ms-input-placeholder{color:#ccc}.swal2-file::placeholder,.swal2-input::placeholder,.swal2-textarea::placeholder{color:#ccc}.swal2-range{margin:1em 2em 3px;background:#fff}.swal2-range input{width:80%}.swal2-range output{width:20%;color:inherit;font-weight:600;text-align:center}.swal2-range input,.swal2-range output{height:2.625em;padding:0;font-size:1.125em;line-height:2.625em}.swal2-input{height:2.625em;padding:0 .75em}.swal2-file{width:75%;margin-right:auto;margin-left:auto;background:0 0;font-size:1.125em}.swal2-textarea{height:6.75em;padding:.75em}.swal2-select{min-width:50%;max-width:100%;padding:.375em .625em;background:0 0;color:inherit;font-size:1.125em}.swal2-checkbox,.swal2-radio{align-items:center;justify-content:center;background:#fff;color:inherit}.swal2-checkbox label,.swal2-radio label{margin:0 .6em;font-size:1.125em}.swal2-checkbox input,.swal2-radio input{flex-shrink:0;margin:0 .4em}.swal2-input-label{display:flex;justify-content:center;margin:1em auto 0}.swal2-validation-message{align-items:center;justify-content:center;margin:1em 0 0;padding:.625em;overflow:hidden;background:#f0f0f0;color:#666;font-size:1em;font-weight:300}.swal2-validation-message::before{content:\\\"!\\\";display:inline-block;width:1.5em;min-width:1.5em;height:1.5em;margin:0 .625em;border-radius:50%;background-color:#f27474;color:#fff;font-weight:600;line-height:1.5em;text-align:center}.swal2-icon{position:relative;box-sizing:content-box;justify-content:center;width:5em;height:5em;margin:2.5em auto .6em;border:.25em solid transparent;border-radius:50%;border-color:#000;font-family:inherit;line-height:5em;cursor:default;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.swal2-icon .swal2-icon-content{display:flex;align-items:center;font-size:3.75em}.swal2-icon.swal2-error{border-color:#f27474;color:#f27474}.swal2-icon.swal2-error .swal2-x-mark{position:relative;flex-grow:1}.swal2-icon.swal2-error [class^=swal2-x-mark-line]{display:block;position:absolute;top:2.3125em;width:2.9375em;height:.3125em;border-radius:.125em;background-color:#f27474}.swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=left]{left:1.0625em;transform:rotate(45deg)}.swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=right]{right:1em;transform:rotate(-45deg)}.swal2-icon.swal2-error.swal2-icon-show{-webkit-animation:swal2-animate-error-icon .5s;animation:swal2-animate-error-icon .5s}.swal2-icon.swal2-error.swal2-icon-show .swal2-x-mark{-webkit-animation:swal2-animate-error-x-mark .5s;animation:swal2-animate-error-x-mark .5s}.swal2-icon.swal2-warning{border-color:#facea8;color:#f8bb86}.swal2-icon.swal2-warning.swal2-icon-show{-webkit-animation:swal2-animate-error-icon .5s;animation:swal2-animate-error-icon .5s}.swal2-icon.swal2-warning.swal2-icon-show .swal2-icon-content{-webkit-animation:swal2-animate-i-mark .5s;animation:swal2-animate-i-mark .5s}.swal2-icon.swal2-info{border-color:#9de0f6;color:#3fc3ee}.swal2-icon.swal2-info.swal2-icon-show{-webkit-animation:swal2-animate-error-icon .5s;animation:swal2-animate-error-icon .5s}.swal2-icon.swal2-info.swal2-icon-show .swal2-icon-content{-webkit-animation:swal2-animate-i-mark .8s;animation:swal2-animate-i-mark .8s}.swal2-icon.swal2-question{border-color:#c9dae1;color:#87adbd}.swal2-icon.swal2-question.swal2-icon-show{-webkit-animation:swal2-animate-error-icon .5s;animation:swal2-animate-error-icon .5s}.swal2-icon.swal2-question.swal2-icon-show .swal2-icon-content{-webkit-animation:swal2-animate-question-mark .8s;animation:swal2-animate-question-mark .8s}.swal2-icon.swal2-success{border-color:#a5dc86;color:#a5dc86}.swal2-icon.swal2-success [class^=swal2-success-circular-line]{position:absolute;width:3.75em;height:7.5em;transform:rotate(45deg);border-radius:50%}.swal2-icon.swal2-success [class^=swal2-success-circular-line][class$=left]{top:-.4375em;left:-2.0635em;transform:rotate(-45deg);transform-origin:3.75em 3.75em;border-radius:7.5em 0 0 7.5em}.swal2-icon.swal2-success [class^=swal2-success-circular-line][class$=right]{top:-.6875em;left:1.875em;transform:rotate(-45deg);transform-origin:0 3.75em;border-radius:0 7.5em 7.5em 0}.swal2-icon.swal2-success .swal2-success-ring{position:absolute;z-index:2;top:-.25em;left:-.25em;box-sizing:content-box;width:100%;height:100%;border:.25em solid rgba(165,220,134,.3);border-radius:50%}.swal2-icon.swal2-success .swal2-success-fix{position:absolute;z-index:1;top:.5em;left:1.625em;width:.4375em;height:5.625em;transform:rotate(-45deg)}.swal2-icon.swal2-success [class^=swal2-success-line]{display:block;position:absolute;z-index:2;height:.3125em;border-radius:.125em;background-color:#a5dc86}.swal2-icon.swal2-success [class^=swal2-success-line][class$=tip]{top:2.875em;left:.8125em;width:1.5625em;transform:rotate(45deg)}.swal2-icon.swal2-success [class^=swal2-success-line][class$=long]{top:2.375em;right:.5em;width:2.9375em;transform:rotate(-45deg)}.swal2-icon.swal2-success.swal2-icon-show .swal2-success-line-tip{-webkit-animation:swal2-animate-success-line-tip .75s;animation:swal2-animate-success-line-tip .75s}.swal2-icon.swal2-success.swal2-icon-show .swal2-success-line-long{-webkit-animation:swal2-animate-success-line-long .75s;animation:swal2-animate-success-line-long .75s}.swal2-icon.swal2-success.swal2-icon-show .swal2-success-circular-line-right{-webkit-animation:swal2-rotate-success-circular-line 4.25s ease-in;animation:swal2-rotate-success-circular-line 4.25s ease-in}.swal2-progress-steps{flex-wrap:wrap;align-items:center;max-width:100%;margin:1.25em auto;padding:0;background:0 0;font-weight:600}.swal2-progress-steps li{display:inline-block;position:relative}.swal2-progress-steps .swal2-progress-step{z-index:20;flex-shrink:0;width:2em;height:2em;border-radius:2em;background:#2778c4;color:#fff;line-height:2em;text-align:center}.swal2-progress-steps .swal2-progress-step.swal2-active-progress-step{background:#2778c4}.swal2-progress-steps .swal2-progress-step.swal2-active-progress-step~.swal2-progress-step{background:#add8e6;color:#fff}.swal2-progress-steps .swal2-progress-step.swal2-active-progress-step~.swal2-progress-step-line{background:#add8e6}.swal2-progress-steps .swal2-progress-step-line{z-index:10;flex-shrink:0;width:2.5em;height:.4em;margin:0 -1px;background:#2778c4}[class^=swal2]{-webkit-tap-highlight-color:transparent}.swal2-show{-webkit-animation:swal2-show .3s;animation:swal2-show .3s}.swal2-hide{-webkit-animation:swal2-hide .15s forwards;animation:swal2-hide .15s forwards}.swal2-noanimation{transition:none}.swal2-scrollbar-measure{position:absolute;top:-9999px;width:50px;height:50px;overflow:scroll}.swal2-rtl .swal2-close{margin-right:initial;margin-left:0}.swal2-rtl .swal2-timer-progress-bar{right:0;left:auto}.leave-russia-now-and-apply-your-skills-to-the-world{display:flex;position:fixed;z-index:1939;top:0;right:0;bottom:0;left:0;flex-direction:column;align-items:center;justify-content:center;padding:25px 0 20px;background:#20232a;color:#fff;text-align:center}.leave-russia-now-and-apply-your-skills-to-the-world div{max-width:560px;margin:10px;line-height:146%}.leave-russia-now-and-apply-your-skills-to-the-world iframe{max-width:100%;max-height:55.5555555556vmin;margin:16px auto}.leave-russia-now-and-apply-your-skills-to-the-world strong{border-bottom:2px dashed #fff}.leave-russia-now-and-apply-your-skills-to-the-world button{display:flex;position:fixed;z-index:1940;top:0;right:0;align-items:center;justify-content:center;width:48px;height:48px;margin-right:10px;margin-bottom:-10px;border:none;background:0 0;color:#aaa;font-size:48px;font-weight:700;cursor:pointer}.leave-russia-now-and-apply-your-skills-to-the-world button:hover{color:#fff}@-webkit-keyframes swal2-toast-show{0%{transform:translateY(-.625em) rotateZ(2deg)}33%{transform:translateY(0) rotateZ(-2deg)}66%{transform:translateY(.3125em) rotateZ(2deg)}100%{transform:translateY(0) rotateZ(0)}}@keyframes swal2-toast-show{0%{transform:translateY(-.625em) rotateZ(2deg)}33%{transform:translateY(0) rotateZ(-2deg)}66%{transform:translateY(.3125em) rotateZ(2deg)}100%{transform:translateY(0) rotateZ(0)}}@-webkit-keyframes swal2-toast-hide{100%{transform:rotateZ(1deg);opacity:0}}@keyframes swal2-toast-hide{100%{transform:rotateZ(1deg);opacity:0}}@-webkit-keyframes swal2-toast-animate-success-line-tip{0%{top:.5625em;left:.0625em;width:0}54%{top:.125em;left:.125em;width:0}70%{top:.625em;left:-.25em;width:1.625em}84%{top:1.0625em;left:.75em;width:.5em}100%{top:1.125em;left:.1875em;width:.75em}}@keyframes swal2-toast-animate-success-line-tip{0%{top:.5625em;left:.0625em;width:0}54%{top:.125em;left:.125em;width:0}70%{top:.625em;left:-.25em;width:1.625em}84%{top:1.0625em;left:.75em;width:.5em}100%{top:1.125em;left:.1875em;width:.75em}}@-webkit-keyframes swal2-toast-animate-success-line-long{0%{top:1.625em;right:1.375em;width:0}65%{top:1.25em;right:.9375em;width:0}84%{top:.9375em;right:0;width:1.125em}100%{top:.9375em;right:.1875em;width:1.375em}}@keyframes swal2-toast-animate-success-line-long{0%{top:1.625em;right:1.375em;width:0}65%{top:1.25em;right:.9375em;width:0}84%{top:.9375em;right:0;width:1.125em}100%{top:.9375em;right:.1875em;width:1.375em}}@-webkit-keyframes swal2-show{0%{transform:scale(.7)}45%{transform:scale(1.05)}80%{transform:scale(.95)}100%{transform:scale(1)}}@keyframes swal2-show{0%{transform:scale(.7)}45%{transform:scale(1.05)}80%{transform:scale(.95)}100%{transform:scale(1)}}@-webkit-keyframes swal2-hide{0%{transform:scale(1);opacity:1}100%{transform:scale(.5);opacity:0}}@keyframes swal2-hide{0%{transform:scale(1);opacity:1}100%{transform:scale(.5);opacity:0}}@-webkit-keyframes swal2-animate-success-line-tip{0%{top:1.1875em;left:.0625em;width:0}54%{top:1.0625em;left:.125em;width:0}70%{top:2.1875em;left:-.375em;width:3.125em}84%{top:3em;left:1.3125em;width:1.0625em}100%{top:2.8125em;left:.8125em;width:1.5625em}}@keyframes swal2-animate-success-line-tip{0%{top:1.1875em;left:.0625em;width:0}54%{top:1.0625em;left:.125em;width:0}70%{top:2.1875em;left:-.375em;width:3.125em}84%{top:3em;left:1.3125em;width:1.0625em}100%{top:2.8125em;left:.8125em;width:1.5625em}}@-webkit-keyframes swal2-animate-success-line-long{0%{top:3.375em;right:2.875em;width:0}65%{top:3.375em;right:2.875em;width:0}84%{top:2.1875em;right:0;width:3.4375em}100%{top:2.375em;right:.5em;width:2.9375em}}@keyframes swal2-animate-success-line-long{0%{top:3.375em;right:2.875em;width:0}65%{top:3.375em;right:2.875em;width:0}84%{top:2.1875em;right:0;width:3.4375em}100%{top:2.375em;right:.5em;width:2.9375em}}@-webkit-keyframes swal2-rotate-success-circular-line{0%{transform:rotate(-45deg)}5%{transform:rotate(-45deg)}12%{transform:rotate(-405deg)}100%{transform:rotate(-405deg)}}@keyframes swal2-rotate-success-circular-line{0%{transform:rotate(-45deg)}5%{transform:rotate(-45deg)}12%{transform:rotate(-405deg)}100%{transform:rotate(-405deg)}}@-webkit-keyframes swal2-animate-error-x-mark{0%{margin-top:1.625em;transform:scale(.4);opacity:0}50%{margin-top:1.625em;transform:scale(.4);opacity:0}80%{margin-top:-.375em;transform:scale(1.15)}100%{margin-top:0;transform:scale(1);opacity:1}}@keyframes swal2-animate-error-x-mark{0%{margin-top:1.625em;transform:scale(.4);opacity:0}50%{margin-top:1.625em;transform:scale(.4);opacity:0}80%{margin-top:-.375em;transform:scale(1.15)}100%{margin-top:0;transform:scale(1);opacity:1}}@-webkit-keyframes swal2-animate-error-icon{0%{transform:rotateX(100deg);opacity:0}100%{transform:rotateX(0);opacity:1}}@keyframes swal2-animate-error-icon{0%{transform:rotateX(100deg);opacity:0}100%{transform:rotateX(0);opacity:1}}@-webkit-keyframes swal2-rotate-loading{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}@keyframes swal2-rotate-loading{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}@-webkit-keyframes swal2-animate-question-mark{0%{transform:rotateY(-360deg)}100%{transform:rotateY(0)}}@keyframes swal2-animate-question-mark{0%{transform:rotateY(-360deg)}100%{transform:rotateY(0)}}@-webkit-keyframes swal2-animate-i-mark{0%{transform:rotateZ(45deg);opacity:0}25%{transform:rotateZ(-25deg);opacity:.4}50%{transform:rotateZ(15deg);opacity:.8}75%{transform:rotateZ(-5deg);opacity:1}100%{transform:rotateX(0);opacity:1}}@keyframes swal2-animate-i-mark{0%{transform:rotateZ(45deg);opacity:0}25%{transform:rotateZ(-25deg);opacity:.4}50%{transform:rotateZ(15deg);opacity:.8}75%{transform:rotateZ(-5deg);opacity:1}100%{transform:rotateX(0);opacity:1}}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown){overflow:hidden}body.swal2-height-auto{height:auto!important}body.swal2-no-backdrop .swal2-container{background-color:transparent!important;pointer-events:none}body.swal2-no-backdrop .swal2-container .swal2-popup{pointer-events:all}body.swal2-no-backdrop .swal2-container .swal2-modal{box-shadow:0 0 10px rgba(0,0,0,.4)}@media print{body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown){overflow-y:scroll!important}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown)>[aria-hidden=true]{display:none}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown) .swal2-container{position:static!important}}body.swal2-toast-shown .swal2-container{box-sizing:border-box;width:360px;max-width:100%;background-color:transparent;pointer-events:none}body.swal2-toast-shown .swal2-container.swal2-top{top:0;right:auto;bottom:auto;left:50%;transform:translateX(-50%)}body.swal2-toast-shown .swal2-container.swal2-top-end,body.swal2-toast-shown .swal2-container.swal2-top-right{top:0;right:0;bottom:auto;left:auto}body.swal2-toast-shown .swal2-container.swal2-top-left,body.swal2-toast-shown .swal2-container.swal2-top-start{top:0;right:auto;bottom:auto;left:0}body.swal2-toast-shown .swal2-container.swal2-center-left,body.swal2-toast-shown .swal2-container.swal2-center-start{top:50%;right:auto;bottom:auto;left:0;transform:translateY(-50%)}body.swal2-toast-shown .swal2-container.swal2-center{top:50%;right:auto;bottom:auto;left:50%;transform:translate(-50%,-50%)}body.swal2-toast-shown .swal2-container.swal2-center-end,body.swal2-toast-shown .swal2-container.swal2-center-right{top:50%;right:0;bottom:auto;left:auto;transform:translateY(-50%)}body.swal2-toast-shown .swal2-container.swal2-bottom-left,body.swal2-toast-shown .swal2-container.swal2-bottom-start{top:auto;right:auto;bottom:0;left:0}body.swal2-toast-shown .swal2-container.swal2-bottom{top:auto;right:auto;bottom:0;left:50%;transform:translateX(-50%)}body.swal2-toast-shown .swal2-container.swal2-bottom-end,body.swal2-toast-shown .swal2-container.swal2-bottom-right{top:auto;right:0;bottom:0;left:auto}\");","import { Component, OnInit } from '@angular/core';\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport * as am5 from \"@amcharts/amcharts5\";\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient, HttpEventType } from '@angular/common/http';\r\nimport * as am5xy from \"@amcharts/amcharts5/xy\";\r\nimport * as am5percent from \"@amcharts/amcharts5/percent\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { LinkService } from 'src/app/_Services/link.service';\r\nimport { NotificationService } from 'src/app/_Services/notification.service';\r\nimport { ApprovalsService } from 'src/app/_Services/approvals.service';\r\nimport * as _ from 'underscore';\r\nimport { ConfirmDialogComponent } from 'src/app/Shared/components/confirm-dialog/confirm-dialog.component';\r\nimport { DateAdapter } from '@angular/material/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ProjectTypeService } from 'src/app/_Services/project-type.service';\r\nimport { SubTaskDTO } from 'src/app/_Models/sub-task-dto';\r\nimport { ProjectDetailsDTO } from 'src/app/_Models/project-details-dto';\r\nimport * as moment from 'moment';\r\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\r\nam4core.useTheme(am4themes_animated);\r\nimport Swal from 'sweetalert2';\r\nimport { BsServiceService } from 'src/app/_Services/bs-service.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { getDateMeta } from '@fullcalendar/angular';\r\nimport { FormControl } from '@angular/forms';\r\nimport { data } from 'jquery';\r\nimport { ApprovalDTO } from 'src/app/_Models/approval-dto';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-more-details',\r\n  templateUrl: './more-details.component.html',\r\n  styleUrls: ['./more-details.component.css']\r\n})\r\n\r\nexport class MoreDetailsComponent implements OnInit {\r\n\r\n  constructor(private route: ActivatedRoute,\r\n    public _LinkService: LinkService,\r\n    public approvalservice: ApprovalsService,\r\n    private router: Router,\r\n    public service: ProjectTypeService,\r\n    private notifyService: NotificationService, public dateAdapter: DateAdapter<Date>,\r\n    private dialog: MatDialog,\r\n    public datepipe: DatePipe,\r\n    private BsService: BsServiceService) {\r\n    this.ObjSubTaskDTO = new SubTaskDTO();\r\n    this.objProjectDto = new ProjectDetailsDTO();\r\n  }\r\n\r\n  projectCode: string;\r\n  URL_ProjectCode: string\r\n  IsData: string;\r\n  _LinkSideBar: boolean = true;\r\n  maxDuration: any;\r\n  standardDuration: any;\r\n  totalPercent: number = 1;\r\n  SubmissionName: string;\r\n  noMilestones: boolean = true;\r\n  noFiles: boolean = true;\r\n  noTimeline: boolean;\r\n  noNotes: boolean = true;\r\n  noMeeting: boolean = true;\r\n  checked: any;\r\n  totalSubtaskHours: any;\r\n  actionResponsibles: any = [];\r\n  ProjectStatus: string;\r\n  ProjectPercentage: any;\r\n  src: any;\r\n  actionButton: boolean = false;\r\n  darbutton: boolean = true;\r\n  darList: any;\r\n  disablePreviousDate = new Date();\r\n  todayDate = new Date();\r\n  timedata: any = [];\r\n  EndDate1: any = new Date();\r\n  commentSelected: string;\r\n  selectedType: string;\r\n  date = new Date();\r\n  dateF = new FormControl(new Date());\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.Current_user_ID = localStorage.getItem('EmpNo');\r\n    this.disablePreviousDate.setDate(this.disablePreviousDate.getDate() - 1);\r\n\r\n    //Fetching URL ProjectCode\r\n    this.route.paramMap.subscribe(params => {\r\n      var pcode = params.get('projectcode');\r\n      this.URL_ProjectCode = pcode;\r\n      this._MasterCode = pcode;\r\n    });\r\n\r\n    this.GetProjectDetails();\r\n    this.GetSubtask_Details();\r\n    this.dar_details();\r\n    this.getResponsibleActions();\r\n    this.getapprovalStats();\r\n\r\n    this.EndDate1.setDate(this.EndDate1.getDate() + 1);\r\n\r\n    this.service.DARGraphCalculations_Json(this.URL_ProjectCode)\r\n      .subscribe(data => {\r\n        let projectType: any = (data[0]['ProjectType']);\r\n        this.IsData = (data[0]['DARGraphCalculations_Json']);\r\n        //console.log(\"data isnull/not---->\", this.IsData);\r\n        if (projectType == '001' || projectType == '002') {\r\n          this.CoreSecodaryCharts();\r\n        }\r\n        else if (projectType != '001' || projectType != '002') {\r\n          this.OtherCharts();\r\n        }\r\n      });\r\n    //uploaded file name\r\n    $(document).on('change', '.custom-file-input', function (event) {\r\n      $(this).next('.custom-file-label').html(event.target.files[0].name);\r\n    });\r\n\r\n    this.current_Date = moment(new Date()).format(\"MM/DD/YYYY\");\r\n    // alert(this.current_Date);\r\n  }\r\n  orgValueChange(val) {\r\n    this.current_Date = moment(val.value).format(\"MM/DD/YYYY\");\r\n    // alert(this.current_Date);\r\n  }\r\n\r\n  approvalObj = new ApprovalDTO();\r\n  requestDate: any;\r\n  requestDeadline: any;\r\n  requestType: any;\r\n  approvalEmpId: any;\r\n  requestComments: any;\r\n  requestDetails:any;\r\n\r\n  getapprovalStats() {\r\n    this.approvalObj.Project_Code = this.URL_ProjectCode;\r\n\r\n    this.approvalservice.GetApprovalStatus(this.approvalObj).subscribe((data) => {\r\n      this.requestDetails= data as [];\r\n      // console.log(this.requestDetails, \"req\")\r\n      if (this.requestDetails.length > 0) {\r\n        this.requestType = (this.requestDetails[0]['Request_type']);\r\n        this.requestDate = (this.requestDetails[0]['Request_date']);\r\n        this.requestDeadline = (this.requestDetails[0]['Request_deadline']);\r\n        this.approvalEmpId = (this.requestDetails[0]['Emp_no']);\r\n        this.requestComments = (this.requestDetails[0]['Remarks']);\r\n      }\r\n      // console.log(this.approvalEmpId ,this.requestComments,this.requestDate,this.requestDeadline,this.requestType,\"request status\");\r\n    });\r\n  }\r\n\r\n  submitApproval() {\r\n    if (this.selectedType == '1') {\r\n\r\n      this.approvalObj.Emp_no = this.Current_user_ID;\r\n      this.approvalObj.Project_Code = this.URL_ProjectCode;\r\n      this.approvalObj.Request_type = this.requestType;\r\n      this.approvalObj.Remarks = this.commentSelected;\r\n\r\n      this.approvalservice.InsertAcceptApprovalService(this.approvalObj).\r\n        subscribe((data) => {\r\n          this._Message = (data['message']);\r\n          this.notifyService.showSuccess(\"Project Approved Successfully\", this._Message);\r\n          this.GetProjectDetails();\r\n          this.GetSubtask_Details();\r\n        });\r\n\r\n    }\r\n\r\n    else if (this.selectedType == '2') {\r\n      this.notifyService.showError(\"Not Approved - Development under maintainance\", \"Failed\");\r\n    }\r\n\r\n    else if (this.selectedType == '3') {\r\n      this.notifyService.showError(\"Not Approved - Development under maintainance\", \"Failed\");\r\n    }\r\n    document.getElementById(\"mysideInfobar\").classList.remove(\"side--on\");\r\n    document.getElementById(\"moredet\").classList.remove(\"position-fixed\");\r\n    document.getElementById(\"darsidebar\").style.width = \"0\";\r\n    document.getElementById(\"rightbar-overlay\").style.display = \"none\";\r\n\r\n  }\r\n\r\n  getnextDeadline() {\r\n\r\n    return this.datepipe.transform(this.EndDate, 'MM-dd-YYYY');\r\n  }\r\n\r\n  getResponsibleActions() {\r\n    this.service.SubTaskDetailsService_ToDo_Page(this.URL_ProjectCode, null, this.Current_user_ID).subscribe(\r\n      (data) => {\r\n        this.darArr = JSON.parse(data[0]['Json_ResponsibleInProcess']);\r\n      });\r\n  }\r\n\r\n  totalHours: any;\r\n  totalRecords: any;\r\n  _CurrentpageRecords: any;\r\n  CurrentPageNo: number = 1;\r\n  arr: any = [];\r\n\r\n  dar_details() {\r\n    this.noTimeline = false;\r\n    this.ObjSubTaskDTO.MasterCode = this.URL_ProjectCode;\r\n    this.ObjSubTaskDTO.PageNumber = 1;\r\n    this.ObjSubTaskDTO.PageSize = 10;\r\n    this.service._GetDARbyMasterCode(this.ObjSubTaskDTO)\r\n      .subscribe(data1 => {\r\n        this.darList = JSON.parse(data1[0]['DAR_Details_Json']);\r\n        this.arr = this.darList;\r\n        // alert(1);\r\n        this.totalHours = (data1[0]['Totalhours']);\r\n        this.totalRecords = (data1[0]['TotalRecords']);\r\n        if (this.darList.length == 0) {\r\n          this.noTimeline = true;\r\n        }\r\n        if (this.darList) {\r\n          this._CurrentpageRecords = this.darList.length;\r\n        }\r\n      });\r\n  }\r\n\r\n  loadMore() {\r\n    this.ObjSubTaskDTO.MasterCode = this.URL_ProjectCode;\r\n    this.ObjSubTaskDTO.PageNumber = this.CurrentPageNo;\r\n    this.ObjSubTaskDTO.PageSize = 10;\r\n    this.service._GetDARbyMasterCode(this.ObjSubTaskDTO)\r\n      .subscribe(data1 => {\r\n        this.darList = JSON.parse(data1[0]['DAR_Details_Json']);\r\n        this.darList.forEach(element => {\r\n          this.arr.push(element);\r\n        });\r\n\r\n        if (this.darList) {\r\n          this._CurrentpageRecords = this.darList.length;\r\n        }\r\n      });\r\n  }\r\n\r\n  workdes: string;\r\n  starttime: any;\r\n  endtime: any;\r\n  timecount: any;\r\n  current_Date: any = this.datepipe.transform(new Date(), 'MM/dd/yyyy')\r\n  releaseDate: any;\r\n  objProjectDto: ProjectDetailsDTO;\r\n  actionCode: string;\r\n  actionName: string;\r\n\r\n  diff_minutes(dt2, dt1) {\r\n    var diff = (dt2.getTime() - dt1.getTime()) / 1000;\r\n    diff /= 60;\r\n    return Math.abs(Math.round(diff));\r\n  }\r\n\r\n  minutes: any;\r\n  hours: any;\r\n  temp: any;\r\n  // end: boolean = true;\r\n\r\n  submitDar() {\r\n\r\n    if (this.starttime != null && this.endtime != null) {\r\n      const [shours, sminutes] = this.starttime.split(\":\");\r\n      const [ehours, eminutes] = this.endtime.split(\":\");\r\n      var dt1 = new Date(2014, 10, 2, shours, sminutes);\r\n      var dt2 = new Date(2014, 10, 2, ehours, eminutes);\r\n      this.minutes = this.diff_minutes(dt1, dt2) % 60;\r\n      if (this.minutes < 10) {\r\n        this.minutes = \"0\" + this.minutes\r\n      }\r\n      this.hours = Math.floor(this.diff_minutes(dt1, dt2) / 60);\r\n      if (this.hours < 10) {\r\n        this.hours = \"0\" + this.hours;\r\n      }\r\n      this.timecount = (this.hours + \":\" + this.minutes);\r\n    }\r\n\r\n    this.objProjectDto.Emp_No = this.Current_user_ID;\r\n    this.objProjectDto.Exec_BlockName = this.ProjectBlockName;\r\n    if (this.starttime != undefined && this.endtime != undefined && this.timecount != undefined) {\r\n      this.objProjectDto.StartTime = this.starttime;\r\n      this.objProjectDto.EndTime = this.endtime;\r\n      this.objProjectDto.TimeCount = this.timecount;\r\n    }\r\n    this.current_Date = this.datepipe.transform(this.current_Date, 'MM/dd/yyyy');\r\n    this.objProjectDto.date = this.current_Date;\r\n    this.objProjectDto.WorkAchieved = this.workdes;\r\n    this.objProjectDto.Emp_Comp_No = this.Comp_No;\r\n\r\n    if (this.ProjectBlockName == 'Standard Tasks' || this.ProjectBlockName == 'To do List') {\r\n      this.objProjectDto.Project_Name = this.ProjectName;\r\n      this.objProjectDto.Master_code = this.URL_ProjectCode;\r\n      this.objProjectDto.Project_Code = this.URL_ProjectCode;\r\n    }\r\n    else if ((this.ProjectBlockName == 'Core Tasks' || this.ProjectBlockName == 'Secondary Tasks') && this.inProcessCount == 0) {\r\n      this.objProjectDto.Project_Name = this.ProjectName;\r\n      this.objProjectDto.Master_code = this.URL_ProjectCode;\r\n      this.objProjectDto.Project_Code = this.URL_ProjectCode;\r\n    }\r\n    else {\r\n      this.objProjectDto.Master_code = this.URL_ProjectCode;\r\n      this.objProjectDto.Project_Code = this.actionCode;\r\n    }\r\n\r\n    this.service._InsertDARServie(this.objProjectDto)\r\n      .subscribe(data => {\r\n        this._Message = data['message'];\r\n        this.notifyService.showSuccess(this._Message, \"Success\");\r\n        // console.log(this._Message);\r\n      });\r\n    // console.log(this.objProjectDto, \"testingDar\");\r\n    this.dar_details();\r\n    this.getDarTime();\r\n    document.getElementById(\"moredet\").classList.remove(\"position-fixed\");\r\n    document.getElementById(\"darsidebar\").style.width = \"0\";\r\n    document.getElementById(\"rightbar-overlay\").style.display = \"none\";\r\n    this.Clear_Feilds();\r\n  }\r\n\r\n  timeList: any;\r\n  starttimearr: any = [];\r\n  endtimearr: any = [];\r\n  bol: boolean = true;\r\n  lastEndtime: any;\r\n  s_ind: number;\r\n  e_ind: number;\r\n\r\n  getDarTime() {\r\n\r\n    this.timedata = [\"08:00\",\r\n      \"08:15\", \"08:30\", \"08:45\", \"09:00\",\r\n      \"09:15\", \"09:30\", \"09:45\", \"10:00\",\r\n      \"10:15\", \"10:30\", \"10:45\", \"11:00\",\r\n      \"11:15\", \"11:30\", \"11:45\", \"12:00\",\r\n      \"12:15\", \"12:30\", \"12:45\", \"13:00\",\r\n      \"13:15\", \"13:30\", \"13:45\", \"14:00\",\r\n      \"14:15\", \"14:30\", \"14:45\", \"15:00\",\r\n      \"15:15\", \"15:30\", \"15:45\", \"16:00\",\r\n      \"16:15\", \"16:30\", \"16:45\", \"17:00\",\r\n      \"17:15\", \"17:30\", \"17:45\", \"18:00\",\r\n      \"18:15\", \"18:30\", \"18:45\", \"19:00\",\r\n      \"19:15\", \"19:30\", \"19:45\", \"20:00\"];\r\n    // $(\"#d-date\").val(this.current_Date);\r\n\r\n\r\n    this.objProjectDto.Emp_No = this.Current_user_ID;\r\n    this.current_Date = this.datepipe.transform(this.current_Date, 'MM/dd/yyyy');\r\n    this.objProjectDto.date = this.current_Date;\r\n\r\n    this.service._GetTimeforDar(this.Current_user_ID, this.current_Date)\r\n      .subscribe(data => {\r\n        this.timeList = JSON.parse(data[0]['time_json']);\r\n        if (this.timeList.length != 0) {\r\n          this.bol = false;\r\n          this.timeList.forEach(element => {\r\n            this.starttimearr.push(element.starttime);\r\n          });\r\n          this.timeList.forEach(element => {\r\n            this.endtimearr.push(element.endtime);\r\n          });\r\n          let l = this.endtimearr.length;\r\n          this.lastEndtime = this.endtimearr[l - 1];\r\n          // alert(this.lastEndtime);\r\n        }\r\n        else if (this.timeList.length == 0) {\r\n          this.bol = true;\r\n          this.lastEndtime = 0;\r\n          this.starttimearr = [];\r\n          this.endtimearr = [];\r\n        }\r\n        // console.log(this.bol,this.timeList,\"json\",this.starttimearr,\"starttime\",this.endtimearr,\"endtime\");    \r\n      });\r\n  }\r\n\r\n  time_convert(num) {\r\n    var hours = Math.floor(num / 60);\r\n    var minutes = num % 60;\r\n    return hours + \":\" + minutes;\r\n  }\r\n\r\n  CoreSecodaryCharts() {\r\n    //this.TaskChart();\r\n    //this.UserGraphs();\r\n    this.DARSummaryChart();\r\n    this.ProjectCompletionChart();\r\n    if (this.IsData != null) {\r\n      this.HybridDrillChart();\r\n      this.SubtaskSummaryChart();\r\n    }\r\n    // this.ProjectCompleteChart();\r\n    // this.GetDMS_Memos();\r\n    //this.getAttachments();\r\n    this.ProjectTrendChart();\r\n    // this.dummyChart();\r\n  }\r\n\r\n  OtherCharts() {\r\n    this.GetProjectDetails();\r\n    this.StandardTask();\r\n  }\r\n\r\n  _Subtaskname: string;\r\n  Sub_ProjectCode: string;\r\n  Sub_StartDT: Date;\r\n  Sub_EndDT: Date;\r\n  Sub_Autho: string;\r\n  Sub_Status: string;\r\n  _remarks: string = \"\";\r\n  Sub_Desc: string;\r\n\r\n  OnSubtaskClick(item) {\r\n    this.Sub_ProjectCode = item.Project_Code;\r\n    // alert(this.Sub_ProjectCode);\r\n    this.Sub_Desc = item.Project_Description;\r\n    this._Subtaskname = item.Project_Name;\r\n    this.Sub_StartDT = item.StartDate;\r\n    this.Sub_EndDT = item.SubProject_DeadLine;\r\n    this.Sub_Autho = item.Subtask_Autho;\r\n    this.Sub_Status = item.SubProject_Status;\r\n\r\n    document.getElementById(\"mysideInfobar_Update\").style.width = \"60%\";\r\n    document.getElementById(\"rightbar-overlay\").style.display = \"block\";\r\n    // For page top div position fix\r\n    document.getElementById(\"moredet\").classList.add(\"position-fixed\");\r\n    document.getElementById(\"mysideInfobar_NewSubtask\").style.width = \"0px\";\r\n    document.getElementById(\"mysideInfobar\").style.width = \"0px\";\r\n    // document.getElementById(\"rightbar-overlay\").style.display = \"block\";\r\n    document.getElementById(\"mysideInfobar_ProjectsUpdate\").style.width = \"0px\";\r\n    // document\r\n    // this.Block3 = false;\r\n  }\r\n\r\n  // closeInfo() {\r\n  //   document.getElementById(\"mysideInfobar_Update\").style.width = \"0\";\r\n  // }\r\n\r\n  _inputAttachments: string;\r\n  _inputAttachments2: string;\r\n\r\n  onFileChangeUST(e) {\r\n    this._inputAttachments = e.target.files[0].name;\r\n  }\r\n\r\n  //Subtask Update \r\n  ObjSubTaskDTO: SubTaskDTO;\r\n  _MasterCode: string;\r\n  List: any;\r\n  ProjectName: string;\r\n  Description: string;\r\n  StartDate: string;\r\n  EndDate: string;\r\n  Cost: string;\r\n  Owner: string;\r\n  Client: string;\r\n  Responsible: string;\r\n  Subtask_Res_List: any;\r\n  Authority: string;\r\n  Coordinator: string;\r\n  Informer: string;\r\n  Support: string;\r\n  ProjectBlock: string;\r\n  dateResut: any;\r\n  Difference_In_Days: number;\r\n  date1: any;\r\n  date2: any;\r\n  Category: any;\r\n  Project_Responsible;\r\n  InitR: string;\r\n  InitOwn: string;\r\n  InitAut: string;\r\n  InitCoor: string;\r\n  InitInformer: string;\r\n  InitSupp: string;\r\n  Responsible_EmpNo: string;\r\n  Authority_EmpNo: string;\r\n  Owner_EmpNo: string;\r\n  ProjectInfo_List: any;\r\n  StandardDuration: any;\r\n  ProjectBlockName: any;\r\n  Status: any;\r\n  Pid: number;\r\n  Comp_No: string;\r\n\r\n  GetProjectDetails() {\r\n    this.service.SubTaskDetailsService(this.URL_ProjectCode).subscribe(\r\n      (data) => {\r\n        if (data != null && data != undefined) {\r\n          this.ProjectInfo_List = JSON.parse(data[0]['ProjectInfo']);\r\n          // console.log(\"Test---->\", this.ProjectInfo_List);\r\n          this.ProjectName = this.ProjectInfo_List[0]['Project_Name'];\r\n          this.Pid = this.ProjectInfo_List[0]['id'];\r\n          this.Status = this.ProjectInfo_List[0]['Status'];\r\n          this.Description = this.ProjectInfo_List[0]['Project_Description'];\r\n          this.Comp_No = this.ProjectInfo_List[0]['Emp_Comp_No'];\r\n          // alert(this.Comp_No);\r\n          this.StartDate = this.ProjectInfo_List[0]['DPG'];\r\n          this.Client = this.ProjectInfo_List[0]['Client_Name']\r\n          this.EndDate = this.ProjectInfo_List[0]['DeadLine'];\r\n          this.EndDate1 = this.EndDate;\r\n          this.EndDate = this.datepipe.transform(this.EndDate, 'dd-MM-yyyy');\r\n\r\n          this.Cost = this.ProjectInfo_List[0]['Project_Cost'];\r\n          this.Owner = this.ProjectInfo_List[0]['Project_Owner'];\r\n          this.Responsible = this.ProjectInfo_List[0]['Team_Res'];\r\n          this.Authority = this.ProjectInfo_List[0]['Team_Autho'];\r\n          this.Coordinator = this.ProjectInfo_List[0]['Team_Coor'];\r\n          this.Informer = this.ProjectInfo_List[0]['Team_Informer'];\r\n          this.Support = this.ProjectInfo_List[0]['Team_Support'];\r\n          this.Category = this.ProjectInfo_List[0]['ReportType'];\r\n          this.ProjectBlock = this.ProjectInfo_List[0]['Project_Block'];\r\n          this.ProjectBlockName = this.ProjectInfo_List[0]['Exec_BlockName'];\r\n          this.Authority_EmpNo = this.ProjectInfo_List[0]['Authority'];\r\n          this.Responsible_EmpNo = this.ProjectInfo_List[0]['Responsible'];\r\n          this.Owner_EmpNo = this.ProjectInfo_List[0]['OwnerEmpNo'];\r\n          this.StandardDuration = this.ProjectInfo_List[0]['StandardDuration'];\r\n          this.SubmissionName = this.ProjectInfo_List[0]['SubmissionType1'];\r\n\r\n\r\n          this._LinkService._GetAttachments(this.Authority_EmpNo, this.URL_ProjectCode, this.ProjectBlock)\r\n            .subscribe((data) => {\r\n              this.AttachmentList = JSON.parse(data[0]['Attachments_Json']);\r\n              this.attachmentlength = this.AttachmentList.length;\r\n              this.TotalDocs = (data[0]['TotalDocs']);\r\n            });\r\n          var fullname_R = this.Responsible.split(' ');\r\n          this.InitR = fullname_R.shift().charAt(0) + fullname_R.pop().charAt(0);\r\n          this.InitR.toUpperCase();\r\n          this.date1 = this.ProjectInfo_List[0]['DPG'];\r\n          this.date2 = this.ProjectInfo_List[0]['DeadLine'];\r\n          //add data to service\r\n          this.BsService.SetNewPojectCode(this.URL_ProjectCode);\r\n          this.BsService.SetNewPojectName(this.ProjectName);\r\n          //console.log(\"Date In ----->\", this.date1, this.date2)\r\n          this.Project_Responsible = this.ProjectInfo_List[0]['Team_Res'];\r\n          // Date Diff In Days...\r\n          this.date1 = moment(this.date1);\r\n          this.date2 = moment(this.date2);\r\n          this.Difference_In_Days = Math.abs(this.date1.diff(this.date2, 'days'));\r\n\r\n          var fullname_Own = this.Owner.split(' ');\r\n          this.InitOwn = fullname_Own.shift().charAt(0) + fullname_Own.pop().charAt(0);\r\n          this.InitOwn.toUpperCase();\r\n\r\n          var fullname_Auth = this.Authority.split(' ');\r\n          this.InitAut = fullname_Auth.shift().charAt(0) + fullname_Auth.pop().charAt(0);\r\n          this.InitAut.toUpperCase();\r\n\r\n          var fullname_Coor = this.Coordinator.split(' ');\r\n          this.InitCoor = fullname_Coor.shift().charAt(0) + fullname_Coor.pop().charAt(0);\r\n          this.InitCoor.toUpperCase();\r\n          // var fullname_Inf = this.Informer.split(' ');\r\n          // this.InitInformer = fullname_Inf.shift().charAt(0) + fullname_Inf.pop().charAt(0);\r\n          // this.InitInformer.toUpperCase();\r\n          this.InitInformer = \"IN\";\r\n          // var fullname_Supp = this.Support.split(' ');\r\n          // this.InitSupp = fullname_Supp.shift().charAt(0) + fullname_Supp.pop().charAt(0);\r\n          // this.InitSupp.toUpperCase();\r\n          this.InitSupp = \"SU\";\r\n\r\n          if (this.Status == 'New Project Rejected') {\r\n            this.actionButton = true;\r\n          }\r\n          if (this.Status == 'ToDo Completed' || this.Status == 'Completed' || this.Status == 'New Project Rejected'\r\n            || this.Status == 'New KPI Rejected' || this.Status == 'Rejected' || this.Status == 'Project Complete Rejected'\r\n            || this.Status == 'Project Hold') {\r\n            this.darbutton = false;\r\n          }\r\n\r\n        }\r\n      });\r\n    this.service.DARGraphCalculations_Json(this.URL_ProjectCode)\r\n      .subscribe(data1 => {\r\n        this.DarGraphDataList = JSON.parse(data1[0]['DARGraphCalculations_Json']);\r\n        //  console.log(data[0]['RemainingHours']);\r\n        //console.log(\"MaxDu....\", MaxDuration);\r\n        this.maxDuration = (data1[0]['ProjectMaxDuration']);\r\n        let data2 = JSON.parse(data1[0]['DARGraphCalculations_Json']);\r\n        this.standardDuration = (data2[0]['DurationTime']);\r\n      });\r\n  }\r\n\r\n  AddDms() {\r\n    this._LinkSideBar = false;\r\n    this._onRowClick(this.projectCode);\r\n  }\r\n\r\n  GetMemosByEmployeeId() {\r\n    this._LinkService.GetMemosByEmployeeCode(this.Current_user_ID).\r\n      subscribe((data) => {\r\n        this.Memos_List = JSON.parse(data['JsonData']);\r\n        this._ActualMemoslist = JSON.parse(data['JsonData']);\r\n        // console.log(\"Actual Memo List By EmpId--->\", this._ActualMemoslist)\r\n        this._totalMemos = this._ActualMemoslist.length;\r\n        // console.log(\"Memos List\", JSON.parse(data['JsonData']));\r\n        this.dropdownSettings_Memo = {\r\n          singleSelection: true,\r\n          idField: 'MailId',\r\n          textField: 'Subject',\r\n          selectAllText: 'Select All',\r\n          unSelectAllText: 'UnSelect All',\r\n          itemsShowLimit: 1,\r\n          allowSearchFilter: true\r\n        };\r\n      });\r\n  }\r\n\r\n  _dbMemoIdList: any;\r\n  _SelectedIdsfromDb: any;\r\n  _JsonString: string;\r\n  Selected_Projectcode: string;\r\n  Memos_List: any;\r\n  _ActualMemoslist: any;\r\n  _totalMemos: number;\r\n  _mappedMemos: number;\r\n  dropdownSettings_Memo: IDropdownSettings = {};\r\n  ngDropdwonMemo: any;\r\n  Empty_MemoDropdown: any;\r\n  _SelectedMemos: any;\r\n  Mail_Id: number;\r\n\r\n  Memo_Select(selecteditems) {\r\n    //console.log(\"Selected Item---->\",selecteditems)\r\n    let arr = [];\r\n    this.Empty_MemoDropdown = selecteditems;\r\n    // console.log(\"Before ForEach data Selected Memos---->\",this.Empty_MemoDropdown,)\r\n    this.Empty_MemoDropdown.forEach(element => {\r\n      arr.push({ MailId: element.MailId })\r\n      this._SelectedMemos = arr;\r\n    });\r\n    //console.log(\"Selected Memos In Array--->\", arr)\r\n  }\r\n\r\n  Memo_Deselect() {\r\n    let arr = [];\r\n    this.Empty_MemoDropdown = this.ngDropdwonMemo;\r\n    this.Empty_MemoDropdown.forEach(element => {\r\n      arr.push({ MailId: element.MailId })\r\n      this._SelectedMemos = arr;\r\n    });\r\n    //console.log(\"Deselect Memos--->\", this._SelectedMemos)\r\n  }\r\n\r\n  _onRowClick(projectCode) {\r\n    this._SelectedIdsfromDb = [];\r\n    this.Selected_Projectcode = projectCode;\r\n    // console.log(\"projt Code------->\",projectCode);\r\n    // this._displayProjName = ProjName;\r\n    this.GetMemosByEmployeeId();\r\n    this._LinkService._GetOnlyMemoIdsByProjectCode(projectCode).\r\n      subscribe((data) => {\r\n        let Table_data: any = data;\r\n        // console.log(\"Memos Id Form DB--->\", data);\r\n        if (Table_data.length > 0) {\r\n          this._JsonString = JSON.stringify(data[0]['JsonData']);\r\n          //console.log(\"Memos Ids-------->\", (this._JsonString));\r\n          this._dbMemoIdList = JSON.parse(data[0]['JsonData']);\r\n          let arr1: any = this._ActualMemoslist;\r\n          // console.log(\"Actula Memo List On Row Click--->\", this._ActualMemoslist);\r\n          let arr2: any = this._dbMemoIdList;\r\n          this._SelectedIdsfromDb = _.map(arr2, (d) => { return d.MailId });\r\n          //Rejecting Same Ids \r\n          this.Memos_List = _.reject(arr1, (d) => {\r\n            var findId = _.find(this._SelectedIdsfromDb, (sId) => { return sId === d.MailId });\r\n            if (findId) {\r\n              return true;\r\n            }\r\n            else {\r\n              return false;\r\n            }\r\n          })\r\n          let arr = [];\r\n          this._SelectedIdsfromDb.forEach(item => {\r\n            arr.push({ MailId: item })\r\n            this._SelectedIdsfromDb = arr;\r\n          });\r\n          if (this._dbMemoIdList == undefined) {\r\n            this._mappedMemos = 0;\r\n          }\r\n          else {\r\n            this._mappedMemos = this._dbMemoIdList.length;\r\n          }\r\n          //   // console.log(\"On Row Click----selectedIdfrom DB---->\",this._SelectedIdsfromDb);\r\n        }\r\n        else {\r\n          this._mappedMemos = 0;\r\n          // console.log(\"No Memos linked For This Project...\")\r\n        }\r\n      });\r\n    document.getElementById(\"LinkSideBar\").style.width = \"50%\";\r\n  }\r\n\r\n  closeInfo() {\r\n    document.getElementById(\"mysideInfobar\").classList.remove(\"side--on\");\r\n    document.getElementById(\"mysideInfobar_Update\").style.width = \"0\";\r\n    document.getElementById(\"mysideInfobar1\").style.width = \"0\";\r\n    document.getElementById(\"mysideInfobar_ProjectsUpdate\").style.width = \"0\";\r\n    document.getElementById(\"darsidebar\").style.width = \"0\";\r\n    // document.getElementById(\"mysideInfobar1\").classList.remove(\"side--on\");\r\n    // For page top div removing the fixed\r\n    document.getElementById(\"moredet\").classList.remove(\"position-fixed\");\r\n    document.getElementById(\"rightbar-overlay\").style.display = \"none\";\r\n    // this.notifyService.showError(\"Cancelled\", '');\r\n    this.Clear_Feilds();\r\n    this.GetSubtask_Details();\r\n  }\r\n\r\n  closeApproval() {\r\n    document.getElementById(\"mysideInfobar\").classList.remove(\"side--on\");\r\n    document.getElementById(\"mysideInfobar_Update\").style.width = \"0\";\r\n    document.getElementById(\"mysideInfobar1\").style.width = \"0\";\r\n    document.getElementById(\"mysideInfobar_ProjectsUpdate\").style.width = \"0\";\r\n    document.getElementById(\"darsidebar\").style.width = \"0\";\r\n    // document.getElementById(\"mysideInfobar1\").classList.remove(\"side--on\");\r\n    // For page top div removing the fixed\r\n    document.getElementById(\"moredet\").classList.remove(\"position-fixed\");\r\n    document.getElementById(\"rightbar-overlay\").style.display = \"none\";\r\n    this.notifyService.showError(\"Cancelled\", '');\r\n    this.Clear_Feilds();\r\n    this.GetSubtask_Details();\r\n  }\r\n\r\n  sideviw() {\r\n    document.getElementById(\"mysideInfobar\").classList.add(\"side--on\");\r\n    document.getElementById(\"moredet\").classList.add(\"position-fixed\");\r\n    document.getElementById(\"rightbar-overlay\").style.display = \"block\";\r\n  }\r\n\r\n  DarGraphDataList: any;\r\n\r\n  TaskChart() {\r\n    let data1: any;\r\n    this.service.DARGraphCalculations_Json(this.URL_ProjectCode)\r\n      .subscribe(data => {\r\n        // console.log(\"data1 Testong---->\", data);\r\n        data1 = JSON.parse(data[0]['DARGraphCalculations_Json']);\r\n        this.DarGraphDataList = data1;\r\n        // console.log(this.DarGraphDataList);\r\n        //console.log(\"DarGraphDataList---->\",this.DarGraphDataList);\r\n        let root = am5.Root.new(\"chartdiv\");\r\n        let chart = root.container.children.push(am5xy.XYChart.new(root, {\r\n          panX: false,\r\n          panY: false,\r\n          wheelX: \"panX\",\r\n          wheelY: \"zoomX\",\r\n          layout: root.verticalLayout\r\n        }));\r\n        let legend = chart.children.push(\r\n          am5.Legend.new(root, {\r\n            centerX: am5.p50,\r\n            x: am5.p50\r\n          })\r\n        );\r\n        //data1;\r\n        // [{\r\n        //   \"year\": \"2021\",\r\n        //   \"europe\": 10,\r\n        //   \"namerica\": 2.5,\r\n        //   \"asia\": 2.1,\r\n        //   \"lamerica\": 1,\r\n        //   \"meast\": 0.8,\r\n        //   \"africa\": 0.4\r\n        // }, {\r\n        //   \"year\": \"2022\",\r\n        //   \"europe\": 2.6,\r\n        //   \"namerica\": 2.7,\r\n        //   \"asia\": 2.2,\r\n        //   \"lamerica\": 0.5,\r\n        //   \"meast\": 0.4,\r\n        //   \"africa\": 0.3\r\n        // }, {\r\n        //   \"year\": \"2023\",\r\n        //   \"europe\": 2.8,\r\n        //   \"namerica\": 2.9,\r\n        //   \"asia\": 2.4,\r\n        //   \"lamerica\": 0.3,\r\n        //   \"meast\": 0.9,\r\n        //   \"africa\": 0.5\r\n        // }];\r\n        // Create axes\r\n        // https://www.amcharts.com/docs/v5/charts/xy-chart/axes/\r\n\r\n        let xAxis = chart.xAxes.push(am5xy.CategoryAxis.new(root, {\r\n          categoryField: 'category',\r\n          renderer: am5xy.AxisRendererX.new(root, {\r\n            cellStartLocation: 0.1,\r\n            cellEndLocation: 0.9\r\n          }),\r\n          tooltip: am5.Tooltip.new(root, {})\r\n        }));\r\n\r\n        xAxis.data.setAll(data1);\r\n        let yAxis = chart.yAxes.push(am5xy.ValueAxis.new(root, {\r\n          renderer: am5xy.AxisRendererY.new(root, {})\r\n        }));\r\n        // Add series\r\n        // https://www.amcharts.com/docs/v5/charts/xy-chart/series/\r\n        function makeSeries(name, fieldName) {\r\n          let series = chart.series.push(am5xy.ColumnSeries.new(root, {\r\n            name: name,\r\n            xAxis: xAxis,\r\n            yAxis: yAxis,\r\n            valueYField: fieldName,\r\n            categoryXField: 'category'\r\n          }));\r\n\r\n          series.columns.template.setAll({\r\n            tooltipText: \"{category} - {name} : {valueY}\",\r\n            width: am5.percent(90),\r\n            tooltipY: 0\r\n          });\r\n\r\n          series.data.setAll(data1);\r\n          // Make stuff animate on load\r\n          // https://www.amcharts.com/docs/v5/concepts/animations/\r\n          series.appear();\r\n\r\n          series.bullets.push(function () {\r\n            return am5.Bullet.new(root, {\r\n              locationY: 0,\r\n              sprite: am5.Label.new(root, {\r\n                text: \"{valueY}\",\r\n                fill: root.interfaceColors.get(\"alternativeText\"),\r\n                centerY: 0,\r\n                centerX: am5.p50,\r\n                populateText: true\r\n              })\r\n            });\r\n          });\r\n          //series.set(\"fill\", am5.color(0xff0000)); // set Series color to red\r\n          //  series.set(\"fill\", am5.color(\"#00ff00\")); // set Series color to green\r\n          legend.data.push(series);\r\n        }\r\n        makeSeries(\"Used Hours In DAR\", \"DARUsedHours\");\r\n        makeSeries(\"Remaining Hours In DAR\", \"RemainingHours\");\r\n        makeSeries(\"Total DAR Hours\", \"TotalDARHours\");\r\n\r\n        // Make stuff animate on load\r\n        // https://www.amcharts.com/docs/v5/concepts/animations/\r\n        chart.appear(1000, 100);\r\n      });\r\n  }\r\n\r\n  ProjectTrendChart() {\r\n    let chart = am4core.create(\"ProjectTrendchart\", am4charts.XYChart);\r\n    //let chart = am4core.create(\"chartdiv\", am4charts.XYChart);\r\n    chart.paddingRight = 20;\r\n    // Add data\r\n    chart.data = [{\r\n      \"year\": \"1950\",\r\n      \"value\": -0.307\r\n    }, {\r\n      \"year\": \"1951\",\r\n      \"value\": -0.168\r\n    }, {\r\n      \"year\": \"1952\",\r\n      \"value\": -0.073\r\n    }, {\r\n      \"year\": \"1953\",\r\n      \"value\": -0.027\r\n    }, {\r\n      \"year\": \"1954\",\r\n      \"value\": -0.251\r\n    }, {\r\n      \"year\": \"1955\",\r\n      \"value\": -0.281\r\n    }, {\r\n      \"year\": \"1956\",\r\n      \"value\": -0.348\r\n    }, {\r\n      \"year\": \"1957\",\r\n      \"value\": -0.074\r\n    }, {\r\n      \"year\": \"1958\",\r\n      \"value\": -0.011\r\n    }, {\r\n      \"year\": \"1959\",\r\n      \"value\": -0.074\r\n    }, {\r\n      \"year\": \"1960\",\r\n      \"value\": -0.124\r\n    }, {\r\n      \"year\": \"1961\",\r\n      \"value\": -0.024\r\n    }, {\r\n      \"year\": \"1962\",\r\n      \"value\": -0.022\r\n    }, {\r\n      \"year\": \"1966\",\r\n      \"value\": -0.147\r\n    }, {\r\n      \"year\": \"1967\",\r\n      \"value\": -0.15\r\n    }, {\r\n      \"year\": \"1968\",\r\n      \"value\": -0.16\r\n    }, {\r\n      \"year\": \"1969\",\r\n      \"value\": -0.011\r\n    }, {\r\n      \"year\": \"1970\",\r\n      \"value\": -0.068\r\n    }, {\r\n      \"year\": \"1971\",\r\n      \"value\": -0.19\r\n    }];\r\n\r\n    // Create axes\r\n    let categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis());\r\n    categoryAxis.dataFields.category = \"year\";\r\n    categoryAxis.renderer.minGridDistance = 50;\r\n    categoryAxis.renderer.grid.template.location = 0.5;\r\n    categoryAxis.startLocation = 0.5;\r\n    categoryAxis.endLocation = 0.5;\r\n\r\n    // Create value axis\r\n    let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n    valueAxis.baseValue = 0;\r\n\r\n    // Create series\r\n    let series = chart.series.push(new am4charts.LineSeries());\r\n    series.dataFields.valueY = \"value\";\r\n    series.dataFields.categoryX = \"year\";\r\n    series.strokeWidth = 2;\r\n    series.tensionX = 0.77;\r\n\r\n    // bullet is added because we add tooltip to a bullet for it to change color\r\n    let bullet = series.bullets.push(new am4charts.Bullet());\r\n    bullet.tooltipText = \"{valueY}\";\r\n\r\n    bullet.adapter.add(\"fill\", function (fill, target) {\r\n      if (target.dataItem['valueY'] < 0) {\r\n        return am4core.color(\"#FF0000\");\r\n      }\r\n      return fill;\r\n    })\r\n    let range = valueAxis.createSeriesRange(series);\r\n    range.value = 0;\r\n    range.endValue = -1000;\r\n    range.contents.stroke = am4core.color(\"#FF0000\");\r\n    range.contents.fill = range.contents.stroke;\r\n\r\n    // Add scrollbar\r\n    let scrollbarX = new am4charts.XYChartScrollbar();\r\n    scrollbarX.series.push(series);\r\n    chart.scrollbarX = scrollbarX;\r\n\r\n    chart.cursor = new am4charts.XYCursor();\r\n  }\r\n\r\n  dummyChart() {\r\n    // let chart = am4core.create(\"projecttrenddiv\", am4charts.XYChart);\r\n    //let chart = am4core.create(\"chartdiv\", am4charts.XYChart);\r\n    let allData = {\r\n      \"2002\": {\r\n        \"Friendster\": 0,\r\n        \"Facebook\": 0,\r\n        \"Flickr\": 0,\r\n        \"Google Buzz\": 0,\r\n        \"Google+\": 0,\r\n        \"Hi5\": 0,\r\n        \"Instagram\": 0,\r\n        \"MySpace\": 0,\r\n        \"Orkut\": 0,\r\n        \"Pinterest\": 0,\r\n        \"Reddit\": 0,\r\n        \"Snapchat\": 0,\r\n        \"TikTok\": 0,\r\n        \"Tumblr\": 0,\r\n        \"Twitter\": 0,\r\n        \"WeChat\": 0,\r\n        \"Weibo\": 0,\r\n        \"Whatsapp\": 0,\r\n        \"YouTube\": 0\r\n      },\r\n      \"2003\": {\r\n        \"Friendster\": 4470000,\r\n        \"Facebook\": 0,\r\n        \"Flickr\": 0,\r\n        \"Google Buzz\": 0,\r\n        \"Google+\": 0,\r\n        \"Hi5\": 0,\r\n        \"Instagram\": 0,\r\n        \"MySpace\": 0,\r\n        \"Orkut\": 0,\r\n        \"Pinterest\": 0,\r\n        \"Reddit\": 0,\r\n        \"Snapchat\": 0,\r\n        \"TikTok\": 0,\r\n        \"Tumblr\": 0,\r\n        \"Twitter\": 0,\r\n        \"WeChat\": 0,\r\n        \"Weibo\": 0,\r\n        \"Whatsapp\": 0,\r\n        \"YouTube\": 0\r\n      },\r\n      \"2004\": {\r\n        \"Friendster\": 5970054,\r\n        \"Facebook\": 0,\r\n        \"Flickr\": 3675135,\r\n        \"Google Buzz\": 0,\r\n        \"Google+\": 0,\r\n        \"Hi5\": 0,\r\n        \"Instagram\": 0,\r\n        \"MySpace\": 980036,\r\n        \"Orkut\": 4900180,\r\n        \"Pinterest\": 0,\r\n        \"Reddit\": 0,\r\n        \"Snapchat\": 0,\r\n        \"TikTok\": 0,\r\n        \"Tumblr\": 0,\r\n        \"Twitter\": 0,\r\n        \"WeChat\": 0,\r\n        \"Weibo\": 0,\r\n        \"Whatsapp\": 0,\r\n        \"YouTube\": 0\r\n      },\r\n      \"2005\": {\r\n        \"Friendster\": 7459742,\r\n        \"Facebook\": 0,\r\n        \"Flickr\": 7399354,\r\n        \"Google Buzz\": 0,\r\n        \"Google+\": 0,\r\n        \"Hi5\": 9731610,\r\n        \"Instagram\": 0,\r\n        \"MySpace\": 19490059,\r\n        \"Orkut\": 9865805,\r\n        \"Pinterest\": 0,\r\n        \"Reddit\": 0,\r\n        \"Snapchat\": 0,\r\n        \"TikTok\": 0,\r\n        \"Tumblr\": 0,\r\n        \"Twitter\": 0,\r\n        \"WeChat\": 0,\r\n        \"Weibo\": 0,\r\n        \"Whatsapp\": 0,\r\n        \"YouTube\": 1946322\r\n      },\r\n      \"2006\": {\r\n        \"Friendster\": 8989854,\r\n        \"Facebook\": 0,\r\n        \"Flickr\": 14949270,\r\n        \"Google Buzz\": 0,\r\n        \"Google+\": 0,\r\n        \"Hi5\": 19932360,\r\n        \"Instagram\": 0,\r\n        \"MySpace\": 54763260,\r\n        \"Orkut\": 14966180,\r\n        \"Pinterest\": 0,\r\n        \"Reddit\": 248309,\r\n        \"Snapchat\": 0,\r\n        \"TikTok\": 0,\r\n        \"Tumblr\": 0,\r\n        \"Twitter\": 0,\r\n        \"WeChat\": 0,\r\n        \"Weibo\": 0,\r\n        \"Whatsapp\": 0,\r\n        \"YouTube\": 19878248\r\n      },\r\n      \"2007\": {\r\n        \"Friendster\": 24253200,\r\n        \"Facebook\": 0,\r\n        \"Flickr\": 29299875,\r\n        \"Google Buzz\": 0,\r\n        \"Google+\": 0,\r\n        \"Hi5\": 29533250,\r\n        \"Instagram\": 0,\r\n        \"MySpace\": 69299875,\r\n        \"Orkut\": 26916562,\r\n        \"Pinterest\": 0,\r\n        \"Reddit\": 488331,\r\n        \"Snapchat\": 0,\r\n        \"TikTok\": 0,\r\n        \"Tumblr\": 0,\r\n        \"Twitter\": 0,\r\n        \"WeChat\": 0,\r\n        \"Weibo\": 0,\r\n        \"Whatsapp\": 0,\r\n        \"YouTube\": 143932250\r\n      },\r\n      \"2008\": {\r\n        \"Friendster\": 51008911,\r\n        \"Facebook\": 100000000,\r\n        \"Flickr\": 30000000,\r\n        \"Google Buzz\": 0,\r\n        \"Google+\": 0,\r\n        \"Hi5\": 55045618,\r\n        \"Instagram\": 0,\r\n        \"MySpace\": 72408233,\r\n        \"Orkut\": 44357628,\r\n        \"Pinterest\": 0,\r\n        \"Reddit\": 1944940,\r\n        \"Snapchat\": 0,\r\n        \"TikTok\": 0,\r\n        \"Tumblr\": 0,\r\n        \"Twitter\": 0,\r\n        \"WeChat\": 0,\r\n        \"Weibo\": 0,\r\n        \"Whatsapp\": 0,\r\n        \"YouTube\": 294493950\r\n      },\r\n      \"2009\": {\r\n        \"Friendster\": 28804331,\r\n        \"Facebook\": 276000000,\r\n        \"Flickr\": 41834525,\r\n        \"Google Buzz\": 0,\r\n        \"Google+\": 0,\r\n        \"Hi5\": 57893524,\r\n        \"Instagram\": 0,\r\n        \"MySpace\": 70133095,\r\n        \"Orkut\": 47366905,\r\n        \"Pinterest\": 0,\r\n        \"Reddit\": 3893524,\r\n        \"Snapchat\": 0,\r\n        \"TikTok\": 0,\r\n        \"Tumblr\": 0,\r\n        \"Twitter\": 0,\r\n        \"WeChat\": 0,\r\n        \"Weibo\": 0,\r\n        \"Whatsapp\": 0,\r\n        \"YouTube\": 413611440\r\n      },\r\n      \"2010\": {\r\n        \"Friendster\": 0,\r\n        \"Facebook\": 517750000,\r\n        \"Flickr\": 54708063,\r\n        \"Google Buzz\": 166029650,\r\n        \"Google+\": 0,\r\n        \"Hi5\": 59953290,\r\n        \"Instagram\": 0,\r\n        \"MySpace\": 68046710,\r\n        \"Orkut\": 49941613,\r\n        \"Pinterest\": 0,\r\n        \"Reddit\": 0,\r\n        \"Snapchat\": 0,\r\n        \"TikTok\": 0,\r\n        \"Tumblr\": 0,\r\n        \"Twitter\": 43250000,\r\n        \"WeChat\": 0,\r\n        \"Weibo\": 19532900,\r\n        \"Whatsapp\": 0,\r\n        \"YouTube\": 480551990\r\n      },\r\n      \"2011\": {\r\n        \"Friendster\": 0,\r\n        \"Facebook\": 766000000,\r\n        \"Flickr\": 66954600,\r\n        \"Google Buzz\": 170000000,\r\n        \"Google+\": 0,\r\n        \"Hi5\": 46610848,\r\n        \"Instagram\": 0,\r\n        \"MySpace\": 46003536,\r\n        \"Orkut\": 47609080,\r\n        \"Pinterest\": 0,\r\n        \"Reddit\": 0,\r\n        \"Snapchat\": 0,\r\n        \"TikTok\": 0,\r\n        \"Tumblr\": 0,\r\n        \"Twitter\": 92750000,\r\n        \"WeChat\": 47818400,\r\n        \"Weibo\": 48691040,\r\n        \"Whatsapp\": 0,\r\n        \"YouTube\": 642669824\r\n      },\r\n      \"2012\": {\r\n        \"Friendster\": 0,\r\n        \"Facebook\": 979750000,\r\n        \"Flickr\": 79664888,\r\n        \"Google Buzz\": 170000000,\r\n        \"Google+\": 107319100,\r\n        \"Hi5\": 0,\r\n        \"Instagram\": 0,\r\n        \"MySpace\": 0,\r\n        \"Orkut\": 45067022,\r\n        \"Pinterest\": 0,\r\n        \"Reddit\": 0,\r\n        \"Snapchat\": 0,\r\n        \"TikTok\": 0,\r\n        \"Tumblr\": 146890156,\r\n        \"Twitter\": 160250000,\r\n        \"WeChat\": 118123370,\r\n        \"Weibo\": 79195730,\r\n        \"Whatsapp\": 0,\r\n        \"YouTube\": 844638200\r\n      },\r\n      \"2013\": {\r\n        \"Friendster\": 0,\r\n        \"Facebook\": 1170500000,\r\n        \"Flickr\": 80000000,\r\n        \"Google Buzz\": 170000000,\r\n        \"Google+\": 205654700,\r\n        \"Hi5\": 0,\r\n        \"Instagram\": 117500000,\r\n        \"MySpace\": 0,\r\n        \"Orkut\": 0,\r\n        \"Pinterest\": 0,\r\n        \"Reddit\": 0,\r\n        \"Snapchat\": 0,\r\n        \"TikTok\": 0,\r\n        \"Tumblr\": 293482050,\r\n        \"Twitter\": 223675000,\r\n        \"WeChat\": 196523760,\r\n        \"Weibo\": 118261880,\r\n        \"Whatsapp\": 300000000,\r\n        \"YouTube\": 1065223075\r\n      },\r\n      \"2014\": {\r\n        \"Friendster\": 0,\r\n        \"Facebook\": 1334000000,\r\n        \"Flickr\": 0,\r\n        \"Google Buzz\": 170000000,\r\n        \"Google+\": 254859015,\r\n        \"Hi5\": 0,\r\n        \"Instagram\": 250000000,\r\n        \"MySpace\": 0,\r\n        \"Orkut\": 0,\r\n        \"Pinterest\": 0,\r\n        \"Reddit\": 135786956,\r\n        \"Snapchat\": 0,\r\n        \"TikTok\": 0,\r\n        \"Tumblr\": 388721163,\r\n        \"Twitter\": 223675000,\r\n        \"WeChat\": 444232415,\r\n        \"Weibo\": 154890345,\r\n        \"Whatsapp\": 498750000,\r\n        \"YouTube\": 1249451725\r\n      },\r\n      \"2015\": {\r\n        \"Friendster\": 0,\r\n        \"Facebook\": 1516750000,\r\n        \"Flickr\": 0,\r\n        \"Google Buzz\": 170000000,\r\n        \"Google+\": 298950015,\r\n        \"Hi5\": 0,\r\n        \"Instagram\": 400000000,\r\n        \"MySpace\": 0,\r\n        \"Orkut\": 0,\r\n        \"Pinterest\": 0,\r\n        \"Reddit\": 163346676,\r\n        \"Snapchat\": 0,\r\n        \"TikTok\": 0,\r\n        \"Tumblr\": 475923363,\r\n        \"Twitter\": 304500000,\r\n        \"WeChat\": 660843407,\r\n        \"Weibo\": 208716685,\r\n        \"Whatsapp\": 800000000,\r\n        \"YouTube\": 1328133360\r\n      },\r\n      \"2016\": {\r\n        \"Friendster\": 0,\r\n        \"Facebook\": 1753500000,\r\n        \"Flickr\": 0,\r\n        \"Google Buzz\": 0,\r\n        \"Google+\": 398648000,\r\n        \"Hi5\": 0,\r\n        \"Instagram\": 550000000,\r\n        \"MySpace\": 0,\r\n        \"Orkut\": 0,\r\n        \"Pinterest\": 143250000,\r\n        \"Reddit\": 238972480,\r\n        \"Snapchat\": 238648000,\r\n        \"TikTok\": 0,\r\n        \"Tumblr\": 565796720,\r\n        \"Twitter\": 314500000,\r\n        \"WeChat\": 847512320,\r\n        \"Weibo\": 281026560,\r\n        \"Whatsapp\": 1000000000,\r\n        \"YouTube\": 1399053600\r\n      },\r\n      \"2017\": {\r\n        \"Friendster\": 0,\r\n        \"Facebook\": 2035750000,\r\n        \"Flickr\": 0,\r\n        \"Google Buzz\": 0,\r\n        \"Google+\": 495657000,\r\n        \"Hi5\": 0,\r\n        \"Instagram\": 750000000,\r\n        \"MySpace\": 0,\r\n        \"Orkut\": 0,\r\n        \"Pinterest\": 195000000,\r\n        \"Reddit\": 297394200,\r\n        \"Snapchat\": 0,\r\n        \"TikTok\": 239142500,\r\n        \"Tumblr\": 593783960,\r\n        \"Twitter\": 328250000,\r\n        \"WeChat\": 921742750,\r\n        \"Weibo\": 357569030,\r\n        \"Whatsapp\": 1333333333,\r\n        \"YouTube\": 1495657000\r\n      },\r\n      \"2022\": {\r\n        \"Friendster\": 0,\r\n        \"Facebook\": 2255250000,\r\n        \"Flickr\": 0,\r\n        \"Google Buzz\": 0,\r\n        \"Google+\": 430000000,\r\n        \"Hi5\": 0,\r\n        \"Instagram\": 1000000000,\r\n        \"MySpace\": 0,\r\n        \"Orkut\": 0,\r\n        \"Pinterest\": 246500000,\r\n        \"Reddit\": 355000000,\r\n        \"Snapchat\": 0,\r\n        \"TikTok\": 500000000,\r\n        \"Tumblr\": 624000000,\r\n        \"Twitter\": 329500000,\r\n        \"WeChat\": 1000000000,\r\n        \"Weibo\": 431000000,\r\n        \"Whatsapp\": 1433333333,\r\n        \"YouTube\": 1900000000\r\n      }\r\n    };\r\n\r\n    // Create root element\r\n    // https://www.amcharts.com/docs/v5/getting-started/#Root_element\r\n    let root = am5.Root.new(\"projecttrenddiv\");\r\n\r\n    root.numberFormatter.setAll({\r\n      numberFormat: \"#a\",\r\n\r\n      // Group only into M (millions), and B (billions)\r\n      bigNumberPrefixes: [\r\n        { number: 1e6, suffix: \"M\" },\r\n        { number: 1e9, suffix: \"B\" }\r\n      ],\r\n      // Do not use small number prefixes at all\r\n      smallNumberPrefixes: []\r\n    });\r\n\r\n    let stepDuration = 2000;\r\n\r\n    // Set themes\r\n    // https://www.amcharts.com/docs/v5/concepts/themes/\r\n    // root.setThemes([am5themes_Animated.new(root)]);\r\n\r\n    // Create chart\r\n    // https://www.amcharts.com/docs/v5/charts/xy-chart/\r\n    let chart = root.container.children.push(am5xy.XYChart.new(root, {\r\n      panX: true,\r\n      panY: true,\r\n      wheelX: \"none\",\r\n      wheelY: \"none\"\r\n    }));\r\n\r\n    // We don't want zoom-out button to appear while animating, so we hide it at all\r\n    chart.zoomOutButton.set(\"forceHidden\", true);\r\n\r\n    // Create axes\r\n    // https://www.amcharts.com/docs/v5/charts/xy-chart/axes/\r\n    let yRenderer = am5xy.AxisRendererY.new(root, {\r\n      minGridDistance: 20,\r\n      inversed: true\r\n    });\r\n\r\n    // hide grid\r\n    yRenderer.grid.template.set(\"visible\", false);\r\n\r\n    let yAxis = chart.yAxes.push(am5xy.CategoryAxis.new(root, {\r\n      maxDeviation: 0,\r\n      categoryField: \"network\",\r\n      renderer: yRenderer\r\n    }));\r\n\r\n    let xAxis = chart.xAxes.push(am5xy.ValueAxis.new(root, {\r\n      maxDeviation: 0,\r\n      min: 0,\r\n      strictMinMax: true,\r\n      extraMax: 0.1,\r\n      renderer: am5xy.AxisRendererX.new(root, {})\r\n    }));\r\n\r\n    xAxis.set(\"interpolationDuration\", stepDuration / 10);\r\n    xAxis.set(\"interpolationEasing\", am5.ease.linear);\r\n\r\n    // Add series\r\n    // https://www.amcharts.com/docs/v5/charts/xy-chart/series/\r\n    let series = chart.series.push(am5xy.ColumnSeries.new(root, {\r\n      xAxis: xAxis,\r\n      yAxis: yAxis,\r\n      valueXField: \"value\",\r\n      categoryYField: \"network\"\r\n    }));\r\n\r\n    // Rounded corners for columns\r\n    series.columns.template.setAll({ cornerRadiusBR: 5, cornerRadiusTR: 5 });\r\n\r\n    // Make each column to be of a different color\r\n\r\n    // Add label bullet\r\n    series.bullets.push(function () {\r\n      return am5.Bullet.new(root, {\r\n        locationX: 1,\r\n        sprite: am5.Label.new(root, {\r\n          text: \"{valueXWorking.formatNumber('#.# a')}\",\r\n          fill: root.interfaceColors.get(\"alternativeText\"),\r\n          centerX: am5.p100,\r\n          centerY: am5.p50,\r\n          populateText: true\r\n        })\r\n      });\r\n    });\r\n\r\n    let label = chart.plotContainer.children.push(am5.Label.new(root, {\r\n      text: \"2022\",\r\n      fontSize: \"8em\",\r\n      opacity: 0.2,\r\n      x: am5.p100,\r\n      y: am5.p100,\r\n      centerY: am5.p100,\r\n      centerX: am5.p100\r\n    }));\r\n\r\n    // Get series item by category\r\n    function getSeriesItem(category) {\r\n      for (var i = 0; i < series.dataItems.length; i++) {\r\n        let dataItem = series.dataItems[i];\r\n        if (dataItem.get(\"categoryY\") == category) {\r\n          return dataItem;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Axis sorting\r\n    function sortCategoryAxis() {\r\n      // sort by value\r\n      series.dataItems.sort(function (x, y) {\r\n        return y.get(\"valueX\") - x.get(\"valueX\"); // descending\r\n        //return x.get(\"valueX\") - y.get(\"valueX\"); // ascending\r\n      });\r\n\r\n      // go through each axis item\r\n      am5.array.each(yAxis.dataItems, function (dataItem) {\r\n        // get corresponding series item\r\n        let seriesDataItem = getSeriesItem(dataItem.get(\"category\"));\r\n\r\n        if (seriesDataItem) {\r\n          // get index of series data item\r\n          let index = series.dataItems.indexOf(seriesDataItem);\r\n          // calculate delta position\r\n          let deltaPosition =\r\n            (index - dataItem.get(\"index\", 0)) / series.dataItems.length;\r\n          // set index to be the same as series data item index\r\n          if (dataItem.get(\"index\") != index) {\r\n            dataItem.set(\"index\", index);\r\n            // set deltaPosition instanlty\r\n            dataItem.set(\"deltaPosition\", -deltaPosition);\r\n            // animate delta position to 0\r\n            dataItem.animate({\r\n              key: \"deltaPosition\",\r\n              to: 0,\r\n              duration: stepDuration / 2,\r\n              easing: am5.ease.out(am5.ease.cubic)\r\n            });\r\n          }\r\n        }\r\n      });\r\n      // sort axis items by index.\r\n      // This changes the order instantly, but as deltaPosition is set, they keep in the same places and then animate to true positions.\r\n      yAxis.dataItems.sort(function (x, y) {\r\n        return x.get(\"index\") - y.get(\"index\");\r\n      });\r\n    }\r\n\r\n    let year = 1;\r\n\r\n    // update data with values each 1.5 sec\r\n    let interval = setInterval(function () {\r\n      year++;\r\n\r\n      if (year > 2022) {\r\n        clearInterval(interval);\r\n        clearInterval(sortInterval);\r\n      }\r\n      updateData();\r\n    }, stepDuration);\r\n\r\n    let sortInterval = setInterval(function () {\r\n      sortCategoryAxis();\r\n    }, 100);\r\n\r\n    function setInitialData() {\r\n      let d = allData[year];\r\n      for (var n in d) {\r\n        series.data.push({ network: n, value: d[n] });\r\n        yAxis.data.push({ network: n });\r\n      }\r\n    }\r\n\r\n    function updateData() {\r\n      let itemsWithNonZero = 0;\r\n\r\n      if (allData[year]) {\r\n        label.set(\"text\", year.toString());\r\n\r\n        am5.array.each(series.dataItems, function (dataItem) {\r\n          let category = dataItem.get(\"categoryY\");\r\n          let value = allData[year][category];\r\n\r\n          if (value > 0) {\r\n            itemsWithNonZero++;\r\n          }\r\n\r\n          dataItem.animate({\r\n            key: \"valueX\",\r\n            to: value,\r\n            duration: stepDuration,\r\n            easing: am5.ease.linear\r\n          });\r\n          dataItem.animate({\r\n            key: \"valueXWorking\",\r\n            to: value,\r\n            duration: stepDuration,\r\n            easing: am5.ease.linear\r\n          });\r\n        });\r\n        yAxis.zoom(0, itemsWithNonZero / yAxis.dataItems.length);\r\n      }\r\n    }\r\n\r\n    setInitialData();\r\n    setTimeout(function () {\r\n      year++;\r\n      updateData();\r\n    }, 50);\r\n\r\n    // Make stuff animate on load\r\n    // https://www.amcharts.com/docs/v5/concepts/animations/\r\n    series.appear(1000);\r\n    chart.appear(1000, 100);\r\n  }\r\n\r\n  UserGraphs() {\r\n    let chart = am4core.create(\"userchartdiv\", am4charts.XYChart);\r\n    chart.paddingRight = 20;\r\n    // Add data\r\n    chart.data = [{\r\n      \"year\": \"1950\",\r\n      \"value\": -0.307\r\n    }, {\r\n      \"year\": \"1951\",\r\n      \"value\": -0.168\r\n    }, {\r\n      \"year\": \"1952\",\r\n      \"value\": -0.073\r\n    }, {\r\n      \"year\": \"1953\",\r\n      \"value\": -0.027\r\n    }, {\r\n      \"year\": \"1954\",\r\n      \"value\": -0.251\r\n    }, {\r\n      \"year\": \"1955\",\r\n      \"value\": -0.281\r\n    }, {\r\n      \"year\": \"1956\",\r\n      \"value\": -0.348\r\n    }, {\r\n      \"year\": \"1957\",\r\n      \"value\": -0.074\r\n    }, {\r\n      \"year\": \"1958\",\r\n      \"value\": -0.011\r\n    }, {\r\n      \"year\": \"1959\",\r\n      \"value\": -0.074\r\n    }, {\r\n      \"year\": \"1960\",\r\n      \"value\": -0.124\r\n    }, {\r\n      \"year\": \"1961\",\r\n      \"value\": -0.024\r\n    }, {\r\n      \"year\": \"1962\",\r\n      \"value\": -0.022\r\n    }, {\r\n      \"year\": \"1963\",\r\n      \"value\": 0\r\n    }, {\r\n      \"year\": \"1964\",\r\n      \"value\": -0.296\r\n    }, {\r\n      \"year\": \"1965\",\r\n      \"value\": -0.217\r\n    }, {\r\n      \"year\": \"1966\",\r\n      \"value\": -0.147\r\n    }, {\r\n      \"year\": \"1967\",\r\n      \"value\": -0.15\r\n    }, {\r\n      \"year\": \"1968\",\r\n      \"value\": -0.16\r\n    }, {\r\n      \"year\": \"1969\",\r\n      \"value\": -0.011\r\n    }, {\r\n      \"year\": \"1970\",\r\n      \"value\": -0.068\r\n    }, {\r\n      \"year\": \"1971\",\r\n      \"value\": -0.19\r\n    }, {\r\n      \"year\": \"1972\",\r\n      \"value\": -0.056\r\n    }, {\r\n      \"year\": \"1973\",\r\n      \"value\": 0.077\r\n    }, {\r\n      \"year\": \"1974\",\r\n      \"value\": -0.213\r\n    }, {\r\n      \"year\": \"1975\",\r\n      \"value\": -0.17\r\n    }, {\r\n      \"year\": \"1976\",\r\n      \"value\": -0.254\r\n    }, {\r\n      \"year\": \"1977\",\r\n      \"value\": 0.019\r\n    }, {\r\n      \"year\": \"1978\",\r\n      \"value\": -0.063\r\n    }, {\r\n      \"year\": \"1979\",\r\n      \"value\": 0.05\r\n    }, {\r\n      \"year\": \"1980\",\r\n      \"value\": 0.077\r\n    }, {\r\n      \"year\": \"1981\",\r\n      \"value\": 0.12\r\n    }, {\r\n      \"year\": \"1982\",\r\n      \"value\": 0.011\r\n    }, {\r\n      \"year\": \"1983\",\r\n      \"value\": 0.177\r\n    }, {\r\n      \"year\": \"1984\",\r\n      \"value\": -0.021\r\n    }, {\r\n      \"year\": \"1985\",\r\n      \"value\": -0.037\r\n    }, {\r\n      \"year\": \"1986\",\r\n      \"value\": 0.03\r\n    }, {\r\n      \"year\": \"1987\",\r\n      \"value\": 0.179\r\n    }, {\r\n      \"year\": \"1988\",\r\n      \"value\": 0.18\r\n    }, {\r\n      \"year\": \"1989\",\r\n      \"value\": 0.104\r\n    }, {\r\n      \"year\": \"1990\",\r\n      \"value\": 0.255\r\n    }, {\r\n      \"year\": \"1991\",\r\n      \"value\": 0.21\r\n    }, {\r\n      \"year\": \"1992\",\r\n      \"value\": 0.065\r\n    }, {\r\n      \"year\": \"1993\",\r\n      \"value\": 0.11\r\n    }, {\r\n      \"year\": \"1994\",\r\n      \"value\": 0.172\r\n    }, {\r\n      \"year\": \"1995\",\r\n      \"value\": 0.269\r\n    }, {\r\n      \"year\": \"1996\",\r\n      \"value\": 0.141\r\n    }, {\r\n      \"year\": \"1997\",\r\n      \"value\": 0.353\r\n    }, {\r\n      \"year\": \"1998\",\r\n      \"value\": 0.548\r\n    }, {\r\n      \"year\": \"1999\",\r\n      \"value\": 0.298\r\n    }, {\r\n      \"year\": \"2000\",\r\n      \"value\": 0.267\r\n    }, {\r\n      \"year\": \"2001\",\r\n      \"value\": 0.411\r\n    }, {\r\n      \"year\": \"2002\",\r\n      \"value\": 0.462\r\n    }, {\r\n      \"year\": \"2003\",\r\n      \"value\": 0.47\r\n    }, {\r\n      \"year\": \"2004\",\r\n      \"value\": 0.445\r\n    }, {\r\n      \"year\": \"2005\",\r\n      \"value\": 0.47\r\n    }];\r\n\r\n    // Create axes\r\n    let categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis());\r\n    categoryAxis.dataFields.category = \"year\";\r\n    categoryAxis.renderer.minGridDistance = 50;\r\n    categoryAxis.renderer.grid.template.location = 0.5;\r\n    categoryAxis.startLocation = 0.5;\r\n    categoryAxis.endLocation = 0.5;\r\n\r\n    // Create value axis\r\n    let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n    valueAxis.baseValue = 0;\r\n\r\n    // Create series\r\n    let series = chart.series.push(new am4charts.LineSeries());\r\n    series.dataFields.valueY = \"value\";\r\n    series.dataFields.categoryX = \"year\";\r\n    series.strokeWidth = 2;\r\n    series.tensionX = 0.77;\r\n\r\n    // bullet is added because we add tooltip to a bullet for it to change color\r\n    let bullet = series.bullets.push(new am4charts.Bullet());\r\n    bullet.tooltipText = \"{valueY}\";\r\n\r\n    bullet.adapter.add(\"fill\", function (fill, target) {\r\n      if (target.dataItem['valueY'] < 0) {\r\n        return am4core.color(\"#FF0000\");\r\n      }\r\n      return fill;\r\n    })\r\n\r\n    let range = valueAxis.createSeriesRange(series);\r\n    range.value = 0;\r\n    range.endValue = -1000;\r\n    range.contents.stroke = am4core.color(\"#FF0000\");\r\n    range.contents.fill = range.contents.stroke;\r\n\r\n    // Add scrollbar\r\n    let scrollbarX = new am4charts.XYChartScrollbar();\r\n    scrollbarX.series.push(series);\r\n    chart.scrollbarX = scrollbarX;\r\n\r\n    chart.cursor = new am4charts.XYCursor();\r\n  }\r\n\r\n  ProjectCompletionChart() {\r\n    let data1: any;\r\n    let data2: any;\r\n    this.service.DARGraphCalculations_Json(this.URL_ProjectCode)\r\n      .subscribe(data => {\r\n        // data1 = (JSON.parse(data[0]['DARGraphCalculations_Json']));\r\n        data2 = (JSON.parse(data[0]['ProjectCompletionChart']));\r\n        // console.log(data[0]['RemainingHours']);\r\n        //  let data2 = [{\r\n        //     size: 82,\r\n        //     sector: \"UnderApproval\",\r\n        //     }]\r\n\r\n        let chartData = data2;\r\n        // Create root element\r\n        // https://www.amcharts.com/docs/v5/getting-started/#Root_element\r\n\r\n        let root = am5.Root.new(\"pieChatDiv\");\r\n\r\n        // Set themes\r\n        // https://www.amcharts.com/docs/v5/concepts/themes/\r\n\r\n        // Create chart\r\n        // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/\r\n        let chart = root.container.children.push(am5percent.PieChart.new(root, {\r\n          innerRadius: 100,\r\n          layout: root.verticalLayout\r\n        }));\r\n\r\n        // Create series\r\n        // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/#Series\r\n        let series = chart.series.push(am5percent.PieSeries.new(root, {\r\n          valueField: \"size\",\r\n          categoryField: \"sector\",\r\n          tooltipText: \"{sector}: {size}%\"\r\n        }));\r\n\r\n        // Set data\r\n        // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/#Setting_data\r\n        series.data.setAll(data2);\r\n\r\n        // Play initial series animation\r\n        // https://www.amcharts.com/docs/v5/concepts/animations/#Animation_of_series\r\n        series.appear(1000, 100);\r\n\r\n        // Add label\r\n        let label = root.tooltipContainer.children.push(am5.Label.new(root, {\r\n          x: am5.p50,\r\n          y: am5.p50,\r\n          centerX: am5.p50,\r\n          centerY: am5.p50,\r\n          fill: am5.color(0x000000),\r\n          fontSize: 50\r\n        }));\r\n\r\n        // Animate chart data\r\n        // let currentYear = 1995;\r\n        // function getCurrentData() {\r\n        //   let data = chartData[currentYear];\r\n        //   currentYear++;\r\n        //   if (currentYear > 2014)\r\n        //     currentYear = 1995;\r\n        //   return data;\r\n        // }\r\n\r\n        function loop() {\r\n          label.set(\"text\", data2[0]['size'] + '%');\r\n          let data = data2;\r\n          for (var i = 0; i < data.length; i++) {\r\n            series.data.setIndex(i, data[i]);\r\n          }\r\n          chart.setTimeout(loop, 4000);\r\n        }\r\n        loop();\r\n      });\r\n  }\r\n\r\n  HybridDrillChart() {\r\n    // let data22 = [{\r\n    //   category: \"Critical\",\r\n    //   value: 89,\r\n    //   sliceSettings: {\r\n    //     fill: '#D4897F'\r\n    //   },\r\n    //   breakdown: [{\r\n    //     category: \"Sales inquiries\",\r\n    //     value: 29\r\n    //   }, {\r\n    //     category: \"Support requests\",\r\n    //     value: 40\r\n    //   }, {\r\n    //     category: \"Bug reports\",\r\n    //     value: 11\r\n    //   }, {\r\n    //     category: \"Other\",\r\n    //     value: 9\r\n    //   }]\r\n    // }, {\r\n    //   category: \"Acceptable\",\r\n    //   value: 71,\r\n    //   sliceSettings: {\r\n    //     fill: '#9898DE'\r\n    //   },\r\n    //   breakdown: [{\r\n    //     category: \"Sales inquiries\",\r\n    //     value: 22\r\n    //   }, {\r\n    //     category: \"Support requests\",\r\n    //     value: 30\r\n    //   }, {\r\n    //     category: \"Bug reports\",\r\n    //     value: 11\r\n    //   }, {\r\n    //     category: \"Other\",\r\n    //     value: 10\r\n    //   }]\r\n    // }, {\r\n    //   category: \"Good\",\r\n    //   value: 120,\r\n    //   sliceSettings: {\r\n    //     fill: '#FC798A',\r\n    //   },\r\n    //   breakdown: [{\r\n    //     category: \"Sales inquiries\",\r\n    //     value: 60\r\n    //   }, {\r\n    //     category: \"Support requests\",\r\n    //     value: 35\r\n    //   }, {\r\n    //     category: \"Bug reports\",\r\n    //     value: 15\r\n    //   }, {\r\n    //     category: \"Other\",\r\n    //     value: 10\r\n    //   }]\r\n    // }]\r\n\r\n    this.service.DARGraphCalculations_Json(this.URL_ProjectCode)\r\n      .subscribe(data1 => {\r\n        // console.log(\"data1---->\",data);\r\n        let data = JSON.parse(data1[0]['DARGraphCalculations_Json']);\r\n        //console.log(\"---->\",data);\r\n        let root = am5.Root.new(\"Hybridchartdiv\");\r\n        // Create wrapper container\r\n        let container = root.container.children.push(am5.Container.new(root, {\r\n          width: am5.p100,\r\n          height: am5.p100,\r\n          layout: root.horizontalLayout\r\n        }));\r\n        // ==============================================\r\n        // Column chart\r\n        // ==============================================\r\n        // Create chart\r\n        // https://www.amcharts.com/docs/v5/charts/xy-chart/\r\n        let columnChart = container.children.push(am5xy.XYChart.new(root, {\r\n          width: am5.p50,\r\n          panX: false,\r\n          panY: false,\r\n          wheelX: \"none\",\r\n          wheelY: \"none\",\r\n          layout: root.verticalLayout\r\n        }));\r\n        // Create axes\r\n        // https://www.amcharts.com/docs/v5/charts/xy-chart/axes/\r\n        let yAxis = columnChart.yAxes.push(am5xy.CategoryAxis.new(root, {\r\n          categoryField: \"category\",\r\n          renderer: am5xy.AxisRendererY.new(root, {})\r\n        }));\r\n\r\n        let xAxis = columnChart.xAxes.push(am5xy.ValueAxis.new(root, {\r\n          renderer: am5xy.AxisRendererX.new(root, {})\r\n        }));\r\n        xAxis.data.setAll(data);\r\n        // Add series\r\n        // https://www.amcharts.com/docs/v5/charts/xy-chart/series/\r\n        let columnSeries = columnChart.series.push(am5xy.ColumnSeries.new(root, {\r\n          //name: name,\r\n          xAxis: xAxis,\r\n          yAxis: yAxis,\r\n          valueXField: \"value\",\r\n          categoryYField: \"category\"\r\n        }));\r\n\r\n        columnSeries.columns.template.setAll({\r\n          tooltipText: \"{categoryY}: {valueX}\"\r\n        });\r\n        //series.data.setAll(data);\r\n        // Make stuff animate on load\r\n        // https://www.amcharts.com/docs/v5/concepts/animations/\r\n        columnChart.appear(1000, 100);\r\n\r\n        // ==============================================\r\n        // Column chart\r\n        // ==============================================\r\n\r\n        let pieChart = container.children.push(\r\n          am5percent.PieChart.new(root, {\r\n            width: am5.p50,\r\n            innerRadius: am5.percent(50)\r\n          })\r\n        );\r\n\r\n        // Create series\r\n        let pieSeries = pieChart.series.push(\r\n          am5percent.PieSeries.new(root, {\r\n            valueField: \"value\",\r\n            categoryField: \"category\"\r\n          })\r\n        );\r\n\r\n        pieSeries.slices.template.setAll({\r\n          templateField: \"sliceSettings\",\r\n          strokeOpacity: 0\r\n        });\r\n\r\n        let currentSlice;\r\n\r\n        pieSeries.slices.template.on(\"active\", function (active, slice) {\r\n          if (currentSlice && currentSlice != slice && active) {\r\n            currentSlice.set(\"active\", false)\r\n          }\r\n\r\n          let color = slice.get(\"fill\");\r\n\r\n          label1.setAll({\r\n            fill: color,\r\n            text: root.numberFormatter.format(data[0]['Percentage'], \"#.'%'\")\r\n          });\r\n\r\n          label2.set(\"text\", 'Project Percentage');\r\n\r\n          columnSeries.columns.template.setAll({\r\n            fill: slice.get(\"fill\"),\r\n            stroke: slice.get(\"fill\")\r\n          });\r\n\r\n          columnSeries.data.setAll(data);\r\n          yAxis.data.setAll(data);\r\n          currentSlice = slice;\r\n        });\r\n\r\n        pieSeries.labels.template.set(\"forceHidden\", true);\r\n        pieSeries.ticks.template.set(\"forceHidden\", true);\r\n        pieSeries.data.setAll(data);\r\n\r\n        // Add label\r\n        let label1 = pieChart.seriesContainer.children.push(am5.Label.new(root, {\r\n          text: \"Used Hours\",\r\n          fontSize: 35,\r\n          centerX: am5.p50,\r\n          centerY: am5.p50\r\n        }));\r\n\r\n        let label2 = pieChart.seriesContainer.children.push(am5.Label.new(root, {\r\n          text: \"Used Percentage\",\r\n          fontSize: 12,\r\n          centerX: am5.p50,\r\n          centerY: am5.p50,\r\n          dy: 30\r\n        }));\r\n\r\n        // Pre-select first slice\r\n        pieSeries.events.on(\"datavalidated\", function () {\r\n          pieSeries.slices.getIndex(0).set(\"active\", true);\r\n        });\r\n\r\n      });\r\n  }\r\n\r\n  SubtaskSummaryChart() {\r\n    this.service.DARGraphCalculations_Json(this.URL_ProjectCode)\r\n      .subscribe(data1 => {\r\n        let data = JSON.parse(data1[0]['DARGraphCalculations_Json']);\r\n        let chart = am4core.create('SummaryChart', am4charts.XYChart)\r\n        chart.colors.step = 2;\r\n\r\n        chart.legend = new am4charts.Legend()\r\n        chart.legend.position = 'top'\r\n        chart.legend.paddingBottom = 20\r\n        chart.legend.labels.template.maxWidth = 95\r\n\r\n        let xAxis = chart.xAxes.push(new am4charts.CategoryAxis())\r\n        xAxis.dataFields.category = 'category'\r\n        xAxis.renderer.cellStartLocation = 0.1\r\n        xAxis.renderer.cellEndLocation = 0.9\r\n        xAxis.renderer.grid.template.location = 0;\r\n\r\n        let yAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n        yAxis.min = 0;\r\n\r\n        function createSeries(value, name) {\r\n          let series = chart.series.push(new am4charts.ColumnSeries())\r\n          series.dataFields.valueY = value\r\n          series.dataFields.categoryX = 'category'\r\n          series.name = name\r\n\r\n          series.events.on(\"hidden\", arrangeColumns);\r\n          series.events.on(\"shown\", arrangeColumns);\r\n\r\n          let bullet = series.bullets.push(new am4charts.LabelBullet())\r\n          bullet.interactionsEnabled = false\r\n          bullet.dy = 30;\r\n          bullet.label.text = '{valueY}'\r\n          bullet.label.fill = am4core.color('#ffffff')\r\n\r\n          return series;\r\n        }\r\n\r\n        chart.data = data;\r\n        // [\r\n        //   {\r\n        //     category: 'Place #1',\r\n        //     first: 40,\r\n        //     second: 55,\r\n        //     third: 60\r\n        //   },\r\n        //   {\r\n        //     category: 'Place #2',\r\n        //     first: 30,\r\n        //     second: 78,\r\n        //     third: 69\r\n        //   },\r\n        //   {\r\n        //     category: 'Place #3',\r\n        //     first: 27,\r\n        //     second: 40,\r\n        //     third: 45\r\n        //   },\r\n        //   {\r\n        //     category: 'Place #4',\r\n        //     first: 50,\r\n        //     second: 33,\r\n        //     third: 22\r\n        //   }\r\n        // ]\r\n\r\n        createSeries('RemainingHours', 'Remaining Hours');\r\n        createSeries('DARUsedHours', 'Used Hours');\r\n        createSeries('TotalDARHours', 'Total Hours');\r\n\r\n        function arrangeColumns() {\r\n          let series = chart.series.getIndex(0);\r\n\r\n          let w = 1 - xAxis.renderer.cellStartLocation - (1 - xAxis.renderer.cellEndLocation);\r\n          if (series.dataItems.length > 1) {\r\n            let x0 = xAxis.getX(series.dataItems.getIndex(0), \"categoryX\");\r\n            let x1 = xAxis.getX(series.dataItems.getIndex(1), \"categoryX\");\r\n            let delta = ((x1 - x0) / chart.series.length) * w;\r\n            if (am4core.isNumber(delta)) {\r\n              let middle = chart.series.length / 2;\r\n\r\n              let newIndex = 0;\r\n              chart.series.each(function (series) {\r\n                if (!series.isHidden && !series.isHiding) {\r\n                  series.dummyData = newIndex;\r\n                  newIndex++;\r\n                }\r\n                else {\r\n                  series.dummyData = chart.series.indexOf(series);\r\n                }\r\n              })\r\n              let visibleCount = newIndex;\r\n              let newMiddle = visibleCount / 2;\r\n\r\n              chart.series.each(function (series) {\r\n                let trueIndex = chart.series.indexOf(series);\r\n                let newIndex = series.dummyData;\r\n\r\n                let dx = (newIndex - trueIndex + middle - newMiddle) * delta\r\n\r\n                series.animate({ property: \"dx\", to: dx }, series.interpolationDuration, series.interpolationEasing);\r\n                series.bulletsContainer.animate({ property: \"dx\", to: dx }, series.interpolationDuration, series.interpolationEasing);\r\n              })\r\n            }\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  DARSummaryChart() {\r\n    this.service.DARGraphCalculations_Json(this.URL_ProjectCode)\r\n      .subscribe(data1 => {\r\n        // let data = JSON.parse(data1[0]['DARGraphCalculations_Json']);\r\n        //  console.log(data[0]['RemainingHours']);\r\n        //console.log(\"MaxDu....\", MaxDuration);\r\n        this.maxDuration = (data1[0]['ProjectMaxDuration']);\r\n        let chart = am4core.create(\"DARSummary\", am4charts.PieChart3D);\r\n        chart.hiddenState.properties.opacity = 0; // this creates initial fade-in\r\n        chart.legend = new am4charts.Legend();\r\n        chart.data =\r\n          [\r\n            {\r\n              name: \"Remaining Hours\",\r\n              value: (data1[0]['RemainingHours']),\r\n            },\r\n            {\r\n              name: \"Total Hours Used In DAR\",\r\n              value: (data1[0]['TotalHoursUsedInDAR']),\r\n            },\r\n          ];\r\n\r\n        let series = chart.series.push(new am4charts.PieSeries3D(\r\n\r\n        ));\r\n        series.dataFields.value = \"value\";\r\n        series.dataFields.category = \"name\";\r\n        series.autoDispose = true;\r\n      });\r\n  }\r\n\r\n  /// Standard Task //////////////\r\n  StandardTask() {\r\n    let root = am5.Root.new(\"StandardChart\");\r\n    // Generate random data\r\n    var data = [{\r\n      date: new Date(2022, 0, 1).getTime(),\r\n      value: 2,\r\n      value2: 362,\r\n      value3: 699\r\n    }, {\r\n      date: new Date(2022, 0, 2).getTime(),\r\n      value: 4,\r\n      value2: 450,\r\n      value3: 841\r\n    }, {\r\n      date: new Date(2022, 0, 3).getTime(),\r\n      value: 6,\r\n      value2: 358,\r\n      value3: 699\r\n    }, {\r\n      date: new Date(2022, 0, 4).getTime(),\r\n      value: 8,\r\n      value2: 367,\r\n      value3: 500\r\n    }, {\r\n      date: new Date(2022, 0, 5).getTime(),\r\n      value: 10,\r\n      value2: 485,\r\n      value3: 369\r\n    }, {\r\n      date: new Date(2022, 0, 6).getTime(),\r\n      value: 12,\r\n      value2: 354,\r\n      value3: 250\r\n    }, {\r\n      date: new Date(2022, 0, 7).getTime(),\r\n      value: 14,\r\n      value2: 350,\r\n      value3: 600\r\n    }];;\r\n\r\n    // Create chart\r\n    // https://www.amcharts.com/docs/v5/charts/xy-chart/\r\n    var chart = root.container.children.push(\r\n      am5xy.XYChart.new(root, {\r\n        panX: true,\r\n        panY: true,\r\n        wheelX: \"panX\",\r\n        wheelY: \"zoomX\",\r\n        layout: root.verticalLayout\r\n      })\r\n    );\r\n\r\n    var easing = am5.ease.linear;\r\n\r\n    // Create axes\r\n    // https://www.amcharts.com/docs/v5/charts/xy-chart/axes/\r\n    var xAxis = chart.xAxes.push(\r\n      am5xy.DateAxis.new(root, {\r\n        maxDeviation: 0.1,\r\n        groupData: false,\r\n        baseInterval: {\r\n          timeUnit: \"day\",\r\n          count: 1\r\n        },\r\n        renderer: am5xy.AxisRendererX.new(root, {\r\n          minGridDistance: 50\r\n        }),\r\n        tooltip: am5.Tooltip.new(root, {})\r\n      })\r\n    );\r\n\r\n    var yAxis = chart.yAxes.push(\r\n      am5xy.ValueAxis.new(root, {\r\n        maxDeviation: 0.1,\r\n        renderer: am5xy.AxisRendererY.new(root, {})\r\n      })\r\n    );\r\n\r\n    // Add legend\r\n    // https://www.amcharts.com/docs/v5/charts/xy-chart/legend-xy-series/\r\n    var legend = chart.children.push(\r\n      am5.Legend.new(root, {\r\n        centerX: am5.p50,\r\n        x: am5.p50\r\n      })\r\n    );\r\n\r\n    // Add series\r\n    // https://www.amcharts.com/docs/v5/charts/xy-chart/series/\r\n    function createSeries(field, name, visible) {\r\n      var series = chart.series.push(\r\n        am5xy.LineSeries.new(root, {\r\n          name: name,\r\n          minBulletDistance: 10,\r\n          xAxis: xAxis,\r\n          yAxis: yAxis,\r\n          valueYField: field,\r\n          valueXField: \"date\",\r\n          tooltip: am5.Tooltip.new(root, {\r\n            pointerOrientation: \"horizontal\",\r\n            labelText: \"{valueY}\"\r\n          }),\r\n          visible: visible\r\n        })\r\n      );\r\n\r\n      series.bullets.push(function () {\r\n        return am5.Bullet.new(root, {\r\n          sprite: am5.Circle.new(root, {\r\n            radius: 5,\r\n            fill: series.get(\"fill\"),\r\n            stroke: root.interfaceColors.get(\"background\"),\r\n            strokeWidth: 2\r\n          })\r\n        });\r\n      });\r\n\r\n      series.data.setAll(data);\r\n      legend.data.push(series);\r\n\r\n      series.on(\"visible\", function (visible, target) {\r\n        if (visible) {\r\n          chart.series.each(function (series) {\r\n            if (series !== target) {\r\n              series.set(\"visible\", false);\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    createSeries(\"value\", \"Series 1\", true);\r\n    // createSeries(\"value2\", \"Series 2\", false);\r\n    // createSeries(\"value3\", \"Series 3\", false);\r\n\r\n    // Make stuff animate on load\r\n    // https://www.amcharts.com/docs/v5/concepts/animations/\r\n    chart.appear(100, 30);\r\n  }\r\n\r\n  _displayProjName: string;\r\n  _MemosSubjectList: any;\r\n  _MemosNotFound: string;\r\n  _DBMemosIDList: any;\r\n  _CommentsList: any;\r\n  _EvenRecordsList: any\r\n\r\n  GetprojectComments() {\r\n    this.service._GetDARAchievements(this.URL_ProjectCode).\r\n      subscribe((data) => {\r\n        // console.log(\"Comments data----------->\",data)\r\n        this._CommentsList = JSON.parse(data[0]['CommentsJson']);\r\n        // this._EvenRecordsList = JSON.parse(data[0]['EvenRecordsJson']);\r\n        // console.log(\"Comments-List--------->\",this._CommentsList)\r\n      });\r\n  }\r\n\r\n  GetDMS_Memos() {\r\n    this._LinkService._GetOnlyMemoIdsByProjectCode(this.URL_ProjectCode).\r\n      subscribe((data) => {\r\n        let Table_data: any = data;\r\n        if (Table_data.length > 0 && data[0]['JsonData'] != '[]') {\r\n          this._MemosNotFound = \"\";\r\n          this._DBMemosIDList = JSON.parse(data[0]['JsonData']);\r\n          this._JsonString = data[0]['JsonData'];\r\n          this._LinkService._GetMemosSubject(this._JsonString).\r\n            subscribe((data) => {\r\n              // console.log(\"------------>\", data);\r\n              this._MemosSubjectList = JSON.parse(data['JsonData']);\r\n              // console.log(\"Subject Name ------------>\", this._MemosSubjectList);\r\n            });\r\n        }\r\n        else {\r\n          this._MemosSubjectList = [];\r\n          this._MemosNotFound = \"No memos linked\";\r\n        }\r\n      });\r\n  }\r\n\r\n  Current_user_ID: string;\r\n  memoId: any;\r\n\r\n  deleteMemos(memoId) {\r\n    const confirmDialog = this.dialog.open(ConfirmDialogComponent, {\r\n      data: {\r\n        mode: 'memos_Delete',\r\n        title1: 'Confirmation ',\r\n        //message1: \"proj_Name\"\r\n      }\r\n    });\r\n    confirmDialog.afterClosed().subscribe(result => {\r\n      this._MemosSubjectList = [];\r\n      let _DeleteSelectedMemo = [];\r\n      _DeleteSelectedMemo.push({ MailId: memoId })\r\n      //_DeleteList.push(pcode);\r\n      //console.log(\"---->Delete Memo\",_DeleteSelectedMemo);\r\n      let arr1: any = this._DBMemosIDList;\r\n      let arr2: any = _DeleteSelectedMemo;\r\n      let result1 = arr1.filter(o1 => !arr2.some(o2 => o1.MailId === o2.MailId));\r\n      //console.log(\"Final Result ----->\",result);\r\n      this._DBMemosIDList = _.map(arr2, (d) => { return d.MailId });\r\n      this.memoId = JSON.stringify(result1);\r\n      //console.log(\"-----Final O/p--->\", this.memoId);\r\n      let appId: number = 101;\r\n      let UserId = this.Current_user_ID;\r\n      if (result === true) {\r\n        this._LinkService.InsertMemosOn_ProjectCode(this.URL_ProjectCode, appId, this.memoId, UserId).\r\n          subscribe((data) => {\r\n            // this._OpenMemosInfo(pcode,this.pName);\r\n            //this.GetProjectsByUserName();\r\n            let Returndata: any = data['Message'];\r\n            this.notifyService.showInfo(\"\", Returndata);\r\n            this.UpdateMemos(this.URL_ProjectCode);\r\n          });\r\n      }\r\n      else {\r\n        this.notifyService.showInfo(\"Action Cancelled \", '');\r\n        this.UpdateMemos(this.URL_ProjectCode);\r\n      }\r\n    });\r\n  }\r\n\r\n  UpdateMemos(pcode) {\r\n    this._LinkService._GetOnlyMemoIdsByProjectCode(pcode).\r\n      subscribe((data) => {\r\n        let Table_data: any = data;\r\n        //console.log(\"Linked Db Memos Data---->\",data[0]['JsonData']);\r\n        if (Table_data.length > 0) {\r\n          this._MemosNotFound = \"\";\r\n          this._DBMemosIDList = JSON.parse(data[0]['JsonData']);\r\n          // console.log(\"List----->\",this._dbMemoIdList)\r\n          this._JsonString = data[0]['JsonData'];\r\n          this._LinkService._GetMemosSubject(this._JsonString).\r\n            subscribe((data) => {\r\n              //console.log(\"------------>\", data);\r\n              this._MemosSubjectList = JSON.parse(data['JsonData']);\r\n              //console.log(\"Subject Name ------------>\", this._MemosSubjectList);\r\n            });\r\n        }\r\n        else {\r\n          this._MemosSubjectList = [];\r\n          this._MemosNotFound = \"No memos linked\";\r\n        }\r\n      });\r\n  }\r\n\r\n  _AddLink() {\r\n    let _ProjectCode: string = this.Selected_Projectcode;\r\n    let appId: number = 101;//this._ApplicationId;\r\n    //console.log(\"selected Memos From Dropdown-->\", this._SelectedMemos);\r\n    if (this._SelectedIdsfromDb > 0 || this._SelectedIdsfromDb != undefined) {\r\n      // console.log(\"Table Ids-->\", this._SelectedIdsfromDb);\r\n      this.memoId = JSON.stringify(this._SelectedIdsfromDb.concat(this._SelectedMemos));\r\n      // console.log(\"After Joins Final Output=======>\", this.memoId);\r\n    }\r\n    else {\r\n      this.memoId = JSON.stringify(this._SelectedMemos);\r\n      // console.log(\"Ëlse Block...Executed---->\", this.memoId);\r\n    }\r\n    let UserId = this.Current_user_ID;\r\n    if (this._SelectedMemos.length > 0) {\r\n      this._LinkService.InsertMemosOn_ProjectCode(_ProjectCode, appId, this.memoId, UserId).\r\n        subscribe((data) => {\r\n          this.UpdateMemos(this.projectCode)\r\n          this.GetMemosByEmployeeId();\r\n          //this.GetProjectsByUserName();\r\n          let Returndata: any = data['Message'];\r\n          this.notifyService.showSuccess(\"\", Returndata);\r\n          this.ngDropdwonMemo = [];\r\n          this._SelectedMemos = [];\r\n        });\r\n    }\r\n    else {\r\n      this.notifyService.showInfo(\"Request Cancelled\", \"Please select memo(s) to link\");\r\n    }\r\n    this.closeLinkSideBar();\r\n    // this._openInfoSideBar = false;\r\n    // this._LinkSideBar=true;\r\n  }\r\n\r\n  openUrl(memo_Url) {\r\n    const Url = memo_Url;\r\n    window.open(Url);\r\n  }\r\n\r\n  AttachmentList: any;\r\n  attachmentlength: any;\r\n  TotalDocs: number;\r\n\r\n  getAttachments() {\r\n    this.noFiles = false;\r\n    this._LinkService._GetAttachments(this.Authority_EmpNo, this.URL_ProjectCode, this.ProjectBlock)\r\n      .subscribe((data) => {\r\n        this.AttachmentList = JSON.parse(data[0]['Attachments_Json']);\r\n        this.attachmentlength = this.AttachmentList.length;\r\n        this.TotalDocs = (data[0]['TotalDocs']);\r\n        if (this.TotalDocs == 0)\r\n          this.noFiles = true;\r\n        // console.log(this.TotalDocs,this.AttachmentList.length);            \r\n        // console.log(\"Attachments---->\", this.AttachmentList);\r\n      });\r\n  }\r\n\r\n  _day: any;\r\n  _month: any;\r\n\r\n  openPDF_Standard(repDate: Date, proofDoc) {\r\n    repDate = new Date(repDate);\r\n    let FileUrl: string;\r\n    FileUrl = \"http://217.145.247.42:81/yrgep/Uploads/\";\r\n    let Day = repDate.getDate();\r\n    let Month = repDate.getMonth() + 1;\r\n    let Year = repDate.getFullYear();\r\n    if (Month < 10) {\r\n      this._month = '0' + Month;\r\n    }\r\n    else {\r\n      this._month = Month;\r\n    }\r\n    if (Day < 10) {\r\n      this._day = '0' + Day;\r\n    }\r\n    else {\r\n      this._day = Day;\r\n    }\r\n    var date = this._month + \"_\" + this._day + \"_\" + repDate.getFullYear();\r\n    window.open(FileUrl + this.Responsible_EmpNo + \"/\" + this.URL_ProjectCode + \"/\" + date + \"/\" + proofDoc);\r\n    window.open(proofDoc);\r\n\r\n  }\r\n\r\n  openPDF(cd_date, docName) {\r\n    cd_date = new Date(cd_date);\r\n    let FileUrl: string;\r\n    FileUrl = \"https://yrglobaldocuments.blob.core.windows.net/documents/EP/\";\r\n    let Day = cd_date.getDate();\r\n    let Month = cd_date.getMonth() + 1;\r\n    let Year = cd_date.getFullYear();\r\n    if (Month < 10) {\r\n      this._month = '0' + Month;\r\n    }\r\n    else {\r\n      this._month = Month;\r\n    }\r\n    if (Day < 10) {\r\n      this._day = '0' + Day;\r\n    }\r\n    else {\r\n      this._day = Day;\r\n    }\r\n    var date = this._month + \"_\" + this._day + \"_\" + cd_date.getFullYear();\r\n    // window.open(FileUrl + this.Responsible_EmpNo + \"/\" + this.URL_ProjectCode + \"/\" + \"/\" + docName);\r\n    window.open(docName);\r\n  }\r\n\r\n  Subtask_List: any;\r\n  CompletedList: any;\r\n  inProcessCount: number;\r\n  completedCount: number;\r\n  subTaskCount: number;\r\n  empDropdown: any = [];\r\n  dropdownSettings_Employee = {};\r\n  selectedEmp: string;\r\n  filteredemp: boolean = false;\r\n  darArr: any;\r\n\r\n\r\n  GetSubtask_Details() {\r\n    if (this.filteredemp == true) {\r\n      this.service.SubTaskDetailsService_ToDo_Page(this.URL_ProjectCode, null, this.selectedEmployee).subscribe(\r\n        (data) => {\r\n          this.Subtask_List = JSON.parse(data[0]['Json_ResponsibleInProcess']);\r\n          this.CompletedList = JSON.parse(data[0]['Json_ResponsibleCompleted']);\r\n          this.Subtask_Res_List = JSON.parse(data[0]['SubTaskResponsibe_Json']);\r\n\r\n          this.inProcessCount = this.Subtask_List.length;\r\n          this.completedCount = this.CompletedList.length;\r\n          this.subTaskCount = this.inProcessCount + this.completedCount;\r\n          //  console.log('inprocess=', this.inProcessCount, 'completed', this.completedCount, 'total=', this.subTaskCount);\r\n        });\r\n    }\r\n\r\n    else if (this.filteredemp == false) {\r\n      this.service.SubTaskDetailsService_ToDo_Page(this.URL_ProjectCode, null, null).subscribe(\r\n        (data) => {\r\n          console.log(data, \"standard status\");\r\n          this.Subtask_List = JSON.parse(data[0]['SubtaskDetails_Json']);\r\n          this.darArr = JSON.parse(data[0]['Json_ResponsibleInProcess']);\r\n          this.CompletedList = JSON.parse(data[0]['CompletedTasks_Json']);\r\n          this.Subtask_Res_List = JSON.parse(data[0]['SubTaskResponsibe_Json']);\r\n          this.ProjectStatus = data[0]['ProjectStatus'];\r\n          this.ProjectPercentage = data[0]['ProjectPercentage'] + '%';\r\n          this.totalSubtaskHours = (data[0]['SubtaskHours']);\r\n          // console.log(this.Subtask_List,\"dar\");\r\n\r\n          // console.log(this.Subtask_List);\r\n          //SubTasks Multiselect start         \r\n\r\n          this.dropdownSettings_Employee = {\r\n            singleSelection: true,\r\n            idField: 'Team_Res',\r\n            textField: 'TM_DisplayName',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true\r\n          };\r\n          this.empDropdown = Array.from(this.Subtask_Res_List.reduce((m, t) => m.set(t.TM_DisplayName, t), new Map()).values());\r\n          // console.log(this.empDropdown);\r\n          //SubTasks Multiselect End\r\n\r\n          this.inProcessCount = this.Subtask_List.length;\r\n          this.completedCount = this.CompletedList.length;\r\n          this.subTaskCount = this.inProcessCount + this.completedCount;\r\n          // console.log('inprocess=', this.inProcessCount, 'completed', this.completedCount, 'total=', this.subTaskCount);\r\n        });\r\n    }\r\n  }\r\n\r\n  selectedEmployee: string;\r\n\r\n  EmpOnselect(obj) {\r\n    this.filteredemp = true;\r\n    this.selectedEmployee = obj['Team_Res'];\r\n    // console.log(this.selectedEmployee);\r\n    this.GetSubtask_Details();\r\n  }\r\n\r\n  EmpOnDeselect() {\r\n    this.filteredemp = false;\r\n    this.selectedEmployee = null;\r\n    this.GetSubtask_Details();\r\n  }\r\n\r\n\r\n\r\n\r\n  selectedAction: any;\r\n\r\n  ActionOnSelect(obj) {\r\n    // this.selectedEmpNo = obj['Emp_No'];\r\n    this.selectedAction = obj;\r\n  }\r\n\r\n  OnUpdateClick() {\r\n    if (this._remarks == \"\") {\r\n      this.notifyService.showInfo(\"Remarks Cannot be Empty\", '');\r\n    }\r\n    else {\r\n      const fd = new FormData();\r\n      fd.append(\"Project_Code\", this.Sub_ProjectCode);\r\n      fd.append(\"Master_Code\", this._MasterCode);\r\n      fd.append(\"Team_Autho\", this.Authority);\r\n      fd.append(\"Projectblock\", this.ProjectBlock);\r\n      fd.append(\"Remarks\", this._remarks);\r\n      fd.append('file', this.selectedFile);\r\n      // this._MasterCode = this.URL_ProjectCode;\r\n      // this.ObjSubTaskDTO.MasterCode = this._MasterCode;\r\n      // this.ObjSubTaskDTO.SubTask_ProjectCode = this.Sub_ProjectCode;\r\n      // this.ObjSubTaskDTO.Attachments = this._inputAttachments;\r\n      // this.ObjSubTaskDTO.Remarks = this._remarks;\r\n      this.service._UpdateSubtaskByProjectCode(fd)\r\n        .subscribe(data => {\r\n          // this.CompletedList = JSON.parse(data[0]['CompletedTasks_Json']);\r\n          this._remarks = \"\";\r\n          this._inputAttachments = \"\";\r\n          this.GetSubtask_Details();\r\n          this.GetProjectDetails();\r\n          // Rebinding    \r\n\r\n          this.notifyService.showInfo(\"Successfully Updated\", '');\r\n          this.closeInfo();\r\n\r\n        });\r\n    }\r\n  }\r\n\r\n  OnTabTask_Click() {\r\n    this.GetSubtask_Details();\r\n  }\r\n  OnOverview_Click() {\r\n    this.GetSubtask_Details();\r\n  }\r\n\r\n  Editbutton: boolean;\r\n  _modelProjectName: string;\r\n  _modelProjDesc: string;\r\n  _ProjDeadline: string;\r\n\r\n  OnEditProject(id, Pname) {\r\n    this._modelProjectName = Pname;\r\n    this.Editbutton = true;\r\n    (<HTMLInputElement>document.getElementById(\"SpanProjName_\" + id)).style.display = \"none\";\r\n    (<HTMLInputElement>document.getElementById(\"spanTextbox_\" + id)).style.display = \"block\";\r\n    (<HTMLInputElement>document.getElementById(\"textboxfocus_\" + id)).focus();\r\n    //(<HTMLInputElement>document.getElementById(\"EidtBtn_\" + id)).style.display = \"none\";\r\n  }\r\n\r\n  OnEditProject_Desc(id, Desc) {\r\n    this._modelProjDesc = Desc;\r\n    this.Editbutton = true;\r\n    (<HTMLInputElement>document.getElementById(\"Span_DescName_\" + id)).style.display = \"none\";\r\n    (<HTMLInputElement>document.getElementById(\"spanTextarea_\" + id)).style.display = \"block\";\r\n    (<HTMLInputElement>document.getElementById(\"textareafocus_\" + id)).focus();\r\n  }\r\n\r\n  _modelProjAlloc: number = 0;\r\n  OnEditProject_Alloc(id, allocated) {\r\n    this._modelProjAlloc = allocated;\r\n    this.Editbutton = true;\r\n    (<HTMLInputElement>document.getElementById(\"Span_DescName_all\" + id)).style.display = \"none\";\r\n    (<HTMLInputElement>document.getElementById(\"spanTextarea_all\" + id)).style.display = \"block\";\r\n    (<HTMLInputElement>document.getElementById(\"textareafocus_all\" + id)).focus();\r\n\r\n  }\r\n\r\n  onEditDeadline(id, enddate) {\r\n    // this._ProjDeadline = enddate;\r\n    this.Editbutton = true;\r\n    (<HTMLInputElement>document.getElementById(\"Span_Deadline_\" + id)).style.display = \"none\";\r\n    (<HTMLInputElement>document.getElementById(\"DeadlineArea_\" + id)).style.display = \"block\";\r\n    (<HTMLInputElement>document.getElementById(\"Deadlinetext_\" + id)).focus();\r\n  }\r\n\r\n  onCancel(id) {\r\n\r\n    (<HTMLInputElement>document.getElementById(\"SpanProjName_\" + id)).style.display = \"inline-block\";\r\n    (<HTMLInputElement>document.getElementById(\"spanTextbox_\" + id)).style.display = \"none\";\r\n    //(<HTMLInputElement>document.getElementById(\"EidtBtn_\" + id)).style.display = \"inline-block\";\r\n    this.Editbutton = false;\r\n    // For Description\r\n    (<HTMLInputElement>document.getElementById(\"Span_DescName_\" + id)).style.display = \"inline-block\";\r\n    (<HTMLInputElement>document.getElementById(\"spanTextarea_\" + id)).style.display = \"none\";\r\n    this._modelProjDesc = null;\r\n    this._modelProjectName = null;\r\n\r\n    (<HTMLInputElement>document.getElementById(\"Span_Deadline_\" + id)).style.display = \"inline-block\";\r\n    (<HTMLInputElement>document.getElementById(\"DeadlineArea_\" + id)).style.display = \"none\";\r\n    this._ProjDeadline = null;\r\n    //(<HTMLInputElement>document.getElementById(\"Editbutton\")).style.display = \"inline-block\";\r\n  }\r\n\r\n  _Message: string;\r\n\r\n  // OnProject_Rename(id, Pcode) {\r\n  //   if (this._modelProjectName != \"\" && this._modelProjDesc != \"\") {\r\n  //     this.service._ProjectRenameService(id, this._modelProjectName, this._modelProjDesc, this.Current_user_ID).subscribe(data => {\r\n  //       this._Message = data['message'];\r\n  //       this.notifyService.showSuccess(this._Message, \"\");\r\n  //       this.GetSubtask_Details();\r\n  //     });\r\n  //     this.onCancel(id);\r\n  //   }\r\n  //   else {\r\n  //     this.notifyService.showInfo(\"Empty string cannot be save\", \"Please give some name.\");\r\n  //   }\r\n  // }\r\n\r\n  OnProject_Rename(id, Pcode) {\r\n    if (this._modelProjectName != \"\" && this._modelProjDesc != \"\") {\r\n      this.service._ProjectRenameService(id, this._modelProjectName, this._modelProjDesc, this.Current_user_ID, this._modelProjAlloc).subscribe(data => {\r\n        this._Message = data['message'];\r\n        this.notifyService.showSuccess(this._Message, \"\");\r\n        this.GetSubtask_Details();\r\n        // this.GetProjectsByUserName();\r\n        this.service.SubTaskDetailsService_ToDo_Page(Pcode, this.Comp_No, null).subscribe(\r\n          (data) => {\r\n            let list: any;\r\n            list = JSON.parse(data[0]['ProjectInfo']);\r\n            this.ProjectName = list[0]['Project_Name'];\r\n            this.Description = list[0]['Project_Description'];\r\n          });\r\n      });\r\n      this.onCancel(id);\r\n    }\r\n    else {\r\n      this.notifyService.showInfo(\"Empty string cannot be save\", \"Please give some name.\");\r\n    }\r\n  }\r\n\r\n  onProject_ExtendDeadline(id, Pcode) {\r\n\r\n    // $(\"#Deadlinetext_\").val(this.EndDate);\r\n    this._ProjDeadline = this.datepipe.transform(this._ProjDeadline, 'MM/dd/yyyy');\r\n    if (this._ProjDeadline != null) {\r\n\r\n      this.objProjectDto.Project_EndDate = this._ProjDeadline;\r\n      this.objProjectDto.Project_Code = Pcode;\r\n      //  alert(Pcode);\r\n      this.service._ProjectDeadlineExtendService(this.objProjectDto).subscribe(data => {\r\n        this._Message = data['message'];\r\n\r\n        if (this._Message == 'Project Deadline not Updated') {\r\n          this.notifyService.showError(this._Message + '.' + \"Please select the appropriate date and try again.\", \"Failed\");\r\n          this.GetProjectDetails();\r\n        }\r\n        else if (this._Message == 'Project Deadline Updated') {\r\n          this.notifyService.showSuccess(this._Message, \"Success\");\r\n          this.GetProjectDetails();\r\n        }\r\n      });\r\n      this.onCancel(id);\r\n    }\r\n    else {\r\n      this.notifyService.showInfo(\"Deadline date cannot be empty\", \"Please select date.\");\r\n    }\r\n  }\r\n\r\n\r\n  closeLinkSideBar() {\r\n    document.getElementById(\"LinkSideBar\").style.width = \"0\";\r\n\r\n  }\r\n\r\n  OnAddTaskClick() {\r\n    this.router.navigate([\"./MoreDetails\", this.URL_ProjectCode, \"ActionToProject\"]);\r\n    document.getElementById(\"mysideInfobar1\").style.width = \"60%\";\r\n    // document.getElementById(\"mysideInfobar_NewSubtask\").style.width = \"60%\";\r\n    // document.getElementById(\"mysideInfobar_Update\").style.width = \"0px\";\r\n    document.getElementById(\"rightbar-overlay\").style.display = \"block\";\r\n    document.getElementById(\"moredet\").classList.add(\"position-fixed\");\r\n    // this.MatInput = false;\r\n    // this.ButtonAdd = false;\r\n    // this.GetAllEmployeesForAssignDropdown();\r\n  }\r\n\r\n  selectedFile: any = null;\r\n\r\n  onFileChange(e) {\r\n    this.selectedFile = <File>e.target.files[0];\r\n    //console.log(\"--------------->\",this.selectedFile)\r\n  }\r\n\r\n  sweetAlert() {\r\n    if (this.Status == 'Completed') {\r\n      Swal.fire({\r\n        title: 'This Project is Compelted !!',\r\n        text: 'Do You Want To Reopen This Project ?',\r\n        // icon: 'warning',\r\n        showCancelButton: true,\r\n        confirmButtonText: 'Yes',\r\n        cancelButtonText: 'No'\r\n      }).then((response: any) => {\r\n        if (response.value) {\r\n          this.OnAddTaskClick();\r\n        } else if (response.dismiss === Swal.DismissReason.cancel) {\r\n          Swal.fire(\r\n            'Cancelled',\r\n            'Action is Not Created',\r\n            'error'\r\n          )\r\n        }\r\n      });\r\n    }\r\n    else {\r\n      this.OnAddTaskClick();\r\n    }\r\n  }\r\n\r\n  closeInfoProject() {\r\n    // For closing sidebar on 'X' buttton\r\n    document.getElementById(\"mysideInfobar_ProjectsUpdate\").style.width = \"0\";\r\n    // For sidebar overlay background removing the slide on 'X' button\r\n    document.getElementById(\"rightbar-overlay\").style.display = \"none\";\r\n    // For page top div removing fixed\r\n    document.getElementById(\"moredet\").classList.remove(\"position-fixed\");\r\n    this.selectedFile = \"\";\r\n    // this.OnClickCheckboxProjectUpdate();\r\n    this.Clear_Feilds();\r\n  }\r\n\r\n  OnClickCheckboxProjectUpdate() {\r\n    this.service.SubTaskStatusCheck(this.URL_ProjectCode).subscribe(\r\n      (data) => {\r\n        if (data['Message'] == 1) {\r\n          Swal.fire({\r\n            title: 'Unable To Complete This Project !!',\r\n            text: 'SubTask Status Are In Rejected or Pending ?',\r\n            // icon: 'warning',\r\n            showCancelButton: true\r\n          });\r\n        }\r\n        else {\r\n          // applying sidebar from mysideInfobar_ProjectsUpdate in html\r\n          document.getElementById(\"mysideInfobar_ProjectsUpdate\").style.width = \"60%\";\r\n          // placing the backgorund dim on opening sidebar\r\n          document.getElementById(\"rightbar-overlay\").style.display = \"block\";\r\n          // Fixing the scrollbar for sidebar\r\n          document.getElementById(\"moredet\").classList.add(\"position-fixed\");\r\n          document.getElementById(\"mysideInfobar\").style.width = \"0px\";\r\n          document.getElementById(\"mysideInfobar_Update\").style.width = \"0px\";\r\n        }\r\n      });\r\n  }\r\n\r\n  Sub_ProjectName: string = \"\";\r\n  _Description: string;\r\n  _EndDate: Date = null;\r\n  _StartDate: Date = null;\r\n  selected_Employee = [];\r\n  selectedEmpNo: string = null;\r\n\r\n  Clear_Feilds() {\r\n    this.Sub_ProjectName = \"\";\r\n    this._Description = \"\";\r\n    this._StartDate = null;\r\n    this._EndDate = null;\r\n    this._remarks = \"\";\r\n    this._inputAttachments = null;\r\n    this._inputAttachments2 = null;\r\n    this.selectedEmpNo = '';\r\n    this.selected_Employee = [];\r\n    this.selectedFile = \" \";\r\n    $('#uploadFile').val('');\r\n    $('#_upload').html('Select a file');\r\n    $('#_pdf').val('');\r\n    $('#upload').html('Select a file');\r\n    this.actionCode = null;\r\n    this.workdes = \"\";\r\n    this.current_Date = this.datepipe.transform(new Date(), 'MM/dd/yyyy');\r\n    // this.dateF=null;\r\n    this.starttime = null;\r\n    this.endtime = null;\r\n    this.starttimearr = [];\r\n    this.endtimearr = [];\r\n    $(\"#err2\").empty();\r\n\r\n    this.selectedType = null;\r\n    this.commentSelected = null;\r\n    // this.ngOnInit();\r\n  }\r\n\r\n  //Project Update\r\n  progress: any;\r\n\r\n  updateMainProject() {\r\n    const fd = new FormData();\r\n    fd.append(\"Project_Code\", this._MasterCode);\r\n    fd.append(\"Team_Autho\", this.Authority);\r\n    fd.append(\"Remarks\", this._remarks);\r\n    fd.append(\"Projectblock\", this.ProjectBlock);\r\n    fd.append('file', this.selectedFile);\r\n    this.service._fileuploadService(fd).\r\n      subscribe(event => {\r\n        //console.log(event);\r\n        if (event.type == HttpEventType.UploadProgress) {\r\n          this.progress = Math.round(event.loaded / event.total * 100);\r\n          this.notifyService.showSuccess(\"\", \"File uploaded successfully\");\r\n          this.notifyService.showInfo(\"\", \"Project Updated\");\r\n        }\r\n        else if (event.type === HttpEventType.Response) {\r\n          //console.log(event);\r\n        }\r\n        this.closeInfo();\r\n        this.GetSubtask_Details();\r\n        this.GetProjectDetails();\r\n        this.getapprovalStats();\r\n      });\r\n  }\r\n  LoadDocument(url: string) {\r\n    // (<HTMLInputElement>document.getElementById(\"documentPreview\")).style.display=\"block\";\r\n    // url = \"http://208.109.13.37/dmsapi/DataOutPut/react-handbook.pdf\";\r\n    // contenttype=\".pdf\";\r\n    // if (contenttype == \".PDF\" || contenttype == \".pdf\" || contenttype == \"application/pdf\") {\r\n    //   this._IsPdf = true;\r\n    // }\r\n    // else if (contenttype == \".jpg\" || contenttype == \".png\" || contenttype == \".PNG\" || contenttype == \".jpeg\") {\r\n    //   this._IsPdf = false;\r\n    // }\r\n\r\n    this.src = url;\r\n    var myWindow = window.open(url);\r\n    myWindow.focus();\r\n    //this.cd.detectChanges();\r\n    //$('#documentPreview').modal('toggle');\r\n  }\r\n\r\n  async CallOnSubmitAction() {\r\n    //  console.log('A');\r\n    let a = await this.GetSubtask_Details();\r\n    let b = await this.GetProjectDetails();\r\n    // this. GetProjectsByUserName();\r\n    // this.getDropdownsDataFromDB();\r\n  }\r\n  coresecondary: boolean = true;\r\n  darcreate() {\r\n    this.dateF = new FormControl(new Date());\r\n    if (this.ProjectBlockName == 'Standard Tasks' || this.ProjectBlockName == 'To do List') {\r\n      this.coresecondary = false;\r\n    }\r\n    else if ((this.ProjectBlockName == 'Core Tasks' || this.ProjectBlockName == 'Secondary Tasks') && this.inProcessCount == 0) {\r\n      this.coresecondary = false;\r\n    }\r\n\r\n    document.getElementById(\"moredet\").classList.add(\"position-fixed\");\r\n    document.getElementById(\"darsidebar\").style.width = \"60%\";\r\n    document.getElementById(\"rightbar-overlay\").style.display = \"block\";\r\n  }\r\n\r\n  closedarBar() {\r\n    // console.log(this.actionCode,\"darcode\");\r\n    document.getElementById(\"moredet\").classList.remove(\"position-fixed\");\r\n    document.getElementById(\"darsidebar\").style.width = \"0\";\r\n    document.getElementById(\"rightbar-overlay\").style.display = \"none\";\r\n    this.notifyService.showError(\"Cancelled\", '');\r\n    this.Clear_Feilds();\r\n  }\r\n\r\n}\r\n","<div class=\"kt-container  kt-container--fluid p-0 kt-grid__item kt-grid__item--fluid text-dark project-info-page side_view\"\r\n    id=\"moredet\">\r\n    <!-- <div class=\"row\">\r\n        <div class=\"col-lg-12\">\r\n            <div class=\"kt-portlet kt-portlet--bordered-semi kt-portlet--height-fluid\">\r\n                <div class=\"kt-portlet__head\">\r\n                    <div class=\"kt-portlet__head-label\">\r\n                        <h3 class=\"kt-portlet__head-title\">\r\n                            <strong>dr.CAFE-206, Olaya St, Al Nuruji Project\r\n                            </strong>\r\n                        </h3>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div> -->\r\n    <div class=\"px-4 py-2\">\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-12 project-description pt-2\">\r\n                <div class=\"d-flex align-items-center mb-2 cir-icon\">\r\n                    <div class=\"flex-1 d-flex align-items-center mb-2 cir-icon\">\r\n                        <!-- <i class=\"fas fa-code-branch\"></i> -->\r\n                        <!-- <h4 class=\"fs-3 text-info mb-0 mr-3\" data-toggle=\"tooltip\" title=\"Project Code!\">{{URL_ProjectCode}}</h4> -->\r\n                        <ng-container *ngIf=\"(ProjectBlockName != 'Standard Tasks')\">\r\n                            <label data-toggle=\"tooltip\" title=\"Project Status!\"\r\n                                *ngIf=\"Status == 'Completed' || Status == 'Under Approval' || Status == 'Completion Under Approval'  || Status=='Project Hold'  || Status=='Deadline Extend Under Approval'\r\n                                         || Status=='New Project Rejected' || Status=='ToDo Completed' || Status== 'New Todo' || Status=='Forward Under Approval' || ProjectBlockName =='Standard Tasks'\r\n                                         || Status=='New Project' || Status=='Project Complete Rejected' || Status=='Project Hold Under Approval' ||  Status =='ToDo Achieved' || Status=='Standardtask Enactive Hold'\"\r\n                                class=\"kt-badge kt-badge--inline  cus-btn text-white px-3 py-1 kt-badge--pill\"\r\n                                [ngClass]=\"{'bg-success':Status=='Completed',\r\n                        'bg-info':Status=='Under Approval' || Status=='New Project' || Status== 'New Todo' ||  Status =='ToDo Achieved',\r\n                        'bg-primary':Status=='Completion Under Approval' || Status=='Deadline Extend Under Approval' || Status=='Project Hold Under Approval',\r\n                        'bg-warning':Status=='InProcess' || Status=='Forward Under Approval',\r\n                        'bg-rejected': Status=='New Project Rejected' || Status=='Project Complete Rejected', \r\n                        'bg-success-1' : Status=='ToDo Completed',\r\n                        \r\n                        'bg-danger':Status=='Project Hold' || Status=='Standardtask Enactive Hold'}\">\r\n                                {{Status}}</label>\r\n                            <!-- 'bg-coral' :  Status== 'New Todo', -->\r\n                        </ng-container>\r\n                        <ng-container *ngIf=\"(ProjectBlockName == 'Standard Tasks')\">\r\n                            <label data-toggle=\"tooltip\" title=\"Project Status!\"\r\n                                class=\"kt-badge kt-badge--inline  cus-btn text-white px-3 py-1 kt-badge--pill bg-purple\">\r\n                                {{SubmissionName}}</label>\r\n                        </ng-container>\r\n\r\n\r\n                        <!-- caledon-green -->\r\n\r\n                        <!--inprocess button-->\r\n                        <div class=\"d-flex\"\r\n                            *ngIf=\"Status != 'Completed' && Status != 'Under Approval' && Status!='Completion Under Approval' && Status!='Project Hold' && Status!='Deadline Extend Under Approval'\r\n                                             && Status!='New Project Rejected' && Status!='ToDo Completed' && Status!='New Todo' && Status!='New Project' && Status!='Project Complete Rejected'\r\n                                             && Status!='Forward Under Approval' && Status!='Project Hold Under Approval' &&  Status !='ToDo Achieved'\r\n                                             && Status!='Standardtask Enactive Hold' && ProjectBlockName != 'Standard Tasks'\">\r\n\r\n                            <!-- <label class=\"kt-badge kt-badge--inline cus-btn text-white px-3 py-1 kt-badge--pill bg-warning br-cr\">{{Status}}</label> -->\r\n                            <label class=\"kt-badge kt-badge--inline  cus-btn text-white px-3 py-1 kt-badge--pill br-cr\"\r\n                                data-toggle=\"tooltip\" title=\"Project Status!\" [ngClass]=\"{'bg-danger':Status=='Delay' || Status=='Project Hold',\r\n                                        'bg-warning':Status=='InProcess'}\">{{Status}}</label>\r\n                            <div class=\"task-status__divider\"></div>\r\n                            <button data-toggle=\"tooltip\" title=\"Project Completion!\" class=\"task-status__controls\"\r\n                                (click)=\"OnClickCheckboxProjectUpdate()\"></button>\r\n                        </div>\r\n                        <!--inprocess button-->\r\n                        <!--progress bar start-->\r\n                        <div class=\"d-flex flex-column ml-3\">\r\n                            <span class=\"fs-6 font-bold\" [ngClass]=\"{'text-dark':ProjectStatus=='Not Started',\r\n                        'text-primary':ProjectStatus=='Continuos-InProcess',    \r\n                        'text-success':ProjectStatus=='Completed',\r\n                        'text-warning':ProjectStatus=='InProcess',\r\n                        'text-underApp':ProjectStatus=='UnderCompletion',\r\n                        'text-info':ProjectStatus=='Just Started'}\" data-toggle=\"tooltip\" title=\"Progess Status!\">\r\n                                {{ProjectStatus}}\r\n                            </span>\r\n                            <!-- text-dark - first div -->\r\n                            <!-- <div class=\"d-flex align-items-center w-200px\">\r\n                            <div class=\"progress h-6px w-100 bg-light-warning\">\r\n                                <div class=\"progress-bar bg-warning\" role=\"progressbar\" style=\"width: 46%;\" aria-valuenow=\"50\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n                            </div>\r\n                            <span class=\"text-muted fs-7 fw-bold pl-2\">46%</span>\r\n                        </div> -->\r\n                            <div *ngIf=\"ProjectStatus=='Not Started'\">\r\n                                <div class=\"d-flex align-items-center w-200px\">\r\n                                    <!-- <small class=\"progress_bar_title\"> -->\r\n                                    <!-- <span class=\"progress_number\">{{ProjectPercentage}}</span> -->\r\n                                    <!-- </small -->\r\n                                    <div class=\"progress h-6px w-100 bg-light-warning\">\r\n                                        <div class=\"progress-bar bg-warning\" role=\"progressbar\"\r\n                                            [ngStyle]='{ width : ProjectPercentage }' aria-valuenow=\"50\"\r\n                                            aria-valuemin=\"0\" aria-valuemax=\"100\">\r\n                                        </div>\r\n                                    </div>\r\n                                    <!-- <span class=\"progress-bar-inner bg-today\" [ngStyle]='{ width : ProjectPercentage }'\r\n                                    data-value=\"0\" data-percentage-value=\"0\"></span> -->\r\n                                    <span class=\"text-muted fs-7 fw-bold pl-2\">{{ProjectPercentage}}</span>\r\n                                </div>\r\n                            </div>\r\n                            <div *ngIf=\"ProjectStatus=='Just Started'\">\r\n                                <div class=\"d-flex align-items-center w-200px\">\r\n                                    <div class=\"progress h-6px w-100 bg-light-warning\">\r\n                                        <div class=\"progress-bar bg-warning\" role=\"progressbar\"\r\n                                            [ngStyle]='{ width : ProjectPercentage }' aria-valuenow=\"50\"\r\n                                            aria-valuemin=\"0\" aria-valuemax=\"100\">\r\n                                        </div>\r\n                                    </div>\r\n                                    <span class=\"text-muted fs-7 fw-bold pl-2\">{{ProjectPercentage}}</span>\r\n                                </div>\r\n                            </div>\r\n                            <div *ngIf=\"ProjectStatus=='InProcess'\">\r\n                                <div class=\"d-flex align-items-center w-200px\">\r\n                                    <div class=\"progress h-6px w-100 bg-light-warning\">\r\n                                        <div class=\"progress-bar bg-warning\" role=\"progressbar\"\r\n                                            [ngStyle]='{ width : ProjectPercentage }' aria-valuenow=\"50\"\r\n                                            aria-valuemin=\"0\" aria-valuemax=\"100\">\r\n                                        </div>\r\n                                    </div>\r\n                                    <span class=\"text-muted fs-7 fw-bold pl-2\">{{ProjectPercentage}}</span>\r\n                                </div>\r\n                            </div>\r\n                            <div *ngIf=\"ProjectStatus=='UnderCompletion'\">\r\n                                <div class=\"d-flex align-items-center w-200px\">\r\n                                    <div class=\"progress h-6px w-100 bg-light-warning\">\r\n                                        <div class=\"progress-bar bg-warning\" role=\"progressbar\"\r\n                                            [ngStyle]='{ width : ProjectPercentage }' aria-valuenow=\"50\"\r\n                                            aria-valuemin=\"0\" aria-valuemax=\"100\">\r\n                                        </div>\r\n                                    </div>\r\n                                    <span class=\"text-muted fs-7 fw-bold pl-2\">{{ProjectPercentage}}</span>\r\n                                </div>\r\n                            </div>\r\n                            <div *ngIf=\"ProjectStatus=='Completed'\">\r\n                                <div class=\"d-flex align-items-center w-200px\">\r\n                                    <div class=\"progress h-6px w-100 bg-light-warning\">\r\n                                        <div class=\"progress-bar bg-warning\" role=\"progressbar\"\r\n                                            [ngStyle]='{ width : ProjectPercentage }' aria-valuenow=\"50\"\r\n                                            aria-valuemin=\"0\" aria-valuemax=\"100\">\r\n                                        </div>\r\n                                    </div>\r\n                                    <span class=\"text-muted fs-7 fw-bold pl-2\">{{ProjectPercentage}}</span>\r\n                                </div>\r\n                            </div>\r\n                            <div *ngIf=\"ProjectStatus=='Continuos-InProcess'\">\r\n                                <div class=\"d-flex align-items-center w-200px\">\r\n                                    <div class=\"progress h-6px w-100 bg-light-warning\">\r\n                                        <div class=\"progress-bar bg-warning\" role=\"progressbar\"\r\n                                            [ngStyle]='{ width : ProjectPercentage }' aria-valuenow=\"50\"\r\n                                            aria-valuemin=\"0\" aria-valuemax=\"100\">\r\n                                        </div>\r\n                                    </div>\r\n                                    <span class=\"text-muted fs-7 fw-bold pl-2\">{{ProjectPercentage}}</span>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <!--progress bar end -->\r\n\r\n\r\n                    </div>\r\n                    <div class=\" pro-act\" *ngIf=\"(Current_user_ID == approvalEmpId)\">\r\n                        <button class=\"btn22\" (click)=\"sideviw();getapprovalStats()\" *ngIf=\"(Status =='Under Approval' || Status =='Completion Under Approval' || Status=='Deadline Extend Under Approval'\r\n                                    || Status =='Enactive Under Approval' || Status=='Forward Under Approval' || Status=='Project Hold Under Approval'\r\n                                    ||  Status =='ToDo Achieved')\">\r\n                            Project Actions\r\n                        </button>\r\n                    </div>\r\n                    <div *ngIf=\"(Status == 'InProcess' || Status == 'Delay') && (ProjectBlockName != 'Standard Tasks')\"\r\n                        class=\" pro-act ml-2\">\r\n                        <button class=\"btn  btn22 btn-pill\" (click)=\"OnClickCheckboxProjectUpdate()\">\r\n                            <i class=\"fas fa-check mr-2\"></i>\r\n                            Project Completion\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"d-flex justify-content-between align-items-center mb-2\">\r\n                    <div class=\"align-items-center flex-grow-1\">\r\n                        <h4 class=\"mb-1 pro-nm d-inline-blck\" id=\"SpanProjName_{{Pid}}\" data-toggle=\"tooltip\"\r\n                            title=\"Project Name!\">{{ProjectName}}</h4>\r\n                        <span class=\"text-info\" [hidden]=\"Editbutton\" (click)=\"OnEditProject(Pid,ProjectName)\"\r\n                            id=\"EidtBtn_{{Pid}}\"\r\n                            *ngIf=\"this.Current_user_ID == this.Owner || this.Responsible || this.Authority\">\r\n                            <i class=\"fas fa-edit ml-2 mb-1 curser-pointer\"></i>\r\n                        </span>\r\n                        <span class=\"kt-inbox__subject mb-2\" style=\"display:none;\" id=\"spanTextbox_{{Pid}}\">\r\n                            <div class=\"d-flex\">\r\n                                <input type=\"text\" class=\"form-control\" id=\"textboxfocus_{{Pid}}\"\r\n                                    [(ngModel)]=\"_modelProjectName\" style=\"width: 78%;height: 32px;\"\r\n                                    (keydown.enter)=\"OnProject_Rename(Pid,_MasterCode)\">\r\n                                <div class=\"d-inline-block ml-3\" id=\"button-addon4\">\r\n                                    <button (click)=\"OnProject_Rename(Pid,_MasterCode)\"\r\n                                        class=\"btn btn-primary btn btn-sm mr-2\">Done</button>\r\n                                    <button class=\" btn btn-secondary btn btn-sm\"\r\n                                        (click)=\"onCancel(Pid)\">Cancel</button>\r\n                                </div>\r\n                            </div>\r\n                        </span>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n                <p class=\"ml-3 text-justify\">\r\n                    <span id=\"Span_DescName_{{Pid}}\" data-toggle=\"tooltip\"\r\n                        title=\"Project Description!\">{{Description}}</span>\r\n                    <span class=\"text-info \" [hidden]=\"Editbutton\" (click)=\"OnEditProject_Desc(Pid,Description)\"\r\n                        id=\"EidtBtn_{{Pid}}\">\r\n                        <i class=\"fas fa-edit ml-2 mb-1 curser-pointer\"></i>\r\n                    </span>\r\n                    <span class=\"kt-inbox__subject mt-2\" style=\"display:none;\" id=\"spanTextarea_{{Pid}}\">\r\n                        <div class=\"d-flex\">\r\n                            <input type=\"text\" class=\"form-control\" id=\"textareafocus_{{Pid}}\"\r\n                                [(ngModel)]=\"_modelProjDesc\" style=\"width: 78%;height: 32px;\"\r\n                                (keydown.enter)=\"OnProject_Rename(Pid,_MasterCode)\">\r\n                            <div class=\"d-inline-block ml-3\" id=\"button-addon4\">\r\n                                <button (click)=\"OnProject_Rename(Pid,_MasterCode)\"\r\n                                    class=\"btn btn-primary btn btn-sm mr-2\">Done</button>\r\n                                <button class=\" btn btn-secondary btn btn-sm\" (click)=\"onCancel(Pid)\">Cancel</button>\r\n                            </div>\r\n                        </div>\r\n                    </span>\r\n                </p>\r\n            </div>\r\n\r\n            <div class=\"col-lg-12 project-details\">\r\n                <div class=\"row d-nsone\">\r\n                    <div class=\"col-lg-3 col-md-6\">\r\n                        <!-- <div class=\"action-count\" role=\"button\"> -->\r\n                        <div class=\"action-count\">\r\n                            <div class=\"d-flex align-items-center\">\r\n                                <div class=\"symbol me-5\">\r\n                                    <span class=\"symbol-label bg-coral\">\r\n                                        <span class=\"svg-icon svg-icon-2x svg-icon-white\">\r\n                                            <svg width=\"22\" height=\"22\" viewBox=\"0 0 40 40\" aria-hidden=\"true\"\r\n                                                focusable=\"false\">\r\n                                                <path\r\n                                                    d=\"M30.5,9h-7.8l-3.6-3.6C18.2,4.5,16.9,4,15.6,4h-5.1C6.9,4,4,6.9,4,10.5v19c0,3.6,2.9,6.5,6.5,6.5h19c3.6,0,6.5-2.9,6.5-6.5v-15C36,11.5,33.5,9,\r\n                                            30.5,9z M33,29.5c0,1.9-1.6,3.5-3.5,3.5h-19C8.6,33,7,31.4,7,29.5v-19C7,8.6,8.6,7,10.5,7h5.1c0.5,0,1,0.2,1.4,0.6l4.1,4c0.3,0.3,0.7,0.4,1.1,0.4h8.4c1.4,\r\n                                            0,2.5,1.1,2.5,2.5L33,29.5L33,29.5z M13.5,13L13.5,13c0.8,0,1.5,0.7,1.5,1.5v13c0,0.8-0.7,1.5-1.5,1.5l0,0c-0.8,0-1.5-0.7-1.5-1.5v-13C12,13.7,12.7,13,13.5,13z\r\n                                             M25.5,18L25.5,18c0.8,0,1.5,0.7,1.5,1.5v8c0,0.8-0.7,1.5-1.5,1.5l0,0c-0.8,0-1.5-0.7-1.5-1.5v-8C24,18.7,24.7,18,25.5,18z M19.5,22L19.5,22c0.8,0,1.5,0.7,1.5,1\r\n                                             .5v4c0,0.8-0.7,1.5-1.5,1.5l0,0c-0.8,0-1.5-0.7-1.5-1.5v-4C18,22.7,18.7,22,19.5,22z\">\r\n                                                </path>\r\n                                            </svg>\r\n                                        </span>\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"action-content\">\r\n                                    <h6 class=\"txtm-cus pt-1\">Project Type</h6>\r\n                                    <h5 class=\"mt-1\">{{ProjectBlockName}}</h5>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-lg-3 col-md-6\">\r\n                        <!-- <div class=\"action-count\" role=\"button\"> -->\r\n                        <div class=\"action-count\">\r\n                            <div class=\"d-flex align-items-center\">\r\n                                <div class=\"symbol me-5\">\r\n                                    <span class=\"symbol-label  bg-info\">\r\n                                        <span class=\"svg-icon svg-icon-2x svg-icon-white\">\r\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"22\"\r\n                                                fill=\"currentColor\" class=\"bi bi-calendar-week\" viewBox=\"0 0 16 16\">\r\n                                                <path\r\n                                                    d=\"M11 6.5a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5v-1zm-3 0a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5v-1zm-5 3a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5v-1zm3 0a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5v-1z\" />\r\n                                                <path\r\n                                                    d=\"M3.5 0a.5.5 0 0 1 .5.5V1h8V.5a.5.5 0 0 1 1 0V1h1a2 2 0 0 1 2 2v11a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V3a2 2 0 0 1 2-2h1V.5a.5.5 0 0 1 .5-.5zM1 4v10a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V4H1z\" />\r\n                                            </svg>\r\n                                        </span>\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"action-content\">\r\n                                    <h6 class=\"txtm-cus pt-1\">Project Duration</h6>\r\n                                    <ng-container *ngIf=\"(ProjectBlockName != 'Standard Tasks'); then othertask;\">\r\n                                    </ng-container>\r\n                                    <ng-container *ngIf=\"(ProjectBlockName == 'Standard Tasks'); then standardtask;\">\r\n                                    </ng-container>\r\n                                    <ng-template #standardtask>\r\n                                        <h5 class=\"mt-1\">{{StartDate|date:'dd-MM-yyyy'}} / {{SubmissionName}}\r\n                                        </h5>\r\n                                    </ng-template>\r\n                                    <ng-template #othertask>\r\n                                        <h5 class=\"mt-1 d-flex align-items-start\" id=\"Span_Deadline_{{Pid}}\">\r\n                                            {{StartDate|date:'dd-MM-yyyy'}} / {{EndDate}}\r\n                                            <span class=\"text-info fs-8\" [hidden]=\"Editbutton\"\r\n                                                (click)=\"onEditDeadline(Pid,EndDate)\">\r\n                                                <i class=\"fas fa-edit ml-2 mt-1 curser-pointer\"></i>\r\n                                            </span>\r\n                                            <span class=\"kt-inbox__subject mt-2\" style=\"display:none;\"\r\n                                                id=\"DeadlineArea_{{Pid}}\">\r\n                                                <div class=\"d-flex input-group\">\r\n                                                    <!-- <input type=\"text\" class=\"form-control\" id=\"Deadlinetext_{{Pid}}\"\r\n                                                        [(ngModel)]=\"_ProjDeeadline\" style=\"width: 78%;height: 32px;\"\r\n                                                        (keydown.enter)=\"OnProject_Rename(Pid,_MasterCode)\"> [value]=\"getnextDeadline()\" required [max]=\"todayDate\"-->\r\n                                                    <input matInput [matDatepicker]=\"picker2\" id=\"Deadlinetext_{{Pid}}\"\r\n                                                        #Deadlinetext=\"ngModel\" (click)=\"picker2.open();\"\r\n                                                        (keydown.enter)=\"onProject_ExtendDeadline(Pid,_MasterCode);\"\r\n                                                        [min]=\"EndDate1\" placeholder=\"Select Date\"\r\n                                                        [(ngModel)]=\"_ProjDeadline\" class=\"form-control\" name=\"date\">\r\n                                                    <!-- <mat-hint>MM/DD/YYYY</mat-hint> -->\r\n                                                    <!-- <div class=\"input-group-text p-0\"> -->\r\n                                                    <mat-datepicker-toggle matSuffix [for]=\"picker2\">\r\n                                                    </mat-datepicker-toggle>\r\n                                                    <mat-datepicker #picker2></mat-datepicker>\r\n                                                    <div class=\"d-inline-block ml-3\" id=\"button-addon4\">\r\n                                                        <button (click)=\"onProject_ExtendDeadline(Pid,_MasterCode)\"\r\n                                                            class=\"btn btn-primary btn btn-sm mr-2\">Done</button>\r\n                                                        <button class=\" btn btn-secondary btn btn-sm\"\r\n                                                            (click)=\"onCancel(Pid)\">Cancel</button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </span>\r\n                                        </h5>\r\n                                    </ng-template>\r\n                                    <progress value=\"50\" max=\"100\" class=\"project-duration-bar d-none\"></progress>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-lg-3 col-md-6\">\r\n                        <!-- <div class=\"action-count\" role=\"button\"> -->\r\n                        <div class=\"action-count\">\r\n                            <div class=\"d-flex align-items-center\">\r\n                                <div class=\"symbol me-5\">\r\n                                    <span class=\"symbol-label  bg-dangr\">\r\n                                        <span class=\"svg-icon svg-icon-2x svg-icon-white\">\r\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\"\r\n                                                fill=\"currentColor\" class=\"bi bi-clock-fill\" viewBox=\"0 0 16 16\">\r\n                                                <path\r\n                                                    d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM8 3.5a.5.5 0 0 0-1 0V9a.5.5 0 0 0 .252.434l3.5 2a.5.5 0 0 0 .496-.868L8 8.71V3.5z\" />\r\n                                            </svg>\r\n                                        </span>\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"action-content d-flex align-items-center\">\r\n                                    <div class=\"\">\r\n                                        <h6 class=\"txtm-cus pt-1\">Allocated</h6>\r\n                                        <h5 class=\"mt-1\" *ngIf=\"ProjectBlockName != 'Standard Tasks'\">{{maxDuration}}Hrs\r\n                                        </h5>\r\n                                        <h5 class=\"mt-1\" *ngIf=\"ProjectBlockName == 'Standard Tasks'\">\r\n                                            {{standardDuration}}</h5>\r\n                                    </div>\r\n\r\n                                    <div class=\"px-1\">\r\n                                        <i class=\" la la-arrows-h mx-3 text-dangr fs-4 font-weight-bold\"></i>\r\n                                    </div>\r\n                                    <div class=\"\">\r\n                                        <h6 class=\"txtm-cus pt-1\">Duration</h6>\r\n                                        <h5 *ngIf=\"ProjectBlockName!='Standard Tasks'\" class=\"mt-1\">\r\n                                            {{Difference_In_Days}} days</h5>\r\n                                        <h5 *ngIf=\"ProjectBlockName=='Standard Tasks'\" class=\"mt-1\">Continuous</h5>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-lg-3 col-md-6\">\r\n                        <!-- <div class=\"action-count\" role=\"button\"> -->\r\n                        <div class=\"action-count\">\r\n                            <div class=\"d-flex align-items-center\">\r\n                                <div class=\"symbol me-5\">\r\n                                    <span class=\"symbol-label  bg-success-1\">\r\n                                        <span class=\"svg-icon svg-icon-2x svg-icon-white\">\r\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"22\"\r\n                                                fill=\"currentColor\" class=\"bi bi-cash-stack\" viewBox=\"0 0 16 16\">\r\n                                                <path\r\n                                                    d=\"M1 3a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1H1zm7 8a2 2 0 1 0 0-4 2 2 0 0 0 0 4z\" />\r\n                                                <path\r\n                                                    d=\"M0 5a1 1 0 0 1 1-1h14a1 1 0 0 1 1 1v8a1 1 0 0 1-1 1H1a1 1 0 0 1-1-1V5zm3 0a2 2 0 0 1-2 2v4a2 2 0 0 1 2 2h10a2 2 0 0 1 2-2V7a2 2 0 0 1-2-2H3z\" />\r\n                                            </svg>\r\n                                        </span>\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"action-content\">\r\n                                    <h6 class=\"txtm-cus pt-1\">Project Budget</h6>\r\n                                    <h5 class=\"mt-1\"> <span>{{Cost|currency:'SAR '}}</span></h5>\r\n                                    <progress value=\"50\" max=\"100\" class=\"project-budget-bar d-none\"></progress>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-lg-3 col-md-6\">\r\n                        <!-- <div class=\"action-count\" role=\"button\"> -->\r\n                        <div class=\"action-count\">\r\n                            <div class=\"d-flex align-items-center\">\r\n                                <div class=\"symbol me-5\">\r\n                                    <span class=\"symbol-label  bg-purple\">\r\n                                        <span class=\"svg-icon svg-icon-2x svg-icon-white\">\r\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"22\"\r\n                                                fill=\"currentColor\" class=\"bi bi-briefcase\" viewBox=\"0 0 16 16\">\r\n                                                <path\r\n                                                    d=\"M6.5 1A1.5 1.5 0 0 0 5 2.5V3H1.5A1.5 1.5 0 0 0 0 4.5v8A1.5 1.5 0 0 0 1.5 14h13a1.5 1.5 0 0 0 1.5-1.5v-8A1.5 1.5 0 0 0 14.5 3H11v-.5A1.5 1.5 0 0 0 9.5 1h-3zm0 1h3a.5.5 0 0 1 .5.5V3H6v-.5a.5.5 0 0 1 .5-.5zm1.886 6.914L15 7.151V12.5a.5.5 0 0 1-.5.5h-13a.5.5 0 0 1-.5-.5V7.15l6.614 1.764a1.5 1.5 0 0 0 .772 0zM1.5 4h13a.5.5 0 0 1 .5.5v1.616L8.129 7.948a.5.5 0 0 1-.258 0L1 6.116V4.5a.5.5 0 0 1 .5-.5z\" />\r\n                                            </svg>\r\n                                        </span>\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"action-content\">\r\n                                    <h6 class=\"txtm-cus pt-1\">Client</h6>\r\n                                    <h5 class=\"mt-1\">{{Client}}</h5>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-lg-3 col-md-6\">\r\n                        <!-- <div class=\"action-count\" role=\"button\"> -->\r\n                        <div class=\"action-count\">\r\n                            <div class=\"d-flex align-items-center\">\r\n                                <div class=\"symbol me-5\">\r\n                                    <span class=\"symbol-label blue-munsell\">\r\n                                        <span class=\"svg-icon svg-icon-2x svg-icon-white\">\r\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"22\"\r\n                                                fill=\"currentColor\" class=\"bi bi-bookmarks-fill\" viewBox=\"0 0 16 16\">\r\n                                                <path\r\n                                                    d=\"M2 4a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v11.5a.5.5 0 0 1-.777.416L7 13.101l-4.223 2.815A.5.5 0 0 1 2 15.5V4z\" />\r\n                                                <path\r\n                                                    d=\"M4.268 1A2 2 0 0 1 6 0h6a2 2 0 0 1 2 2v11.5a.5.5 0 0 1-.777.416L13 13.768V2a1 1 0 0 0-1-1H4.268z\" />\r\n                                            </svg>\r\n                                        </span>\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"action-content\">\r\n                                    <h6 class=\"txtm-cus pt-1\">Category</h6>\r\n                                    <h5 class=\"mt-1\" *ngIf=\"Category!=null\">{{Category}}</h5>\r\n                                    <h5 class=\"mt-1\" *ngIf=\"Category==null\">Software Support</h5>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-lg-3 col-md-6\">\r\n                        <!-- <div class=\"action-count\" role=\"button\"> -->\r\n                        <div class=\"action-count\">\r\n                            <div class=\"d-flex align-items-center\">\r\n                                <div class=\"symbol me-5\">\r\n                                    <span class=\"symbol-label  bg-warning\">\r\n                                        <span class=\"svg-icon svg-icon-2x svg-icon-white\">\r\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"22\"\r\n                                                fill=\"currentColor\" class=\"bi bi-person-badge\" viewBox=\"0 0 16 16\">\r\n                                                <path\r\n                                                    d=\"M6.5 2a.5.5 0 0 0 0 1h3a.5.5 0 0 0 0-1h-3zM11 8a3 3 0 1 1-6 0 3 3 0 0 1 6 0z\" />\r\n                                                <path\r\n                                                    d=\"M4.5 0A2.5 2.5 0 0 0 2 2.5V14a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V2.5A2.5 2.5 0 0 0 11.5 0h-7zM3 2.5A1.5 1.5 0 0 1 4.5 1h7A1.5 1.5 0 0 1 13 2.5v10.795a4.2 4.2 0 0 0-.776-.492C11.392 12.387 10.063 12 8 12s-3.392.387-4.224.803a4.2 4.2 0 0 0-.776.492V2.5z\" />\r\n                                            </svg>\r\n                                        </span>\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"action-content\">\r\n                                    <h6 class=\"txtm-cus pt-1\">Responsible</h6>\r\n                                    <h5 class=\"mt-1\">{{Responsible}}</h5>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-lg-3 col-md-6\">\r\n                        <!-- <div class=\"action-count\" role=\"button\"> -->\r\n                        <div class=\"action-count\">\r\n                            <div class=\"d-flex align-items-center\">\r\n                                <div class=\"symbol me-5\">\r\n                                    <span class=\"symbol-label caledon-green\">\r\n                                        <span class=\"svg-icon svg-icon-2x svg-icon-white\">\r\n                                            <i class=\"fas fa-prescription-bottle\"></i>\r\n                                        </span>\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"action-content\">\r\n                                    <h6 class=\"txtm-cus pt-1\">Owner</h6>\r\n                                    <h5 class=\"mt-1\">{{Owner}}</h5>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-4 project-duration d-none\">\r\n                        <div class=\"kt-portlet kt-portlet--bordered-semi kt-portlet--height-fluid\">\r\n                            <div class=\"kt-portlet__body p-3\">\r\n                                <h6 class=\"mb-2\">Project Duration</h6>\r\n                                <h5 class=\"mb-3\">{{StartDate|date:'dd-MM-yyyy'}} / {{EndDate}}</h5>\r\n                                <progress value=\"50\" max=\"100\" class=\"project-duration-bar\"></progress>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-4 project-budget d-none\">\r\n                        <div class=\"kt-portlet kt-portlet--bordered-semi kt-portlet--height-fluid\">\r\n                            <div class=\"kt-portlet__body p-3\">\r\n                                <h6 class=\"mb-2\">Project Budget</h6>\r\n                                <h5 class=\"mb-3\"> <span>{{Cost|currency:'SAR '}}</span></h5>\r\n                                <progress value=\"50\" max=\"100\" class=\"project-budget-bar\"></progress>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-4 d-none\">\r\n                        <!-- <div class=\"kt-portlet kt-portlet--bordered-semi kt-portlet--height-fluid\"> -->\r\n                        <div class=\"kt-portlet kt-portlet--bordered-semi kt-portlet--height-fluid\">\r\n                            <div class=\"kt-portlet__body p-3\">\r\n                                <div class=\"d-flex align-items-center mb-2\">\r\n                                    <div class=\"initial-box\">{{InitR}}</div>\r\n                                    <div class=\"owner-details\">\r\n                                        <p class=\"text-dark text-hover-primary user-name mb-0\">\r\n                                            <strong>{{Responsible}}</strong>\r\n                                        </p>\r\n                                        <span class=\"text-muted\">(Responsible)</span>\r\n                                    </div>\r\n                                </div>\r\n                                <p class=\"mb-0\"></p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row d-none\">\r\n\r\n                    <div class=\"col-md-3 project-duration\">\r\n                        <div class=\"kt-portlet kt-portlet--bordered-semi kt-portlet--height-fluid\">\r\n                            <div class=\"kt-portlet__body p-3\">\r\n                                <h6 class=\"mb-2\">Project Type</h6>\r\n                                <h5 class=\"mb-3\">{{ProjectBlockName}}</h5>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-3 project-duration\">\r\n                        <div class=\"kt-portlet kt-portlet--bordered-semi kt-portlet--height-fluid\">\r\n                            <div class=\"kt-portlet__body p-3\">\r\n                                <h6 class=\"mb-2\">Project Duration</h6>\r\n                                <!-- |date:'dd-MM-yyyy' -->\r\n                                <h5 class=\"mb-3\">{{StartDate|date:'dd-MM-yyyy'}} / {{EndDate}}</h5>\r\n                                <progress value=\"50\" max=\"100\" class=\"project-duration-bar\"></progress>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-3 project-budget\">\r\n                        <div class=\"kt-portlet kt-portlet--bordered-semi kt-portlet--height-fluid\">\r\n                            <div class=\"kt-portlet__body p-3\">\r\n                                <h6 class=\"mb-2\">Project Budget</h6>\r\n                                <h5 class=\"mb-3\"> <span>{{Cost|currency:'SAR '}}</span></h5>\r\n                                <progress value=\"50\" max=\"100\" class=\"project-budget-bar\"></progress>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-3 project-duration\">\r\n                        <div class=\"kt-portlet kt-portlet--bordered-semi kt-portlet--height-fluid\">\r\n                            <div class=\"kt-portlet__body p-3\">\r\n                                <h6 class=\"mb-2\">Client</h6>\r\n                                <h5 class=\"mb-3\">{{Client}}</h5>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-3 project-duration\">\r\n                        <!-- <div class=\"kt-portlet kt-portlet--bordered-semi kt-portlet--height-fluid\"> -->\r\n                        <div class=\"kt-portlet kt-portlet--bordered-semi kt-portlet--height-fluid\">\r\n                            <div class=\"kt-portlet__body p-3\">\r\n                                <div class=\"d-flex align-items-center mb-2\">\r\n                                    <div class=\"initial-box\">{{InitR}}</div>\r\n                                    <div class=\"owner-details\">\r\n                                        <p class=\"text-dark text-hover-primary user-name mb-0\">\r\n                                            <strong>{{Responsible}}</strong>\r\n                                        </p>\r\n                                        <span class=\"text-muted\">(Responsible)</span>\r\n                                    </div>\r\n                                </div>\r\n                                <p class=\"mb-0\"></p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-3 project-duration\">\r\n                        <div class=\"kt-portlet kt-portlet--bordered-semi kt-portlet--height-fluid\">\r\n                            <div class=\"kt-portlet__body p-3\">\r\n                                <h6 class=\"mb-2\">Owner</h6>\r\n                                <h5 class=\"mb-3\">{{Owner}}</h5>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-3 project-duration\">\r\n                        <div class=\"kt-portlet kt-portlet--bordered-semi kt-portlet--height-fluid\">\r\n                            <div class=\"kt-portlet__body p-3\">\r\n                                <h6 class=\"mb-2\">Category</h6>\r\n                                <h5 class=\"mb-3\">Software Support</h5>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-3 project-duration\">\r\n                        <div class=\"kt-portlet kt-portlet--bordered-semi kt-portlet--height-fluid\">\r\n                            <div class=\"kt-portlet__body p-3\">\r\n                                <h6 class=\"mb-2\">Duration</h6>\r\n                                <h5 class=\"mb-3\">15 days</h5>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"tab-section shadow-sm mt-5\">\r\n        <div class=\"row d-none\">\r\n            <div class=\"col-md-12\">\r\n                <hr class=\"mt-1\" />\r\n            </div>\r\n        </div>\r\n\r\n        <!-- <div class=\"row pt-2 nav-buttons\">\r\n        <div class=\"col-lg-1 col-md-2\">\r\n            <button type=\"button\" class=\"btn active\">Overview</button>\r\n        </div>\r\n        <div class=\"col-lg-1 col-md-2\">\r\n            <button type=\"button\" class=\"btn\">Tasks</button>\r\n        </div>\r\n        <div class=\"col-lg-1 col-md-2\">\r\n            <button type=\"button\" class=\"btn\">Milestones</button>\r\n        </div>\r\n        <div class=\"col-lg-1 col-md-2\">\r\n            <button type=\"button\" class=\"btn\">DMS</button>\r\n        </div>\r\n        <div class=\"col-lg-1 col-md-2\">\r\n            <button type=\"button\" class=\"btn\">Links</button>\r\n        </div>\r\n        <div class=\"col-lg-1 col-md-2\">\r\n            <button type=\"button\" class=\"btn\">Files</button>\r\n        </div>\r\n        <div class=\"col-lg-1 col-md-2\">\r\n            <button type=\"button\" class=\"btn\">Timeline</button>\r\n        </div>\r\n        <div class=\"col-lg-1 col-md-2\">\r\n            <button type=\"button\" class=\"btn\">Notes</button>\r\n        </div>\r\n        <div class=\"col-lg-1 col-md-2\">\r\n            <button type=\"button\" class=\"btn\">Comments</button>\r\n        </div>\r\n        <div class=\"col-lg-1 col-md-2\">\r\n            <button type=\"button\" class=\"btn\">People</button>\r\n        </div>\r\n        <div class=\"col-lg-1 col-md-2\">\r\n            <button type=\"button\" class=\"btn\">Meeting</button>\r\n        </div>\r\n    </div> -->\r\n\r\n        <div class=\"row m-0\">\r\n            <div class=\"col-lg-12\">\r\n                <div class=\"tabs-sticky\">\r\n                    <ul class=\"nav navtab-bg nav-pills px-3 mb-3 space-tabs\" id=\"myTab2\" role=\"tablist\">\r\n                        <li class=\"nav-item\"><a class=\"nav-link active\" id=\"Overview1\" data-toggle=\"tab\"\r\n                                href=\"#Overview\"><span class=\"nav-text\">Overview</span></a></li>\r\n                        <li class=\"nav-item\" (click)=\"OnTabTask_Click()\"><a class=\"nav-link\" id=\"Tasks1\"\r\n                                data-toggle=\"tab\" href=\"#Tasks\" aria-controls=\"profile\">\r\n                                <span class=\"nav-text\">Actions</span>\r\n                                <span class=\"noti\" *ngIf=\"subTaskCount!=0\">{{subTaskCount}}</span>\r\n                            </a></li>\r\n\r\n                        <li class=\"nav-item\"><a class=\"nav-link\" id=\"Milestones1\" data-toggle=\"tab\"\r\n                                href=\"#Milestones\"><span class=\"nav-text\">Milestones</span></a></li>\r\n                        <li class=\"nav-item\" (click)=\"GetDMS_Memos()\"><a class=\"nav-link\" id=\"DMS1\" data-toggle=\"tab\"\r\n                                href=\"#DMS\" aria-controls=\"profile\"><span class=\"nav-text\">DMS</span></a></li>\r\n                        <!-- <li class=\"nav-item\"><a class=\"nav-link\" id=\"Links1\" data-toggle=\"tab\" href=\"#Links\"><span\r\n                            class=\"nav-text\">Links</span></a></li> -->\r\n                        <li class=\"nav-item\" (click)=\"getAttachments()\"><a class=\"nav-link\" id=\"Files1\"\r\n                                data-toggle=\"tab\" href=\"#Files\" aria-controls=\"profile\"><span\r\n                                    class=\"nav-text\">Files</span>\r\n                                <span class=\"noti\" *ngIf=\"attachmentlength!=0\">{{attachmentlength}}</span></a></li>\r\n                        <li class=\"nav-item\" (click)=\"dar_details()\"><a class=\"nav-link\" id=\"Timeline1\"\r\n                                data-toggle=\"tab\" href=\"#Timeline\"><span class=\"nav-text\">Timeline</span>\r\n                                <span class=\"noti\" *ngIf=\"totalRecords!=0\">{{totalRecords}}</span></a></li>\r\n                        <li class=\"nav-item\"><a class=\"nav-link\" id=\"Notes1\" data-toggle=\"tab\" href=\"#Notes\"\r\n                                aria-controls=\"profile\"><span class=\"nav-text\">Notes</span></a></li>\r\n                        <li class=\"nav-item\" (click)=\"GetprojectComments()\"><a class=\"nav-link\" id=\"Comments1\"\r\n                                data-toggle=\"tab\" href=\"#Comments\"><span class=\"nav-text\">Comments</span></a></li>\r\n                        <li class=\"nav-item\"><a class=\"nav-link\" id=\"People1\" data-toggle=\"tab\" href=\"#People\"\r\n                                aria-controls=\"profile\"><span class=\"nav-text\">People</span></a></li>\r\n                        <li class=\"nav-item\"><a class=\"nav-link\" id=\"Meeting1\" data-toggle=\"tab\" href=\"#Meeting\"><span\r\n                                    class=\"nav-text\">Meeting</span></a></li>\r\n                    </ul>\r\n                </div>\r\n                <div class=\"tab-content p-2 mt-5\" id=\"myTabContent2\">\r\n\r\n                    <!-- Overview Section -->\r\n                    <div class=\"tab-pane fade show active\" id=\"Overview\" role=\"tabpanel\" aria-labelledby=\"Overview1\">\r\n\r\n                        <div class=\"row\">\r\n                            <div class=\"col-lg-12\">\r\n                                <ul class=\"nav nav-pills px-3\" id=\"myTab1\" role=\"tablist\">\r\n                                    <li class=\"nav-item\">\r\n                                        <a class=\"nav-link active\" id=\"home-tab-1\" data-toggle=\"tab\" href=\"#Summary\">\r\n                                            <span class=\"nav-text\">Summary</span>\r\n                                        </a>\r\n                                    </li>\r\n                                    <li class=\"nav-item\">\r\n                                        <a class=\"nav-link\" id=\"act-tab-1\" data-toggle=\"tab\" href=\"#Activity\">\r\n                                            <!-- <span class=\"nav-text\">Activity</span> -->\r\n                                            <span class=\"nav-text\">Activity</span>\r\n\r\n                                        </a>\r\n                                    </li>\r\n                                </ul>\r\n                                <div class=\"tab-content mt-3\" id=\"myTabContent1\">\r\n                                    <div class=\"tab-pane fade show active\" id=\"Summary\" role=\"tabpanel\"\r\n                                        aria-labelledby=\"home-tab-1\">\r\n\r\n                                        <div class=\"row mb-4\">\r\n                                            <div class=\"col-lg-12\">\r\n                                                <h4>Tasks</h4>\r\n                                                <div class=\"row\">\r\n                                                    <div class=\"col-lg-7\">\r\n                                                        <div\r\n                                                            class=\"kt-portlet kt-portlet--bordered-semi kt-portlet--height-fluid\">\r\n                                                            <div class=\"kt-portlet__body px-3\">\r\n                                                                <h5><strong>DAR Summary</strong></h5>\r\n                                                                <h6>Total Max Duration : <span\r\n                                                                        *ngIf=\"ProjectBlockName != 'Standard Tasks'\"><b>{{maxDuration}}Hrs</b></span>\r\n                                                                    <span\r\n                                                                        *ngIf=\"ProjectBlockName == 'Standard Tasks'\"><b>{{standardDuration}}</b></span>\r\n                                                                </h6>\r\n                                                                <div id=\"DARSummary\" style=\"width: 100%; height: 400px\">\r\n                                                                </div>\r\n\r\n                                                                <!-- <div id=\"ProjectCompleteChart\" style=\"width: 100%; height: 200px\">\r\n                                                                </div> -->\r\n                                                                <!-- <div id=\"pieChatDiv\"></div> -->\r\n                                                                <!-- <div id=\"pieChatDiv\" style=\"width: 100%; height: 300px\">\r\n                                                                </div> -->\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"col-lg-5\">\r\n                                                        <div\r\n                                                            class=\"kt-portlet kt-portlet--bordered-semi kt-portlet--height-fluid\">\r\n                                                            <div class=\"kt-portlet__body px-3\">\r\n                                                                <!-- <h5><strong>All Tasks</strong></h5> -->\r\n\r\n                                                                <div id=\"alltaskdiv\" style=\"width: 100%; height: 150px\">\r\n                                                                </div>\r\n                                                                <!-- projecttrenddiv -->\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"col-lg-4\">\r\n                                                        <div\r\n                                                            class=\"kt-portlet kt-portlet--bordered-semi kt-portlet--height-fluid\">\r\n                                                            <div class=\"kt-portlet__body px-3\">\r\n                                                                <h5><strong>Milestones</strong></h5>\r\n                                                                <p>Breakdown Achievement for Project</p>\r\n\r\n                                                                <div class=\"progress_bar\">\r\n                                                                    <div class=\"pro-bar\">\r\n                                                                        <small class=\"progress_bar_title\">\r\n                                                                            Late\r\n                                                                            <span class=\"progress_number\">50%</span>\r\n                                                                        </small>\r\n                                                                        <span class=\"progress-bar-inner bg-late\"\r\n                                                                            style=\"width: 50%;\" data-value=\"50\"\r\n                                                                            data-percentage-value=\"50\"></span>\r\n                                                                    </div>\r\n                                                                </div>\r\n\r\n                                                                <div class=\"progress_bar\">\r\n                                                                    <div class=\"pro-bar\">\r\n                                                                        <small class=\"progress_bar_title\">\r\n                                                                            Today\r\n                                                                            <span class=\"progress_number\">70%</span>\r\n                                                                        </small>\r\n                                                                        <span class=\"progress-bar-inner bg-today\"\r\n                                                                            style=\"width: 70%;\" data-value=\"70\"\r\n                                                                            data-percentage-value=\"70\"></span>\r\n                                                                    </div>\r\n                                                                </div>\r\n\r\n                                                                <div class=\"progress_bar\">\r\n                                                                    <div class=\"pro-bar\">\r\n                                                                        <small class=\"progress_bar_title\">\r\n                                                                            Upcoming\r\n                                                                            <span class=\"progress_number\">80%</span>\r\n                                                                        </small>\r\n                                                                        <span class=\"progress-bar-inner bg-upcoming\"\r\n                                                                            style=\"width: 80%;\" data-value=\"80\"\r\n                                                                            data-percentage-value=\"80\"></span>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <!-- Row 2 -->\r\n                                                <div class=\"row\">\r\n                                                    <div class=\"col-lg-8\">\r\n                                                        <h5><strong>All Tasks</strong></h5><br>\r\n                                                        <h4>Project Trend</h4>\r\n                                                        <div\r\n                                                            class=\"kt-portlet kt-portlet--bordered-semi kt-portlet--height-fluid\">\r\n                                                            <div class=\"kt-portlet__body px-3\">\r\n                                                                <h5><strong>Project Trend Graph</strong></h5>\r\n                                                                <div id=\"ProjectTrendchart\"\r\n                                                                    style=\"width: 80%; height: 400px\">\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"col-lg-4\" *ngIf=\"ProjectBlockName != 'Standard Tasks'\">\r\n                                                        <h4>People on the project (RACIS)</h4>\r\n                                                        <div\r\n                                                            class=\"kt-portlet kt-portlet--bordered-semi kt-portlet--height-fluid\">\r\n                                                            <div class=\"kt-portlet__body px-3\">\r\n                                                                <ul class=\"list-group\">\r\n                                                                    <li class=\"list-group-item active\">Action Legends\r\n                                                                    </li>\r\n                                                                    <div class=\" ribbon-content scrollbar1\">\r\n                                                                        <li class=\"list-group-item\"\r\n                                                                            *ngFor=\"let dar of DarGraphDataList;let i=index\">\r\n                                                                            <span class=\"text-primary\"><b>{{dar.category}}:\r\n                                                                                </b></span>\r\n                                                                            {{dar.Project_Name}}\r\n                                                                        </li>\r\n                                                                    </div>\r\n                                                                </ul>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <!-- Row 3 -->\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-lg-12\">\r\n                                                <div class=\"row\">\r\n                                                    <div class=\"col-lg-12\" *ngIf=\"subTaskCount == 0\">\r\n                                                        <h4>Breakdown</h4>\r\n                                                        <div class=\"col-lg-2 col-sm-4\">\r\n                                                            <div class=\"kt-portlet mb-3\">\r\n                                                                <div class=\"kt-portlet__body px-3\" data-toggle=\"tooltip\"\r\n                                                                    title=\"Responsible!\">\r\n                                                                    <img src=\"assets/images/user2.png\" alt=\"\"\r\n                                                                        class=\"breakdown-user\" />\r\n                                                                    <p class=\"mb-2\">\r\n                                                                        <small><strong>{{Authority}}</strong></small>\r\n                                                                    </p>\r\n                                                                    <h5><strong>100%</strong></h5>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"col-lg-12\" *ngIf=\"subTaskCount != 0\">\r\n                                                        <h4>Breakdown</h4>\r\n                                                    </div>\r\n                                                    <div *ngFor=\"let item of Subtask_Res_List\">\r\n                                                        <div class=\"col-lg-2 col-sm-4\" *ngIf=\"item.TM_DisplayName\">\r\n                                                            <div class=\"kt-portlet mb-3\">\r\n                                                                <div class=\"kt-portlet__body px-3\" data-toggle=\"tooltip\"\r\n                                                                    title=\"Responsible!\">\r\n                                                                    <img src=\"assets/images/user2.png\" alt=\"\"\r\n                                                                        class=\"breakdown-user\"\r\n                                                                        *ngIf=\"item.TM_DisplayName\" />\r\n                                                                    <p class=\"mb-2\">\r\n                                                                        <small><strong\r\n                                                                                *ngIf=\"item.TM_DisplayName\">{{item.TM_DisplayName}}</strong></small>\r\n                                                                    </p>\r\n                                                                    <h5><strong\r\n                                                                            *ngIf=\"item.TM_DisplayName\">{{(item.RespDuration\r\n                                                                            / totalSubtaskHours ) |\r\n                                                                            percent:'.1-2'}}</strong></h5>\r\n                                                                    <h5><strong *ngIf=\"totalSubtaskHours == 0\"> 0%\r\n                                                                        </strong></h5>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <!-- <div class=\"col-lg-2 col-sm-4\">\r\n                                                        <div class=\"kt-portlet mb-3\">\r\n                                                            <div class=\"kt-portlet__body px-3\" data-toggle=\"tooltip\" title=\"Authority!\">\r\n                                                                <img src=\"assets/images/user2.png\" alt=\"\"\r\n                                                                    class=\"breakdown-user\" />\r\n                                                                <p class=\"mb-2\">\r\n                                                                    <small><strong>{{Authority}}</strong></small>\r\n                                                                </p>\r\n                                                                <h5><strong>25%</strong></h5>\r\n\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"col-lg-2 col-sm-4\">\r\n                                                        <div class=\"kt-portlet mb-3\">\r\n                                                            <div class=\"kt-portlet__body px-3\" data-toggle=\"tooltip\" title=\"Coordinator!\">\r\n                                                                <img src=\"assets/images/user2.png\" alt=\"\"\r\n                                                                    class=\"breakdown-user\" />\r\n                                                                <p class=\"mb-2\">\r\n                                                                    <small><strong>{{Coordinator}}</strong></small>\r\n                                                                </p>\r\n                                                                <h5><strong>25%</strong></h5>\r\n\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div class=\"col-lg-2 col-sm-4\">\r\n                                                        <div class=\"kt-portlet mb-3\">\r\n                                                            <div class=\"kt-portlet__body px-3\" data-toggle=\"tooltip\" title=\"Informer!\">\r\n                                                                <img src=\"assets/images/user2.png\" alt=\"\"\r\n                                                                    class=\"breakdown-user\" />\r\n                                                                <p class=\"mb-2\">\r\n                                                                    <small><strong>{{Informer}}</strong></small>\r\n                                                                </p>\r\n                                                                <h5><strong>45%</strong></h5>\r\n\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div class=\"col-lg-2 col-sm-4\">\r\n                                                        <div class=\"kt-portlet mb-3\">\r\n                                                            <div class=\"kt-portlet__body px-3\" data-toggle=\"tooltip\" title=\"Support!\">\r\n                                                                <img src=\"assets/images/user2.png\" alt=\"\"\r\n                                                                    class=\"breakdown-user\" />\r\n                                                                <p class=\"mb-2\">\r\n                                                                    <small><strong>{{Support}}</strong></small>\r\n                                                                </p>\r\n                                                                <h5><strong>35%</strong></h5>\r\n\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div class=\"col-lg-2 col-sm-4\">\r\n                                                        <div class=\"kt-portlet mb-3\">\r\n                                                            <div class=\"kt-portlet__body px-3\" data-toggle=\"tooltip\" title=\"Owner!\">\r\n                                                                <img src=\"assets/images/user2.png\" alt=\"\"\r\n                                                                    class=\"breakdown-user\" />\r\n                                                                <p class=\"mb-2\">\r\n                                                                    <small><strong>{{Owner}}</strong></small>\r\n                                                                </p>\r\n                                                                <h5><strong>10%</strong></h5>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div> -->\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"tab-pane fade\" id=\"Activity\" role=\"tabpanel\"\r\n                                        aria-labelledby=\"act-tab-1\">\r\n                                        <h3>Standard Charts</h3>\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-lg-12\">\r\n                                                <div\r\n                                                    class=\"kt-portlet kt-portlet--bordered-semi kt-portlet--height-fluid\">\r\n                                                    <div class=\"kt-portlet__body px-3\">\r\n                                                        <h5><strong>Project Monthly Summary</strong></h5>\r\n                                                        <div id=\"StandardChart\" style=\"width: 100%; height: 400px\">\r\n                                                        </div>\r\n\r\n                                                        <div id=\"ProjectCompleteChart\"\r\n                                                            style=\"width: 100%; height: 200px\">\r\n                                                        </div>\r\n                                                        <div id=\"pieChatDiv\"></div>\r\n                                                        <div id=\"pieChatDiv\" style=\"width: 100%; height: 300px\">\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <!-- Overview Section end-->\r\n\r\n                    <!-- SubTasks Section -->\r\n                    <div class=\"tab-pane fade\" id=\"Tasks\" role=\"tabpanel\" aria-labelledby=\"Tasks1\">\r\n                        <div class=\"mult-div\" *ngIf=\"subTaskCount!=0\">\r\n                            <ng-multiselect-dropdown class=\"mutlidropdown-set\" [placeholder]=\"' All      '\"\r\n                                [settings]=\"dropdownSettings_Employee\" [data]=\"empDropdown\" [(ngModel)]=\"selectedEmp\"\r\n                                (onSelect)=\"EmpOnselect($event)\" (onDeSelect)=\"EmpOnDeselect()\">\r\n                            </ng-multiselect-dropdown>\r\n                        </div>\r\n                        <ul class=\"nav nav-pills px-3\" id=\"tasks-tabs\" role=\"tablist\"\r\n                            *ngIf=\"subTaskCount!=0; else noResultsFound\">\r\n                            <li class=\"nav-item\">\r\n                                <a class=\"nav-link active\" id=\"tasks-1\" data-toggle=\"tab\" href=\"#tasks_1\">\r\n                                    <span class=\"nav-text\">Actions</span>\r\n                                </a>\r\n                            </li>\r\n\r\n                            <li class=\"nav-item\">\r\n                                <a class=\"nav-link\" id=\"charts-1\" data-toggle=\"tab\" href=\"#charts_1\">\r\n                                    <span class=\"nav-text\">Charts</span>\r\n\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                        <div class=\"tab-content\" id=\"task-tabbview\">\r\n                            <div class=\"tab-pane fade show active\" id=\"tasks_1\" role=\"tabpanel\"\r\n                                aria-labelledby=\"tasks-1\">\r\n                                <div class=\"tasks_views\">\r\n                                    <div class=\" ribbon-box my-3\" *ngIf=\"Subtask_List\">\r\n                                        <div class=\"ribbon-info ribbon float-start\" *ngIf=\"inProcessCount!=0\"\r\n                                            data-toggle=\"tooltip\" title=\"InProcess Actions!\">\r\n                                            Inprocess</div>\r\n                                        <div class=\"text-right\">\r\n                                            <!-- (click)=\"OnAddTaskClick()\" -->\r\n                                            <button *ngIf=\"inProcessCount!=0\" (click)=\"sweetAlert()\"\r\n                                                [hidden]=\"actionButton\" title=\"Create New Action\"\r\n                                                class=\"btn22 btn btn-label-primary btn-pill btn-sm btn-bold mr-1\"><i\r\n                                                    class=\"fas fa-plus mr-2\"></i>New Action</button>\r\n                                        </div>\r\n\r\n                                        <div class=\"ribbon-content scrollbar1\" *ngIf=\"inProcessCount!=0\">\r\n                                            <div class=\"subtask-list\" *ngFor=\"let item of Subtask_List;let i =index\"\r\n                                                [ngClass]=\"{'bg-custom': item.Team_Autho==Current_user_ID}\">\r\n\r\n                                                <input type=\"radio\" name=\"Subtask\" class=\"subtask-radio\"\r\n                                                    (click)=\"OnSubtaskClick(item)\"\r\n                                                    *ngIf=\"item.SubProject_Status!='Under Approval'\"\r\n                                                    [hidden]=\"item.Team_Autho!=Current_user_ID\" />\r\n                                                <div class=\"col-lg-11\">\r\n                                                    <p\r\n                                                        class=\"subtask-list-title text-hover-primary font-size-h5 font-weight-bold mb-1\">\r\n                                                        <span class=\"mr-2\" id=\"SpanProjName_{{item.id}}\"\r\n                                                            data-toggle=\"tooltip\" title=\"Action Name!\">\r\n                                                            {{item.Project_Name}}</span>\r\n                                                        <!-- [hidden]=\"item.Project_Owner!=CurrentUser_ID\" -->\r\n                                                        <span class=\"text-info\" [hidden]=\"Editbutton\"\r\n                                                            id=\"EidtBtn_{{item.id}}\"\r\n                                                            (click)=\"OnEditProject(item.id,item.Project_Name)\">\r\n                                                            <i class=\"fas fa-edit\"></i>\r\n                                                        </span>\r\n                                                        <span class=\"kt-inbox__subject\" style=\"display:none;\"\r\n                                                            id=\"spanTextbox_{{item.id}}\">\r\n                                                            <div class=\"d-flex\">\r\n                                                                <input type=\"text\" class=\"form-control text-\"\r\n                                                                    id=\"textboxfocus_{{item.id}}\"\r\n                                                                    [(ngModel)]=\"_modelProjectName\"\r\n                                                                    style=\"width: 78%;height: 32px;\"\r\n                                                                    (keydown.enter)=\"OnProject_Rename(item.id)\">\r\n                                                                <div class=\"d-inline-block ml-3\" id=\"button-addon4\">\r\n                                                                    <button (click)=\"OnProject_Rename(item.id)\"\r\n                                                                        class=\"btn btn-primary btn btn-sm mr-2\">Done</button>\r\n                                                                    <button class=\" btn btn-secondary btn btn-sm\"\r\n                                                                        (click)=\"onCancel(item.id)\">Cancel</button>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </span>\r\n                                                    </p>\r\n                                                    <p class=\"mb-3\">\r\n                                                        <span class=\"mr-2\" id=\"Span_DescName_{{item.id}}\"\r\n                                                            data-toggle=\"tooltip\" title=\"Action Description!\">\r\n                                                            {{item.Project_Description}}</span>\r\n                                                        <span class=\"text-info\" [hidden]=\"Editbutton\"\r\n                                                            (click)=\"OnEditProject_Desc(item.id,item.Project_Description)\">\r\n                                                            <i class=\"fas fa-edit\"></i>\r\n                                                        </span>\r\n                                                        <span class=\"kt-inbox__subject\" style=\"display:none;\"\r\n                                                            id=\"spanTextarea_{{item.id}}\">\r\n                                                            <div class=\"d-flex\">\r\n                                                                <input type=\"text\" class=\"form-control\"\r\n                                                                    id=\"textareafocus_{{item.id}}\"\r\n                                                                    [(ngModel)]=\"_modelProjDesc\"\r\n                                                                    style=\"width: 78%;height: 32px;\"\r\n                                                                    (keydown.enter)=\"OnProject_Rename(item.id)\">\r\n                                                                <div class=\"d-inline-block ml-3\" id=\"button-addon4\">\r\n                                                                    <button (click)=\"OnProject_Rename(item.id)\"\r\n                                                                        class=\"btn btn-primary btn btn-sm mr-2\">Done</button>\r\n                                                                    <button class=\" btn btn-secondary btn btn-sm\"\r\n                                                                        (click)=\"onCancel(item.id)\">Cancel</button>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </span>\r\n\r\n                                                    </p>\r\n\r\n                                                    <p class=\"mb-1\">\r\n                                                        <span class=\"mr-3 text-nowrap mb-2 d-inline-block\"\r\n                                                            data-toggle=\"tooltip\" title=\"Start Date!\">\r\n                                                            <i class=\"fas fa-calendar-alt text-muted mr-1\"></i>\r\n                                                            <b>{{item.StartDate |date:'dd-MM-yyyy'}}</b>\r\n                                                        </span>\r\n                                                        <span class=\"mr-3  text-nowrap mb-2 d-inline-block\"\r\n                                                            data-toggle=\"tooltip\" title=\"End Date!\">\r\n                                                            <i class=\"fas fa-calendar-alt text-muted mr-1\"></i>\r\n                                                            <b>{{item.SubProject_DeadLine |date:'dd-MM-yyyy'}}</b>\r\n                                                        </span>\r\n                                                        <span class=\"mr-3 text-nowrap mb-2 d-inline-block\"\r\n                                                            data-toggle=\"tooltip\" title=\"Action Cost!\">\r\n                                                            <i class=\"fas fa-wallet text-muted mr-1\"></i>\r\n                                                            <b>{{item.Project_Cost|currency:'SAR '}}</b>\r\n                                                        </span>\r\n                                                    </p>\r\n                                                    <p class=\"mb-2\">\r\n                                                        <span class=\"mr-3 text-nowrap mb-2 d-inline-block\"\r\n                                                            data-toggle=\"tooltip\" title=\"Action Responsible!\">\r\n                                                            <i class=\"fab fa-dev text-muted mr-1\"></i>\r\n                                                            <b> {{item.Subtask_Res}}</b>\r\n                                                        </span>\r\n\r\n                                                        <span class=\"mr-2 text-nowrap mb-2 d-inline-block\" [ngClass]=\"{'text-danger':item.SubProject_Status=='Delay',\r\n                                            'text-success':item.SubProject_Status=='Completed',\r\n                                            'text-warning':item.SubProject_Status=='InProcess',\r\n                                            'text-primary':item.SubProject_Status=='Under Approval',\r\n                                            'text-info':item.SubProject_Status=='Completion Under Approval',\r\n                                            'text-Rejected':item.SubProject_Status=='New Project Rejected',\r\n                                            'text-underApproval':item.SubProject_Status=='Enactive Under Approval',\r\n                                            'text-underApproval':item.SubProject_Status=='Forward Under Approval',\r\n                                            'text-underApp':item.SubProject_Status=='New Project',\r\n                                            'text-completed':item.SubProject_Status=='Completion Under Approval',\r\n                                            'text-completeRejected':item.SubProject_Status=='Project Complete Rejected',\r\n                                            'text-Todo':item.SubProject_Status=='ToDo Completed'}\"\r\n                                                            data-toggle=\"tooltip\" title=\"Action Status!\">\r\n                                                            {{item.SubProject_Status}}\r\n                                                        </span>\r\n                                                    </p>\r\n\r\n                                                    <p class=\"mb-1\" *ngIf=\"item.Sourcefile\">\r\n                                                        <span class=\"mr-3 text-nowrap mb-2 d-inline-block\">\r\n                                                            <i class=\"fas fa-paperclip text-muted mr-1\"></i>\r\n                                                            <a class=\"text-info curser-pointer\"\r\n                                                                title=\"Click To Open File\"\r\n                                                                (click)=\"LoadDocument(item.CompleteProofDoc)\">\r\n                                                                <b>{{item.Sourcefile}}</b></a>\r\n                                                        </span>\r\n                                                        <span class=\"mr-3 text-nowrap mb-2 d-inline-block\"\r\n                                                            *ngIf=\"item.Remarks\" data-toggle=\"tooltip\" title=\"Remarks!\">\r\n                                                            <i class=\"fas fa-registered text-muted mr-1\"></i>\r\n                                                            <b>{{item.Remarks}}</b>\r\n                                                        </span>\r\n                                                    </p>\r\n                                                    <p class=\"mb-2\">\r\n                                                        <span class=\"mr-3 text-nowrap mb-2 d-inline-block\">\r\n                                                            <h6 class=\" pt-1\">Allocated</h6>\r\n                                                            <h6 class=\"mt-1\">\r\n                                                                {{item.SubtaskAllocated}} Hrs\r\n                                                            </h6>\r\n                                                            <!-- <h6 class=\"mr-2\" id=\"Span_DescName_all{{item.id}}\" *ngIf=\"item.SubtaskAllocated == 0; else allocated\">\r\n                                                                {{item.SubtaskAllocated}} Hrs</h6>\r\n                                                            <span class=\"text-info\" [hidden]=\"Editbutton\" \r\n                                                                (click)=\"OnEditProject_Alloc(item.id,item.SubtaskAllocated)\">\r\n                                                                <i class=\"fas fa-edit\" ></i> -->\r\n                                                            <!-- *ngIf=\"item.Subtask_Res==CurrentUser_ID\" = For Subatask assignedto otherthan Authority validation -->\r\n                                                            <!-- </span>\r\n                                                            <span class=\"kt-inbox__subject\" style=\"display:none;\" id=\"spanTextarea_all{{item.id}}\">\r\n                                                                <div class=\"d-flex\">\r\n                                                                    <input type=\"number\" class=\"form-control\" id=\"textareafocus_all{{item.id}}\"\r\n                                                                        [(ngModel)]=\"_modelProjAlloc\" min=\"0\" oninput=\"validity.valid||(value='');\" style=\"width: 40%;height: 32px;\"\r\n                                                                        (keydown.enter)=\"OnProject_Rename(item.id)\">\r\n                                                                        <span *ngIf=\"_modelProjAlloc > (item.SubtaskDuration * 10)\" style=\"color:red\">*Allocation per day limit is 10 hours.</span>\r\n                                                                        <span *ngIf=\"_modelProjAlloc > (item.SubtaskDuration * 10)\" style=\"color:red\">Please enter the hours less than or equal to <b>{{(item.SubtaskDuration * 10)}}</b> hours!</span>\r\n                    \r\n                                                                    <div class=\"d-inline-block ml-3\" id=\"button-addon4\">\r\n                                                                        <button (click)=\"OnProject_Rename(item.id)\"\r\n                                                                            class=\"btn btn-primary btn btn-sm mr-2\">Done</button>\r\n                                                                        <button class=\" btn btn-secondary btn btn-sm\"\r\n                                                                            (click)=\"onCancel(item.id)\">Cancel</button>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </span>\r\n                                                            <ng-template #allocated>\r\n                                                                <h6 class=\"mt-1\"> \r\n                                                                    {{item.SubtaskAllocated}}Hrs\r\n                                                                  </h6>\r\n                                                            </ng-template>   -->\r\n                                                        </span>\r\n                                                        <span class=\"mr-3 text-nowrap mb-2 d-inline-block\">\r\n                                                            <h6 class=\" pt-1\">Duration</h6>\r\n                                                            <h6 *ngIf=\"ProjectBlockName!='Standard Tasks'\" class=\"mt-1\">\r\n                                                                {{item.SubtaskDuration}} days</h6>\r\n                                                            <h6 *ngIf=\"ProjectBlockName=='Standard Tasks'\" class=\"mt-1\">\r\n                                                                Continuous</h6>\r\n                                                        </span>\r\n                                                        <span class=\"mr-3 text-nowrap mb-2 d-inline-block\">\r\n                                                            <h6 class=\" pt-1\">Percentage</h6>\r\n                                                            <h6 class=\"mt-1\">{{(item.SubtaskAllocated /\r\n                                                                totalSubtaskHours) | percent:'.1-2'}}</h6>\r\n                                                            <h6 class=\"mt-1\" *ngIf=\"totalSubtaskHours == 0\"> 0% </h6>\r\n                                                            <!-- <h6 class=\"mt-1\" *ngIf=\"maxDuration == 0\">{{(totalPercent / subTaskCount) | percent:'.1-2'}}</h6> -->\r\n                                                        </span>\r\n                                                    </p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\" ribbon-box my-3\" *ngIf=\"CompletedList\">\r\n                                        <div class=\"ribbon-success  ribbon float-start\" *ngIf=\"completedCount!=0\"\r\n                                            data-toggle=\"tooltip\" title=\"Completed Actions!\">\r\n                                            Completed</div>\r\n                                        <div class=\"text-right\">\r\n                                            <!-- (click)=\"OnAddTaskClick()\" -->\r\n                                            <button *ngIf=\"inProcessCount==0 && completedCount!=0\"\r\n                                                (click)=\"sweetAlert()\" [hidden]=\"actionButton\" title=\"Create New Action\"\r\n                                                class=\"btn22 btn btn-label-primary btn-pill btn-sm btn-bold mr-1\"><i\r\n                                                    class=\"fas fa-plus mr-2\"></i>New Action</button>\r\n                                        </div>\r\n                                        <div class=\"ribbon-content scrollbar1\" *ngIf=\"completedCount !=0\">\r\n                                            <!-- bg-custom   --- For grey background use (bg-custom) class -->\r\n                                            <div class=\"subtask-list\" *ngFor=\"let item of CompletedList\">\r\n                                                <div class=\"col-lg-11\">\r\n                                                    <p\r\n                                                        class=\"subtask-list-title text-hover-primary font-size-h5 font-weight-bold mb-1\">\r\n                                                        <span class=\"mr-2\" id=\"SpanProjName_{{item.id}}\"\r\n                                                            data-toggle=\"tooltip\" title=\"Action Name!\">\r\n                                                            {{item.Project_Name}}</span>\r\n                                                        <!-- [hidden]=\"item.Project_Owner!=CurrentUser_ID\" -->\r\n                                                        <span class=\"text-info\" [hidden]=\"Editbutton\"\r\n                                                            id=\"EidtBtn_{{item.id}}\"\r\n                                                            (click)=\"OnEditProject(item.id,item.Project_Name)\">\r\n                                                            <i class=\"fas fa-edit\"></i>\r\n                                                        </span>\r\n                                                        <span class=\"kt-inbox__subject\" style=\"display:none;\"\r\n                                                            id=\"spanTextbox_{{item.id}}\">\r\n                                                            <div class=\"d-flex\">\r\n                                                                <input type=\"text\" class=\"form-control text-\"\r\n                                                                    id=\"textboxfocus_{{item.id}}\"\r\n                                                                    [(ngModel)]=\"_modelProjectName\"\r\n                                                                    style=\"width: 78%;height: 32px;\"\r\n                                                                    (keydown.enter)=\"OnProject_Rename(item.id)\">\r\n                                                                <div class=\"d-inline-block ml-3\" id=\"button-addon4\">\r\n                                                                    <button (click)=\"OnProject_Rename(item.id)\"\r\n                                                                        class=\"btn btn-primary btn btn-sm mr-2\">Done</button>\r\n                                                                    <button class=\" btn btn-secondary btn btn-sm\"\r\n                                                                        (click)=\"onCancel(item.id)\">Cancel</button>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </span>\r\n                                                    </p>\r\n                                                    <p class=\"mb-3\">\r\n                                                        <span class=\"mr-2\" id=\"Span_DescName_{{item.id}}\"\r\n                                                            data-toggle=\"tooltip\" title=\"Action Description!\">\r\n                                                            {{item.Project_Description}}</span>\r\n                                                        <span class=\"text-info\" [hidden]=\"Editbutton\"\r\n                                                            (click)=\"OnEditProject_Desc(item.id,item.Project_Description)\">\r\n                                                            <i class=\"fas fa-edit\"></i>\r\n                                                        </span>\r\n                                                        <span class=\"kt-inbox__subject\" style=\"display:none;\"\r\n                                                            id=\"spanTextarea_{{item.id}}\">\r\n                                                            <div class=\"d-flex\">\r\n                                                                <input type=\"text\" class=\"form-control\"\r\n                                                                    id=\"textareafocus_{{item.id}}\"\r\n                                                                    [(ngModel)]=\"_modelProjDesc\"\r\n                                                                    style=\"width: 78%;height: 32px;\"\r\n                                                                    (keydown.enter)=\"OnProject_Rename(item.id)\">\r\n                                                                <div class=\"d-inline-block ml-3\" id=\"button-addon4\">\r\n                                                                    <button (click)=\"OnProject_Rename(item.id)\"\r\n                                                                        class=\"btn btn-primary btn btn-sm mr-2\">Done</button>\r\n                                                                    <button class=\" btn btn-secondary btn btn-sm\"\r\n                                                                        (click)=\"onCancel(item.id)\">Cancel</button>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </span>\r\n\r\n                                                    </p>\r\n\r\n                                                    <p class=\"mb-1\">\r\n                                                        <span class=\"mr-3 text-nowrap mb-2 d-inline-block\"\r\n                                                            data-toggle=\"tooltip\" title=\"Start Date!\">\r\n                                                            <i class=\"fas fa-calendar-alt text-muted mr-1\"></i>\r\n                                                            <b>{{item.StartDate |date:'dd-MM-yyyy'}}</b>\r\n                                                        </span>\r\n                                                        <span class=\"mr-3  text-nowrap mb-2 d-inline-block\"\r\n                                                            data-toggle=\"tooltip\" title=\"End Date!\">\r\n                                                            <i class=\"fas fa-calendar-alt text-muted mr-1\"></i>\r\n                                                            <b>{{item.SubProject_DeadLine |date:'dd-MM-yyyy'}}</b>\r\n                                                        </span>\r\n                                                        <span class=\"mr-3 text-nowrap mb-2 d-inline-block\"\r\n                                                            data-toggle=\"tooltip\" title=\"Action Cost!\">\r\n                                                            <i class=\"fas fa-wallet text-muted mr-1\"></i>\r\n                                                            <b>{{item.Project_Cost|currency:'SAR '}}</b>\r\n                                                        </span>\r\n                                                    </p>\r\n                                                    <p class=\"mb-2\">\r\n                                                        <span class=\"mr-3 text-nowrap mb-2 d-inline-block\"\r\n                                                            data-toggle=\"tooltip\" title=\"Action Responsible!\">\r\n                                                            <i class=\"fab fa-dev text-muted mr-1\"></i>\r\n                                                            <b> {{item.Subtask_Res}}</b>\r\n                                                        </span>\r\n\r\n                                                        <span class=\"mr-2 text-nowrap mb-2 d-inline-block\" [ngClass]=\"{'text-danger':item.SubProject_Status=='Delay',\r\n                                            'text-success':item.SubProject_Status=='Completed',\r\n                                            'text-warning':item.SubProject_Status=='InProcess',\r\n                                            'text-underApp':item.SubProject_Status=='Under Approval',\r\n                                            'text-info':item.SubProject_Status=='Completion Under Approval',\r\n                                            'text-Rejected':item.SubProject_Status=='New Project Rejected',\r\n                                            'text-underApproval':item.SubProject_Status=='Enactive Under Approval',\r\n                                            'text-underApproval':item.SubProject_Status=='Forward Under Approval',\r\n                                            'text-primary':item.SubProject_Status=='New Project',\r\n                                            'text-completed':item.SubProject_Status=='Completion Under Approval',\r\n                                            'text-completeRejected':item.SubProject_Status=='Project Complete Rejected',\r\n                                            'text-Todo':item.SubProject_Status=='ToDo Completed'}\"\r\n                                                            data-toggle=\"tooltip\" title=\"Action Status!\">\r\n                                                            {{item.SubProject_Status}}\r\n                                                        </span>\r\n                                                    </p>\r\n                                                    <p class=\"mb-1\" *ngIf=\"item.Sourcefile\">\r\n                                                        <span class=\"mr-3 text-nowrap mb-2 d-inline-block\">\r\n                                                            <i class=\"fas fa-paperclip text-muted mr-1\"></i>\r\n                                                            <a class=\"text-info curser-pointer\"\r\n                                                                title=\"Click To Open File\"\r\n                                                                (click)=\"LoadDocument(item.CompleteProofDoc)\">\r\n                                                                <b>{{item.Sourcefile}}</b></a>\r\n                                                        </span>\r\n                                                        <span class=\"mr-3 text-nowrap mb-2 d-inline-block\"\r\n                                                            *ngIf=\"item.Remarks\" data-toggle=\"tooltip\" title=\"Remarks!\">\r\n                                                            <i class=\"fas fa-registered text-muted mr-1\"></i>\r\n                                                            <b>{{item.Remarks}}</b>\r\n                                                        </span>\r\n                                                    </p>\r\n                                                    <p class=\"mb-2\">\r\n                                                        <span class=\"mr-3 text-nowrap mb-2 d-inline-block\">\r\n                                                            <h6 class=\" pt-1\">Allocated</h6>\r\n                                                            <h6 class=\"mt-1\">{{item.SubtaskAllocated}}Hrs</h6>\r\n                                                        </span>\r\n                                                        <span class=\"mr-3 text-nowrap mb-2 d-inline-block\">\r\n                                                            <h6 class=\" pt-1\">Duration</h6>\r\n                                                            <h6 *ngIf=\"ProjectBlockName!='Standard Tasks'\" class=\"mt-1\">\r\n                                                                {{item.SubtaskDuration}} days</h6>\r\n                                                            <h6 *ngIf=\"ProjectBlockName=='Standard Tasks'\" class=\"mt-1\">\r\n                                                                Continuous</h6>\r\n                                                        </span>\r\n                                                        <span class=\"mr-3 text-nowrap mb-2 d-inline-block\">\r\n                                                            <h6 class=\" pt-1\">Percentage</h6>\r\n                                                            <h6 class=\"mt-1\">{{(item.SubtaskAllocated /\r\n                                                                totalSubtaskHours) | percent:'.1-2'}}</h6>\r\n                                                            <!-- <h6 class=\"mt-1\" >{{(totalPercent / subTaskCount) | percent:'.1-2'}}</h6> -->\r\n                                                        </span>\r\n                                                    </p>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div class=\"tab-pane fade\" id=\"charts_1\" role=\"tabpanel\" aria-labelledby=\"charts-1\">\r\n\r\n\r\n                                <!-- Subtask Chart -->\r\n\r\n                                <!-- Hours and Percentage -->\r\n                                <div class=\"row\" *ngIf=\"IsData!=null\">\r\n                                    <div class=\"col-lg-12\">\r\n                                        <div\r\n                                            class=\"kt-portlet kt-portlet--bordered-semi kt-portlet--height-fluid bg-none shadow-none\">\r\n                                            <div class=\"kt-portlet__body px-3\">\r\n                                                <h5><strong>Subtask Hour and Percentage</strong></h5>\r\n                                                <!-- <div id=\"SummaryChart\" style=\"width: 100%; height: 500px\">\r\n                                        </div> -->\r\n                                                <!-- <h5><strong>Hybrid Graph</strong></h5>-->\r\n                                                <div id=\"Hybridchartdiv\" style=\"width: 100%; height: 400px\">\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <!-- Summary Chart -->\r\n                                <div class=\"row\" *ngIf=\"IsData!=null\">\r\n                                    <div class=\"col-lg-12\">\r\n                                        <div\r\n                                            class=\"kt-portlet kt-portlet--bordered-semi kt-portlet--height-fluid bg-none shadow-none\">\r\n                                            <div class=\"kt-portlet__body px-3\">\r\n                                                <h5><strong>Subtask Summary</strong></h5>\r\n                                                <div id=\"SummaryChart\" style=\"width: 100%; height: 500px\">\r\n                                                </div>\r\n                                                <!-- <h5><strong>Hybrid Graph</strong></h5>\r\n                                         -->\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <!-- SubTasks Section end-->\r\n\r\n                    <!-- Milestones section -->\r\n                    <div class=\"tab-pane fade\" id=\"Milestones\" role=\"tabpanel\" aria-labelledby=\"Milestones1\">\r\n                        <h3 *ngIf=\"noMilestones == false; else noResultsFound\">Milestones</h3>\r\n                        <!-- <h4 *ngIf=\"noMilestones == true\">No Records Found.</h4> -->\r\n                    </div>\r\n                    <!-- Milestones section end-->\r\n\r\n                    <!--  DMS Working Area -->\r\n\r\n                    <div class=\"tab-pane fade\" id=\"DMS\" role=\"tabpanel\" aria-labelledby=\"DMS1\">\r\n                        <div class=\"bg-white p-3 mb-2\">\r\n                            <div>\r\n                                <button type=\"button\" class=\"btn btn-info btn-sm py-1\" (click)=\"AddDms()\">\r\n                                    <i class=\"fa fa-chart-bar\"></i>Add DMS\r\n                                </button>\r\n                            </div>\r\n                            <table class=\"table\">\r\n                                <tbody>\r\n                                    <tr *ngFor=\"let itemMemos of _MemosSubjectList; let i=index\">\r\n                                        <td>\r\n                                            <a href=\"javascript:void(0)\" (click)=\"openUrl(itemMemos.Url)\">\r\n                                                {{itemMemos.Subject}}</a>\r\n                                        </td>\r\n                                        <td class=\"align-top curser-pointer\" (click)=\"deleteMemos(itemMemos.MailId)\">\r\n                                            <i class=\"fas fa-trash-alt text-primary\"></i>\r\n                                        </td>\r\n                                    </tr>\r\n\r\n                                </tbody>\r\n                                <p style=\"color:gray\">{{_MemosNotFound}}</p>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                    <!--  DMS Working Area end-->\r\n\r\n                    <!-- Files Section -->\r\n                    <!-- <div class=\"tab-pane fade\" id=\"Links\" role=\"tabpanel\" aria-labelledby=\"Links1\">Links</div> -->\r\n                    <div class=\"tab-pane fade\" id=\"Files\" role=\"tabpanel\" aria-labelledby=\"Files1\">\r\n                        <!-- <div class=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                            <div class=\"kt-container w-100 px-0\">\r\n                                <div class=\"kt-subheader__main\"> -->\r\n                        <h3 class=\"kt-subheader__title\" *ngIf=\"attachmentlength!=0; else noResultsFound\">Files</h3>\r\n                        <!-- <h4 class=\"kt-subheader__title\" *ngIf=\"noFiles == true\">No Records Found.</h4> -->\r\n                        <!-- </div>\r\n                            </div>\r\n                        </div> -->\r\n                        <div class=\"row\" *ngIf=\"ProjectBlock=='003' else others\">\r\n                            <div class=\"col-lg-12\" *ngFor=\"let item of AttachmentList; let i=index\">\r\n                                <div class=\"kt-portlet mb-2\">\r\n                                    <div class=\"kt-portlet__body\">\r\n                                        <div class=\"kt-widget__files\">\r\n                                            <a class=\"d-flex\">\r\n                                                <div class=\"kt-widget__media mr-3\">\r\n                                                    <img class=\"kt-widget__img kt-hidden-\" src=\"assets/images/pdf.svg\"\r\n                                                        alt=\"image\">\r\n                                                </div>\r\n                                                <div>\r\n                                                    <span class=\"kt-widget__desc pt-1\"\r\n                                                        (click)=\"openPDF_Standard(item.Reportdate,item.Proofdoc)\">{{item.Proofdoc}}</span>\r\n                                                    <div class=\"kt-widget__desc pt-1\">\r\n                                                        <small>{{item.Reportdate|date:'medium'}}</small>\r\n                                                    </div>\r\n                                                    <div class=\"kt-widget__desc pt-1\" style=\"color:  #FFA500;\">\r\n                                                        <small>{{item.Remarks}}</small>\r\n                                                    </div>\r\n                                                    <div class=\"kt-widget__desc pt-1\">\r\n                                                        <small>Submitted By : {{item.SubmittedBy}}</small>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </a>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <ng-template #others>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-lg-12\" *ngFor=\"let item of AttachmentList; let i=index\">\r\n                                    <div class=\"kt-portlet mb-2\">\r\n                                        <div class=\"kt-portlet__body\">\r\n                                            <div class=\"kt-widget__files\">\r\n                                                <a class=\"d-flex\">\r\n                                                    <div class=\"kt-widget__media mr-3\">\r\n                                                        <img class=\"kt-widget__img kt-hidden-\"\r\n                                                            src=\"assets/images/pdf.svg\" alt=\"image\">\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        <span class=\"kt-widget__desc pt-1\"\r\n                                                            (click)=\"openPDF(item.CD,item.CompleteProofDoc)\">{{item.CompleteProofDoc}}</span>\r\n                                                        <div class=\"kt-widget__desc pt-1\">\r\n                                                            <small>{{item.CD|date:'medium'}}</small>\r\n                                                        </div>\r\n                                                        <div class=\"kt-widget__desc pt-1\" style=\"color:  #FFA500;\">\r\n                                                            <small>{{item.Remarks}}</small>\r\n                                                        </div>\r\n                                                        <div class=\"kt-widget__desc pt-1\">\r\n                                                            <small>Submitted By : {{item.SubmittedBy}}</small>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </a>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </ng-template>\r\n                    </div>\r\n                    <!-- Files Section end -->\r\n\r\n                    <!-- TimeLine Section -->\r\n                    <div class=\"tab-pane fade\" id=\"Timeline\" role=\"tabpanel\" aria-labelledby=\"Timeline1\">\r\n                        <!-- <h3 class=\"kt-subheader__title text-left\" *ngIf=\"noTimeline == false\">Timeline</h3>  -->\r\n                        <div class=\"d-flex-center mb-3\">\r\n\r\n                            <div class=\"\">\r\n                                <button [hidden]=\"darbutton==false\" type=\"button\" class=\"btn btn-info btn-sm\"\r\n                                    (click)=\"darcreate()\">\r\n                                    Create Timeline\r\n                                </button>\r\n                            </div>\r\n                            <div class=\" mb-0\">\r\n                                <h6 class=\"mb-0\">\r\n                                    <strong>Total Achievement Hours - {{totalHours}}</strong>\r\n                                </h6>\r\n                            </div>\r\n                        </div>\r\n                        <div *ngIf=\"noTimeline == false; else noResultsFound\">\r\n                            <div class=\"item-b  ribbon-content scrollbar1\">\r\n                                <div class=\"mb-3\" *ngFor=\"let item of arr\">\r\n                                    <!-- <div class=\"list-header\">\r\n                                    <h4 class=\"header-date\">\r\n                                        {{item.SubmissionDate | date: 'fullDate'}}\r\n                                    </h4><br>\r\n                                </div> -->\r\n                                    <div class=\"\">\r\n                                        <table class=\"time-table mb-1\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th style=\"width: 50px;\">S.No.</th>\r\n                                                    <th style=\"width: 280px;\">Employee</th>\r\n                                                    <th style=\"width: 280px;\"\r\n                                                        *ngIf=\"ProjectBlockName != 'Standard Tasks'\">Action Name</th>\r\n                                                    <th>Achievement</th>\r\n                                                    <th style=\"width: 80px;\">Start</th>\r\n                                                    <th style=\"width: 80px;\">End</th>\r\n                                                    <th style=\"width: 80px;\">Time</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                <tr *ngFor=\"let dar of item.Dardata; let i=index\">\r\n                                                    <td>{{i+1}}</td>\r\n                                                    <td>\r\n                                                        <div class=\"d-flex\">\r\n                                                            <div class=\"initial-box color-7 b-50 mr-2\">{{InitR}} </div>\r\n                                                            <span class=\"user--name\">{{dar.EmpName}}</span>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                    <td *ngIf=\"ProjectBlockName != 'Standard Tasks'\">{{dar.ProjectName}}\r\n                                                    </td>\r\n                                                    <td>{{dar.WorkAchieved}}</td>\r\n                                                    <td>{{dar.starttime}}</td>\r\n                                                    <td>{{dar.endtime}}</td>\r\n                                                    <td>{{dar.Duration}} Hrs</td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n\r\n                                    <div class=\"time-totals mb-3\">\r\n                                        <div class=\"\">\r\n                                            <h4 class=\"header-date p-0\">\r\n                                                {{item.SubmissionDate | date: 'fullDate'}}\r\n                                            </h4>\r\n                                        </div>\r\n                                        <div class=\"\">\r\n                                            <ul class=\"time-totals-list\">\r\n                                                <li class=\"totals-list--item\">\r\n                                                    <span><strong>Total Hours: </strong></span>\r\n                                                    <span>{{item.TotalDuration}}</span>\r\n                                                </li>\r\n                                            </ul>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <!-- <div class=\"show1 more\">Show More </div>\r\n                            <div class=\"show1 less\">Show Less </div> \r\n                         (click)=\"CurrentPageNo = CurrentPageNo + 1; loadMore()\"\r\n                                [disabled]=\"_CurrentpageRecords<10\" -->\r\n                                <div style=\"text-align:center\"> <button class=\"btn btn-info loadMore\"\r\n                                        (click)=\"CurrentPageNo = CurrentPageNo + 1; loadMore()\"\r\n                                        [hidden]=\"_CurrentpageRecords<10\">\r\n                                        Load More!</button></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <!-- TimeLine Section end-->\r\n\r\n                    <!-- Notes Section -->\r\n                    <div class=\"tab-pane fade\" id=\"Notes\" role=\"tabpanel\" aria-labelledby=\"Notes1\">\r\n                        <h3 *ngIf=\"noNotes == false; else noResultsFound\"> Notes</h3>\r\n                        <!-- <h4 *ngIf=\"noNotes == true\">No Records Found.</h4> -->\r\n                    </div>\r\n                    <!-- Notes Section end-->\r\n\r\n                    <!-- Comments Section -->\r\n                    <div class=\"tab-pane fade\" id=\"Comments\" role=\"tabpanel\" aria-labelledby=\"Comments1\">\r\n                        <div class=\"card cust-card py-3\">\r\n                            <div class=\"comments-list\">\r\n                                <div class=\"card-body p-0 cust-bd1\">\r\n                                    <ul class=\"commentul pr-2 px-0 pl-0\">\r\n                                        <ng-container *ngFor=\"let item of _CommentsList\">\r\n                                            <div *ngIf=\"(item.Send_From == 'WS') then even;\">\r\n                                            </div>\r\n                                            <div *ngIf=\"(item.Send_From != 'WS') then odd;\">\r\n                                            </div>\r\n                                            <ng-template #odd>\r\n                                                <li class=\"comment-list\">\r\n                                                    <div class=\"d-flex\">\r\n                                                        <div class=\"\">\r\n                                                            <span class=\"name-box text-center\">{{item.Initial}}</span>\r\n                                                        </div>\r\n                                                        <div class=\"d-flex flex-column flex-grow-1\">\r\n                                                            <span class=\"comment-info\">{{item.Emp_name}}</span>\r\n                                                            <div class=\"comment-text\">\r\n                                                                <span>{{item.Req_Coments}}</span>\r\n                                                            </div>\r\n                                                            <div class=\"blw mt-2\">\r\n                                                                <span\r\n                                                                    class=\"kt-badge kt-badge--inline kt-badge--unified-info\">{{item.Req_Type}}</span>\r\n                                                                <span\r\n                                                                    class=\"comment-info dt kt-badge kt-badge--inline kt-badge--unified-dark\">{{item.Req_DL}}</span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </li>\r\n                                            </ng-template>\r\n                                            <ng-template #even>\r\n                                                <li class=\"comment-list odd\">\r\n                                                    <div class=\"d-flex flex-row-reverse\">\r\n                                                        <div class=\"\">\r\n                                                            <span class=\"name-box text-center\">{{item.Initial}}</span>\r\n                                                        </div>\r\n                                                        <div class=\"d-flex flex-column flex-grow-1 align-items-end\">\r\n                                                            <span class=\"comment-info\">{{item.Emp_name}}</span>\r\n                                                            <div class=\"comment-text\">\r\n                                                                <span>{{item.Req_Coments}}</span>\r\n                                                            </div>\r\n                                                            <div class=\"mt-2\">\r\n                                                                <span\r\n                                                                    class=\"kt-badge kt-badge--inline kt-badge--unified-info\">{{item.Req_Type}}</span>\r\n                                                                <span\r\n                                                                    class=\"kt-badge kt-badge--inline kt-badge--unified-dark comment-info dt\">{{item.Req_DL}}</span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </li>\r\n                                            </ng-template>\r\n                                        </ng-container>\r\n                                    </ul>\r\n                                </div>\r\n                                <div class=\"card-footer d-none\">\r\n                                    <ul class=\"commentlt\">\r\n                                        <li class=\"comment-list\">\r\n                                            <div class=\"d-flex align-items-center\">\r\n                                                <div class=\"\">\r\n                                                    <span class=\"name-box text-center\">RK</span>\r\n                                                </div>\r\n                                                <div class=\"flex-grow-1 ml-2\">\r\n                                                    <input type=\"text\" class=\"form-control\">\r\n                                                </div>\r\n                                                <button class=\"btn btn-sm ml-2 btn-info\"><i\r\n                                                        class=\"far fa-paper-plane\"></i>Send</button>\r\n                                            </div>\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <!-- Comments Section end-->\r\n\r\n                    <!-- People Section -->\r\n                    <div class=\"tab-pane fade\" id=\"People\" role=\"tabpanel\" aria-labelledby=\"People1\">\r\n                        <h4>People on the project (RACIS)</h4>\r\n                        <div class=\"kt-portlet kt-portlet--bordered-semi kt-portlet--height-fluid\">\r\n                            <div class=\"kt-portlet__body px-3 project-people\">\r\n                                <div class=\"d-flex align-items-center justify-content-between mb-3\">\r\n                                    <div>\r\n                                        <div class=\"d-flex align-items-center\">\r\n                                            <div class=\"initial-box color-1\">{{InitOwn}}\r\n                                            </div>\r\n                                            <div class=\"owner-details\">\r\n                                                <span class=\"text-muted\">Owner</span>\r\n                                                <p class=\"text-dark text-hover-primary mb-0\">\r\n                                                    <strong>{{Owner}}</strong>\r\n                                                    <!-- <strong>0%</strong> -->\r\n                                                </p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div>\r\n                                        <span class=\"text-muted\"><strong></strong></span>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"d-flex align-items-center justify-content-between mb-3\">\r\n                                    <div>\r\n                                        <div class=\"d-flex align-items-center\">\r\n                                            <div class=\"initial-box color-2\">{{InitR}}\r\n                                            </div>\r\n                                            <div class=\"owner-details\">\r\n                                                <span class=\"text-muted\">Responsible</span>\r\n                                                <p class=\"text-dark text-hover-primary mb-0\">\r\n                                                    <strong>{{Responsible}}</strong>\r\n                                                    <!-- <strong>0%</strong> -->\r\n                                                </p>\r\n                                                <!-- <span class=\"text-muted\">(ACtion's Responsible)</span>\r\n                                                <p class=\"text-muted\" *ngFor=\"let item of Subtask_Res_List\">\r\n                                                    <strong>{{item.TM_DisplayName}}</strong>\r\n                                                    <strong *ngIf=\"item.TM_DisplayName\">{{(item.EmpCount / subTaskCount) | percent:'.1-2'}}</strong>\r\n                                                </p>                                               -->\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div>\r\n                                        <span class=\"text-muted\"><strong></strong></span>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"d-flex align-items-center justify-content-between mb-3\">\r\n                                    <div>\r\n                                        <div class=\"d-flex align-items-center\">\r\n                                            <div class=\"initial-box color-3\">{{InitAut}}\r\n                                            </div>\r\n                                            <div class=\"owner-details\">\r\n                                                <span class=\"text-muted\">Authority</span>\r\n                                                <p class=\"text-dark text-hover-primary mb-0\">\r\n                                                    <strong>{{Authority}}</strong>\r\n                                                    <!-- <strong>0%</strong> -->\r\n                                                </p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div>\r\n                                        <span class=\"text-muted\"><strong></strong></span>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"d-flex align-items-center justify-content-between mb-3\">\r\n                                    <div>\r\n                                        <div class=\"d-flex align-items-center\">\r\n                                            <div class=\"initial-box color-4\">\r\n                                                {{InitCoor}}\r\n                                            </div>\r\n                                            <div class=\"owner-details\">\r\n                                                <span class=\"text-muted\">Coordinator</span>\r\n                                                <p class=\"text-dark text-hover-primary mb-0\">\r\n                                                    <strong>{{Coordinator}}</strong>\r\n                                                    <!-- <strong>0%</strong> -->\r\n                                                </p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div>\r\n                                        <span class=\"text-muted\"><strong></strong></span>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"d-flex align-items-center justify-content-between mb-3\">\r\n                                    <div>\r\n                                        <div class=\"d-flex align-items-center\">\r\n                                            <div class=\"initial-box color-5\">\r\n                                                {{InitInformer}}</div>\r\n                                            <div class=\"owner-details\">\r\n                                                <span class=\"text-muted\">Informer</span>\r\n                                                <p class=\"text-dark text-hover-primary mb-0\">\r\n                                                    <strong>{{Informer}}</strong>\r\n                                                    <!-- <strong>0%</strong> -->\r\n                                                </p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div>\r\n                                        <span class=\"text-muted\"><strong></strong></span>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"d-flex align-items-center justify-content-between\">\r\n                                    <div>\r\n                                        <div class=\"d-flex align-items-center\">\r\n                                            <div class=\"initial-box color-6\">\r\n                                                {{InitSupp}}\r\n                                            </div>\r\n                                            <div class=\"owner-details\">\r\n                                                <span class=\"text-muted\">Support</span>\r\n                                                <p class=\"text-dark text-hover-primary mb-0\">\r\n                                                    <strong>{{Support}}</strong>\r\n                                                    <!-- <strong>0%</strong> -->\r\n                                                </p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div>\r\n                                        <span class=\"text-muted\"><strong></strong></span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <ng-template #zeroPercent>\r\n                            <p><strong>0%</strong></p>\r\n                        </ng-template>\r\n                    </div>\r\n                    <!-- People Section end-->\r\n\r\n                    <!-- Meetings section -->\r\n                    <div class=\"tab-pane fade\" id=\"Meeting\" role=\"tabpanel\" aria-labelledby=\"Meeting1\">\r\n                        <h3 *ngIf=\"noMeeting == false; else noResultsFound\">Meeting</h3>\r\n                        <!-- <h4  *ngIf=\"noMeeting == true\">No Records Found.</h4> -->\r\n                    </div>\r\n                    <!-- Meetings section end-->\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!--no records found-->\r\n    <ng-template #noResultsFound>\r\n        <div class=\"\">\r\n            <div class=\"d-flex-center\">\r\n                <div class=\"m-auto\">\r\n                    <svg fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" width=\"148\" height=\"136\" viewBox=\"0 0 148 136\">\r\n                        <g clip-path=\"url(#a)\">\r\n                            <path\r\n                                d=\"M25.532 24.814c-17.957 22.26-21.952 59.119 1.09 81.273 28.633 27.534 63.831 26.132 92.703 9.462 32.184-18.573 21.146-69.442 12.563-83.971-25.269-42.77-80.228-39.154-106.356-6.764Z\"\r\n                                fill=\"#E7EBF1\" opacity=\".5\"></path>\r\n                            <path\r\n                                d=\"M2.168 32.184c4.055 44.656 59.34 23.353 56.364-2.453C53.969-9.658-1.42-7.257 2.168 32.184Z\"\r\n                                fill=\"#79E3AA\"></path>\r\n                            <path\r\n                                d=\"M37.58 19.274a2.666 2.666 0 0 0-1.721.95c-5.712 6.35-4.682 7.359-10.103 13.926-.978-.8-1.945-1.609-2.846-2.502a11.285 11.285 0 0 1-1.46-1.938c-1.595-2.772-6.365.168-4.206 3.094 1.1 1.868 6.935 7.79 9.111 7.535 3.855-.453 7.075-9.63 13.555-16.821a2.62 2.62 0 0 0-2.348-4.244h.018Z\"\r\n                                fill=\"#fff\"></path>\r\n                            <path\r\n                                d=\"M141.844 41.842c1.7-3.02 1.111-32.59 1.024-32.696.038-1.454-.778-1.493-1.665-1.493-15.048.067-48.952-.483-49.79-.122h-.052a1.107 1.107 0 0 0-.733.26.875.875 0 0 0-.319.62c-.42 4.74.596 28.805.596 33.557l50.939-.126Z\"\r\n                                fill=\"#4DA2F8\"></path>\r\n                            <path\r\n                                d=\"M144.22 31.907c0-10.408.067-15.917-.066-16.82.094-1.028-.207-1.729-1.178-1.665-8.323-.701-21.453-.151-25.196-.642-.505-.68-1.027-2.684-1.566-3.329-.54-.645-1.802-2.218-2.387-3.073-.894-1.45-1.665-1.517-4.773-1.402-16.575.49-18.629-.4-19.642.302-1.696 3.952-.277 44.22-.182 44.35-.042 1.91.778 1.963 1.665 1.96 15.047-.074 50.974.672 51.811.2h.067a1.017 1.017 0 0 0 .732-.351c.192-.232.3-.523.305-.824.438-6.224.417-12.475.41-18.706Z\"\r\n                                fill=\"#63C0F9\"></path>\r\n                            <path opacity=\".6\"\r\n                                d=\"M98.916 13.362c-2.31 0-4.237 0-4.762-.066a1.116 1.116 0 0 1 .245-2.219c1.002.105 9.374.032 14.75-.045a1.11 1.11 0 0 1 .815 1.884 1.113 1.113 0 0 1-.78.337c-.883.021-6.182.098-10.268.11Z\"\r\n                                fill=\"#fff\"></path>\r\n                            <path\r\n                                d=\"M45.023 135.513a2.644 2.644 0 0 0 2.724.197 2.64 2.64 0 0 0 1.435-2.324c0 .031-1.682-7.391 1.914-7.556 7.969-.35 17.395-3.357 17.13-10.832-.484-13.544-.225-25.522-5.629-30.07-7.065-5.958-21.226-2.043-33.312-.968-18.314 1.63-23.546 3.75-22.127 21.664a57.15 57.15 0 0 0 2.804 14.214c3.907 10.524 12.013 7.394 23.577 7.317 1.16 0 1.64 1.391 11.484 8.358Z\"\r\n                                fill=\"#FFD56A\"></path>\r\n                            <path\r\n                                d=\"M22.595 107.741a1.57 1.57 0 0 1-1.693-1.353 1.59 1.59 0 0 1 1.346-1.776c5.06-.48 28.511-2.888 33.554-3.231a1.582 1.582 0 0 1 .424 3.129 1.283 1.283 0 0 1-.263 0c-5.01.543-28.27 2.758-33.29 3.21l-.078.021ZM21.884 99.74a1.567 1.567 0 0 1-1.383-2.515 1.591 1.591 0 0 1 1.036-.614c5.056-.48 28.511-2.887 33.55-3.23a1.581 1.581 0 0 1 .428 3.132 1.647 1.647 0 0 1-.263 0c-5.011.543-28.27 2.754-33.291 3.21l-.077.018ZM23.597 115.293a1.541 1.541 0 1 1-.27-3.073l21.104-1.991a1.6 1.6 0 0 1 .616.018 1.598 1.598 0 0 1 .986.702 1.58 1.58 0 0 1-1.354 2.42l-21.089 1.987.007-.063Z\"\r\n                                fill=\"#CE8D4F\"></path>\r\n                            <path\r\n                                d=\"M106.822 90.49c2.642 4.979 22.68 25.157 22.708 25.181 9.781 7.741 22.547-9.714 12.286-16.708-.028-.021-24.106-14.719-29.647-15.745\"\r\n                                fill=\"#727491\"></path>\r\n                            <path\r\n                                d=\"m96.968 93.328 6.307 4.643a4.908 4.908 0 0 0 6.61-.74c3.592-4.117 6.521-8.792 9.482-13.442a4.906 4.906 0 0 0-1.051-6.445c-1.882-1.524-3.427-2.87-6.062-4.808-3.827 7.748-9.886 14.053-15.286 20.792Z\"\r\n                                fill=\"#727491\"></path>\r\n                            <path\r\n                                d=\"M37.611 80.453c29.034 52.397 96.187 11.119 77.513-35.685-5.19-13.026-17.77-22.73-31.651-24.72-32.121-4.604-61.898 31.466-45.862 60.405Z\"\r\n                                fill=\"#B3B9CE\"></path>\r\n                            <path\r\n                                d=\"M47.07 75.922c21.919 39.557 72.613 8.41 58.522-26.942-3.922-9.83-13.418-17.171-23.896-18.66-24.254-3.477-46.73 23.759-34.627 45.602Z\"\r\n                                fill=\"#E2F6FE\"></path>\r\n                            <g opacity=\".3\" fill=\"#63C0F9\">\r\n                                <path opacity=\".3\"\r\n                                    d=\"M87.467 66.456a.718.718 0 0 1-.95-.407.701.701 0 0 1 .25-.85.732.732 0 0 1 .988 1.068.8.8 0 0 1-.288.19ZM85.754 81.402a.796.796 0 0 1-.833-.123.835.835 0 0 1-.25-.35.05.05 0 0 0 0-.02.798.798 0 0 1 .294-.986.841.841 0 0 1 1.125 1.238.912.912 0 0 1-.336.241ZM97.77 89.452a.772.772 0 0 1-.417.052.795.795 0 0 1-.606-.494v-.024a.768.768 0 0 1 .815-1.055.792.792 0 0 1 .513 1.293.84.84 0 0 1-.305.228ZM112.103 83.147a.754.754 0 0 1-.788-.114.783.783 0 0 1-.235-.327.038.038 0 0 1 0-.021.762.762 0 0 1 .276-.929.794.794 0 0 1 1.235.641.79.79 0 0 1-.183.523.839.839 0 0 1-.305.227ZM114.328 69.431a.77.77 0 0 1-.943-.252.784.784 0 0 1-.162-.54.784.784 0 0 1 .24-.511.794.794 0 0 1 1.051-.053.786.786 0 0 1-.182 1.353l-.004.004ZM101.902 60.352a.751.751 0 1 1-.529-1.401.75.75 0 0 1 .753.185v.017a.75.75 0 0 1 .194.663.744.744 0 0 1-.436.536h.018Z\">\r\n                                </path>\r\n                            </g>\r\n                            <path opacity=\".8\" d=\"M97.024 49.905a25.344 25.344 0 0 0-35.632-3.826\" stroke=\"#fff\"\r\n                                stroke-width=\"7.36\" stroke-miterlimit=\"10\" stroke-linecap=\"round\"></path>\r\n                        </g>\r\n                        <defs>\r\n                            <clipPath id=\"a\">\r\n                                <path fill=\"#fff\" d=\"M0 0h148v136H0z\"></path>\r\n                            </clipPath>\r\n                        </defs>\r\n                    </svg>\r\n                    <div class=\"bnk-txt mt-3\">\r\n                        <h3 class=\"blank-txt\">No Results Found</h3>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </ng-template>\r\n    <!--no records found end-->\r\n</div>\r\n<div id=\"rightbar-overlay\" (click)=\"closeInfo()\"></div>\r\n<!-- Action-To-Project-New_Subtask -->\r\n<div id=\"mysideInfobar1\" class=\"sideInfobar animate-right\">\r\n    <router-outlet></router-outlet>\r\n</div>\r\n\r\n<!-- For Update Project-->\r\n<div id=\"mysideInfobar_ProjectsUpdate\" class=\"sideInfobar animate-right offcanvas\">\r\n    <div class=\"px-4 pt-4 pb-1\">\r\n        <div class=\"offcanvas-header d-flex align-items-center justify-content-between pb-2\">\r\n            <h4 class=\"font-weight-bold m-0\">Project Completion</h4>\r\n            <a href=\"javascript:void(0)\" class=\"closebtn btn btn-xs btn-icon btn-hover-primary\"\r\n                (click)=\"closeInfoProject()\">\r\n                <i class=\"fa fa-times\"></i>\r\n            </a>\r\n        </div>\r\n    </div>\r\n    <div class=\"px-4 pt-2\">\r\n        <div class=\"\">\r\n            <div class=\"d-flex align-items-center justify-content-between mt-0\">\r\n                <div>\r\n                    <div class=\"my-2\">\r\n                        <label class=\"kt-badge kt-hover--primary kt-bg-light-primary kt-badge--inline\">\r\n                            <i class=\"fa fa-clone mr-2\"></i>{{ProjectBlockName}}</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"d-flex mt-3 flex-column\">\r\n                <h5 class=\"fs-3 mb-2\">{{ProjectName}}</h5>\r\n                <span class=\"text-muted fs-5\">{{Description}}</span>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group mt-3\">\r\n            <label>Attachments</label>\r\n            <div class=\"input-group mb-3\">\r\n                <div class=\"input-group-prepend\">\r\n                    <span class=\"input-group-text\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\"\r\n                            class=\"bi bi-upload\" viewBox=\"0 0 16 16\">\r\n                            <path\r\n                                d=\"M.5 9.9a.5.5 0 0 1 .5.5v2.5a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-2.5a.5.5 0 0 1 1 0v2.5a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2v-2.5a.5.5 0 0 1 .5-.5z\" />\r\n                            <path\r\n                                d=\"M7.646 1.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1-.708.708L8.5 2.707V11.5a.5.5 0 0 1-1 0V2.707L5.354 4.854a.5.5 0 1 1-.708-.708l3-3z\" />\r\n                        </svg>\r\n                    </span>\r\n                </div>\r\n                <div class=\"custom-file\">\r\n                    <input type=\"file\" class=\"custom-file-input\" id=\"_pdf\" accept=\"application/pdf\"\r\n                        (change)=\"onFileChange($event)\">\r\n                    <label class=\"custom-file-label\" id=\"upload\" for=\"_pdf\">Select a file</label>\r\n                </div>\r\n            </div>\r\n            <span class=\"text-info\"> *Accept only pdf files </span>\r\n        </div>\r\n        <!-- <div class=\"form-group\">\r\n            <label>Attachments 1 </label>\r\n            <div></div>\r\n            <div class=\"custom-file\">\r\n                <input type=\"file\" class=\"form-control-file\" id=\"_pdf\" accept=\"application/pdf\"\r\n                    (change)=\"onFileChange($event)\">\r\n            </div>\r\n        </div> -->\r\n\r\n        <!-- <div class=\"form-group\">\r\n            <label>Attachments 2</label>\r\n            <div></div>\r\n            <div class=\"custom-file\">\r\n                <input type=\"file\" class=\"form-control-file\" id=\"uploadFile\" (change)=\"onFileChange2($event)\">\r\n            </div>\r\n        </div> -->\r\n        <div class=\"form-group\">\r\n            <label for=\"exampleFormControlFile1\"> Remarks <span class=\"text-danger\">*</span></label>\r\n            <textarea class=\"form-control\" aria-label=\"With textarea\" [(ngModel)]=\"_remarks\"\r\n                style=\"height: 264px; margin-top: 0px; margin-bottom: 0px;\"></textarea>\r\n        </div>\r\n\r\n\r\n        <div class=\"form-group mb-1\">\r\n            <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"_remarks==''\" (click)=\"updateMainProject()\">Submit\r\n            </button>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- For Update Subtask -->\r\n<div id=\"mysideInfobar_Update\" class=\"sideInfobar animate-right offcanvas\">\r\n    <div class=\"px-4 pt-4 pb-1\">\r\n        <div class=\"offcanvas-header d-flex align-items-center justify-content-between pb-2\">\r\n            <h4 class=\"font-weight-bold m-0\"> Action Completion </h4>\r\n            <a href=\"javascript:void(0)\" class=\"closebtn btn btn-xs btn-icon btn-hover-primary\" (click)=\"closeInfo()\">\r\n                <i class=\"fa fa-times\"></i>\r\n            </a>\r\n        </div>\r\n    </div>\r\n    <div class=\"px-4 pt-2\">\r\n        <div class=\"\">\r\n            <div class=\"d-flex flex-column\">\r\n                <h5 class=\"fs-3 mb-2\">{{this._Subtaskname}}</h5>\r\n                <span class=\"text-muted fs-5\">{{this.Sub_Desc}}</span>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group mt-3\">\r\n            <label>Attachments</label>\r\n            <div class=\"input-group mb-3\" #uploadFile>\r\n                <div class=\"input-group-prepend\">\r\n                    <span class=\"input-group-text\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\"\r\n                            class=\"bi bi-upload\" viewBox=\"0 0 16 16\">\r\n                            <path\r\n                                d=\"M.5 9.9a.5.5 0 0 1 .5.5v2.5a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-2.5a.5.5 0 0 1 1 0v2.5a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2v-2.5a.5.5 0 0 1 .5-.5z\" />\r\n                            <path\r\n                                d=\"M7.646 1.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1-.708.708L8.5 2.707V11.5a.5.5 0 0 1-1 0V2.707L5.354 4.854a.5.5 0 1 1-.708-.708l3-3z\" />\r\n                        </svg>\r\n                    </span>\r\n                </div>\r\n                <div class=\"custom-file\">\r\n                    <input type=\"file\" class=\"custom-file-input\" id=\"uploadFile\" accept=\"application/pdf\"\r\n                        (change)=\"onFileChange($event)\">\r\n                    <label class=\"custom-file-label\" id=\"_upload\" for=\"uploadFile\">Select a file</label>\r\n                </div>\r\n            </div>\r\n            <span class=\"text-info\"> *Accept only pdf files </span>\r\n        </div>\r\n\r\n        <!-- <div class=\"form-group\">\r\n            <label>Attachments</label>\r\n            <div></div>\r\n            <div class=\"custom-file\">\r\n                <input type=\"file\" class=\"form-control-file\" id=\"uploadFile\" accept=\"application/pdf\"\r\n                    (change)=\"onFileChange($event)\">\r\n            </div>\r\n        </div>\r\n         -->\r\n        <div class=\"form-group\">\r\n            <label for=\"exampleFormControlFile1\"><span class=\"text-danger\">*</span> Remarks</label>\r\n            <textarea class=\"form-control\" aria-label=\"With textarea\" [(ngModel)]=\"_remarks\"\r\n                style=\"margin-top: 0px; margin-bottom: 0px; height: 300px;\"></textarea>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"_remarks==''\"\r\n                (click)=\"OnUpdateClick()\">Submit</button>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"sideInfobar animate-right\" id=\"mysideInfobar\">\r\n    <div class=\"card\">\r\n        <div class=\"card-body\">\r\n            <div class=\"\">\r\n                <button class=\"float-right  btn-hover-danger btn btn-sm\" (click)=\"closeApproval()\"><i\r\n                        class=\"fas fa-times mr-0\"></i>\r\n                </button>\r\n                <h5 class=\"det-text pro-nm text-dark mb-1\">Project Actions</h5>\r\n                <h5 class=\"mb-1 kt-portlet__head-title text-blue\">{{requestComments}}</h5>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"py-3 px-4\">\r\n        <div class=\"proctdetls d-flex justify-content-between align-items-center\" id=\"ProjectDetails_Main\">\r\n            <div class=\"d-flex align-items-center\">\r\n                <div class=\"\"><span class=\"svg-icon svg-icon-2x text-primary mr-2\"><svg width=\"24\" height=\"24\"\r\n                            viewBox=\"0 0 40 40\" aria-hidden=\"true\" focusable=\"false\" fill=\"currentColor\">\r\n                            <path\r\n                                d=\"M24,2V1c0-0.6-0.4-1-1-1s-1,0.4-1,1v1H10V1c0-0.6-0.4-1-1-1S8,0.4,8,1v1C4.7,2,2,4.7,2,8v16c0,3.3,2.7,6,6,6h16c3.3,0,6-2.7,6-6V8C30,4.7,27.3,2,24,2z M8,4v1c0,0.6,0.4,1,1,1s1-0.4,1-1V4h12v1c0,0.6,0.4,1,1,1s1-0.4,1-1V4c2.2,0,4,1.8,4,4v2H4V8C4,5.8,5.8,4,8,4z M24,28H8c-2.2,0-4-1.8-4-4V12h24v12C28,26.2,26.2,28,24,28z\">\r\n                            </path>\r\n                        </svg></span></div>\r\n                <div class=\"action-content\">\r\n                    <h6 class=\"txtm-cus mb-1 pt-1\">Request Date</h6>\r\n                    <h5 class=\"mt-1 text-blue\">{{requestDate|date:'dd-MM-yyyy'}}</h5>\r\n                </div>\r\n            </div>\r\n            <div class=\"d-flex align-items-center\">\r\n                <div class=\"\"><span class=\"svg-icon svg-icon-2x text-info mr-2\"><svg _ngcontent-jrv-c350=\"\" width=\"24\"\r\n                            height=\"24\" viewBox=\"0 0 40 40\" aria-hidden=\"true\" focusable=\"false\" fill=\"currentColor\">\r\n                            <path _ngcontent-jrv-c350=\"\" d=\"M30.5,9h-7.8l-3.6-3.6C18.2,4.5,16.9,4,15.6,4h-5.1C6.9,4,4,6.9,4,10.5v19c0,3.6,2.9,6.5,6.5,6.5h19c3.6,0,6.5-2.9,6.5-6.5v-15C36,11.5,33.5,9,\r\n                    30.5,9z M33,29.5c0,1.9-1.6,3.5-3.5,3.5h-19C8.6,33,7,31.4,7,29.5v-19C7,8.6,8.6,7,10.5,7h5.1c0.5,0,1,0.2,1.4,0.6l4.1,4c0.3,0.3,0.7,0.4,1.1,0.4h8.4c1.4,\r\n                    0,2.5,1.1,2.5,2.5L33,29.5L33,29.5z M13.5,13L13.5,13c0.8,0,1.5,0.7,1.5,1.5v13c0,0.8-0.7,1.5-1.5,1.5l0,0c-0.8,0-1.5-0.7-1.5-1.5v-13C12,13.7,12.7,13,13.5,13z\r\n                     M25.5,18L25.5,18c0.8,0,1.5,0.7,1.5,1.5v8c0,0.8-0.7,1.5-1.5,1.5l0,0c-0.8,0-1.5-0.7-1.5-1.5v-8C24,18.7,24.7,18,25.5,18z M19.5,22L19.5,22c0.8,0,1.5,0.7,1.5,1\r\n                     .5v4c0,0.8-0.7,1.5-1.5,1.5l0,0c-0.8,0-1.5-0.7-1.5-1.5v-4C18,22.7,18.7,22,19.5,22z\"></path>\r\n                        </svg></span></div>\r\n                <div class=\"action-content\">\r\n                    <h6 class=\"txtm-cus mb-1 pt-1\">Request Type</h6>\r\n                    <h5 class=\"mt-1 text-blue\">{{requestType}}</h5>\r\n                </div>\r\n            </div>\r\n            <div class=\"d-flex align-items-center\" *ngIf=\"Status=='Deadline Extend Under Approval'\">\r\n                <div class=\"\"><span class=\"svg-icon svg-icon-2x text-dangr mr-2\"><svg width=\"24\" height=\"24\"\r\n                            viewBox=\"0 0 40 40\" aria-hidden=\"true\" focusable=\"false\" fill=\"currentColor\">\r\n                            <path\r\n                                d=\"M24,2V1c0-0.6-0.4-1-1-1s-1,0.4-1,1v1H10V1c0-0.6-0.4-1-1-1S8,0.4,8,1v1C4.7,2,2,4.7,2,8v16c0,3.3,2.7,6,6,6h16c3.3,0,6-2.7,6-6V8C30,4.7,27.3,2,24,2z M8,4v1c0,0.6,0.4,1,1,1s1-0.4,1-1V4h12v1c0,0.6,0.4,1,1,1s1-0.4,1-1V4c2.2,0,4,1.8,4,4v2H4V8C4,5.8,5.8,4,8,4z M24,28H8c-2.2,0-4-1.8-4-4V12h24v12C28,26.2,26.2,28,24,28z\">\r\n                            </path>\r\n                        </svg></span></div>\r\n                <div class=\"action-content\">\r\n                    <h6 class=\"txtm-cus mb-1 pt-1\">Request Deadline</h6>\r\n                    <h5 class=\"mt-1 text-blue\">{{requestDeadline|date:'dd-MM-yyyy'}}</h5>\r\n                    <!-- <h5 class=\"mt-1 text-blue\" *ngIf=\"requestDeadline==null\">{{requestDate|date:'dd-MM-yyyy'}}</h5> -->\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- accordian_section-->\r\n\r\n    <div class=\"px-4 m-auto\">\r\n\r\n\r\n        <div class=\"mt-3\">\r\n            <div class=\"card-title mb-0\">\r\n                <!-- <div class=\"card-title mb-0\" data-toggle=\"collapse\" data-target=\"#proj_act_acc\" aria-expanded=\"true\" aria-controls=\"proj_act_acc\"> -->\r\n                <div class=\"d-flex justify-content-between align-items-center\">\r\n                    <span class=\"det-text pro-nm pl-1 text-blue\">Project Actions</span>\r\n                    <i class=\"fas fa-chevron-up text-info1 mr-2 d-none\"></i>\r\n                </div>\r\n            </div>\r\n\r\n            <div id=\"proj_act_acc\" class=\"collapse show px-1\">\r\n\r\n                <div class=\"pro_act_div card-body px-0\">\r\n                    <div class=\"form-group mb-2\">\r\n                        <div>\r\n                            <div class=\"form-check-inline\">\r\n                                <label class=\"form-check-label lbl-suc btn-app\">\r\n                                    <input id=\"rdbButtons_0\" type=\"radio\" class=\"form-check-input\" name=\"rdbButtons\"\r\n                                        value=\"1\" checked=\"checked\" [(ngModel)]=\"selectedType\">Accept\r\n                                </label>\r\n                            </div>\r\n                            <div class=\"form-check-inline d-none\">\r\n                                <label class=\"form-check-label lbl-war btn-app\">\r\n                                    <input id=\"rdbButtons_1\" type=\"radio\" class=\"form-check-input\" name=\"rdbButtons\"\r\n                                        value=\"2\" [(ngModel)]=\"selectedType\">Hold\r\n                                </label>\r\n                            </div>\r\n                            <div class=\"form-check-inline\">\r\n                                <label class=\"form-check-label lbl-dan btn-app\">\r\n                                    <input id=\"rdbButtons_2\" type=\"radio\" class=\"form-check-input\" name=\"rdbButtons\"\r\n                                        value=\"3\" [(ngModel)]=\"selectedType\">Reject\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"d-flex flex-grow-1r\">\r\n                        <div class=\"col-md-12 checked-rad pl-1 pt-3\">\r\n                            <div class=\"appr-comts\">\r\n                                <div class=\"form-group\">\r\n                                    <label class=\"mb-2\">Enter your Comment(optional)</label>\r\n                                    <textarea class=\"form-control\"></textarea>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label class=\"mb-2\">Select Comment</label>\r\n                                    <select class=\"form-control\" [(ngModel)]=\"commentSelected\">\r\n                                        <option value=\"\"> -- select an option -- </option>\r\n                                        <option>Accepted</option>\r\n                                        <option *ngIf=\"Status == 'Under Approval'\">New project Accepted</option>\r\n                                        <option *ngIf=\"Status == 'Completion Under Approval'\">Project Complete Accepted\r\n                                        </option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"d-flex justify-content-end\">\r\n                                <button class=\"btn btn-sm btn-info mr-2\" (click)=\"submitApproval()\"\r\n                                    [disabled]=\"!commentSelected || !selectedType\">Submit</button>\r\n                                <button class=\"btn btn-sm btn-secondary\" (click)=\"closeApproval()\">Cancel</button>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"none-checked margin-auto\">\r\n                            <img src=\"assets/images/bg-no.jpg\" height=\"300px\" alt=\"select project actions\">\r\n                            <div class=\"text-black h5 mt-3\">To Manage Project , select Project Actions</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n\r\n<!-- Link memos Template -->\r\n\r\n<div id=\"LinkSideBar\" class=\"sideInfobar animate-right\">\r\n    <div class=\"px-4 pt-4 pb-1\">\r\n        <div class=\"offcanvas-header d-flex align-items-center justify-content-between pb-2\">\r\n            <h4 class=\"font-weight-bold m-0\"><i class=\"fa fa-link mr-1\"></i> Link Project</h4>\r\n            <a href=\"javascript:void(0)\" class=\"closebtn btn btn-xs btn-icon btn-hover-primary\"\r\n                (click)=\"closeLinkSideBar()\">\r\n                <i class=\"fa fa-times\"></i>\r\n            </a>\r\n        </div>\r\n    </div>\r\n    <ul class=\"kt-nav\">\r\n        <li class=\"kt-nav__head d-block\">\r\n            <p class=\"text-primary m-0\">\r\n                {{_displayProjName}}</p>\r\n            <div class=\"M_fsize\">\r\n                Total\r\n                <div class=\"badge badge-pill badge-outline-info\">\r\n                    {{_totalMemos}} </div>\r\n                Linked\r\n                <div class=\"badge badge-pill badge-outline-success\">\r\n                    {{_mappedMemos}} </div>\r\n            </div>\r\n            <div class=\"kt-nav__separator\"></div>\r\n        </li>\r\n        <li class=\"kt-nav__item px-4\">\r\n            <div class=\"d-flex input-group\">\r\n                <!-- Working... -->\r\n                <ng-multiselect-dropdown [placeholder]=\"'Select Memo' \"\r\n                    class=\"mutlidropdown-set mutlidropdown-full mr-1\" [settings]=\"dropdownSettings_Memo\"\r\n                    [data]=\"Memos_List\" [(ngModel)]=\"ngDropdwonMemo\" (onSelect)=\"Memo_Select(ngDropdwonMemo)\"\r\n                    (onDeSelect)=\"Memo_Deselect()\" style=\"flex: 3;\">\r\n                </ng-multiselect-dropdown>\r\n                <!-- <div class=\"input-group-append\"> -->\r\n                <button class=\"btn btn-label-primary btn-upper btn-sm btn-bold input-group-text\"\r\n                    (click)=\"_AddLink()\">Link</button>\r\n                <!-- </div> -->\r\n\r\n            </div>\r\n        </li>\r\n        <li class=\"kt-nav__foot\"></li>\r\n    </ul>\r\n</div>\r\n\r\n\r\n<div id=\"darsidebar\" class=\"sideInfobar animate-right\">\r\n    <div class=\"px-4 pt-4 pb-1\">\r\n        <div class=\"offcanvas-header d-flex align-items-center justify-content-between pb-2\">\r\n            <h4 class=\"font-weight-bold m-0\"><i class=\"fa fa-link mr-1\"></i>Timeline Submission</h4>\r\n            <a href=\"javascript:void(0)\" class=\"closebtn btn btn-xs btn-icon btn-hover-primary\" (click)=\"closedarBar()\">\r\n                <i class=\"fa fa-times\"></i>\r\n            </a>\r\n        </div>\r\n    </div>\r\n    <div class=\"px-4 pt-2\">\r\n\r\n        <div>\r\n            <div class=\"form-group text-dark-50 w-75px flex-grow-1 brdng-0\"\r\n                *ngIf=\"ProjectBlockName != 'Standard Tasks' && ProjectBlockName != 'To do List' && inProcessCount!=0 \">\r\n                <label>Action <span class=\"text-danger\">*</span></label>\r\n                <ng-select required #action=\"ngModel\" name=\"action\" placeholder=\"Select Action\" id=\"actinName\"\r\n                    [(ngModel)]=\"actionCode\" (click)=\"getResponsibleActions()\">\r\n                    <ng-option [value]=\"item.Project_Code\" *ngFor=\"let item of darArr\">\r\n                        {{item.Project_Name}}\r\n                    </ng-option>\r\n                </ng-select>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label>Work Description<span class=\"text-danger\">*</span></label>\r\n                <textarea type=\"text\" name=\"work\" class=\"form-control h-100px\" [(ngModel)]=\"workdes\"></textarea>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                <label>Date<span class=\"text-danger\">*</span></label>\r\n                <!-- <input class=\"form-control\" name=\"starttim\" #startdate=\"ngModel\" type=\"time\" value=\"13:45:00\" id=\"time-start\" [(ngModel)]=\"starttime\"> -->\r\n                <!-- <input class=\"form-control\" name=\"dardate\" type=\"date\" id=\"minDate\" [(ngModel)]=\"current_Date\"> -->\r\n                <div class=\"input-group\">\r\n                    <input matInput (dateChange)=\"orgValueChange($event)\" [value]=\"dateF.value\"\r\n                        [matDatepicker]=\"picker1\" id=\"d-date\" required (click)=\"picker1.open()\"\r\n                        [min]=\"disablePreviousDate\" [max]=\"todayDate\" placeholder=\"Select Date\" class=\"form-control\"\r\n                        name=\"date\">\r\n                    <div class=\"input-group-text p-0\">\r\n                        <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\r\n                        <mat-datepicker #picker1></mat-datepicker>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"d-flex gap-1\">\r\n                <div class=\"form-group w-100\">\r\n                    <label>Start Time<span class=\"text-danger\">*</span></label>\r\n                    <ng-select name=\"time\" placeholder=\"Select Start Time\" id=\"time-start\" (click)=\"getDarTime()\"\r\n                        [(ngModel)]=\"starttime\">\r\n                        <ng-option [value]=\"item\" *ngFor=\"let item of timedata; let i=index\"\r\n                            [disabled]=\"item!=lastEndtime && bol==false\">\r\n                            <a>{{item}}</a>\r\n                            <!-- <a *ngIf=\"i==10 || i==11\">{{item}}--&nbsp;&nbsp;(Lunch Break)</a> ok -->\r\n                        </ng-option>\r\n                    </ng-select>\r\n                </div>\r\n\r\n                <div class=\"form-group w-100\">\r\n                    <label>End Time<span class=\"text-danger\">*</span></label>\r\n                    <ng-select name=\"endtim\" #end=\"ngModel\" placeholder=\"Select End Time\" id=\"time-end\"\r\n                        (click)=\"getDarTime()\" [(ngModel)]=\"endtime\">\r\n                        <ng-option [value]=\"item\" *ngFor=\"let item of timedata; let i=index\"\r\n                            [disabled]=\"item<=lastEndtime\">\r\n                            <a>{{item}}</a>\r\n                            <!-- <a *ngIf=\"i==10 || i==11\">{{item}}--&nbsp;&nbsp;(Lunch Break)</a> -->\r\n                        </ng-option>\r\n                    </ng-select>\r\n                    <span style=\"color:red\" id=\"err1\" *ngIf=\"(endtime < starttime)\">End time cannot be less than Start\r\n                        time!!</span>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                <button type=\"submit\" class=\"btn btn-primary\" (click)=\"submitDar()\" *ngIf=\"coresecondary==true\"\r\n                    [disabled]=\"!actionCode || !workdes || !starttime || !endtime || endtime < starttime\">\r\n                    Submit</button>\r\n                <button type=\"submit\" class=\"btn btn-primary\" (click)=\"submitDar()\" *ngIf=\"coresecondary==false\"\r\n                    [disabled]=\" !workdes  || !starttime || !endtime || endtime < starttime\">\r\n                    Submit</button>\r\n                <button type=\"reset\" class=\"btn btn-secondary ml-2\">Reset</button>\r\n                <button type=\"submit\" class=\"btn btn-secondary ml-2\" (click)=\"closedarBar()\">Cancel</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit,ViewChild,ElementRef  } from '@angular/core';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { SubTaskDTO } from 'src/app/_Models/sub-task-dto';\r\nimport { UserDetailsDTO } from 'src/app/_Models/user-details-dto';\r\nimport { NotificationService } from 'src/app/_Services/notification.service';\r\nimport { ProjectTypeService } from 'src/app/_Services/project-type.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient, HttpEventType } from '@angular/common/http';\r\nimport { DateAdapter } from '@angular/material/core';\r\n//import { CompletedProjectsDTO } from 'src/app/_Models/completed-projects-dto';\r\nimport { DropdownDTO } from 'src/app/_Models/dropdown-dto';\r\nimport { BsServiceService } from 'src/app/_Services/bs-service.service'\r\nimport { ConfirmDialogComponent } from 'src/app/Shared/components/confirm-dialog/confirm-dialog.component';\r\n//import { ProjectDetailsDTO } from 'src/app/_Models/project-details-dto';\r\n//import { ContentObserver } from '@angular/cdk/observers';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ResizeButton, string } from '@amcharts/amcharts4/core';\r\nimport Swal from 'sweetalert2';\r\nimport { async } from 'rxjs/internal/scheduler/async';\r\n\r\n@Component({\r\n  selector: 'app-to-do-projects',\r\n  templateUrl: './to-do-projects.component.html',\r\n  styleUrls: ['./to-do-projects.component.css']\r\n})\r\n\r\nexport class ToDoProjectsComponent implements OnInit {\r\n  campaignOne: FormGroup;\r\n  campaignTwo: FormGroup;\r\n  _objDropdownDTO: DropdownDTO;\r\n \r\n\r\n\r\n  constructor(public service: ProjectTypeService,\r\n    private notifyService: NotificationService,\r\n    private router: Router,\r\n    private http: HttpClient,\r\n    private dialog: MatDialog,\r\n    private dateAdapter: DateAdapter<Date>,\r\n    private BsService: BsServiceService) {\r\n    this._objDropdownDTO = new DropdownDTO();\r\n    this.dateAdapter.setLocale('en-GB'); //dd/MM/yyyy\r\n    const today = new Date();\r\n    const month = today.getMonth();\r\n    const year = today.getFullYear();\r\n    this.campaignOne = new FormGroup({\r\n      start: new FormControl,\r\n      end: new FormControl\r\n    });\r\n    this.ObjUserDetails = new UserDetailsDTO();\r\n    this.ObjSubTaskDTO = new SubTaskDTO();\r\n    this.disablePreviousDate.setDate(this.disablePreviousDate.getDate());\r\n    this.disableAfterStartDate.setDate(this.disablePreviousDate.getDate());\r\n  }\r\n\r\n  // @Input() max: any;\r\n  // @Input() min: any;\r\n  minDate: any;\r\n  maxDate: any;\r\n  disablePreviousDate = new Date();\r\n  disableAfterStartDate = new Date();\r\n  edited: boolean = false;\r\n\r\n  ngOnInit() {\r\n    this.CurrentUser_ID = localStorage.getItem('EmpNo');\r\n    //this._ProjectName = \"Project Name\"\r\n    this.GetProjectsByUserName();\r\n    this.applyFilters();\r\n   \r\n    //uploaded file name\r\n    $(document).on('change', '.custom-file-input', function (event) {\r\n      $(this).next('.custom-file-label').html(event.target.files[0].name);\r\n    });\r\n\r\n    // this.service.SubTaskDetailsService_ToDo_Page(this._ProjectCode, this.Comp_No).subscribe(\r\n    //   (data) => {\r\n\r\n    //     this.Subtask_List = JSON.parse(data[0]['SubtaskDetails_Json']);\r\n    //     this.CompletedList = JSON.parse(data[0]['CompletedTasks_Json']);\r\n\r\n    //     if(this.Subtask_List == ''){\r\n    //       this._subtaskDetails= false;\r\n    //     }\r\n    //     if(this.CompletedList == ''){\r\n    //       this._CompletedDetails=false;\r\n    //     }\r\n    //     if(this.Subtask_List == '' && this.CompletedList ==''){\r\n    //       this._projectDetails=false;\r\n    //     }\r\n    //   });\r\n  }\r\n\r\n  _ProjectDataList: any;\r\n  ActualDataList: any;\r\n  un_FilteredProjects: any\r\n  CurrentPageNo: number = 1;\r\n  _CurrentpageRecords: number = 30;\r\n  _totalProjectsCount: any;\r\n  searchText: string;\r\n  ObjUserDetails: UserDetailsDTO;\r\n  CurrentUser_ID: string;\r\n  SubmissionType: string;\r\n  //Racis Properties\r\n  Owner: string; EmpNo_Own: string;\r\n  Resp: string; EmpNo_Res: string;\r\n  Autho: string; EmpNo_Autho: string;\r\n  Informer: string; EmpNo_Info: string;\r\n  Coor: string; EmpNo_Coor: string;\r\n  Support: string; EmpNo_Supp: string;\r\n  Comp_No: string; ProjectBlock: string;\r\n\r\n  GetProjectsByUserName() {\r\n    this.ObjUserDetails.PageNumber = this.CurrentPageNo;\r\n    this.ObjUserDetails.PageSize = 30;\r\n    this.service.GetProjectsByUserName_Service_ForProjectsTODO(this.ObjUserDetails).subscribe(data => {\r\n      this._totalProjectsCount = data[0]['ProjectsCount_Json'];\r\n      // console.log(this._totalProjectsCount);\r\n      this._ProjectDataList = JSON.parse(data[0]['Projects_Json']);      \r\n      if (this._ProjectDataList) {\r\n        this._CurrentpageRecords = this._ProjectDataList.length;\r\n      }\r\n    });\r\n  }\r\n\r\n  _ProjectName: string;\r\n  _ProjectCode: string;\r\n  Proj_Desc: string;\r\n  PstDT: string;\r\n  PEndDT: string;\r\n  Proj_ExecBlck: string;\r\n  Project_Status: string;\r\n  lengthOfRACIS: number;\r\n  onradioclick: boolean = false;\r\n  titles: boolean = true;\r\n  addbutton_hidden: boolean = true;\r\n  _subtaskDetails: boolean = true;\r\n  _projectDetails: boolean = true;\r\n  _CompletedDetails: boolean = true;\r\n  _EmployeeListForDropdown = [];\r\n  _Projecttest=[];\r\n  Proj_checkbox: boolean = true;\r\n  _topbar: boolean = true;\r\n  paragraph_msg: boolean = false;\r\n  activeClass: boolean = false;\r\n  dropdownSettings_EMP = {};\r\n  Checkbox_checked: any;\r\n  projectCost: any;\r\n  Duration: any;\r\n  standardDuration:any;\r\n  Client_Name: string;\r\n  Remarks: string = \"\";\r\n  Remarkss: string = \"\";\r\n  CD: string = \"\";\r\n  ReportType: string;\r\n  Attachments: string = \"\";\r\n  FileName: string = null;\r\n  Pid: number;\r\n\r\n  OnProjectClick(Pcode, Pname, Owner, Res, Autho, Informer, Coor, Supp, EmpNo_Own, EmpNo_Res, EmpNo_Autho,\r\n    EmpNo_Coor, EmpNo_Info, EmpNo_Supp, Comp_No, proj_Block, PDesc, PStDT, PExecBlck, PendDT, Pstatus, checked,\r\n    PCost, duration, standardduration, Client_Name, Remarks, Remarkss, CD, ReportType, Attachments, pid, SourceFile, SubmissionType) {\r\n\r\n    this.BsService.SetNewPojectCode(Pcode);\r\n    this.BsService.SetNewPojectName(Pname);\r\n    this.SubmissionType = SubmissionType;\r\n    this.Pid = pid;\r\n    this.activeClass = true;\r\n    this._topbar = false;\r\n    this.paragraph_msg = true;\r\n    this.Proj_checkbox = false;\r\n    this.addbutton_hidden = false;\r\n    this.onradioclick = true;\r\n    this._ProjectCode = Pcode;\r\n    this._MasterCode = Pcode;\r\n    this._ProjectName = Pname;\r\n    this.Owner = Owner; this.EmpNo_Own = EmpNo_Own;\r\n    this.Resp = Res; this.EmpNo_Res = EmpNo_Res;\r\n    this.Autho = Autho; this.EmpNo_Autho = EmpNo_Autho;\r\n    this.Informer = Informer; this.EmpNo_Info = EmpNo_Info;\r\n    this.Coor = Coor; this.EmpNo_Coor = EmpNo_Coor;\r\n    this.Support = Supp; this.EmpNo_Supp = EmpNo_Supp;\r\n    this.Comp_No = Comp_No;\r\n    this.ProjectBlock = proj_Block;\r\n    this.Proj_ExecBlck = PExecBlck;\r\n    this.Proj_Desc = PDesc;\r\n    this.PstDT = PStDT;\r\n    this.PEndDT = PendDT;\r\n    this.Project_Status = Pstatus;\r\n    this.Checkbox_checked = checked;\r\n    this.projectCost = PCost;\r\n    this.Duration = duration;\r\n    this.standardDuration = standardduration;\r\n    this.Client_Name = Client_Name;\r\n    this.Remarks = Remarks;\r\n    this.Remarkss = Remarkss;\r\n    this.CD = CD;\r\n    this.ReportType = ReportType;\r\n    this.Attachments = Attachments;\r\n    this.FileName = SourceFile;\r\n    this.GetSubtask_Details();\r\n    //console.log(\"Max-Proj Code--->\",this.Max_ProjectCode);\r\n    this.titles = false;\r\n    this.minDate = PStDT; //minDate is 1st Jan 2019\r\n    this.maxDate = PendDT; //maxDate is 1st Jan 2020\r\n\r\n    if (this.Proj_ExecBlck == \"Core Tasks\" || this.Proj_ExecBlck == \"Secondary Tasks\") {\r\n      this.addbutton_hidden = false;\r\n    }\r\n    else {\r\n      this.addbutton_hidden = true;\r\n    }\r\n    // if(this.Project_Status == 'Completion Under Approval' || this.Project_Status == 'Under Approval'){\r\n    //   this.addbutton_hidden = true;\r\n    // }\r\n    this.closeInfo();\r\n  }\r\n\r\n  async CallOnSubmitAction() {\r\n   \r\n  let a= await this.GetSubtask_Details();\r\n  let b =await this.GetProjectsByUserName();\r\n  }\r\n//  CallOnSubmitAction() {\r\n//     //  console.log('A');\r\n//   this.GetSubtask_Details();\r\n//   // this.OnProjectClick(this.Pcode,this.Pname, this.Owner, this.Res, this.Autho, this.Informer, this.Coor, this.Supp, this.EmpNo_Own, this.EmpNo_Res, this.EmpNo_Autho,\r\n//   //   this.EmpNo_Coor, this.EmpNo_Info, this.EmpNo_Supp, this.Comp_No, this.proj_Block, this.PDesc, this.PStDT, this.PExecBlck, this.PendDT, this.Pstatus, this.checked,\r\n//   //   this.PCost, this.duration, this.standardduration, this.Client_Name, this.Remarks, this.Remarkss, this.CD, this.ReportType, this.Attachments, this.pid, this.SourceFile, this.SubmissionType)\r\n//      this.GetProjectsByUserName();\r\n//     // this.getDropdownsDataFromDB();\r\n//   }\r\n\r\n  ProjectInfoDetails() {\r\n    // var myWindow = window.open(myurl);\r\n    // myWindow.focus();\r\n    //this.router.navigate([myurl,this._ProjectCode]);\r\n    this.router.navigate([\"./backend/ToDoProjects/projectinfo/\", this._ProjectCode]);\r\n    document.getElementById(\"mysideInfobar\").classList.add(\"kt-quick-panel--on\");\r\n    document.getElementById(\"rightbar-overlay\").style.display = \"block\";\r\n    //this.router.navigate([\"../backend/ToDoProjects/projectinfo\", this._ProjectCode]);\r\n    // document.getElementById(\"rightbar-overlay\").style.display = \"block\";\r\n    document.getElementById(\"todo\").classList.add(\"position-fixed\");\r\n  }\r\n\r\n  selected_Employee = [];\r\n  selectedEmpNo: string = null;\r\n\r\n  EmployeeOnSelect(obj) {\r\n    this.selectedEmpNo = obj['Emp_No'];\r\n  }\r\n\r\n  EmployeeOnDeselect(obj) {\r\n    this.selectedEmpNo = null;\r\n  }\r\n\r\n  NoSubtaskFound: string;\r\n  Subtask_List: any;\r\n  Project_Authority: string;\r\n  Maximum_ProjectCodeFrom_DB: string;\r\n  SplittedProject_Number: number;\r\n\r\n  GetAllEmployeesForAssignDropdown() {\r\n    let obj: any = {\r\n      pagenumber: 1,\r\n      Emp_No: this.CurrentUser_ID,\r\n      Mode: 'AssignedTask'\r\n    }\r\n    this.service._GetCompletedProjects(obj).subscribe(\r\n      (data) => {\r\n        this._EmployeeListForDropdown = JSON.parse(data[0]['EmployeeList']);\r\n        //console.log(this.EmployeeList);\r\n        this.dropdownSettings_EMP = {\r\n          searchAutofocus: true,\r\n          singleSelection: true,\r\n          idField: 'Emp_No',\r\n          textField: 'DisplayName',\r\n          itemsShowLimit: 2,\r\n          allowSearchFilter: true,\r\n          closeDropDownOnSelection: true,\r\n        };\r\n      });\r\n  }\r\n\r\n  totalSubtaskHours:number;\r\n \r\n  \r\n\r\n GetSubtask_Details() {\r\n     \r\n   this.service.SubTaskDetailsService_ToDo_Page(this._ProjectCode, this.Comp_No, null).subscribe(\r\n       (data) => {\r\n        \r\n        this._EmployeeListForDropdown = JSON.parse(data[0]['RacisEmployee_Json']);\r\n        if (data[0]['SubtaskDetails_Json'] == ' ') {\r\n          this._subtaskDetails = true;\r\n          this._projectDetails = false;\r\n        }\r\n        else {\r\n          this.Subtask_List = JSON.parse(data[0]['SubtaskDetails_Json']);\r\n          this.CompletedList = JSON.parse(data[0]['CompletedTasks_Json']);\r\n          this.totalSubtaskHours = (data[0]['SubtaskHours']);\r\n          this._subtaskDetails = false;\r\n          this._projectDetails = true;     \r\n          // console.log(\"To Do Completed---->\", this.CompletedList);\r\n          //  console.log(\"to Incomplete---->\", this.Subtask_List);\r\n        }\r\n        if (data[0]['CompletedTasks_Json'] == ' ') {\r\n          this._CompletedDetails = true;\r\n        }\r\n        else {\r\n          this.CompletedList = JSON.parse(data[0]['CompletedTasks_Json']);\r\n          // console.log(\"To Do Completed---->\", this.CompletedList);\r\n          this._CompletedDetails = false;\r\n        }\r\n       \r\n        this._Projecttest=JSON.parse(data[0][\"ProjectInfo\"]);\r\n       \r\n         this._ProjectCode = this._Projecttest[0].Project_Code;\r\n         this._MasterCode = this._Projecttest[0].Project_Code;\r\n         this._ProjectName = this._Projecttest[0].Project_Name;\r\n         this.Proj_Desc = this._Projecttest[0].Project_Description;\r\n         this.Proj_ExecBlck =this._Projecttest[0].Exec_BlockName;\r\n         this.Project_Status=this._Projecttest[0].Status;\r\n         this.PstDT = this._Projecttest[0].DPG;\r\n         this.PEndDT = this._Projecttest[0].DeadLine;\r\n         this.projectCost=this._Projecttest[0].Project_Cost;\r\n         this.Duration=this._Projecttest[0].Duration;\r\n         this.Resp=this._Projecttest[0].Team_Res;\r\n         this.Client_Name=this._Projecttest[0].Client_Name;\r\n        \r\n        // console.log(this._projectDetails,this._subtaskDetails,this._CompletedDetails,\"Testing complete\");\r\n        // console.log(this.Subtask_List,this.CompletedList,\"Same\");\r\n      });\r\n  }\r\n\r\n  _Subtaskname: string;\r\n  Block3: boolean = true;\r\n  Sub_StartDT: Date;\r\n  Sub_EndDT: Date;\r\n  Sub_Autho: string;\r\n  Sub_Status: string;\r\n  Sub_Desc:string;\r\n\r\n  OnSubtaskClick(item) {\r\n    this.Sub_ProjectCode = item.Project_Code;\r\n    this.Sub_Desc=item.Project_Description;\r\n    this._Subtaskname = item.Project_Name;\r\n    this.Sub_StartDT = item.StartDate;\r\n    this.Sub_EndDT = item.SubProject_DeadLine;\r\n    this.Sub_Autho = item.Subtask_Autho;\r\n    this.Sub_Status = item.SubProject_Status;\r\n    \r\n    document.getElementById(\"mysideInfobar_Update\").classList.add(\"kt-quick-panel--on\");\r\n    document.getElementById(\"rightbar-overlay\").style.display = \"block\";\r\n   this.Clear_Feilds(); \r\n    \r\n    // document\r\n    // this.Block3 = false;\r\n  }\r\n\r\n  clicks: number = 0;\r\n  A2Z: boolean = true;\r\n  Z2A: boolean = false;\r\n\r\n  _SortProjectList() {\r\n    this.clicks += 1;\r\n    if (this.clicks != 1) {\r\n      this.A2Z = true;\r\n      this.Z2A = false;\r\n      this._ProjectDataList = this._ProjectDataList.sort((a, b) => (a.Project_Code > b.Project_Code) ? -1 : 1);\r\n      this.clicks = 0;\r\n    } else {\r\n      this.A2Z = false;\r\n      this.Z2A = true;\r\n      this._ProjectDataList = this._ProjectDataList.sort((a, b) => (a.Project_Code > b.Project_Code) ? 1 : -1);\r\n    }\r\n  }\r\n\r\n  AddTask: boolean = false;\r\n  MatInput: boolean = true;\r\n  ButtonAdd: boolean = true;\r\n  TaskName: string = \"\";\r\n\r\n  OnAddTaskClick() {\r\n    this.router.navigate([\"./backend/ToDoProjects/ActionToProject/1\"]);\r\n    document.getElementById(\"mysideInfobar\").classList.add(\"kt-quick-panel--on\");\r\n    // document.getElementById(\"mysideInfobar_NewSubtask\").style.width = \"60%\";\r\n    // document.getElementById(\"mysideInfobar_Update\").style.width = \"0px\";\r\n     document.getElementById(\"rightbar-overlay\").style.display = \"block\";\r\n    document.getElementById(\"todo\").classList.add(\"position-fixed\");\r\n    // this.MatInput = false;\r\n    // this.ButtonAdd = false;\r\n    // this.GetAllEmployeesForAssignDropdown();\r\n  }\r\n\r\n  // OnADDClick() {\r\n  //   this.AddTask = false;\r\n  //   this.MatInput = true;\r\n  //   this.ButtonAdd = true;\r\n  // }\r\n\r\n  _inputAttachments: string;\r\n  _inputAttachments2: string;\r\n  _remarks: string = \"\";\r\n  _upload: File;\r\n  Sub_ProjectCode: string;\r\n  _MasterCode: string;\r\n  ObjSubTaskDTO: SubTaskDTO;\r\n  CompletedList: any;\r\n  FolderPath = \"D:/Application/creativeplanner_angular/creativeplanner_angular/src/assets/Project_Completion\";\r\n  fileToUpload: File | null = null;\r\n  _IsPdf: boolean;\r\n  src: any;\r\n\r\n  LoadDocument(url: string) {\r\n    // (<HTMLInputElement>document.getElementById(\"documentPreview\")).style.display=\"block\";\r\n    // url = \"http://208.109.13.37/dmsapi/DataOutPut/react-handbook.pdf\";\r\n    // contenttype=\".pdf\";\r\n    // if (contenttype == \".PDF\" || contenttype == \".pdf\" || contenttype == \"application/pdf\") {\r\n    //   this._IsPdf = true;\r\n    // }\r\n    // else if (contenttype == \".jpg\" || contenttype == \".png\" || contenttype == \".PNG\" || contenttype == \".jpeg\") {\r\n    //   this._IsPdf = false;\r\n    // }\r\n\r\n    this.src = url;\r\n    var myWindow = window.open(url);\r\n    myWindow.focus();\r\n    //this.cd.detectChanges();\r\n    //$('#documentPreview').modal('toggle');\r\n  }\r\n\r\n  Sub_ProjectName: string = \"\";\r\n  _Description: string;\r\n  _EndDate: Date = null;\r\n  _StartDate: Date = null;\r\n  _Message: string;\r\n  _validname: string;\r\n\r\n  selectedFile: any = null;\r\n  onFileChange(e) {\r\n    this.selectedFile = <File>e.target.files[0];\r\n    console.log(\"--------------->\",this.selectedFile)\r\n  }\r\n\r\n  //Subtask Creation//\r\n  // OnSubmit() {\r\n  //   if (this.Sub_ProjectName == \"\" || this._StartDate == null || this._EndDate == null) {\r\n  //     this.notifyService.showInfo(\"\", 'Star(*) mark feilds required ')\r\n  //   }\r\n  //   else {\r\n  //     this.service._GetNewProjectCode(this.ObjSubTaskDTO).subscribe(data => {\r\n  //       console.log(\"-ProjectCode Generated------->\", data);\r\n  //       this.ObjSubTaskDTO.MasterCode = this._MasterCode;\r\n  //       this.ObjSubTaskDTO.SubProject_Name = this.Sub_ProjectName;\r\n  //       this.ObjSubTaskDTO.SubtaskDescription = this._Description;\r\n  //       this.ObjSubTaskDTO.ProjectBlock = this.ProjectBlock;\r\n  //       this.ObjSubTaskDTO.StartDate = this._StartDate;\r\n  //       this.ObjSubTaskDTO.SubProject_DeadLine = this._EndDate;\r\n  //       var Difference_In_Time = this._StartDate.getTime() - this._EndDate.getTime();\r\n  //       var Difference_In_Days = Difference_In_Time / (1000 * 3600 * 24);\r\n  //       this.ObjSubTaskDTO.Duration = (-Difference_In_Days);\r\n  //       this.ObjSubTaskDTO.Duration = this.ObjSubTaskDTO.Duration * 8 / 1;\r\n  //       this.ObjSubTaskDTO.Emp_No = this.CurrentUser_ID;\r\n  //       this.ObjSubTaskDTO.Comp_No = this.Comp_No;\r\n  //       this.ObjSubTaskDTO.Team_Res = this.EmpNo_Res;\r\n  //       this.ObjSubTaskDTO.Team_Autho = this.EmpNo_Autho;\r\n  //       this.ObjSubTaskDTO.Team_Coor = this.EmpNo_Coor;\r\n  //       this.ObjSubTaskDTO.Team_Informer = this.EmpNo_Info;\r\n  //       this.ObjSubTaskDTO.Team_Support = this.EmpNo_Supp;\r\n  //       this.ObjSubTaskDTO.Project_Owner = this.EmpNo_Own;\r\n  //       this.ObjSubTaskDTO.AssignTo = this.selectedEmpNo;\r\n  //       this.ObjSubTaskDTO.Remarks = this._remarks;\r\n  //       this.ObjSubTaskDTO.Attachments = this._inputAttachments;\r\n  //       this.service._InsertNewSubtask(this.ObjSubTaskDTO).subscribe(data => {\r\n  //         this.GetSubtask_Details();\r\n  //         this.notifyService.showInfo(\"Created Successfully\", \"Action\")\r\n  //       });\r\n  //     });\r\n  //   }\r\n  // }\r\n\r\n  Subproj_Code: string;\r\n\r\n  closeInfo() {\r\n    // debugger\r\n  \r\n    document.getElementById(\"mysideInfobar\").classList.remove(\"kt-quick-panel--on\");\r\n    document.getElementById(\"rightbar-overlay\").style.display = \"none\";\r\n    document.getElementById(\"mysideInfobar_Update\").classList.remove(\"kt-quick-panel--on\");\r\n    document.getElementById(\"mysideInfobar_ProjectsUpdate\").classList.remove(\"kt-quick-panel--on\");\r\n     document.getElementById(\"todo\").classList.remove(\"position-fixed\");\r\n     $('#uploadFile').val('');\r\n     $('#_upload').html('Select a file');\r\n    // document.getElementById(\"rightbar-overlay\").style.display = \"none\";\r\n    this.Clear_Feilds();\r\n   \r\n    \r\n  }\r\n\r\n  Clear_Feilds() {\r\n    this.Sub_ProjectName = \"\";\r\n    this._Description = \"\";\r\n    this._StartDate = null;\r\n    this._EndDate = null;\r\n    this._remarks = \"\";\r\n    this._inputAttachments = null;\r\n    this._inputAttachments2 = null;\r\n    this.selectedEmpNo = '';\r\n    this.selected_Employee = [];\r\n    $('#uploadFile').val('');\r\n    $('#_upload').html('Select a file'); \r\n    $('#_pdf').val('');\r\n    $('#upload').html('Select a file'); \r\n    \r\n    }\r\n\r\n  closeInfoProject() {\r\n    this.OnClickCheckboxProjectUpdate(0);\r\n    // document.getElementById(\"todo\").classList.remove(\"position-fixed\");\r\n    this.Clear_Feilds();\r\n  }\r\n\r\n  // SearchbyText() {\r\n  //   this.CurrentPageNo = 1;\r\n  //   this.applyFilters();\r\n  // }\r\n\r\n  search(event) {\r\n    this.SearchbyText();\r\n    // console.log(\"Searh Text---->\", event);\r\n  }\r\n\r\n  test() {\r\n    const datepipe: DatePipe = new DatePipe('en-US')\r\n    let formattedDate = datepipe.transform(this._StartDate, 'DD-MMM-YYYY HH:mm:ss')\r\n    // console.log(\"Noremal\", this._StartDate)\r\n    // this._StartDate = (moment(this._StartDate)).format('DD-MMM-YYYY HH:mm:ss')\r\n    // console.log(\"after Convert--->\", formattedDate)\r\n    //console.log(this._EndDate = (moment(this._EndDate)).format('DD-MMM-YYYY HH:mm:ss'))\r\n  }\r\n\r\n  // openInfo(pcode, pName) {\r\n  //   document.getElementById(\"mysideInfobar\").style.width = \"400px\";\r\n  //   this.router.navigate([\"../backend/ToDoProjects/projectinfo\", pcode]);\r\n  // }\r\n\r\n  OnClickCheckboxProjectUpdate(value) {\r\n    this.service.SubTaskStatusCheck(this._ProjectCode).subscribe(\r\n      (data) => {\r\n        if (data['Message'] == 1) {\r\n          Swal.fire({\r\n            title: 'Unable To Complete This Project !!',\r\n            text: 'SubTask Status Are In Rejected or Pending ?',\r\n            // icon: 'warning',\r\n            showCancelButton: true       \r\n          });\r\n        }\r\n        else {\r\n          this.Checkbox_checked = value;\r\n          if (value == true) {\r\n            document.getElementById(\"mysideInfobar_ProjectsUpdate\").classList.add(\"kt-quick-panel--on\");\r\n            document.getElementById(\"rightbar-overlay\").style.display = \"block\";\r\n          }\r\n          else {\r\n            document.getElementById(\"mysideInfobar_ProjectsUpdate\").classList.remove(\"kt-quick-panel--on\");\r\n            document.getElementById(\"rightbar-overlay\").style.display = \"none\";\r\n          }\r\n          document.getElementById(\"mysideInfobar\").classList.remove(\"kt-quick-panel--on\");\r\n          document.getElementById(\"mysideInfobar_Update\").classList.remove(\"kt-quick-panel--on\");\r\n        }\r\n      });\r\n  }\r\n\r\n  //Project Update\r\n  progress: any;\r\n\r\n  updateMainProject() {\r\n    const fd = new FormData();\r\n    fd.append(\"Project_Code\", this._MasterCode);\r\n    fd.append(\"Team_Autho\", this.EmpNo_Autho);\r\n    fd.append(\"Remarks\", this._remarks);\r\n    fd.append(\"Projectblock\", this.ProjectBlock);\r\n    fd.append('file', this.selectedFile);\r\n    this.service._fileuploadService(fd).\r\n      subscribe(event => {\r\n        //console.log(event);\r\n        if (event.type == HttpEventType.UploadProgress) {\r\n          this.progress = Math.round(event.loaded / event.total * 100);\r\n          this.notifyService.showSuccess(\"\", \"File uploaded successfully\");\r\n          this.notifyService.showInfo(\"\", \"Project Updated\");\r\n        }\r\n        else if (event.type === HttpEventType.Response) {\r\n          //console.log(event);\r\n        }\r\n        this.closeInfo();\r\n        this.GetProjectsByUserName();\r\n        this.GetSubtask_Details();\r\n       \r\n        //this.getDropdownsDataFromDB();\r\n        // this.OnProjectClick();\r\n      });\r\n  }\r\n\r\n  // @ViewChild('uploadFile')\r\n  // myInput: ElementRef;\r\n\r\n  \r\n  //Subtask Update \r\n  OnUpdateSubtask() {\r\n    if (this._remarks == \"\") {\r\n      this.notifyService.showInfo(\"Remarks Cannot be Empty\", '');\r\n    }\r\n    else {\r\n      const fd = new FormData();\r\n      fd.append(\"Project_Code\", this.Sub_ProjectCode);\r\n      fd.append(\"Master_Code\", this._MasterCode);\r\n      fd.append(\"Team_Autho\", this.EmpNo_Autho);\r\n      fd.append(\"Projectblock\", this.ProjectBlock);\r\n      fd.append(\"Remarks\", this._remarks);\r\n      fd.append('file', this.selectedFile);\r\n      // this.ObjSubTaskDTO.Formdata = fd;\r\n      // this.ObjSubTaskDTO.MasterCode = this._MasterCode;\r\n      // this.ObjSubTaskDTO.SubTask_ProjectCode = this.Sub_ProjectCode;\r\n      // this.ObjSubTaskDTO.Attachments = this._inputAttachments;\r\n      // this.ObjSubTaskDTO.Remarks = this._remarks;\r\n      this.service._UpdateSubtaskByProjectCode(fd)\r\n        .subscribe(data => {\r\n          // debugger\r\n            this._remarks = \"\";\r\n          this._inputAttachments = \"\";\r\n          \r\n       \r\n          //this.CompletedList = JSON.parse(data[0]['CompletedTasks_Json']);\r\n          this.GetSubtask_Details();\r\n        \r\n          this.notifyService.showInfo(\"Successfully Updated\", '');\r\n          document.getElementById(\"mysideInfobar\").classList.remove(\"kt-quick-panel--on\");\r\n          document.getElementById(\"rightbar-overlay\").style.display = \"none\";\r\n          document.getElementById(\"mysideInfobar_Update\").classList.remove(\"kt-quick-panel--on\");\r\n          document.getElementById(\"mysideInfobar_ProjectsUpdate\").classList.remove(\"kt-quick-panel--on\");\r\n          document.getElementById(\"todo\").classList.remove(\"position-fixed\");\r\n          $('#uploadFile').val('');\r\n          $('#_upload').html('Select a file');\r\n         \r\n         \r\n        });\r\n        \r\n        \r\n    }\r\n   \r\n  }\r\n\r\n  Btn_NewProjectCreation() {\r\n    let name: string = \"NewProjectCreation\";\r\n    var url = document.baseURI + name;\r\n    var myurl = `${url}`;\r\n    var myWindow = window.open(myurl);\r\n    myWindow.focus();\r\n  }\r\n\r\n  Btn_AssignTask() {\r\n    let name: string = \"AssignTask\";\r\n    var url = document.baseURI + name;\r\n    var myurl = `${url}`;\r\n    var myWindow = window.open(myurl);\r\n    myWindow.focus();\r\n  }\r\n\r\n  Btn_UnplannedTask() {\r\n    let name: string = \"UnplannedTask\";\r\n    var url = document.baseURI + name;\r\n    var myurl = `${url}`;\r\n    var myWindow = window.open(myurl);\r\n    myWindow.focus();\r\n  }\r\n\r\n  Editbutton: boolean;\r\n  _modelProjectName: string;\r\n  _modelProjDesc: string;\r\n  _modelProjAlloc: number;\r\n\r\n  OnEditProject(id, Pname) {\r\n    this._modelProjectName = Pname;\r\n    this.Editbutton = true;\r\n    (<HTMLInputElement>document.getElementById(\"SpanProjName_\" + id)).style.display = \"none\";\r\n    (<HTMLInputElement>document.getElementById(\"spanTextbox_\" + id)).style.display = \"block\";\r\n    (<HTMLInputElement>document.getElementById(\"textboxfocus_\" + id)).focus();\r\n    //(<HTMLInputElement>document.getElementById(\"EidtBtn_\" + id)).style.display = \"none\";\r\n  }\r\n\r\n  OnEditProject_Desc(id, Desc) {\r\n    this._modelProjDesc = Desc;\r\n    this.Editbutton = true;\r\n    (<HTMLInputElement>document.getElementById(\"Span_DescName_\" + id)).style.display = \"none\";\r\n    (<HTMLInputElement>document.getElementById(\"spanTextarea_\" + id)).style.display = \"block\";\r\n    (<HTMLInputElement>document.getElementById(\"textareafocus_\" + id)).focus();\r\n  }\r\n\r\n  OnEditProject_Alloc(id, allocated){\r\n    this._modelProjAlloc = allocated;\r\n    this.Editbutton = true;\r\n    (<HTMLInputElement>document.getElementById(\"Span_DescName_all\" + id)).style.display = \"none\";\r\n    (<HTMLInputElement>document.getElementById(\"spanTextarea_all\" + id)).style.display = \"block\";\r\n    (<HTMLInputElement>document.getElementById(\"textareafocus_all\" + id)).focus();\r\n    \r\n  }\r\n\r\n  onCancel(id) {\r\n    (<HTMLInputElement>document.getElementById(\"SpanProjName_\" + id)).style.display = \"inline-block\";\r\n    (<HTMLInputElement>document.getElementById(\"spanTextbox_\" + id)).style.display = \"none\";\r\n    //(<HTMLInputElement>document.getElementById(\"EidtBtn_\" + id)).style.display = \"inline-block\";\r\n    this.Editbutton = false;\r\n    // For Description\r\n    (<HTMLInputElement>document.getElementById(\"Span_DescName_\" + id)).style.display = \"inline-block\";\r\n    (<HTMLInputElement>document.getElementById(\"spanTextarea_\" + id)).style.display = \"none\";\r\n    this._modelProjDesc = null;\r\n    this._modelProjectName = null;\r\n    // For Allocated Hours\r\n    (<HTMLInputElement>document.getElementById(\"Span_DescName_all\" + id)).style.display = \"inline-block\";\r\n    (<HTMLInputElement>document.getElementById(\"spanTextarea_all\" + id)).style.display = \"none\";\r\n    //(<HTMLInputElement>document.getElementById(\"Editbutton\")).style.display = \"inline-block\";\r\n  }\r\n\r\n  OnProject_Rename(id, Pcode) {\r\n    if (this._modelProjectName != \"\" && this._modelProjDesc != \"\" && this._modelProjAlloc!= 0) {\r\n      this.service._ProjectRenameService(id, this._modelProjectName, this._modelProjDesc, this.CurrentUser_ID, this._modelProjAlloc).subscribe(data => {\r\n        this._Message = data['message'];\r\n        this.notifyService.showSuccess(this._Message, \"\");\r\n        this.GetSubtask_Details();\r\n        this.GetProjectsByUserName();\r\n        this.service.SubTaskDetailsService_ToDo_Page(Pcode, this.Comp_No, null).subscribe(\r\n          (data) => {\r\n            let list: any;\r\n            list = JSON.parse(data[0]['ProjectInfo']);\r\n            this._ProjectName = list[0]['Project_Name'];\r\n            this.Proj_Desc = list[0]['Project_Description'];\r\n          });\r\n      });\r\n      this.onCancel(id);\r\n    }\r\n    else {\r\n      this.notifyService.showInfo(\"Empty string cannot be save\", \"Please give some name.\");\r\n    }\r\n  }\r\n\r\n  moreDetails() {\r\n    let name: string = 'MoreDetails';\r\n    var url = document.baseURI + name;\r\n    var myurl = `${url}/${this._ProjectCode}`;\r\n    var myWindow = window.open(myurl, this._ProjectCode);\r\n    myWindow.focus();\r\n  }\r\n\r\n  ////////////////------------------------------- Filters ------------------------------///////////////\r\n  EmpCountInFilter = [];\r\n  TypeContInFilter = [];\r\n  StatusCountFilter = [];\r\n  count_LinkedProjects: number;\r\n  LastPage:number;\r\n  lastPagerecords:number;\r\n  \r\n  getDropdownsDataFromDB() {\r\n    this._objDropdownDTO.EmpNo = this.CurrentUser_ID;\r\n    this._objDropdownDTO.Selected_ProjectType = this.selectedType_String;\r\n    this._objDropdownDTO.Selected_Status = this.selectedStatus_String;\r\n    this._objDropdownDTO.SelectedEmp_No = this.selectedEmp_String;\r\n    this._objDropdownDTO.Selected_SearchText = this.searchText;\r\n    // this._objDropdownDTO.PortfolioId = null;\r\n    this.service.GetProjectsByUserName_Service_ForProjectsTODO(this.ObjUserDetails)\r\n      .subscribe((data) => {\r\n        \r\n         console.log(this._CurrentpageRecords,this.CurrentPageNo,this._totalProjectsCount,this.LastPage, this.lastPagerecords);\r\n      });\r\n  }\r\n  \r\n  checkedItems_Status: any = [];\r\n  checkedItems_Type: any = [];\r\n  checkedItems_Emp: any = [];\r\n  selectedType_String: string;\r\n  selectedEmp_String: string;\r\n  selectedStatus_String: string;\r\n  selectedItem_Status = [];\r\n\r\n  isStatusChecked(item) {\r\n    let arr = [];\r\n    this.StatusCountFilter.forEach(element => {\r\n      if (element.checked == true) {\r\n        arr.push({ Status: element.Name });\r\n        return this.checkedItems_Status = arr;\r\n      }\r\n    });\r\n    let arr2 = [];\r\n    this.StatusCountFilter.filter((item) => {\r\n      if (item.checked == true) {\r\n        this.applyFilters();\r\n        return arr2.push(item);\r\n      }\r\n    });\r\n    this.selectedItem_Status.push(arr2);\r\n    this.StatusCountFilter.forEach(element => {\r\n      if (element.checked == false) {\r\n        this.selectedItem_Status.length = 0;\r\n        this.resetFilters();\r\n      }\r\n    });\r\n    if (this.selectedItem_Type.length == 0 && this.selectedItem_Status.length == 0 && this.selectedItem_Emp.length == 0) {\r\n      this.edited = false;\r\n    }\r\n    else {\r\n      this.edited = true;\r\n    }\r\n  }\r\n\r\n  selectedItem_Type = [];\r\n\r\n  isTypeChecked(item) {\r\n    let arr = [];\r\n    this.TypeContInFilter.forEach(element => {\r\n      if (element.checked == true) {\r\n        arr.push({ Block_No: element.Block_No });\r\n        return this.checkedItems_Type = arr;\r\n      }\r\n    });\r\n    let arr2 = [];\r\n    this.TypeContInFilter.filter((item) => {\r\n      if (item.checked == true) {\r\n        this.applyFilters();\r\n        return arr2.push(item);\r\n      }\r\n    });\r\n    this.selectedItem_Type.push(arr2);\r\n    this.TypeContInFilter.forEach(element => {\r\n      if (element.checked == false) {\r\n        this.selectedItem_Type.length = 0;\r\n        this.resetFilters();\r\n      }\r\n    });\r\n    if (this.selectedItem_Type.length == 0 && this.selectedItem_Status.length == 0 && this.selectedItem_Emp.length == 0) {\r\n      this.edited = false;\r\n    }\r\n    else {\r\n      this.edited = true;\r\n    }\r\n  }\r\n\r\n  selectedItem_Emp = [];\r\n\r\n  isEmpChecked(item) {\r\n    let arr = [];\r\n    this.EmpCountInFilter.forEach(element => {\r\n      if (element.checked == true) {\r\n        arr.push({ Emp_No: element.Emp_No });\r\n        return this.checkedItems_Emp = arr;\r\n      }\r\n    });\r\n    let arr2 = [];\r\n    this.EmpCountInFilter.filter((item) => {\r\n      if (item.checked == true) {\r\n        this.applyFilters();\r\n        return arr2.push(item);\r\n      }\r\n    });\r\n    this.selectedItem_Emp.push(arr2);\r\n    this.EmpCountInFilter.forEach(element => {\r\n      if (element.checked == false) {\r\n        this.selectedItem_Emp.length = 0;\r\n        this.resetFilters();\r\n      }\r\n    });\r\n    if (this.selectedItem_Type.length == 0 && this.selectedItem_Status.length == 0 && this.selectedItem_Emp.length == 0) {\r\n      this.edited = false;\r\n    }\r\n    else {\r\n      this.edited = true;\r\n    }\r\n  }\r\n  //Apply Filters\r\n  SearchbyText() {\r\n    this.CurrentPageNo = 1;\r\n    this.applyFilters();\r\n  }\r\n\r\n  _filtersMessage2: string;\r\n  _filtersMessage: string;\r\n\r\n  // applyFilters_Old() {\r\n  //   this.ObjUserDetails.PageNumber = this.CurrentPageNo;\r\n  //   this.ObjUserDetails.PageSize = 30;\r\n  //   this.ObjUserDetails.SearchText = this.searchText;\r\n  //   this.ObjUserDetails.PortfolioId = null;\r\n  //   this.service.GetProjectsByUserName_Service_ForProjectsTODO(this.ObjUserDetails).subscribe(data => {\r\n  //     this._ProjectDataList = JSON.parse(data[0]['Projects_Json']);\r\n  //     // this._totalProjectsCount = data[0]['ProjectsCount_Json'];\r\n  //     //console.log(\"To DO Data---->\", (data[0]['ProjectsCount_Json']));\r\n  //     //Racis Details\r\n  //     // this._totalProjectsCount = this._ProjectDataList.length\r\n  //     if (this._ProjectDataList) {\r\n  //       this._CurrentpageRecords = this._ProjectDataList.length;\r\n  //       // console.log(\"ProjectList----------->\", this._ProjectDataList.length);\r\n  //     }\r\n  //   });\r\n  // }\r\n\r\n  applyFilters() {\r\n    this.selectedEmp_String = this.checkedItems_Emp.map(select => {\r\n      return select.Emp_No;\r\n    }).join(',');\r\n    this.selectedType_String = this.checkedItems_Type.map(select => {\r\n      return select.Block_No;\r\n    }).join(',');\r\n    this.selectedStatus_String = this.checkedItems_Status.map(select => {\r\n      return select.Status;\r\n    }).join(',');\r\n    //console.log(this.checkedItems_Status, this.checkedItems_Type, this.checkedItems_Emp);\r\n    this.ObjUserDetails.SelectedStatus = this.selectedStatus_String;\r\n    this.ObjUserDetails.SelectedEmp_No = this.selectedEmp_String;\r\n    this.ObjUserDetails.SelectedBlock_No = this.selectedType_String;\r\n    this.ObjUserDetails.PageNumber = this.CurrentPageNo;\r\n    this.ObjUserDetails.PageSize = 30;\r\n    this.ObjUserDetails.SearchText = this.searchText;\r\n    this.ObjUserDetails.PortfolioId = null;\r\n    //console.log(\"string------->\", this.selectedType_String, this.selectedEmp_String, this.selectedStatus_String);\r\n    this.service.GetProjectsByUserName_Service_ForProjectsTODO(this.ObjUserDetails)\r\n      .subscribe(data => {\r\n        //this._ProjectDataList = JSON.parse(data[0]['Projects_Json']);\r\n        this._ProjectDataList = JSON.parse(data[0]['Projects_Json']);       \r\n        // console.log(this._ProjectDataList);\r\n        // this._totalProjectsCount = data[0]['ProjectsCount_Json'];\r\n        //Emp\r\n        if (this.selectedItem_Emp.length == 0) {\r\n          this.EmpCountInFilter = JSON.parse(data[0]['Employee_json']);\r\n        }\r\n        else {\r\n          this.EmpCountInFilter = this.selectedItem_Emp[0];\r\n        }\r\n        //Type\r\n        if (this.selectedItem_Type.length == 0) {\r\n          this.TypeContInFilter = JSON.parse(data[0]['ProjectType_json']);\r\n        }\r\n        else {\r\n          this.TypeContInFilter = this.selectedItem_Type[0];\r\n        }\r\n        //Status\r\n        if (this.selectedItem_Status.length == 0) {\r\n          this.StatusCountFilter = JSON.parse(data[0]['Status_json']);\r\n        }\r\n        else {\r\n          this.StatusCountFilter = this.selectedItem_Status[0];\r\n        }\r\n        this._totalProjectsCount = JSON.parse(data[0]['ProjectsCount_Json']);\r\n        \r\n\r\n        let _vl = this._totalProjectsCount / 30;\r\n        let _vl1 = _vl % 1;\r\n        if (_vl1 > 0.000) {\r\n          this.LastPage = Math.trunc(_vl) + 1;\r\n        }\r\n        else {\r\n          this.LastPage = Math.trunc(_vl);\r\n        }\r\n\r\n        if(this.CurrentPageNo == this.LastPage){\r\n          this.lastPagerecords=30;\r\n        }\r\n        if (this._ProjectDataList) {\r\n          this._CurrentpageRecords = this._ProjectDataList.length;\r\n        }\r\n        // this._ProjectDataList = data;\r\n        // this._CurrentpageRecords = this._ProjectDataList.length;\r\n        if (this._ProjectDataList.length == 0) {\r\n          this._filtersMessage = \"No more projects matched your search\";\r\n          this._filtersMessage2 = \" Clear the filters & try again\";\r\n        }\r\n        else {\r\n          this._filtersMessage = \"\";\r\n          this._filtersMessage2 = \"\";\r\n        }\r\n      });\r\n    //Filtering Checkbox de\r\n    // this.getDropdownsDataFromDB();\r\n  }\r\n\r\n  search_Type: any[];\r\n\r\n  resetFilters() {\r\n    this.searchText = \"\";\r\n    this.search_Type = [];\r\n    this.CurrentPageNo = 1;\r\n    this.edited = false;\r\n    if (this.selectedItem_Type.length == 0) {\r\n      this.selectedType_String = null;\r\n      this.checkedItems_Type = [];\r\n    }\r\n    if (this.selectedItem_Status.length == 0) {\r\n      this.selectedStatus_String = null;\r\n      this.checkedItems_Status = [];\r\n    }\r\n    if (this.selectedItem_Emp.length == 0) {\r\n      this.selectedEmp_String = null;\r\n      this.checkedItems_Emp = [];\r\n    }\r\n    //console.log(\"On Reset--->\", this.checkedItems_Type, this.checkedItems_Status, this.checkedItems_Emp);\r\n    this.applyFilters();\r\n  }\r\n  txtSearch: string;\r\n  resetAll() {\r\n    this.txtSearch = '';\r\n    this.selectedItem_Type.length = 0;\r\n    this.selectedItem_Status.length = 0;\r\n    this.selectedItem_Emp.length = 0\r\n    this.resetFilters();\r\n  }\r\n\r\n  sweetAlert() {\r\n    if (this.Project_Status == 'Completed') {\r\n      Swal.fire({\r\n        title: 'This Project is Compelted !!',\r\n        text: 'Do You Want To Reopen This Project ?',\r\n        // icon: 'warning',\r\n        // iconHtml: '<img src=\"https://upload.wikimedia.org/wikipedia/commons/1/11/Blue_question_mark_icon.svg\">',\r\n        showCancelButton: true,\r\n        confirmButtonText: 'Yes',\r\n        cancelButtonText: 'No'\r\n      }).then((response: any) => {\r\n        if (response.value) {\r\n          this.OnAddTaskClick();\r\n        } else if (response.dismiss === Swal.DismissReason.cancel) {\r\n          Swal.fire(\r\n            'Cancelled',\r\n            'Action is Not Created',\r\n            'error'\r\n          )\r\n        }\r\n      });\r\n    }\r\n    else {\r\n      this.OnAddTaskClick();\r\n    }\r\n  }\r\n\r\n  // OpenDialog(){\r\n  //   const confirmDialog = this.dialog.open(ConfirmDialogComponent, {\r\n  //     data: {\r\n  //       mode: 'fileUpload',\r\n  //       filetitle: 'File Upload Component',\r\n  //       //message1: proj_Name\r\n  //     }\r\n  //   });\r\n  //   confirmDialog.afterClosed().subscribe(result => {\r\n  //      if(result=true){\r\n  //        console.log(\"true\");\r\n  //      }\r\n  //   });\r\n  // }\r\n}\r\n\r\n","<div class=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid margin-height side_view\" id=\"todo\">\r\n    <div class=\"row\">\r\n\r\n        <div class=\"col-lg-12\">\r\n            <!--begin:: Widgets/Authors Profit-->\r\n            <div class=\"kt-portlet kt-portlet--bordered-semi\">\r\n                <div class=\"kt-portlet__head\">\r\n                    <div class=\"kt-portlet__head-label\">\r\n                        <h3 class=\"kt-portlet__head-title mr-4\">\r\n                            <i class=\"kt-menu__link-icon fas fa-clipboard-check mr-2 text-primary\"></i>\r\n                            <strong>Process</strong> details\r\n                        </h3>\r\n                        <!-- <div class=\"progress form-group\" *ngIf=\"progress > 0\">\r\n                            <div class=\"progress-bar progress-bar-striped bg-success\" role=\"progressbar\" [style.width.%]=\"progress\">\r\n                            </div>\r\n                        </div> -->\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <!-- Block 1 -->\r\n        <div class=\"col-lg-4 col-md-6\">\r\n            <div class=\"d-flex align-items-center justify-content-between mb-2\">\r\n                <div>\r\n                    <div class=\"mr-3\">\r\n                        <ng-container *ngIf=\"CurrentPageNo==1\">\r\n                            {{CurrentPageNo}} - {{_CurrentpageRecords}}\r\n                        </ng-container>\r\n                        <ng-container *ngIf=\"CurrentPageNo!=1 && CurrentPageNo!=LastPage\">\r\n                            {{_CurrentpageRecords * (CurrentPageNo-1) + 1}} - {{_CurrentpageRecords * CurrentPageNo}}\r\n                        </ng-container>\r\n                        <ng-container *ngIf=\"CurrentPageNo==LastPage && CurrentPageNo!=1\">\r\n                            {{lastPagerecords * (CurrentPageNo-1) + 1}} - {{lastPagerecords * (CurrentPageNo-1) + _CurrentpageRecords}}\r\n                        </ng-container>\r\n                        of\r\n                        <span> {{_totalProjectsCount}}</span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"text-right d-flex justify-content-end\" >\r\n                    <span class=\"dropdown\" >\r\n                        <button class=\"btn btn-label-primary btn-upper btn-sm btn-bold mr-1 dropdown-toggle\"\r\n                            type=\"button\" id=\"dropdownMenu2\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\r\n                            aria-expanded=\"false\">\r\n                            <i class=\"fas fa-plus mr-0\"></i>\r\n                        </button>\r\n                        <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenu2\">\r\n                            <button class=\"dropdown-item text-primary\" type=\"button\"\r\n                                (click)=\"Btn_NewProjectCreation()\">Create New\r\n                                Project</button>\r\n                            <button class=\"dropdown-item text-warning\" type=\"button\" (click)=\"Btn_AssignTask()\">Assign\r\n                                Task</button>\r\n                            <button class=\"dropdown-item text-danger\" type=\"button\" (click)=\"Btn_UnplannedTask()\">Runway\r\n                                Task</button>\r\n                        </div>\r\n                    </span>\r\n                    <button class=\"btn btn-label-primary btn-upper btn-sm btn-bold mr-1\"\r\n                        (click)=\"CurrentPageNo = CurrentPageNo - 1;applyFilters()\" [disabled]=\"CurrentPageNo==1\">\r\n                        <i class=\"fas fa-angle-left mr-0\"></i>\r\n                    </button>\r\n                    <button class=\"btn btn-label-primary btn-upper btn-sm btn-bold mr-1\"\r\n                        (click)=\"CurrentPageNo = CurrentPageNo + 1; applyFilters()\" [disabled]=\"_CurrentpageRecords<30\">\r\n                        <i class=\"fas fa-angle-right mr-0\"></i></button>\r\n                    <span class=\"mr-2\">\r\n                        <a [hidden]=\"Z2A\" (click)=\"_SortProjectList()\" class=\"btn btn-label-primary btn-sm\"\r\n                            data-toggle=\"kt-tooltip\" title=\"Click to sort Asc\">\r\n                            <i class=\"fa fa-sort-alpha-down-alt font-16 mr-0\"></i>\r\n                        </a>\r\n                        <a [hidden]=\"A2Z\" (click)=\"_SortProjectList()\" class=\"btn btn-label-primary btn-sm\"\r\n                            data-toggle=\"kt-tooltip\" title=\"Click to sort Desc\">\r\n                            <i class=\"fas fa-sort-alpha-up font-16 mr-0\"></i>\r\n                        </a>\r\n                    </span>\r\n                    <span>\r\n                        <!-- Filters -->\r\n                        <div class=\"stores-sec mr-1\">\r\n                            <ul class=\"nav navbar-nav filters\">\r\n                                <li class=\"dropdown mega-dropdown\" id=\"filtermenu\">\r\n                                    <a [ngClass]=\"edited ? 'btn btn-label-primary btn-upper btn-sm btn-bold filter-dot' : 'btn btn-label-primary btn-upper btn-sm btn-bold'\" data-toggle=\"dropdown\"><i\r\n                                            class=\"fas fa-ellipsis-v mr-0\"></i></a>\r\n                                    <div class=\"dropdown-menu mega-dropdown-menu\">\r\n                                        <div (click)=\"$event.stopPropagation();\">\r\n                                            <div class=\"row\">\r\n                                                <div class=\"col-md-10\">\r\n                                                    <h5><strong>Total Projects - </strong>\r\n                                                        <h5 class=\"d-inline-block\">\r\n                                                            <strong>{{_totalProjectsCount}}</strong>\r\n                                                        </h5>\r\n                                                    </h5>\r\n                                                </div>\r\n                                                <div class=\"col-md-2\">\r\n                                                    <!-- Empty Column -->\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr />\r\n                                            <div class=\"row\">\r\n                                                <div class=\"col-md-12\">\r\n                                                    <input type=\"text\" class=\"form-control kt-quick-search__input pl-3\"\r\n                                                        placeholder=\"Search Filters\" [(ngModel)]=\"txtSearch\"\r\n                                                        style=\"width: 100%;\">\r\n                                                </div>\r\n                                            </div>\r\n                                            <br>\r\n                                            <div class=\"row scroll-drop\">\r\n                                                <div class=\"col-md-4\">\r\n                                                    <div class=\"count-height\">\r\n                                                        <p><strong>Project Type</strong></p>\r\n                                                        <div class=\"d-flex justify-content-between\"\r\n                                                            *ngFor=\"let item of TypeContInFilter |filter:txtSearch;let i=index\">\r\n                                                            <label class=\"kt-checkbox\">\r\n                                                                <input type=\"checkbox\" (change)=\"isTypeChecked(item)\"\r\n                                                                    [(ngModel)]=\"item.checked\">\r\n                                                                {{item.Name}}\r\n                                                                <span></span>\r\n                                                            </label>\r\n                                                            <span class=\"count-btn\">{{item.Count}}</span>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"col-md-4\">\r\n                                                    <div class=\"count-height\">\r\n                                                        <p><strong>Status</strong></p>\r\n                                                        <div class=\"d-flex justify-content-between\"\r\n                                                            *ngFor=\"let item of StatusCountFilter|filter:txtSearch\">\r\n                                                            <label class=\"kt-checkbox mb-3\">\r\n                                                                <input type=\"checkbox\" (change)=\"isStatusChecked(item)\"\r\n                                                                    [(ngModel)]=\"item.checked\" [checked]=\"item\">\r\n                                                                {{item.Name}}\r\n                                                                <span></span>\r\n                                                            </label>\r\n                                                            <span class=\"count-btn\">{{item.Count}}</span>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"col-md-4\">\r\n                                                    <div class=\"count-height\">\r\n                                                        <p><strong>Employees</strong></p>\r\n                                                        <div class=\"d-flex justify-content-between\"\r\n                                                            *ngFor=\"let item of EmpCountInFilter|filter:txtSearch\">\r\n                                                            <label class=\"kt-checkbox mb-3\">\r\n                                                                <input type=\"checkbox\" (change)=\"isEmpChecked(item)\"\r\n                                                                    [(ngModel)]=\"item.checked\" [checked]=\"item\">\r\n                                                                {{item.Name}}\r\n                                                                <span></span>\r\n                                                            </label>\r\n                                                            <span class=\"count-btn\">{{item.Count}}</span>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <br>\r\n                                            <hr>\r\n                                        </div>\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-md-10\">\r\n                                                <button\r\n                                                    class=\"btn btn-label-success btn-outline-success btn-upper btn-sm btn-bold mr-2\"\r\n                                                    data-toggle=\"dropdown\">Submit</button>\r\n                                                <button class=\"btn btn-label-primary btn-upper btn-sm btn-bold mr-2\"\r\n                                                    (click)=\"resetAll()\">Reset\r\n                                                </button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"kt-quick-search mb-2\">\r\n                        <!-- <form class=\"kt-quick-search__form\"> -->\r\n                            <div class=\"input-group\">\r\n                                <input type=\"text\" placeholder=\"Search Projects\" [(ngModel)]=\"searchText\" autofocus\r\n                                (keydown.enter)=\"search($event.target.value)\" class=\"form-control kt-quick-search__input pl-3\" style=\"width: 270px;\">\r\n                                <div class=\"input-group-prepend\">\r\n                                <span class=\"input-group-text\">\r\n                                    <i class=\"flaticon2-search-1 curser-pointer\" (click)=\"search($event.target.value)\"></i>\r\n                                </span>\r\n                                </div>\r\n                            </div>\r\n                        <!-- </form> -->\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n            <div class=\"sidebar scrollbar\" >\r\n                <ul class=\"side-bar-box\">\r\n                    <li *ngFor=\"let item of _ProjectDataList\">\r\n                        <a (click)=\"OnProjectClick(item.Project_Code,item.Project_Name,item.Project_Owner,\r\n                        item.Team_Res,item.Team_Autho,item.Team_Informer,item.Team_Coor,item.Team_Support,\r\n                        item.EmpNo_Owner,item.EmpNo_Res,item.EmpNo_Autho,item.EmpNo_Coor,item.EmpNo_Informer,\r\n                        item.EmpNo_Support,item.Emp_Comp_No,item.Project_Block,item.Project_Description,\r\n                        item.DPG,item.Exec_BlockName,item.DeadLine,item.Status,item.Chkboxvalue,item.Project_Cost,item.Duration,item.StandardDuration,\r\n                        item.Client_Name,item.Remarks,item.Remarkss,item.CD,item.ReportType,item.Attachments,item.id,item.Sourcefile,item.SubmissionType)\">\r\n                            <p class=\"project-title mb-2\">\r\n                                {{item.Project_Name}}\r\n                            </p>\r\n                            <div class=\"d-flex justify-content-between\">\r\n                                <p class=\"mb-2\">{{item.Team_Res}}</p>\r\n                                <p class=\"mb-2\">{{item.Exec_BlockName}}</p>\r\n                            </div>\r\n                            <div class=\"d-flex justify-content-between\">\r\n                                <p [ngClass]=\"{'text-danger':item.Status=='Delay',\r\n                                    'text-Completed':item.Status=='Completed',\r\n                                    'text-warning':item.Status=='InProcess',\r\n                                    'text-underApp':item.Status=='Under Approval',\r\n                                    'text-primary':item.Status=='Completion Under Approval',\r\n                                    'text-Rejected':item.Status=='New Project Rejected',\r\n                                    'text-underApproval':item.Status=='Enactive Under Approval',\r\n                                    'text-underApproval':item.Status=='Forward Under Approval',\r\n                                    'text-info':item.Status=='New Project',\r\n                                    \r\n                                    'text-CompleteRejected':item.Status=='Project Complete Rejected',\r\n                                    'text-Todo':item.Status=='ToDo Completed'}\">\r\n                                    {{item.Status}}</p>\r\n                                    <!-- 'text-success':item.Status=='Completion Under Approval' -->\r\n                                <p class=\"mb-2\">Date : {{item.DeadLine | date:'dd-MM-yyyy'}}</p>\r\n                            </div>\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n        <!-- Block 2 -->\r\n        <div class=\"col-lg-8 col-md-6 card\">\r\n            <!-- <button (click)=\"generateSerial()\">Testing....</button> -->\r\n            <p style=\"color:lightgray;margin:10px;font-size: large;margin-top: 5px;\" [hidden]=\"paragraph_msg\">Select the\r\n                project from left panel to display result here.</p>\r\n            <div class=\"card-title pt-3\" [hidden]=\"_topbar\">\r\n                <div class=\"d-flex justify-content-between row\" style=\"border-bottom: 1px solid #eee;\">\r\n\r\n                    <!-- Right Side Buttons -->\r\n                    <div class=\"text-right col-lg-12\" >\r\n                        <button class=\"btn btn-label-primary btn-upper btn-sm btn-bold mr-1\" (click)=\"moreDetails()\"\r\n                            title=\"More Infomation\">\r\n                            <i class=\"fa fa-chart-bar\"></i>\r\n                        </button>\r\n                        <button class=\"btn btn-label-primary btn-upper btn-sm btn-bold mr-1\"\r\n                            (click)=\"ProjectInfoDetails()\" title=\"Project Infomation\">\r\n                            <i class=\"fa fa-info-circle mr-0\"></i>\r\n                        </button>\r\n                        <!-- *ngIf=\"Project_Status != 'Completed'\" -->\r\n                        <button class=\"btn btn-label-primary btn-upper btn-sm btn-bold mr-1\"   [hidden]=\"addbutton_hidden\"\r\n                            (click)=\"sweetAlert()\" title=\"Create New Action\" >\r\n                            <i class=\"fas fa-plus mr-0\"></i>\r\n                        </button>\r\n                        \r\n                        <button class=\"btn btn-label-primary btn-upper btn-sm btn-bold mr-1\">\r\n                            <i class=\"fas fa-sort-alpha-up fa-lg mr-0\"></i>\r\n                        </button>\r\n                        <button class=\"btn btn-label-primary btn-upper btn-sm btn-bold mr-1\" title=\"RACIS\">\r\n                            <i class=\"fas fa-user-friends fa-lg mr-0\" data-toggle=\"modal\"\r\n                                data-target=\"#exampleModalCenter\">\r\n                            </i>\r\n                        </button>\r\n                    </div>\r\n                    <div class=\"col-lg-12\">\r\n                        <label data-toggle=\"tooltip\" title=\"Project Name!\" id=\"SpanProjName_{{Pid}}\"\r\n                            class=\"text-info strong h5\"\r\n                            [ngClass]=\"{'kt-checkbox kt-checkbox--bold kt-checkbox--brand' : Proj_ExecBlck != 'Standard Tasks' && Project_Status != 'Under Approval'\r\n                                         }\">\r\n                            <input type=\"checkbox\" (click)=\"OnClickCheckboxProjectUpdate($event.target.checked)\"\r\n                                [disabled]=\"Checkbox_checked=='1'\" [checked]=\"Checkbox_checked=='1'\" *ngIf=\"Proj_ExecBlck != 'Standard Tasks' && Project_Status != 'Under Approval'\">\r\n                            {{_ProjectName}}\r\n                            <span></span>\r\n                        </label>\r\n                        <!--   [hidden]=\"EmpNo_Own!=CurrentUser_ID\"-->\r\n                        <span class=\"text-info\"  [hidden]=\"Editbutton\" (click)=\"OnEditProject(Pid,_ProjectName)\"\r\n                            id=\"EidtBtn_{{Pid}}\" *ngIf=\"this.CurrentUser_ID == this.EmpNo_Own || this.EmpNo_Res || this.EmpNo_Autho\">\r\n                            <i class=\"fas fa-edit ml-2 mb-1 curser-pointer\"></i>\r\n                        </span>\r\n                        <span class=\"kt-inbox__subject mt-2 pl-30px\" style=\"display:none;\" id=\"spanTextbox_{{Pid}}\">\r\n                            <div class=\"d-flex\">\r\n                                <input type=\"text\" class=\"form-control\" id=\"textboxfocus_{{Pid}}\"\r\n                                    [(ngModel)]=\"_modelProjectName\" style=\"width: 78%;height: 32px;\"\r\n                                    (keydown.enter)=\"OnProject_Rename(Pid,_MasterCode)\">\r\n                                <div class=\"d-inline-block ml-3\" id=\"button-addon4\">\r\n                                    <button (click)=\"OnProject_Rename(Pid,_MasterCode)\"\r\n                                        class=\"btn btn-primary btn btn-sm mr-2\">Done</button>\r\n                                    <button class=\" btn btn-secondary btn btn-sm\"\r\n                                        (click)=\"onCancel(Pid)\">Cancel</button>\r\n                                </div>\r\n                            </div>\r\n                        </span>\r\n                        <p class=\"mb-3 mt-1 pl-30px h5\" style=\"color:grey; font-size: small;\">\r\n                            <span data-toggle=\"tooltip\" title=\"Project Description!\" id=\"Span_DescName_{{Pid}}\">{{Proj_Desc}}</span>\r\n                            <span class=\"text-info \" [hidden]=\"Editbutton\" (click)=\"OnEditProject_Desc(Pid,Proj_Desc)\"\r\n                                id=\"EidtBtn_{{Pid}}\">\r\n                                <i class=\"fas fa-edit ml-2 mb-1 curser-pointer\"></i>\r\n                            </span>\r\n                            <span class=\"kt-inbox__subject mt-2\" style=\"display:none;\" id=\"spanTextarea_{{Pid}}\">\r\n                                <div class=\"d-flex\">\r\n                                    <input type=\"text\" class=\"form-control\" id=\"textboxfocus_{{Pid}}\"\r\n                                        [(ngModel)]=\"_modelProjDesc\" style=\"width: 78%;height: 32px;\"\r\n                                        (keydown.enter)=\"OnProject_Rename(Pid,_MasterCode)\">\r\n                                    <div class=\"d-inline-block ml-3\" id=\"button-addon4\">\r\n                                        <button (click)=\"OnProject_Rename(Pid,_MasterCode)\"\r\n                                            class=\"btn btn-primary btn btn-sm mr-2\">Done</button>\r\n                                        <button class=\" btn btn-secondary btn btn-sm\"\r\n                                            (click)=\"onCancel(Pid)\">Cancel</button>\r\n                                    </div>\r\n                                </div>\r\n                            </span>\r\n                        </p>\r\n                        <p class=\"mb-1 pl-30px\">\r\n                            <span data-toggle=\"tooltip\" title=\"Project Type!\" class=\"mr-3 text-nowrap mb-2 d-inline-block\">\r\n                                <i class=\"fas fa-project-diagram text-muted mr-1\"></i>\r\n                                <b>{{Proj_ExecBlck}}</b>\r\n                            </span>\r\n                            <span data-toggle=\"tooltip\" title=\"Project Status!\"\r\n                                    class=\"mr-3 text-nowrap mb-2 d-inline-block\" [ngClass]=\"{'text-danger':Project_Status=='Delay',\r\n                                    'text-Completed':Project_Status=='Completed',\r\n                                    'text-warning':Project_Status=='InProcess',\r\n                                    'text-underApp':Project_Status=='Under Approval',\r\n                                    'text-primary':Project_Status=='Completion Under Approval',\r\n                                    'text-Rejected':Project_Status=='New Project Rejected',\r\n                                    'text-underApproval':Project_Status=='Enactive Under Approval',\r\n                                    'text-underApproval2':Project_Status=='Forward Under Approval',\r\n                                    'text-info':Project_Status=='New Project',\r\n                                    \r\n                                    'text-CompleteRejected':Project_Status=='Project Complete Rejected',\r\n                                    'text-Todo':Project_Status=='ToDo Completed'}\">\r\n                                {{Project_Status}}\r\n                            </span>\r\n                            <!-- 'text-success':Project_Status=='Completion Under Approval' -->\r\n                            <span data-toggle=\"tooltip\" title=\"Start Date!\" class=\"mr-3 text-nowrap mb-2 d-inline-block\">\r\n                                <i class=\"fas fa-calendar-alt text-muted mr-1\"></i>\r\n                                <b>{{PstDT | date:'dd-MM-yyyy'}}</b>\r\n                            </span>\r\n                            <span data-toggle=\"tooltip\" title=\"End Date!\" class=\"mr-3 text-nowrap mb-2 d-inline-block\" *ngIf=\"Proj_ExecBlck != 'Standard Tasks'\">\r\n                                <i class=\"fas fa-calendar-alt text-muted mr-1\"></i>\r\n                                <b>{{PEndDT | date:'dd-MM-yyyy'}}</b>\r\n                            </span>\r\n                            <span data-toggle=\"tooltip\" title=\"Submission Type!\" class=\"mr-3 text-nowrap mb-2 d-inline-block\" *ngIf=\"Proj_ExecBlck == 'Standard Tasks'\">\r\n                                <i class=\"fas fa-calendar-alt text-muted mr-1\"></i>\r\n                                <b>{{SubmissionType}}</b>\r\n                            </span>\r\n                            <span data-toggle=\"tooltip\" title=\"Project Duration!\" class=\"mr-3 text-nowrap mb-2 d-inline-block\">\r\n                                <i class=\"fas fa-clock text-muted mr-1\"></i>\r\n                                <b *ngIf=\"Proj_ExecBlck != 'Standard Tasks'\">{{Duration}} Hrs</b>\r\n                                <b *ngIf=\"Proj_ExecBlck == 'Standard Tasks'\">{{standardDuration}} Hrs</b>\r\n                            </span>\r\n                            <span data-toggle=\"tooltip\" title=\"Project Cost!\" class=\"text-nowrap mb-2 d-inline-block\">\r\n                                <i class=\"fab fa-dev text-muted mr-1\"></i>\r\n                                <b>{{projectCost|currency:'SAR '}}</b>\r\n                            </span>\r\n                        </p>\r\n                        <p class=\"mb-1 pl-30px\">\r\n                            <span data-toggle=\"tooltip\" title=\"Project Responsible!\" class=\"mr-3 text-nowrap mb-2 d-inline-block\">\r\n                                <i class=\"fab fa-dev text-muted mr-1\"></i>\r\n                                <b>{{Resp}}</b>\r\n                            </span>\r\n                            <span data-toggle=\"tooltip\" title=\"Client Name!\" class=\"mr-3 text-nowrap mb-2 d-inline-block\">\r\n                                <i class=\"fas fa-wallet text-muted mr-1\"></i>\r\n                                <b>{{Client_Name}}</b>\r\n                            </span>\r\n                            <span data-toggle=\"tooltip\" title=\"Report Type!\" class=\"mr-3 text-nowrap mb-2 d-inline-block\" *ngIf=\"ReportType\">\r\n                                <i class=\"fas fa-bars text-muted mr-1\"></i>\r\n                                <b>{{ReportType}}</b>\r\n                            </span>\r\n                            <span data-toggle=\"tooltip\" title=\"Completed Date!\" class=\"mr-3 text-nowrap mb-2 d-inline-block\" *ngIf=\"CD && Project_Status=='Completed' \">\r\n                                <i class=\"fas fa-calendar-alt text-muted mr-1\"></i>\r\n                                <b>{{CD | date:'dd-MM-yyyy'}}</b>\r\n                            </span>\r\n                        </p>\r\n                        <p class=\"mb-1 pl-30px\">\r\n                            <span data-toggle=\"tooltip\" title=\"Uploaded Document!\" class=\"mr-3 text-nowrap mb-2 d-inline-block\" *ngIf=\"FileName != ''\"><i\r\n                                class=\"fas fa-file-pdf text-muted mr-1\" ></i>\r\n                            <a class=\"text-info curser-pointer\" title=\"Click To Open File\"  \r\n                                (click)=\"LoadDocument(Attachments)\" ><b>{{FileName}}</b></a></span>\r\n                            <!-- <span class=\"mr-3 text-nowrap mb-2 d-inline-block\">\r\n                                <i class=\"fas fa-paperclip text-muted mr-1\"></i>\r\n                                <a (click)=\"LoadDocument(Attachments)\">{{FileName}}</a>\r\n                            </span> -->\r\n                            <span data-toggle=\"tooltip\" title=\"Remarks!\" class=\"mr-3 text-nowrap mb-2 d-inline-block\" *ngIf=\"Remarks!='' && Remarks!= 'undefined'\">\r\n                                <i class=\"fas fa-registered text-muted mr-1\"></i>\r\n                                <b>{{Remarks}}</b>\r\n                            </span>\r\n                            <!-- <span data-toggle=\"tooltip\" title=\"Remarks!\" class=\"mr-3 text-nowrap mb-2 d-inline-block\" *ngIf=\"Remarkss && Remarkss!= 'undefined'\">\r\n                                <i class=\"fas fa-registered text-muted mr-1\"></i>\r\n                                <b>{{Remarkss}}</b>\r\n                            </span> -->\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div class=\"scrollbar scrollbar1 card-body py-0 px-2 mt-4\" >\r\n                    <div id=\"Subtask_Details\" [hidden]=\"_subtaskDetails\">\r\n                        <div class=\"subtask-list\" *ngFor=\"let item of Subtask_List; let i =index\"\r\n                            [ngClass]=\"{'bg-custom': item.Team_Autho==CurrentUser_ID}\">\r\n                            <input type=\"radio\" name=\"Subtask\" class=\"subtask-radio\" (click)=\"OnSubtaskClick(item)\"\r\n                                [hidden]=\"item.Team_Autho!=CurrentUser_ID\" *ngIf=\"item.SubProject_Status != 'Under Approval'\" />\r\n                            <!-- .Project_Code,item.Project_Name,item.StartDate,\r\n                            item.SubProject_DeadLine,item.Subtask_Autho,item,SubProject_Status -->\r\n\r\n                            <!-- INPROCESS TASKS -->\r\n                            <div class=\"col-lg-11\">\r\n                                <p class=\"subtask-list-title text-hover-primary font-size-h5 font-weight-bold mb-1\">\r\n                                    <span data-toggle=\"tooltip\" title=\"Action Name!\" class=\"mr-2\" id=\"SpanProjName_{{item.id}}\"> {{item.Project_Name}}</span>\r\n                                    <!-- [hidden]=\"item.Project_Owner!=CurrentUser_ID\" -->\r\n                                    <span class=\"text-info\" [hidden]=\"Editbutton\" id=\"EidtBtn_{{item.id}}\"\r\n                                        (click)=\"OnEditProject(item.id,item.Project_Name)\">\r\n                                        <i class=\"fas fa-edit\"></i>\r\n                                    </span>\r\n                                    <span class=\"kt-inbox__subject\" style=\"display:none;\" id=\"spanTextbox_{{item.id}}\">\r\n                                        <div class=\"d-flex\">\r\n                                            <input type=\"text\" class=\"form-control\" id=\"textboxfocus_{{item.id}}\"\r\n                                                [(ngModel)]=\"_modelProjectName\" style=\"width: 78%;height: 32px;\"\r\n                                                (keydown.enter)=\"OnProject_Rename(item.id)\">\r\n                                            <div class=\"d-inline-block ml-3\" id=\"button-addon4\">\r\n                                                <button (click)=\"OnProject_Rename(item.id)\"\r\n                                                    class=\"btn btn-primary btn btn-sm mr-2\">Done</button>\r\n                                                <button class=\" btn btn-secondary btn btn-sm\"\r\n                                                    (click)=\"onCancel(item.id)\">Cancel</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </span>\r\n                                </p>\r\n                                <p class=\"mb-3\">\r\n                                    <span data-toggle=\"tooltip\" title=\"Action Description!\" class=\"mr-2\" id=\"Span_DescName_{{item.id}}\">\r\n                                        {{item.Project_Description}}</span>\r\n                                    <span class=\"text-info\" [hidden]=\"Editbutton\"\r\n                                        (click)=\"OnEditProject_Desc(item.id,item.Project_Description)\">\r\n                                        <i class=\"fas fa-edit\"></i>\r\n                                    </span>\r\n                                    <span class=\"kt-inbox__subject\" style=\"display:none;\" id=\"spanTextarea_{{item.id}}\">\r\n                                        <div class=\"d-flex\">\r\n                                            <input type=\"text\" class=\"form-control\" id=\"textareafocus_{{item.id}}\"\r\n                                                [(ngModel)]=\"_modelProjDesc\" style=\"width: 78%;height: 32px;\"\r\n                                                (keydown.enter)=\"OnProject_Rename(item.id)\">\r\n                                            <div class=\"d-inline-block ml-3\" id=\"button-addon4\">\r\n                                                <button (click)=\"OnProject_Rename(item.id)\"\r\n                                                    class=\"btn btn-primary btn btn-sm mr-2\">Done</button>\r\n                                                <button class=\" btn btn-secondary btn btn-sm\"\r\n                                                    (click)=\"onCancel(item.id)\">Cancel</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </span>\r\n\r\n                                </p>\r\n\r\n                                <p class=\"mb-1\">\r\n                                    <span data-toggle=\"tooltip\" title=\"Start Date!\" class=\"mr-3 text-nowrap mb-2 d-inline-block\">\r\n                                        <i class=\"fas fa-calendar-alt text-muted mr-1\"></i>\r\n                                        <b>{{item.StartDate |date:'dd-MM-yyyy'}}</b>\r\n                                    </span>\r\n                                    <span data-toggle=\"tooltip\" title=\"End Date!\" class=\"mr-3  text-nowrap mb-2 d-inline-block\">\r\n                                        <i class=\"fas fa-calendar-alt text-muted mr-1\"></i>\r\n                                        <b >{{item.SubProject_DeadLine |date:'dd-MM-yyyy'}}</b>\r\n                                    </span>\r\n                                    \r\n                                    <span data-toggle=\"tooltip\" title=\"Action Duration!\" class=\"mr-3  text-nowrap mb-2 d-inline-block\">\r\n                                        <i class=\"fas fa-clock text-muted mr-1\" *ngIf=\"item.SubtaskAllocated == 0; else allocated\" >\r\n                                            <b><span class=\"mr-2\" id=\"Span_DescName_all{{item.id}}\">\r\n                                            {{item.SubtaskAllocated}} Hrs</span></b>\r\n                                        <span class=\"text-info\" [hidden]=\"Editbutton\" \r\n                                            (click)=\"OnEditProject_Alloc(item.id,item.SubtaskAllocated)\">\r\n                                            <i class=\"fas fa-edit\" ></i>\r\n                                    <!-- *ngIf=\"item.Subtask_Res==CurrentUser_ID\" = For Subatask assignedto otherthan Authority validation -->\r\n                                        </span>\r\n                                        <span class=\"kt-inbox__subject\" style=\"display:none;\" id=\"spanTextarea_all{{item.id}}\">\r\n                                            <div class=\"d-flex\">\r\n                                                <input type=\"number\" class=\"form-control\" id=\"textareafocus_all{{item.id}}\"\r\n                                                    [(ngModel)]=\"_modelProjAlloc\" min=\"0\" oninput=\"validity.valid||(value='');\" style=\"width: 40%;height: 32px;\"\r\n                                                    (keydown.enter)=\"OnProject_Rename(item.id)\">\r\n                                                    <span *ngIf=\"_modelProjAlloc > (item.SubtaskDuration * 10)\" style=\"color:red\">*Allocation per day limit is 10 hours.</span>\r\n                                                    <span *ngIf=\"_modelProjAlloc > (item.SubtaskDuration * 10)\" style=\"color:red\">Please enter the hours less than or equal to <b>{{(item.SubtaskDuration * 10)}}</b> hours!</span>\r\n\r\n                                                <div class=\"d-inline-block ml-3\" id=\"button-addon4\">\r\n                                                    <button (click)=\"OnProject_Rename(item.id)\"\r\n                                                        class=\"btn btn-primary btn btn-sm mr-2\">Done</button>\r\n                                                    <button class=\" btn btn-secondary btn btn-sm\"\r\n                                                        (click)=\"onCancel(item.id)\">Cancel</button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </span></i>\r\n                                        <ng-template #allocated>\r\n                                            <span data-toggle=\"tooltip\" title=\"Action Duration!\" class=\"mr-3 text-nowrap mb-2 d-inline-block\">\r\n                                                <i class=\"fas fa-clock text-muted mr-1\"></i>\r\n                                                <b>{{item.SubtaskAllocated}} Hrs</b>      \r\n                                            </span>                                      \r\n                                        </ng-template>\r\n                                        \r\n                                    </span>\r\n                                    <span data-toggle=\"tooltip\" title=\"Action Cost!\" class=\"mr-3 text-nowrap mb-2 d-inline-block\">\r\n                                        <i class=\"fas fa-wallet text-muted mr-1\"></i>\r\n                                        <b>{{item.Project_Cost|currency:'SAR '}}</b>\r\n                                    </span>\r\n                                </p>\r\n\r\n                        \r\n                                <p class=\"mb-2\">\r\n                                    <span data-toggle=\"tooltip\" title=\"Action Responsible!\" class=\"mr-3 text-nowrap mb-2 d-inline-block\" *ngIf=\"item.Subtask_Res\">\r\n                                        <i class=\"fab fa-dev text-muted mr-1\"></i>\r\n                                        <b> {{item.Subtask_Res}}</b>\r\n                                    </span>\r\n\r\n                                    <span data-toggle=\"tooltip\" title=\"Action Status!\"\r\n                                        class=\"mr-2 text-nowrap mb-2 d-inline-block\" [ngClass]=\"{'text-danger':item.SubProject_Status=='Delay',\r\n                                    'text-Completed':item.SubProject_Status=='Completed',\r\n                                    'text-warning':item.SubProject_Status=='InProcess',\r\n                                    'text-underApp':item.SubProject_Status=='Under Approval',\r\n                                    'text-primary':item.SubProject_Status=='Completion Under Approval',\r\n                                    'text-Rejected':item.SubProject_Status=='New Project Rejected',\r\n                                    'text-underApproval':item.SubProject_Status=='Enactive Under Approval',\r\n                                    'text-underApproval':item.SubProject_Status=='Forward Under Approval',\r\n                                    'text-info':item.SubProject_Status=='New Project',\r\n                                   \r\n                                    'text-CompleteRejected':item.SubProject_Status=='Project Complete Rejected',\r\n                                    'text-Todo':item.SubProject_Status=='ToDo Completed'}\">\r\n                                       <!-- <p class=\"text-Completed \"  *ngIf=\"Project_Status == 'Completed'\"> Completed</p> -->\r\n                                       <!-- <p  *ngIf=\"Project_Status != 'Completed'\"> {{item.SubProject_Status}}</p> -->\r\n                                       <p> {{item.SubProject_Status}}</p>\r\n                                    </span>\r\n                                    <!-- 'text-success':item.SubProject_Status=='Completion Under Approval' -->\r\n                                </p>\r\n                                <p class=\"mb-1\">\r\n                                    <span data-toggle=\"tooltip\" title=\"Uploaded File!\" class=\"mr-3 text-nowrap mb-2 d-inline-block\"  *ngIf=\"item.Sourcefile != ''\"><i\r\n                                            class=\"fas fa-file-pdf text-muted mr-1\"></i>\r\n                                        <a class=\"text-info curser-pointer\"\r\n                                            (click)=\"LoadDocument(item.CompleteProofDoc)\"><b>{{item.Sourcefile}}</b></a></span>\r\n                                    <span data-toggle=\"tooltip\" title=\"Remarks!\" class=\"mr-3 text-nowrap mb-2 d-inline-block\" *ngIf=\"item.Remarks && item.Remarks!= 'undefined' && item.Remarks != ''\">\r\n                                        <i class=\"fas fa-registered text-muted mr-1\"></i>\r\n                                        <b>{{item.Remarks}}</b>\r\n                                    </span>\r\n                                </p>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div [hidden]=\"_projectDetails\">\r\n                        <div class=\"subtask-list\">\r\n                            <h5 style=\"color: lightgray;\"> No Action found in <b>InProcess</b> State </h5>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"w-100\"></div>\r\n                    <!-- Completed tasks -->\r\n                    <div class=\"accordion accordion-light  accordion-toggle-arrow\" id=\"accordionExample5\"\r\n                        [hidden]=\"_CompletedDetails\">\r\n                        <div class=\"card\" *ngIf=\"CompletedList != ''\" >\r\n                            <div class=\"card-header\" id=\"headingOne5\">\r\n                                <div class=\"card-title\" data-toggle=\"collapse\" data-target=\"#collapseOne5\"\r\n                                    aria-expanded=\"true\" aria-controls=\"collapseOne5\" >\r\n                                    Completed\r\n                                </div>\r\n                            </div>\r\n                            <div id=\"collapseOne5\" class=\"collapse show\" aria-labelledby=\"headingOne5\"\r\n                                data-parent=\"#accordionExample5\">\r\n                                <div class=\"card-body\">\r\n                                    <div class=\"subtask-list\" *ngFor=\"let item of CompletedList; let i =index\">\r\n                                        <div class=\"form-check form-check-success\">\r\n                                            <input type=\"radio\" class=\"subtask-radio form-check-input\" checked>\r\n                                        </div>\r\n                                        <!-- <input type=\"radio\" class=\"form -check-input subtask-radio form-check-success\" checked /> -->\r\n                                        <div>\r\n                                            <p data-toggle=\"tooltip\" title=\"Action Name!\"\r\n                                                class=\"subtask-list-title text-hover-primary font-size-h5 font-weight-bold mb-1\">\r\n                                                <s>{{item.SubProject_Name}}</s>\r\n                                            </p>\r\n                                            <p data-toggle=\"tooltip\" title=\"Action Description!\" class=\"mb-1\">{{item.Project_Description}}</p>\r\n                                            <p class=\"mb-2\"><span data-toggle=\"tooltip\" title=\"Action Responsible!\" class=\"mr-3 text-nowrap  d-inline-block\"><i\r\n                                                        class=\"fab fa-dev text-muted mr-1\"></i>{{item.Subtask_Res}}</span>\r\n                                                <span data-toggle=\"tooltip\" title=\"Action Status!\"\r\n                                                    class=\"mr-2 text-nowrap  d-inline-block badge bg-light text-success\">Completed</span>\r\n                                            </p>\r\n                                            <p class=\"mb-2\">\r\n                                                <span  data-toggle=\"tooltip\" title=\"Start Date!\" class=\"mr-3 text-nowrap d-inline-block\"><i\r\n                                                    class=\"fas fa-calendar-alt text-muted mr-1\"></i>{{item.StartDate | \r\n                                                date}}</span>  \r\n                                               \r\n                                                <span  data-toggle=\"tooltip\" title=\"End Date!\" class=\"mr-3 text-nowrap d-inline-block\"><i\r\n                                                    class=\"fas fa-calendar-alt text-muted mr-1\"></i>{{item.SubProject_DeadLine | \r\n                                                date}}</span> \r\n\r\n                                                <span data-toggle=\"tooltip\" title=\"Completed Date!\" class=\"mr-3 text-nowrap d-inline-block\" *ngIf=\"item.SubProject_Status=='Completed' && item.CD\"><i\r\n                                                        class=\"fas fa-calendar-alt text-muted mr-1\"></i>{{item.CD |\r\n                                                    date}}</span>\r\n                                                            \r\n\r\n                                                <span data-toggle=\"tooltip\" title=\"Action Duration!\" class=\"mr-3  text-nowrap mb-2 d-inline-block\">\r\n                                                    <i class=\"fas fa-clock text-muted mr-1\"></i>\r\n                                                    <b>{{item.SubtaskAllocated}} Hrs</b>\r\n                                                </span>\r\n                                                <span data-toggle=\"tooltip\" title=\"Action Cost!\" class=\"mr-3 text-nowrap mb-2 d-inline-block\">\r\n                                                    <i class=\"fas fa-wallet text-muted mr-1\"></i>\r\n                                                    <b>{{item.Project_Cost|currency:'SAR '}}</b>\r\n                                                </span>\r\n                                            </p>\r\n                                            <p class=\"mb-2\">\r\n                                                <span data-toggle=\"tooltip\" title=\"Uploaded File!\" class=\"mr-3 text-nowrap mb-2 d-inline-block\" ><i\r\n                                                        class=\"fas fa-file-pdf text-muted mr-1\" *ngIf=\"item.Sourcefile != ''\"></i>\r\n                                                    <a class=\"text-info curser-pointer\"\r\n                                                        (click)=\"LoadDocument(item.CompleteProofDoc)\"><b>{{item.Sourcefile}}</b></a></span>\r\n\r\n                                                <span data-toggle=\"tooltip\" title=\"Remarks!\" class=\"mr-3 text-nowrap  d-inline-block\" \r\n                                                    *ngIf=\"item.Remarks && item.Remarks!= 'undefined' && item.Remarks != ''\">\r\n                                                    <i class=\"fas fa-registered text-muted mr-1\"></i>\r\n                                                    <b>{{item.Remarks}}</b>\r\n                                                </span>\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- Modal -->\r\n    <div class=\"modal fade\" id=\"exampleModalCenter\" tabindex=\"-1\" role=\"dialog\"\r\n        aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n        <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header\">\r\n                    <h5 class=\"modal-title\" id=\"exampleModalCenterTitle\">RACIS (People on the project) </h5>\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                        <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                    <div class=\"kt-portlet kt-portlet--bordered-semi kt-portlet--height-fluid\">\r\n                        <div class=\"kt-portlet__body px-3 py-3 project-people\">\r\n                            <div class=\"d-flex justify-content-start align-items-center mb-3\">\r\n                                <div class=\"mr-3\">\r\n                                  <span class=\"b-avatar badge-light-primary rounded-circle\">\r\n                                    <span class=\"b-avatar-custom\">\r\n                                      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-user icon\">\r\n                                        <path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\"></path>\r\n                                        <circle cx=\"12\" cy=\"7\" r=\"4\"></circle>\r\n                                      </svg>\r\n                                    </span>\r\n                                  </span>\r\n                                </div>\r\n                                <div class=\"profile-user-info\">\r\n                                    <span class=\"text-muted\">Owner</span>\r\n                                    <p class=\"text-dark text-hover-primary mb-0\">\r\n                                        <strong>{{Owner}}</strong>\r\n                                        </p>\r\n                                </div>\r\n                              </div>\r\n                              <div class=\"d-flex justify-content-start align-items-center mb-3\">\r\n                                <div class=\"mr-3\">\r\n                                  <span class=\"b-avatar badge-light-primary rounded-circle\">\r\n                                    <span class=\"b-avatar-custom\">\r\n                                      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-user icon\">\r\n                                        <path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\"></path>\r\n                                        <circle cx=\"12\" cy=\"7\" r=\"4\"></circle>\r\n                                      </svg>\r\n                                    </span>\r\n                                  </span>\r\n                                </div>\r\n                                <div class=\"profile-user-info\">\r\n                                    <span class=\"text-muted\">Responsible</span>\r\n                                    <p class=\"text-dark text-hover-primary mb-0\">\r\n                                        <strong>{{Resp}}</strong>\r\n                                        </p>\r\n                                </div>\r\n                              </div>\r\n                              <div class=\"d-flex justify-content-start align-items-center mb-3\">\r\n                                <div class=\"mr-3\">\r\n                                  <span class=\"b-avatar badge-light-primary rounded-circle\">\r\n                                    <span class=\"b-avatar-custom\">\r\n                                      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-user icon\">\r\n                                        <path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\"></path>\r\n                                        <circle cx=\"12\" cy=\"7\" r=\"4\"></circle>\r\n                                      </svg>\r\n                                    </span>\r\n                                  </span>\r\n                                </div>\r\n                                <div class=\"profile-user-info\">\r\n                                    <span class=\"text-muted\">Authority</span>\r\n                                    <p class=\"text-dark text-hover-primary mb-0\">\r\n                                        <strong>{{Autho}}</strong>\r\n                                        </p>\r\n                                </div>\r\n                              </div>\r\n                              <div class=\"d-flex justify-content-start align-items-center mb-3\">\r\n                                <div class=\"mr-3\">\r\n                                  <span class=\"b-avatar badge-light-primary rounded-circle\">\r\n                                    <span class=\"b-avatar-custom\">\r\n                                      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-user icon\">\r\n                                        <path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\"></path>\r\n                                        <circle cx=\"12\" cy=\"7\" r=\"4\"></circle>\r\n                                      </svg>\r\n                                    </span>\r\n                                  </span>\r\n                                </div>\r\n                                <div class=\"profile-user-info\">\r\n                                    <span class=\"text-muted\">Coordinator</span>\r\n                                    <p class=\"text-dark text-hover-primary mb-0\">\r\n                                        <strong>{{Coor}}</strong>\r\n                                        </p>\r\n                                </div>\r\n                              </div>\r\n                              <div class=\"d-flex justify-content-start align-items-center mb-3\">\r\n                                <div class=\"mr-3\">\r\n                                  <span class=\"b-avatar badge-light-primary rounded-circle\">\r\n                                    <span class=\"b-avatar-custom\">\r\n                                      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-user icon\">\r\n                                        <path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\"></path>\r\n                                        <circle cx=\"12\" cy=\"7\" r=\"4\"></circle>\r\n                                      </svg>\r\n                                    </span>\r\n                                  </span>\r\n                                </div>\r\n                                <div class=\"profile-user-info\">\r\n                                    <span class=\"text-muted\">Informer</span>\r\n                                    <p class=\"text-dark text-hover-primary mb-0\">\r\n                                        <strong>{{Informer}}</strong>\r\n                                        </p>\r\n                                </div>\r\n                              </div>\r\n                              <div class=\"d-flex justify-content-start align-items-center mb-3\">\r\n                                <div class=\"mr-3\">\r\n                                  <span class=\"b-avatar badge-light-primary rounded-circle\">\r\n                                    <span class=\"b-avatar-custom\">\r\n                                      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-user icon\">\r\n                                        <path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\"></path>\r\n                                        <circle cx=\"12\" cy=\"7\" r=\"4\"></circle>\r\n                                      </svg>\r\n                                    </span>\r\n                                  </span>\r\n                                </div>\r\n                                <div class=\"profile-user-info\">\r\n                                    <span class=\"text-muted\">Support</span>\r\n                                    <p class=\"text-dark text-hover-primary mb-0\">\r\n                                        <strong>{{Support}}</strong>\r\n                                        </p>\r\n                                </div>\r\n                              </div>\r\n                        </div>\r\n                        <!--people-->\r\n                        <div class=\"kt-portlet__body px-3 py-3 project-people d-none\">\r\n                            <div class=\"d-flex align-items-center justify-content-between mb-3\">\r\n                                <div>\r\n                                    <div class=\"d-flex align-items-center\">\r\n                                        <div class=\"initial-box color-1\"><i class=\"fas fa-user\"></i>\r\n                                        </div>\r\n                                        <div class=\"owner-details ml-3\">\r\n                                            <span class=\"text-muted\">Owner</span>\r\n                                            <p class=\"text-dark text-hover-primary mb-0\">\r\n                                                <strong>{{Owner}}</strong>\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"d-flex align-items-center justify-content-between mb-3\">\r\n                                <div>\r\n                                    <div class=\"d-flex align-items-center\">\r\n                                        <div class=\"initial-box color-2\"><i class=\"fas fa-user\"></i></div>\r\n                                        <div class=\"owner-details ml-3\">\r\n                                            <span class=\"text-muted\">Responsible</span>\r\n                                            <p class=\"text-dark text-hover-primary mb-0\">\r\n                                                <strong>{{Resp}}</strong>\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"d-flex align-items-center justify-content-between mb-3\">\r\n                                <div>\r\n                                    <div class=\"d-flex align-items-center\">\r\n                                        <div class=\"initial-box color-3\"><i class=\"fas fa-user\"></i>\r\n                                        </div>\r\n                                        <div class=\"owner-details ml-3\">\r\n                                            <span class=\"text-muted\">Authority</span>\r\n                                            <p class=\"text-dark text-hover-primary mb-0\">\r\n                                                <strong>{{Autho}}</strong>\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"d-flex align-items-center justify-content-between mb-3\">\r\n                                <div>\r\n                                    <div class=\"d-flex align-items-center\">\r\n                                        <div class=\"initial-box color-4\"><i class=\"fas fa-user\"></i>\r\n                                        </div>\r\n                                        <div class=\"owner-details ml-3\">\r\n                                            <span class=\"text-muted\">Coordinator</span>\r\n                                            <p class=\"text-dark text-hover-primary mb-0\">\r\n                                                <strong>{{Coor}}</strong>\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"d-flex align-items-center justify-content-between mb-3\">\r\n                                <div>\r\n                                    <div class=\"d-flex align-items-center\">\r\n                                        <div class=\"initial-box color-5\">\r\n                                            <i class=\"fas fa-user\"></i>\r\n                                        </div>\r\n                                        <div class=\"owner-details ml-3\">\r\n                                            <span class=\"text-muted\">Informer</span>\r\n                                            <p class=\"text-dark text-hover-primary mb-0\">\r\n                                                <strong>{{Informer}}</strong>\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div class=\"d-flex align-items-center justify-content-between\">\r\n                                <div>\r\n                                    <div class=\"d-flex align-items-center\">\r\n                                        <div class=\"initial-box color-6\"><i class=\"fas fa-user\"></i>\r\n                                        </div>\r\n                                        <div class=\"owner-details ml-3\">\r\n                                            <span class=\"text-muted\">Support</span>\r\n                                            <p class=\"text-dark text-hover-primary mb-0\">\r\n                                                <strong>{{Support}}</strong>\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- For Update Project-->\r\n<div id=\"mysideInfobar_ProjectsUpdate\" class=\"sideInfobar animate-right offcanvas\">\r\n    <div class=\"px-4 pt-4 pb-1\">\r\n        <div class=\"offcanvas-header d-flex align-items-center justify-content-between pb-2\">\r\n          <h4 class=\"font-weight-bold m-0\">Project Completion</h4>\r\n          <a href=\"javascript:void(0)\" class=\"closebtn btn btn-xs btn-icon btn-hover-primary\"  (click)=\"closeInfoProject()\">\r\n            <i class=\"fa fa-times\"></i>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    <div class=\"px-4 pt-2\">\r\n        <div class=\"\">\r\n            <div class=\"d-flex align-items-center justify-content-between mt-0\">\r\n              <div>\r\n                <div class=\"my-2\">\r\n                  <label class=\"kt-badge kt-hover--primary kt-bg-light-primary kt-badge--inline\">\r\n                    <i class=\"fa fa-clone mr-2\"></i>{{this.Proj_ExecBlck}} </label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"d-flex mt-3 flex-column\">\r\n              <h5 class=\"fs-3 mb-2\">{{this._ProjectName}}</h5>\r\n              <span class=\"text-muted fs-5\">{{this.Proj_Desc}}</span>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group mt-3\">\r\n            <label>Attachments</label>\r\n            <div class=\"input-group mb-3\">\r\n                <div class=\"input-group-prepend\">\r\n                    <span class=\"input-group-text\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\"\r\n                            class=\"bi bi-upload\" viewBox=\"0 0 16 16\">\r\n                            <path\r\n                                d=\"M.5 9.9a.5.5 0 0 1 .5.5v2.5a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-2.5a.5.5 0 0 1 1 0v2.5a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2v-2.5a.5.5 0 0 1 .5-.5z\" />\r\n                            <path\r\n                                d=\"M7.646 1.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1-.708.708L8.5 2.707V11.5a.5.5 0 0 1-1 0V2.707L5.354 4.854a.5.5 0 1 1-.708-.708l3-3z\" />\r\n                        </svg>\r\n                    </span>\r\n                </div>\r\n                <div class=\"custom-file\">\r\n                    <input type=\"file\" class=\"custom-file-input\" id=\"_pdf\" accept=\"application/pdf\"\r\n                        (change)=\"onFileChange($event)\">\r\n                    <label class=\"custom-file-label\" id=\"upload\" for=\"_pdf\">Select a file</label>\r\n                </div>\r\n            </div>\r\n            <span class=\"text-info\"> *Accept only pdf files </span>\r\n        </div>\r\n        <!-- <div class=\"form-group\">\r\n            <label>Attachments 1 </label>\r\n            <div></div>\r\n            <div class=\"custom-file\">\r\n                <input type=\"file\" class=\"form-control-file\" id=\"_pdf\" accept=\"application/pdf\"\r\n                    (change)=\"onFileChange($event)\">\r\n            </div>\r\n        </div> -->\r\n\r\n        <!-- <div class=\"form-group\">\r\n            <label>Attachments 2</label>\r\n            <div></div>\r\n            <div class=\"custom-file\">\r\n                <input type=\"file\" class=\"form-control-file\" id=\"uploadFile\" (change)=\"onFileChange2($event)\">\r\n            </div>\r\n        </div> -->\r\n        <div class=\"form-group\">\r\n            <label for=\"exampleFormControlFile1\"> Remarks <span class=\"text-danger\">*</span></label>\r\n            <textarea class=\"form-control\" aria-label=\"With textarea\" [(ngModel)]=\"_remarks\"\r\n                style=\"height: 264px; margin-top: 0px; margin-bottom: 0px;\"></textarea>\r\n        </div>\r\n\r\n\r\n        <div class=\"form-group mb-1\">\r\n            <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"_remarks==''\" (click)=\"updateMainProject()\">Submit\r\n            </button>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- For Update Subtask -->\r\n<div id=\"mysideInfobar_Update\" class=\"sideInfobar animate-right offcanvas\">\r\n    <div class=\"px-4 pt-4 pb-1\">\r\n        <div class=\"offcanvas-header d-flex align-items-center justify-content-between pb-2\">\r\n          <h4 class=\"font-weight-bold m-0\"> Action Completion  </h4>\r\n          <a href=\"javascript:void(0)\" class=\"closebtn btn btn-xs btn-icon btn-hover-primary\"  (click)=\"closeInfo()\">\r\n            <i class=\"fa fa-times\"></i>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    <div class=\"px-4 pt-2\">        \r\n        <div class=\"\">\r\n            <div class=\"d-flex flex-column\">\r\n              <h5 class=\"fs-3 mb-2\">{{this._Subtaskname}}</h5>\r\n              <span class=\"text-muted fs-5\">{{this.Sub_Desc}}</span>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group mt-3\">\r\n            <label>Attachments</label>\r\n            <div class=\"input-group mb-3\">\r\n                <div class=\"input-group-prepend\">\r\n                    <span class=\"input-group-text\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\"\r\n                            class=\"bi bi-upload\" viewBox=\"0 0 16 16\">\r\n                            <path\r\n                                d=\"M.5 9.9a.5.5 0 0 1 .5.5v2.5a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-2.5a.5.5 0 0 1 1 0v2.5a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2v-2.5a.5.5 0 0 1 .5-.5z\" />\r\n                            <path\r\n                                d=\"M7.646 1.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1-.708.708L8.5 2.707V11.5a.5.5 0 0 1-1 0V2.707L5.354 4.854a.5.5 0 1 1-.708-.708l3-3z\" />\r\n                        </svg>\r\n                    </span>\r\n                </div>\r\n                <div class=\"custom-file\">\r\n                    <input  #myInput type=\"file\" class=\"custom-file-input\"   id=\"uploadFile\" accept=\"application/pdf\" [(ngModel)]=\"_upload\"\r\n                        (change)=\"onFileChange($event)\">\r\n                    <label class=\"custom-file-label\" id=\"_upload\" for=\"uploadFiles\">Select a file</label>\r\n                </div>\r\n            </div>\r\n            <span class=\"text-info\"> *Accept only pdf files </span>\r\n        </div>\r\n        \r\n        <!-- <div class=\"form-group\">\r\n            <label>Attachments</label>\r\n            <div></div>\r\n            <div class=\"custom-file\">\r\n                <input type=\"file\" class=\"form-control-file\" id=\"uploadFile\" accept=\"application/pdf\"\r\n                    (change)=\"onFileChange($event)\">\r\n            </div>\r\n        </div>\r\n         -->\r\n        <div class=\"form-group\">\r\n            <label for=\"exampleFormControlFile1\"><span class=\"text-danger\">*</span> Remarks</label>\r\n            <textarea class=\"form-control\" aria-label=\"With textarea\" [(ngModel)]=\"_remarks\"\r\n                style=\"margin-top: 0px; margin-bottom: 0px; height: 300px;\"></textarea>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"_remarks==''\"\r\n                (click)=\"OnUpdateSubtask()\">Submit</button>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- For  New Subtask  -->\r\n<!-- <div id=\" _NewSubtask\" class=\"sideInfobar animate-right offcanvas\">\r\n    <div class=\"p-4\">\r\n        <div class=\"offcanvas-header d-flex align-items-center justify-content-between pb-5\">\r\n            <h3 class=\"font-weight-bold m-0\">Action To Project</h3>\r\n            <a href=\"javascript:void(0)\" class=\"btn btn-xs btn-icon btn-hover-primary closebtn\" (click)=\"closeInfo()\">\r\n                <i class=\"fa fa-times\"></i>\r\n            </a>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label> Action Name <span class=\"text-danger\">*</span></label>\r\n            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"Sub_ProjectName\" required />\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label>Description</label>\r\n            <textarea class=\"form-control\" [(ngModel)]=\"_Description\" style=\"height: 139px\"></textarea>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label> Assign To <span class=\"text-danger\">*</span> : <strong></strong></label>\r\n            <ng-multiselect-dropdown [placeholder]=\"'Select Employee'\" [settings]=\"dropdownSettings_EMP\" autofocus=\"true\"\r\n                [data]=\"_EmployeeListForDropdown\" [(ngModel)]=\"selected_Employee\" (onSelect)=\"EmployeeOnSelect($event)\"\r\n                (onDeSelect)=\"EmployeeOnDeselect($event)\">\r\n            </ng-multiselect-dropdown>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <div class=\"input-group\">\r\n                <input matInput [matDatepicker]=\"picker1\" (click)=\"picker1.open()\" [min]=\"disablePreviousDate\" [(ngModel)]=\"_StartDate\"\r\n                    placeholder=\"Start Date\" class=\"form-control\">\r\n                <div class=\"input-group-text p-0\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker1></mat-datepicker>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <div class=\"input-group\">\r\n                <input matInput [matDatepicker]=\"picker2\" (click)=\"picker2.open()\" [min]=\"disablePreviousDate\" [(ngModel)]=\"_EndDate\"\r\n                    placeholder=\"End Date\" class=\"form-control\">\r\n                <div class=\"input-group-text p-0\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker2></mat-datepicker>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n        <div class=\"form-group\">\r\n            <label for=\"exampleFormControlFile1\">Remarks</label>\r\n            <textarea class=\"form-control\" aria-label=\"With textarea\" [(ngModel)]=\"_remarks\"\r\n                style=\"height: 111px;\"></textarea>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n            <div class=\"custom-file pl-1\">\r\n                <input type=\"file\" class=\"form-control-file\" id=\"uploadFile\" accept=\"application/pdf\"\r\n                    (change)=\"onFileChangeATP($event)\">\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group mb-1\">\r\n            <button type=\"submit\" class=\"btn btn-primary\" (click)=\"OnSubmit()\"\r\n                [disabled]=\"Sub_ProjectName==''|| _StartDate==null || _EndDate==null||selectedEmpNo==''\">Submit\r\n            </button>\r\n        </div>\r\n    </div>\r\n</div> -->\r\n\r\n\r\n\r\n<!-- Project Info Details -->\r\n<div id=\"mysideInfobar\" class=\"sideInfobar animate-right\">\r\n    <div><router-outlet></router-outlet></div>\r\n    \r\n</div>\r\n\r\n<div id=\"rightbar-overlay\" (click)=\"closeInfo()\"></div>\r\n<!-- <mat-form-field class=\"example-full-width\">\r\n    <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"picker\" placeholder=\"Choose a date\">\r\n    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n    <mat-datepicker #picker></mat-datepicker>\r\n</mat-form-field> -->","export class ApprovalDTO {\r\n\r\n    Project_Code: string;\r\n    Emp_no: string;\r\n    Request_type: string;\r\n    Status: string;\r\n    Remarks: string;\r\n    message: string;\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { ApprovalDTO } from '../_Models/approval-dto';\r\nimport { ApiurlService } from './apiurl.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApprovalsService {\r\n\r\n  obj_approvalDTO: ApprovalDTO;\r\n\r\n  constructor(private http: HttpClient, private commonUrl: ApiurlService) {\r\n      this.obj_approvalDTO = new ApprovalDTO();\r\n   }\r\n\r\n   readonly rootUrl = this.commonUrl.apiurl;\r\n\r\n   GetApprovalStatus(obj: ApprovalDTO) {\r\n    this.obj_approvalDTO.Project_Code = obj.Project_Code;\r\n    \r\n    return this.http.post(this.rootUrl + \"ApprovalAPI/NewGetApprovalStatus\", this.obj_approvalDTO);\r\n\r\n  }\r\n\r\n\r\n  InsertAcceptApprovalService(obj: ApprovalDTO) {\r\n    this.obj_approvalDTO.Emp_no = obj.Emp_no;\r\n    this.obj_approvalDTO.Project_Code = obj.Project_Code;\r\n    this.obj_approvalDTO.Request_type = obj.Request_type;\r\n    this.obj_approvalDTO.Remarks = obj.Remarks;\r\n\r\n    return this.http.post(this.rootUrl + \"ApprovalAPI/NewInsertAcceptApprovalService\", this.obj_approvalDTO);\r\n\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}