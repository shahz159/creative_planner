{"version":3,"sources":["./node_modules/@amcharts/amcharts4/.internal/plugins/forceDirected/ForceDirectedLink.js","./node_modules/@amcharts/amcharts4/.internal/plugins/forceDirected/ForceDirectedNode.js","./node_modules/@amcharts/amcharts4/.internal/plugins/forceDirected/ForceDirectedSeries.js","./node_modules/@amcharts/amcharts4/.internal/plugins/forceDirected/ForceDirectedTree.js","./node_modules/@amcharts/amcharts4/plugins/forceDirected.js","./node_modules/d3-dispatch/src/dispatch.js","./node_modules/d3-dispatch/src/index.js","./node_modules/d3-force/src/center.js","./node_modules/d3-force/src/collide.js","./node_modules/d3-force/src/constant.js","./node_modules/d3-force/src/index.js","./node_modules/d3-force/src/jiggle.js","./node_modules/d3-force/src/lcg.js","./node_modules/d3-force/src/link.js","./node_modules/d3-force/src/manyBody.js","./node_modules/d3-force/src/radial.js","./node_modules/d3-force/src/simulation.js","./node_modules/d3-force/src/x.js","./node_modules/d3-force/src/y.js","./node_modules/d3-quadtree/src/add.js","./node_modules/d3-quadtree/src/cover.js","./node_modules/d3-quadtree/src/data.js","./node_modules/d3-quadtree/src/extent.js","./node_modules/d3-quadtree/src/find.js","./node_modules/d3-quadtree/src/index.js","./node_modules/d3-quadtree/src/quad.js","./node_modules/d3-quadtree/src/quadtree.js","./node_modules/d3-quadtree/src/remove.js","./node_modules/d3-quadtree/src/root.js","./node_modules/d3-quadtree/src/size.js","./node_modules/d3-quadtree/src/visit.js","./node_modules/d3-quadtree/src/visitAfter.js","./node_modules/d3-quadtree/src/x.js","./node_modules/d3-quadtree/src/y.js","./node_modules/d3-timer/src/index.js","./node_modules/d3-timer/src/interval.js","./node_modules/d3-timer/src/timeout.js","./node_modules/d3-timer/src/timer.js","./src/app/_LayoutDashboard/projects-chart/projects-chart-routing.module.ts","./src/app/_LayoutDashboard/projects-chart/projects-chart.component.ts","./src/app/_LayoutDashboard/projects-chart/projects-chart.component.html","./src/app/_LayoutDashboard/projects-chart/projects-chart.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACkC;AAClC;AACA;AACA;AACA;AACA;AACA;AAC2C;AACI;AACwB;AACpB;AACS;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,+BAA+B;AACxC,SAAS,iCAAiC;AAC1C;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,+EAAiB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,2DAAY,EAAE,qCAAqC,IAAI,2DAAY,EAAE,qCAAqC;AAClI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,2DAAO;AAClC,gBAAgB,mEAAO;AACvB;AACA,yBAAyB,2DAAO;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,2DAAO;AAClC,gBAAgB,mEAAO;AACvB;AACA,yBAAyB,2DAAO;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC,mDAAM;AACqB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,uDAAQ;AACR,6C;;;;;;;;;;;;ACpOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACiD;AACF;AACK;AACF;AACqB;AACxB;AAC8B;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,+BAA+B;AACxC,SAAS,iCAAiC;AAC1C;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,iEAAU;AACxC,kCAAkC,yEAAkB;AACpD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,4CAA4C,4DAAM;AAClD;AACA;AACA;AACA,0BAA0B,+EAAiB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,4DAAM;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,0DAAK;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,yDAAc;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,yDAAc;AAC9B;AACA;AACA;AACA;AACA,uCAAuC,wCAAwC;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,CAAC,CAAC,yDAAS;AACkB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,uDAAQ;AACR,6C;;;;;;;;;;;;AC1SA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACkC;AACkC;AACrB;AAC0B;AACjB;AACH;AACG;AACH;AACjB;AACW;AACA;AACE;AACA;AACW;AACI;AACQ;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,qDAAI;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,0DAAc;AAC/B;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,6DAAQ;AACjD;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,CAAC,CAAC,oEAAc;AACuB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iCAAiC;AAC1C,SAAS,mCAAmC;AAC5C,SAAS,sEAAsE;AAC/E;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,wDAAuB;AACzD,0BAA0B,oEAAO;AACjC,0BAA0B,oEAAO;AACjC,sBAAsB,oEAAO;AAC7B,uBAAuB,oEAAO;AAC9B,2BAA2B,6DAAQ;AACnC;AACA,sBAAsB,oEAAO;AAC7B,uBAAuB,oEAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,oBAAoB,oDAAS;AAC7B,oBAAoB,oDAAS;AAC7B;AACA,6CAA6C,+CAAc;AAC3D,6CAA6C,+CAAc;AAC3D;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,6DAAY;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,0DAAc;AACxC;AACA;AACA;AACA,yDAAyD,oDAAS;AAClE;AACA,0BAA0B,0DAAc;AACxC;AACA;AACA;AACA,0DAA0D,oDAAS;AACnE;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,0DAAc;AACpC;AACA;AACA,sBAAsB,0DAAc;AACpC;AACA;AACA;AACA,kCAAkC,4DAAO;AACzC,0BAA0B,kEAAsB;AAChD;AACA;AACA;AACA;AACA,kCAAkC,4DAAO;AACzC,0BAA0B,kEAAsB;AAChD;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,kDAAiB;AAC3C;AACA,+BAA+B,qDAAoB;AACnD;AACA,gBAAgB,oDAAS;AACzB,gBAAgB,oDAAS;AACzB,qCAAqC,+CAAc;AACnD,qCAAqC,+CAAc;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,oCAAoC,oEAAiB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,iDAAiD,sDAAqB;AACtE,gCAAgC,oEAAiB;AACjD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,kEAAsB;AAC9C,wBAAwB,kEAAsB;AAC9C;AACA,aAAa,0DAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,yEAAgB;AACnD;AACA;AACA,mCAAmC,yEAAgB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uCAAuC,wCAAwC;AAC/E;AACA;AACA;AACA;AACA;AACA,sDAAsD,oDAAS;AAC/D,sDAAsD,oDAAS;AAC/D;AACA;AACA;AACA,oBAAoB,0DAAc;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,uDAAW;AACvB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,QAAQ;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,6DAAY;AAC9C,yCAAyC,6DAAY;AACrD;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,6DAAY;AAC9C,yCAAyC,6DAAY;AACrD;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,mBAAmB,oEAAiB;AACpC;AACA;AACA;AACA;AACA;AACA,mBAAmB,oEAAiB;AACpiBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,iFAAgB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,CAAC,CAAC,4DAAM;AACuB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,uDAAQ;AACR,uDAAQ;AACR,+C;;;;;;;;;;;;ACzpCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACkF;AACtB;AACb;AACA;AACE;AACF;AACI;AACJ;AACA;AACmB;AACE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA,CAAC,CAAC,6EAAmB;AACgB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,+BAA+B;AACxC,SAAS,iCAAiC;AAC1C,SAAS,mEAAmE;AAC5E;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,yDAAc;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,+DAAK;AACrD,8CAA8C,2EAAa;AAC3D;AACA,0BAA0B,mEAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,0BAA0B,qFAAc;AACxC;AACA;AACA,+BAA+B,oEAAyB;AACxD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,wEAAmB;AACtC;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,yDAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,yDAAc;AACtC;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uEAA4B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,2DAAgB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,uBAAuB,kEAAuB;AAC9C;AACA;AACA;AACA,4BAA4B,mCAAmC,GAAG,uBAAuB,GAAG,uBAAuB;AACnH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,yDAAc;AAC3B;AACA;AACA,0BAA0B,aAAa;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,4DAA4D;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,2EAA2E;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,CAAC,CAAC,qEAAW;AACgB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,uDAAQ;AACR,uDAAQ;AACR,6C;;;;;;;;;;;;AC7aA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqE;AACA;AACA;AACE;AACvE,yC;;;;;;;;;;;;ACJA;AAAA,YAAY;;AAEZ;AACA,8CAA8C,IAAI,OAAO;AACzD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA,iBAAiB;AACjB;AACA;AACA,GAAG;AACH;AACA,kFAAkF,OAAO;AACzF;AACA,+CAA+C,OAAO;AACtD,GAAG;AACH;AACA;AACA,mDAAmD,OAAO;AAC1D;AACA;;AAEA;AACA,qCAAqC,OAAO;AAC5C;AACA;AACA;AACA;AACA;;AAEA;AACA,kCAAkC,OAAO;AACzC;AACA;AACA;AACA;AACA;AACA,mCAAmC,4BAA4B;AAC/D;AACA;;AAEe,uEAAQ,EAAC;;;;;;;;;;;;;ACnFxB;AAAA;AAAA;AAAA;AAAkD;;;;;;;;;;;;;ACAlD;AAAe;AACf;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,OAAO;AACtB;AACA;;AAEA,2EAA2E,OAAO;AAClF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;;;;;;;ACvCD;AAAA;AAAA;AAAA;AAAqC;AACA;AACJ;;AAEjC;AACA;AACA;;AAEA;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA;AACA;;AAEA,6CAA6C,4DAAQ;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,gBAAgB;AACnC,aAAa,4DAAQ;AACrB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,0DAAM;AACnC,6BAA6B,0DAAM;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B,OAAO;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,sEAAsE,4DAAQ;AAC9E;;AAEA;AACA,CAAC;;;;;;;;;;;;;ACnGD;AAAe;AACf;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;ACJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmD;AACE;AACN;AACQ;AACJ;AACQ;AAClB;AACA;;;;;;;;;;;;;ACPzC;AAAe;AACf;AACA,CAAC;;;;;;;;;;;;;ACFD;AAAA;AACA;AACA;AACA,qBAAqB;;AAEN;AACf;AACA;AACA,CAAC;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAqC;AACJ;;AAEjC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA,iBAAiB,4DAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,qCAAqC,gBAAgB;AACrD,uDAAuD,OAAO;AAC9D;AACA,2DAA2D,0DAAM;AACjE,2DAA2D,0DAAM;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,qCAAqC,OAAO;AAC5C;AACA;AACA;AACA;AACA;AACA;;AAEA,oCAAoC,OAAO;AAC3C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,qCAAqC,OAAO;AAC5C;AACA;AACA;;AAEA;AACA;;AAEA,qCAAqC,OAAO;AAC5C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,wEAAwE,4DAAQ;AAChF;;AAEA;AACA,wEAAwE,4DAAQ;AAChF;;AAEA;AACA,CAAC;;;;;;;;;;;;;ACpHD;AAAA;AAAA;AAAA;AAAA;AAAqC;AACA;AACJ;AACI;;AAEtB;AACf;AACA;AACA;AACA;AACA,iBAAiB,4DAAQ;AACzB;AACA;AACA;AACA;;AAEA;AACA,oCAAoC,4DAAQ,QAAQ,gDAAC,EAAE,gDAAC;AACxD,0BAA0B,OAAO;AACjC;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;;AAEA;AACA;;AAEA;AACA;AACA,yBAAyB,OAAO;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,yCAAyC;AACzC;AACA;AACA,yBAAyB,0DAAM;AAC/B,yBAAyB,0DAAM;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,yCAAyC;AACzC;AACA,uBAAuB,0DAAM;AAC7B,uBAAuB,0DAAM;AAC7B;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,wEAAwE,4DAAQ;AAChF;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;;;;;;;ACnHD;AAAA;AAAqC;;AAEtB;AACf;AACA,iBAAiB,4DAAQ;AACzB;AACA;;AAEA,6CAA6C,4DAAQ;AACrD;AACA;;AAEA;AACA,qCAAqC,OAAO;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,wEAAwE,4DAAQ;AAChF;;AAEA;AACA,sEAAsE,4DAAQ;AAC9E;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;;;;;;;ACxDD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqC;AACN;AACJ;;AAEpB;AACP;AACA;;AAEO;AACP;AACA;;AAEA;AACA;;AAEe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,sDAAK;AACrB,cAAc,4DAAQ;AACtB,eAAe,uDAAG;;AAElB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,mBAAmB,gBAAgB;AACnC;;AAEA;AACA;AACA,OAAO;;AAEP,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,2CAA2C,OAAO;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;AC3JD;AAAA;AAAqC;;AAEtB;AACf,iBAAiB,4DAAQ;AACzB;AACA;AACA;;AAEA,mCAAmC,4DAAQ;;AAE3C;AACA,2CAA2C,OAAO;AAClD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,wEAAwE,4DAAQ;AAChF;;AAEA;AACA,iEAAiE,4DAAQ;AACzE;;AAEA;AACA,CAAC;;;;;;;;;;;;;ACxCD;AAAA;AAAqC;;AAEtB;AACf,iBAAiB,4DAAQ;AACzB;AACA;AACA;;AAEA,mCAAmC,4DAAQ;;AAE3C;AACA,2CAA2C,OAAO;AAClD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,wEAAwE,4DAAQ;AAChF;;AAEA;AACA,iEAAiE,4DAAQ;AACzE;;AAEA;AACA,CAAC;;;;;;;;;;;;;ACxCD;AAAA;AAAe;AACf;AACA;AACA;AACA,CAAC;;AAED;AACA,wCAAwC;;AAExC;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,mDAAmD;AACnD,oDAAoD;AACpD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mDAAmD;AACnD,oDAAoD;AACpD,GAAG;AACH;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;;AAEA;AACA;;;;;;;;;;;;;ACnFA;AAAe;AACf,kDAAkD;;AAElD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yCAAyC;AACzC,yCAAyC;AACzC,yCAAyC;AACzC,yCAAyC;AACzC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;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","file":"_LayoutDashboard-projects-chart-projects-chart-module.js","sourcesContent":["/**\r\n * ForceDirectedLink module.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\nimport { percent, Percent } from \"../../core/utils/Percent\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * A class that builds links between [[ForceDirectedNode]] elements.\r\n *\r\n * @see {@link IForceDirectedLinkEvents} for a list of available events\r\n * @see {@link IForceDirectedLinkAdapters} for a list of available Adapters\r\n * @since 4.3.8\r\n * @important\r\n */\r\nvar ForceDirectedLink = /** @class */ (function (_super) {\r\n    __extends(ForceDirectedLink, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ForceDirectedLink() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"ForceDirectedLink\";\r\n        var interfaceColors = new InterfaceColorSet();\r\n        _this.fillOpacity = 0;\r\n        _this.strokeOpacity = 0.5;\r\n        _this.stroke = interfaceColors.getFor(\"grid\");\r\n        _this.isMeasured = false;\r\n        _this.nonScalingStroke = true;\r\n        _this.interactionsEnabled = false;\r\n        _this.distance = 1.5;\r\n        _this.strength = 1;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Validates element:\r\n     * * Triggers events\r\n     * * Redraws the element\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    ForceDirectedLink.prototype.validate = function () {\r\n        _super.prototype.validate.call(this);\r\n        var source = this.source;\r\n        var target = this.target;\r\n        if (source && target) {\r\n            this.path = $path.moveTo({ x: source.pixelX, y: source.pixelY }) + $path.lineTo({ x: target.pixelX, y: target.pixelY });\r\n            if (source.isHidden || target.isHidden || source.isHiding || target.isHiding) {\r\n                this.hide();\r\n            }\r\n            else {\r\n                this.show();\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(ForceDirectedLink.prototype, \"source\", {\r\n        /**\r\n         * @return Source node\r\n         */\r\n        get: function () {\r\n            return this._source;\r\n        },\r\n        /**\r\n         * Source node - a node link starts from.\r\n         *\r\n         * @param  value  Source node\r\n         */\r\n        set: function (value) {\r\n            if (value) {\r\n                this._source = value;\r\n                this._disposers.push(value.events.on(\"positionchanged\", this.invalidate, this, false));\r\n                this._disposers.push(value.events.on(\"validated\", this.invalidate, this, false));\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ForceDirectedLink.prototype, \"target\", {\r\n        /**\r\n         * @return Target node\r\n         */\r\n        get: function () {\r\n            return this._target;\r\n        },\r\n        /**\r\n         * Target node - a node link ends at.\r\n         *\r\n         * @param  value  Target node\r\n         */\r\n        set: function (value) {\r\n            if (value) {\r\n                this._target = value;\r\n                this._disposers.push(value.events.on(\"positionchanged\", this.invalidate, this, false));\r\n                this._disposers.push(value.events.on(\"validated\", this.invalidate, this, false));\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ForceDirectedLink.prototype, \"distance\", {\r\n        /**\r\n         * @return Distance\r\n         */\r\n        get: function () {\r\n            if (this._adapterO) {\r\n                if (this._adapterO.isEnabled(\"distance\")) {\r\n                    return this._adapterO.apply(\"distance\", this.properties.distance);\r\n                }\r\n            }\r\n            return this.properties.distance;\r\n        },\r\n        /**\r\n         * Distance between centers of source and target nodes.\r\n         *\r\n         * This is relative to the radii to sum of both source and target nodes.\r\n         *\r\n         * E.g. if this would be set to `1` both nodes would be touching each other.\r\n         *\r\n         * @default 1.5\r\n         * @param  value  Distance\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"distance\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ForceDirectedLink.prototype, \"strength\", {\r\n        /**\r\n         * @return Strength\r\n         */\r\n        get: function () {\r\n            if (this._adapterO) {\r\n                if (this._adapterO.isEnabled(\"strength\")) {\r\n                    return this._adapterO.apply(\"strength\", this.properties.strength);\r\n                }\r\n            }\r\n            return this.properties.strength;\r\n        },\r\n        /**\r\n         * Relative \"strength\" of the traction between linked nodes.\r\n         *\r\n         * Available values: 0 to XX.\r\n         *\r\n         * The bigger the number, the more rigid the link and the less it will\r\n         * stretch when node is dragged.\r\n         *\r\n         * Carefully with very big numbers: nodes and links might start behaving\r\n         * quite \"nerviously\".\r\n         *\r\n         * @default 1\r\n         * @param  value  Strength\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"strength\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * X coordinate for the slice tooltip.\r\n     *\r\n     * @ignore\r\n     * @return X\r\n     */\r\n    ForceDirectedLink.prototype.getTooltipX = function () {\r\n        var x = this.getPropertyValue(\"tooltipX\");\r\n        if (!(x instanceof Percent)) {\r\n            x = percent(50);\r\n        }\r\n        if (x instanceof Percent) {\r\n            var source = this.source;\r\n            var target = this.target;\r\n            if (source && target) {\r\n                var x1 = source.pixelX;\r\n                var x2 = target.pixelX;\r\n                return x1 + (x2 - x1) * x.value;\r\n            }\r\n        }\r\n        return 0;\r\n    };\r\n    /**\r\n     * Y coordinate for the slice tooltip.\r\n     *\r\n     * @ignore\r\n     * @return Y\r\n     */\r\n    ForceDirectedLink.prototype.getTooltipY = function () {\r\n        var y = this.getPropertyValue(\"tooltipY\");\r\n        if (!(y instanceof Percent)) {\r\n            y = percent(50);\r\n        }\r\n        if (y instanceof Percent) {\r\n            var source = this.source;\r\n            var target = this.target;\r\n            if (source && target) {\r\n                var y1 = source.pixelY;\r\n                var y2 = target.pixelY;\r\n                return y1 + (y2 - y1) * y.value;\r\n            }\r\n        }\r\n        return 0;\r\n    };\r\n    return ForceDirectedLink;\r\n}(Sprite));\r\nexport { ForceDirectedLink };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ForceDirectedLink\"] = ForceDirectedLink;\r\n//# sourceMappingURL=ForceDirectedLink.js.map","/**\r\n * Module that defines everything related to building ForceDirectedNodes.\r\n *\r\n * It is a container which has ForceDirectedNode element which is a RoundedRectangle.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container } from \"../../core/Container\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { Circle } from \"../../core/elements/Circle\";\r\nimport { Label } from \"../../core/elements/Label\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { Dictionary, DictionaryDisposer } from \"../../core/utils/Dictionary\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Class used to creates [[ForceDirectedNode]] elements (circles).\r\n *\r\n * @see {@link IForceDirectedNodeEvents} for a list of available events\r\n * @see {@link IForceDirectedNodeAdapters} for a list of available Adapters\r\n * @since 4.3.8\r\n * @important\r\n */\r\nvar ForceDirectedNode = /** @class */ (function (_super) {\r\n    __extends(ForceDirectedNode, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ForceDirectedNode() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"ForceDirectedNode\";\r\n        //this.isMeasured = true; // for correct position of the tooltip\r\n        _this.applyOnClones = true;\r\n        _this.togglable = true;\r\n        _this.draggable = true;\r\n        _this.setStateOnChildren = true;\r\n        _this.isActive = false;\r\n        _this.expandAll = true;\r\n        _this.paddingRadius = 0;\r\n        _this.linksWith = new Dictionary();\r\n        _this._disposers.push(new DictionaryDisposer(_this.linksWith));\r\n        _this.events.on(\"dragstart\", function () {\r\n            if (_this.dataItem.component) {\r\n                _this.dataItem.component.nodeDragStarted();\r\n            }\r\n        }, _this, false);\r\n        _this.events.on(\"drag\", function () {\r\n            _this.updateSimulation();\r\n        }, _this, false);\r\n        var outerCircle = _this.createChild(Circle);\r\n        outerCircle.shouldClone = false;\r\n        outerCircle.strokeWidth = 2;\r\n        outerCircle.nonScalingStroke = true;\r\n        var bgColor = new InterfaceColorSet().getFor(\"background\");\r\n        outerCircle.fill = bgColor;\r\n        _this.outerCircle = outerCircle;\r\n        var hoverState = outerCircle.states.create(\"hover\");\r\n        hoverState.properties.scale = 1.1;\r\n        var outerActiveState = outerCircle.states.create(\"active\");\r\n        outerActiveState.properties.scale = 1.1;\r\n        outerActiveState.properties.visible = true;\r\n        var activeHoverState = outerCircle.states.create(\"hoverActive\");\r\n        activeHoverState.properties.scale = 1;\r\n        var circle = _this.createChild(Circle);\r\n        var activeState = circle.states.create(\"active\");\r\n        activeState.properties.visible = true;\r\n        circle.shouldClone = false;\r\n        circle.interactionsEnabled = false;\r\n        circle.hiddenState.properties.radius = 0.01;\r\n        circle.events.on(\"validated\", _this.updateSimulation, _this, false);\r\n        circle.hiddenState.properties.visible = true;\r\n        _this.circle = circle;\r\n        _this.addDisposer(circle.events.on(\"validated\", _this.updateLabelSize, _this, false));\r\n        _this._disposers.push(_this.circle);\r\n        var label = _this.createChild(Label);\r\n        label.shouldClone = false;\r\n        label.horizontalCenter = \"middle\";\r\n        label.verticalCenter = \"middle\";\r\n        label.fill = bgColor;\r\n        label.strokeOpacity = 0;\r\n        label.interactionsEnabled = false;\r\n        label.textAlign = \"middle\";\r\n        label.textValign = \"middle\";\r\n        label.nonScaling = true;\r\n        _this.label = label;\r\n        _this.adapter.add(\"tooltipY\", function (y, target) {\r\n            return -target.circle.pixelRadius;\r\n        });\r\n        return _this;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    ForceDirectedNode.prototype.updateLabelSize = function () {\r\n        if (this.label.text) {\r\n            var circle = this.circle;\r\n            var radius = circle.pixelRadius;\r\n            var ds = circle.defaultState;\r\n            var dsRadius = ds.properties.radius;\r\n            if ($type.isNumber(dsRadius)) {\r\n                radius = dsRadius;\r\n            }\r\n            this.label.width = 2 * radius;\r\n            this.label.height = 2 * radius;\r\n        }\r\n    };\r\n    /**\r\n     * Copies all parameters from another [[ForceDirectedNode]].\r\n     *\r\n     * @param source Source ForceDirectedNode\r\n     */\r\n    ForceDirectedNode.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        if (this.circle) {\r\n            this.circle.copyFrom(source.circle);\r\n        }\r\n        if (this.label) {\r\n            this.label.copyFrom(source.label);\r\n        }\r\n        if (this.outerCircle) {\r\n            this.outerCircle.copyFrom(source.outerCircle);\r\n        }\r\n    };\r\n    /**\r\n     * Sets node as \"active\" (expanded).\r\n     *\r\n     * @ignore\r\n     * @param  value  Active or not?\r\n     */\r\n    ForceDirectedNode.prototype.setActive = function (value) {\r\n        var _this = this;\r\n        _super.prototype.setActive.call(this, value);\r\n        var dataItem = this.dataItem;\r\n        if (dataItem) {\r\n            var children = dataItem.children;\r\n            var component = dataItem.component;\r\n            if (!component.dataItemsInvalid) {\r\n                if (value && children && !dataItem.childrenInited) {\r\n                    component.initNode(dataItem);\r\n                    component.updateNodeList();\r\n                }\r\n                if (value) {\r\n                    this.show();\r\n                    if (children) {\r\n                        children.each(function (child) {\r\n                            child.node.show();\r\n                            child.node.interactionsEnabled = true;\r\n                            if (child.parentLink) {\r\n                                child.parentLink.show();\r\n                            }\r\n                            if (_this.expandAll) {\r\n                                child.node.isActive = true;\r\n                            }\r\n                            else {\r\n                                child.node.isActive = false;\r\n                                //child.node.hide(0)\r\n                            }\r\n                        });\r\n                    }\r\n                    dataItem.dispatchVisibility(true);\r\n                }\r\n                else {\r\n                    if (children) {\r\n                        children.each(function (child) {\r\n                            if (child.parentLink) {\r\n                                child.parentLink.hide();\r\n                            }\r\n                            child.node.isActive = false;\r\n                            child.node.interactionsEnabled = false;\r\n                            child.node.hide();\r\n                        });\r\n                    }\r\n                    dataItem.dispatchVisibility(false);\r\n                }\r\n            }\r\n        }\r\n        this.updateSimulation();\r\n    };\r\n    /**\r\n     * @ignore\r\n     * @todo description\r\n     */\r\n    ForceDirectedNode.prototype.updateSimulation = function () {\r\n        var dataItem = this.dataItem;\r\n        if (dataItem && dataItem.component) {\r\n            dataItem.component.restartSimulation();\r\n        }\r\n    };\r\n    Object.defineProperty(ForceDirectedNode.prototype, \"expandAll\", {\r\n        /**\r\n         * @return Expand all?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"expandAll\");\r\n        },\r\n        /**\r\n         * If set to `true` (default) toggling a node on will automatically expand\r\n         * all nodes across the whole tree (all levels) of its descendants.\r\n         *\r\n         * Setting to `false` will only expand immediate children (one level).\r\n         *\r\n         * @default true\r\n         * @since 4.4.8\r\n         * @param  value  Expand all?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"expandAll\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a new link between two nodes.\r\n     *\r\n     * Use this method to dynamically add links without requiring to revalidate\r\n     * whole of the data.\r\n     *\r\n     * @since 4.4.8\r\n     * @param   node      Target node\r\n     * @param   strength  Link strength\r\n     * @return            New link\r\n     */\r\n    ForceDirectedNode.prototype.linkWith = function (node, strength) {\r\n        var link = this.linksWith.getKey(node.uid);\r\n        if (!link) {\r\n            link = node.linksWith.getKey(this.uid);\r\n        }\r\n        if (!link) {\r\n            var dataItem = this.dataItem;\r\n            var component = dataItem.component;\r\n            link = component.links.create();\r\n            link.parent = component;\r\n            link.zIndex = -1;\r\n            link.source = this;\r\n            link.target = node;\r\n            link.stroke = dataItem.node.fill;\r\n            link.dataItem = node.dataItem;\r\n            if ($type.isNumber(strength)) {\r\n                link.strength = strength;\r\n            }\r\n            var nodeIndex = component.nodes.indexOf(dataItem.node);\r\n            var childIndex = component.nodes.indexOf(node);\r\n            component.forceLinks.push({ source: nodeIndex, target: childIndex });\r\n            component.updateNodeList();\r\n            dataItem.childLinks.push(link);\r\n            this.linksWith.setKey(node.uid, link);\r\n        }\r\n        return link;\r\n    };\r\n    /**\r\n     * Removes a link between two nodes.\r\n     *\r\n     * @since 4.4.8\r\n     * @param  node  Target node\r\n     */\r\n    ForceDirectedNode.prototype.unlinkWith = function (node) {\r\n        this.linksWith.removeKey(node.uid);\r\n    };\r\n    Object.defineProperty(ForceDirectedNode.prototype, \"paddingRadius\", {\r\n        /**\r\n         * @return Padding radius\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"paddingRadius\");\r\n        },\r\n        /**\r\n         * Padding of the nodes, in pixels.\r\n         *\r\n         * @since 4.6.7\r\n         * @default 0\r\n         * @param  value  padding radius\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"paddingRadius\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ForceDirectedNode;\r\n}(Container));\r\nexport { ForceDirectedNode };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ForceDirectedNode\"] = ForceDirectedNode;\r\n//# sourceMappingURL=ForceDirectedNode.js.map","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { __extends } from \"tslib\";\r\nimport { Series, SeriesDataItem } from \"../../charts/series/Series\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { ListTemplate, ListDisposer, List } from \"../../core/utils/List\";\r\nimport { ForceDirectedNode } from \"./ForceDirectedNode\";\r\nimport { Disposer } from \"../../core/utils/Disposer\";\r\nimport { ForceDirectedLink } from \"./ForceDirectedLink\";\r\nimport { ColorSet } from \"../../core/utils/ColorSet\";\r\nimport * as d3force from \"d3-force\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport { Percent, percent } from \"../../core/utils/Percent\";\r\nimport { MouseCursorStyle } from \"../../core/interaction/Mouse\";\r\nimport { RoundedRectangle } from \"../../core/elements/RoundedRectangle\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[ForceDirectedSeries]].\r\n *\r\n * @see {@link DataItem}\r\n * @since 4.3.8\r\n */\r\nvar ForceDirectedSeriesDataItem = /** @class */ (function (_super) {\r\n    __extends(ForceDirectedSeriesDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ForceDirectedSeriesDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * Have all children already been initialized?\r\n         */\r\n        _this.childrenInited = false;\r\n        _this.className = \"ForceDirectedSeriesDataItem\";\r\n        _this.hasChildren.children = true;\r\n        _this.childLinks = new List();\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Shows the Data Item and related visual elements.\r\n     *\r\n     * @param duration  Animation duration (ms)\r\n     * @param delay     Delay animation (ms)\r\n     * @param fields    A list of fields to set values of\r\n     */\r\n    ForceDirectedSeriesDataItem.prototype.show = function (duration, delay, fields) {\r\n        this._visible = true;\r\n        if (this.node) {\r\n            this.node.isActive = true;\r\n        }\r\n        return;\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    ForceDirectedSeriesDataItem.prototype.dispatchVisibility = function (visible) {\r\n        if (this.events.isEnabled(\"visibilitychanged\")) {\r\n            var event_1 = {\r\n                type: \"visibilitychanged\",\r\n                target: this,\r\n                visible: visible\r\n            };\r\n            this.events.dispatchImmediately(\"visibilitychanged\", event_1);\r\n        }\r\n    };\r\n    /**\r\n     * Hides the Data Item and related visual elements.\r\n     *\r\n     * @param duration  Animation duration (ms)\r\n     * @param delay     Delay animation (ms)\r\n     * @param toValue   A value to set to `fields` when hiding\r\n     * @param fields    A list of data fields to set value to `toValue`\r\n     */\r\n    ForceDirectedSeriesDataItem.prototype.hide = function (duration, delay, toValue, fields) {\r\n        this._visible = false;\r\n        if (this.events.isEnabled(\"visibilitychanged\")) {\r\n            var event_2 = {\r\n                type: \"visibilitychanged\",\r\n                target: this,\r\n                visible: false\r\n            };\r\n            this.events.dispatchImmediately(\"visibilitychanged\", event_2);\r\n        }\r\n        if (this.node) {\r\n            this.node.isActive = false;\r\n        }\r\n        return;\r\n    };\r\n    Object.defineProperty(ForceDirectedSeriesDataItem.prototype, \"value\", {\r\n        /**\r\n         * @return Value\r\n         */\r\n        get: function () {\r\n            var value = this.values.value.value;\r\n            if (!$type.isNumber(value)) {\r\n                if (this.children) {\r\n                    value = 0;\r\n                    this.children.each(function (child) {\r\n                        value += child.value;\r\n                    });\r\n                }\r\n            }\r\n            return value;\r\n        },\r\n        /**\r\n         * Numeric value of the item.\r\n         *\r\n         * @param value  Value\r\n         */\r\n        set: function (value) {\r\n            this.setValue(\"value\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ForceDirectedSeriesDataItem.prototype, \"node\", {\r\n        /**\r\n         * An element, related to this data item. (node)\r\n         *\r\n         * @readonly\r\n         * @return node element\r\n         */\r\n        get: function () {\r\n            var _this = this;\r\n            if (!this._node) {\r\n                var component_1 = this.component;\r\n                var node_1 = component_1.nodes.create();\r\n                node_1.draggable = true;\r\n                this._node = node_1;\r\n                this._disposers.push(node_1);\r\n                this._disposers.push(new Disposer(function () {\r\n                    component_1.nodes.removeValue(node_1);\r\n                }));\r\n                this.addSprite(node_1);\r\n                node_1.visible = this.visible;\r\n                node_1.hiddenState.properties.visible = true;\r\n                // Apply accessibility\r\n                if (component_1.itemsFocusable()) {\r\n                    this.component.role = \"menu\";\r\n                    node_1.role = \"menuitem\";\r\n                    node_1.focusable = true;\r\n                }\r\n                else {\r\n                    this.component.role = \"list\";\r\n                    node_1.role = \"listitem\";\r\n                    node_1.focusable = false;\r\n                }\r\n                // Apply screen reader label\r\n                if (node_1.focusable) {\r\n                    node_1.events.once(\"focus\", function (ev) {\r\n                        node_1.readerTitle = component_1.populateString(component_1.itemReaderText, _this);\r\n                    }, undefined, false);\r\n                    node_1.events.once(\"blur\", function (ev) {\r\n                        node_1.readerTitle = \"\";\r\n                    }, undefined, false);\r\n                }\r\n                if (node_1.hoverable) {\r\n                    node_1.events.once(\"over\", function (ev) {\r\n                        node_1.readerTitle = component_1.populateString(component_1.itemReaderText, _this);\r\n                    }, undefined, false);\r\n                    node_1.events.once(\"out\", function (ev) {\r\n                        node_1.readerTitle = \"\";\r\n                    }, undefined, false);\r\n                }\r\n            }\r\n            return this._node;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ForceDirectedSeriesDataItem.prototype, \"level\", {\r\n        /**\r\n         * Depth level in the series hierarchy.\r\n         *\r\n         * The top-level item will have level set at 0. Its children will have\r\n         * level 1, and so on.\r\n         *\r\n         * @readonly\r\n         * @return Level\r\n         */\r\n        get: function () {\r\n            if (!this.parent) {\r\n                return 0;\r\n            }\r\n            else {\r\n                return this.parent.level + 1;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ForceDirectedSeriesDataItem.prototype, \"percent\", {\r\n        /**\r\n         * Percent value of a node.\r\n         *\r\n         * @since 4.9.0\r\n         * @return Percent\r\n         */\r\n        get: function () {\r\n            if (this.parent) {\r\n                return this.value / this.parent.value * 100;\r\n            }\r\n            return 100;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ForceDirectedSeriesDataItem.prototype, \"color\", {\r\n        /**\r\n         * @return Color\r\n         */\r\n        get: function () {\r\n            var color = this.properties.color;\r\n            if (color == undefined) {\r\n                if (this.parent) {\r\n                    color = this.parent.color;\r\n                }\r\n            }\r\n            if (color == undefined) {\r\n                if (this.component) {\r\n                    color = this.component.colors.getIndex(this.component.colors.step * this.index);\r\n                }\r\n            }\r\n            return color;\r\n        },\r\n        /**\r\n         * Item's color.\r\n         *\r\n         * If not set, will use parent's color, or, if that is not set either,\r\n         * automatically assigned color from chart's color set. (`chart.colors`)\r\n         *\r\n         * @param value  : Color | LinearGradient | RadialGradient | Pattern\r\n         */\r\n        set: function (value) {\r\n            this.setProperty(\"color\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ForceDirectedSeriesDataItem.prototype, \"linkWith\", {\r\n        /**\r\n         * @return Link list\r\n         */\r\n        get: function () {\r\n            return this.properties.linkWith;\r\n        },\r\n        /**\r\n         * An array of id's of other nodes outside of the child/parent tree to link\r\n         * with.\r\n         *\r\n         * @param  value  Link list\r\n         */\r\n        set: function (value) {\r\n            this.setProperty(\"linkWith\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ForceDirectedSeriesDataItem.prototype, \"hiddenInLegend\", {\r\n        /**\r\n         * @return Hidden in legend?\r\n         */\r\n        get: function () {\r\n            return this.properties.hiddenInLegend;\r\n        },\r\n        /**\r\n         * Should dataItem (node) be hidden in legend?\r\n         *\r\n         * @param value Visible in legend?\r\n         */\r\n        set: function (value) {\r\n            this.setProperty(\"hiddenInLegend\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ForceDirectedSeriesDataItem.prototype, \"collapsed\", {\r\n        /**\r\n         * @return Collapsed?\r\n         */\r\n        get: function () {\r\n            return this.properties.collapsed;\r\n        },\r\n        /**\r\n         * Indicates whether node should start off as collapsed.\r\n         *\r\n         * This can be used to specify whether node should start off as collapsed\r\n         * via data.\r\n         *\r\n         * To toggle actual node, use its `isActive` property instead.\r\n         *\r\n         * @param  value  Collapsed?\r\n         */\r\n        set: function (value) {\r\n            this.setProperty(\"collapsed\", value);\r\n            this.node.isActive = !value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ForceDirectedSeriesDataItem.prototype, \"fixed\", {\r\n        /**\r\n         * @return Fixed?\r\n         */\r\n        get: function () {\r\n            return this.properties.fixed;\r\n        },\r\n        /**\r\n         * Is this node fixed (immovable)?\r\n         *\r\n         * @since 4.6.2\r\n         * @param  value  Fixed?\r\n         */\r\n        set: function (value) {\r\n            this.setProperty(\"fixed\", value);\r\n            if (this.component) {\r\n                this.component.handleFixed(this);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ForceDirectedSeriesDataItem.prototype, \"children\", {\r\n        /**\r\n         * @return Item's children\r\n         */\r\n        get: function () {\r\n            return this.properties.children;\r\n        },\r\n        /**\r\n         * A list of item's sub-children.\r\n         *\r\n         * @param children  Item's children\r\n         */\r\n        set: function (children) {\r\n            this.setProperty(\"children\", children);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a marker used in the legend for this slice.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param marker  Marker container\r\n     */\r\n    ForceDirectedSeriesDataItem.prototype.createLegendMarker = function (marker) {\r\n        this.component.createLegendMarker(marker, this);\r\n        if (!this.node.isActive) {\r\n            this.hide();\r\n        }\r\n    };\r\n    Object.defineProperty(ForceDirectedSeriesDataItem.prototype, \"legendDataItem\", {\r\n        /**\r\n         * @return Legend data item\r\n         */\r\n        get: function () {\r\n            return this._legendDataItem;\r\n        },\r\n        /**\r\n         * A legend's data item, that corresponds to this data item.\r\n         *\r\n         * @param value  Legend data item\r\n         */\r\n        set: function (value) {\r\n            this._legendDataItem = value;\r\n            if (value.label) {\r\n                value.label.dataItem = this;\r\n            }\r\n            if (value.valueLabel) {\r\n                value.valueLabel.dataItem = this;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ForceDirectedSeriesDataItem;\r\n}(SeriesDataItem));\r\nexport { ForceDirectedSeriesDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines [[Series]] for a [[ForceDirectedTree]] chart.\r\n *\r\n * @see {@link IForceDirectedSeriesEvents} for a list of available Events\r\n * @see {@link IForceDirectedSeriesAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/ForceDirectedTree/} For more information\r\n * @todo Example\r\n * @since 4.3.8\r\n * @important\r\n */\r\nvar ForceDirectedSeries = /** @class */ (function (_super) {\r\n    __extends(ForceDirectedSeries, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ForceDirectedSeries() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"ForceDirectedSeries\";\r\n        _this.d3forceSimulation = d3force.forceSimulation();\r\n        _this.maxRadius = percent(8);\r\n        _this.minRadius = percent(1);\r\n        _this.width = percent(100);\r\n        _this.height = percent(100);\r\n        _this.colors = new ColorSet();\r\n        _this.colors.step = 2;\r\n        _this.width = percent(100);\r\n        _this.height = percent(100);\r\n        _this.manyBodyStrength = -15;\r\n        _this.centerStrength = 0.8;\r\n        _this.setPropertyValue(\"dragFixedNodes\", false);\r\n        _this.setPropertyValue(\"velocityDecay\", 0.4);\r\n        _this.events.on(\"maxsizechanged\", function () {\r\n            _this.updateRadiuses(_this.dataItems);\r\n            _this.updateLinksAndNodes();\r\n            _this.dataItems.each(function (dataItem) {\r\n                _this.handleFixed(dataItem);\r\n            });\r\n            var d3forceSimulation = _this.d3forceSimulation;\r\n            var w = $math.max(50, _this.innerWidth);\r\n            var h = $math.max(50, _this.innerHeight);\r\n            if (d3forceSimulation) {\r\n                d3forceSimulation.force(\"x\", d3force.forceX().x(w / 2).strength(_this.centerStrength * 100 / w));\r\n                d3forceSimulation.force(\"y\", d3force.forceY().y(h / 2).strength(_this.centerStrength * 100 / h));\r\n                if (d3forceSimulation.alpha() < 0.4) {\r\n                    d3forceSimulation.alpha(0.4);\r\n                    d3forceSimulation.restart();\r\n                }\r\n            }\r\n        });\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Returns maximum value from all supplied data items.\r\n     *\r\n     * @ignore\r\n     * @param   dataItems  List of data items\r\n     * @param   max        Default max\r\n     * @return             Max\r\n     */\r\n    ForceDirectedSeries.prototype.getMaxValue = function (dataItems, max) {\r\n        var _this = this;\r\n        dataItems.each(function (dataItem) {\r\n            if (dataItem.value > max) {\r\n                max = dataItem.value;\r\n            }\r\n            if (dataItem.children) {\r\n                var cmax = _this.getMaxValue(dataItem.children, max);\r\n                if (cmax > max) {\r\n                    max = cmax;\r\n                }\r\n            }\r\n        });\r\n        return max;\r\n    };\r\n    /**\r\n     * Validates (processes) data items.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    ForceDirectedSeries.prototype.validateDataItems = function () {\r\n        var _this = this;\r\n        if (this.chart.__disabled) {\r\n            _super.prototype.validateDataItems.call(this);\r\n            return;\r\n        }\r\n        this._dataDisposers.push(new ListDisposer(this.links));\r\n        this._maxValue = this.getMaxValue(this.dataItems, 0);\r\n        this.forceLinks = [];\r\n        this.colors.reset();\r\n        var index = 0;\r\n        var radius = Math.min(this.innerHeight / 3, this.innerWidth / 3);\r\n        if (this.dataItems.length <= 1) {\r\n            radius = 0;\r\n        }\r\n        this.dataItems.each(function (dataItem) {\r\n            var angle = index / _this.dataItems.length * 360;\r\n            var node = dataItem.node;\r\n            var xField = node.propertyFields.x;\r\n            var yField = node.propertyFields.y;\r\n            if (xField && $type.hasValue(dataItem.dataContext[xField])) {\r\n                node.x = dataItem.dataContext[xField];\r\n            }\r\n            else {\r\n                node.x = _this.innerWidth / 2 + radius * $math.cos(angle);\r\n            }\r\n            if (yField && $type.hasValue(dataItem.dataContext[yField])) {\r\n                node.y = dataItem.dataContext[yField];\r\n            }\r\n            else {\r\n                node.y = _this.innerHeight / 2 + radius * $math.sin(angle);\r\n            }\r\n            dataItem.node.fill = dataItem.color;\r\n            dataItem.node.stroke = dataItem.color;\r\n            index++;\r\n            _this.initNode(dataItem);\r\n        });\r\n        if (this.dataFields.linkWith) {\r\n            this.dataItems.each(function (dataItem) {\r\n                _this.processLinkWith(dataItem);\r\n            });\r\n        }\r\n        var d3forceSimulation = this.d3forceSimulation;\r\n        d3forceSimulation.on(\"tick\", function () {\r\n            _this.updateLinksAndNodes();\r\n        });\r\n        // helps to avoid initial scatter\r\n        for (var i = 0; i < 10; i++) {\r\n            d3forceSimulation.tick();\r\n        }\r\n        d3forceSimulation.alphaDecay(1 - Math.pow(0.001, 1 / 600));\r\n        this.chart.feedLegend();\r\n        _super.prototype.validateDataItems.call(this);\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    ForceDirectedSeries.prototype.handleFixed = function (dataItem) {\r\n        var _this = this;\r\n        var node = dataItem.node;\r\n        var xField = node.propertyFields.x;\r\n        var yField = node.propertyFields.y;\r\n        if (xField && $type.hasValue(dataItem.dataContext[xField])) {\r\n            node.x = dataItem.dataContext[xField];\r\n        }\r\n        if (yField && $type.hasValue(dataItem.dataContext[yField])) {\r\n            node.y = dataItem.dataContext[yField];\r\n        }\r\n        if (dataItem.fixed) {\r\n            if (node.x instanceof Percent) {\r\n                node.fx = $utils.relativeToValue(node.x, this.innerWidth);\r\n            }\r\n            else {\r\n                node.fx = node.x;\r\n            }\r\n            if (node.y instanceof Percent) {\r\n                node.fy = $utils.relativeToValue(node.y, this.innerHeight);\r\n            }\r\n            else {\r\n                node.fy = node.y;\r\n            }\r\n            node.draggable = this.dragFixedNodes;\r\n            node.validate(); // for links to redraw\r\n        }\r\n        else {\r\n            node.fx = undefined;\r\n            node.fy = undefined;\r\n            node.draggable = true;\r\n        }\r\n        if (dataItem && dataItem.children) {\r\n            dataItem.children.each(function (di) {\r\n                _this.handleFixed(di);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @ignore\r\n     * @todo description\r\n     */\r\n    ForceDirectedSeries.prototype.updateNodeList = function () {\r\n        var d3forceSimulation = this.d3forceSimulation;\r\n        d3forceSimulation.nodes(this.nodes.values);\r\n        this._linkForce = d3force.forceLink(this.forceLinks);\r\n        d3forceSimulation.force(\"link\", this._linkForce);\r\n        this._collisionForce = d3force.forceCollide();\r\n        d3forceSimulation.force(\"collision\", this._collisionForce);\r\n        var w = $math.max(50, this.innerWidth);\r\n        var h = $math.max(50, this.innerHeight);\r\n        d3forceSimulation.force(\"x\", d3force.forceX().x(w / 2).strength(this.centerStrength * 100 / w));\r\n        d3forceSimulation.force(\"y\", d3force.forceY().y(h / 2).strength(this.centerStrength * 100 / h));\r\n    };\r\n    /**\r\n     * @ignore\r\n     * @todo description\r\n     */\r\n    ForceDirectedSeries.prototype.updateLinksAndNodes = function () {\r\n        var _this = this;\r\n        if (this._linkForce) {\r\n            this._linkForce.distance(function (linkDatum) {\r\n                return _this.getDistance(linkDatum);\r\n            });\r\n            this._linkForce.strength(function (linkDatum) {\r\n                return _this.getStrength(linkDatum);\r\n            });\r\n        }\r\n        if (this._collisionForce) {\r\n            this._collisionForce.radius(function (node) {\r\n                if (node instanceof ForceDirectedNode) {\r\n                    var radius = node.circle.pixelRadius;\r\n                    if (!node.outerCircle.__disabled && !node.outerCircle.disabled && node.outerCircle.visible) {\r\n                        radius = (radius + 3) * node.outerCircle.scale;\r\n                    }\r\n                    return radius + node.paddingRadius;\r\n                }\r\n                return 1;\r\n            });\r\n        }\r\n        this.d3forceSimulation.force(\"manybody\", d3force.forceManyBody().strength(function (node) {\r\n            if (node instanceof ForceDirectedNode) {\r\n                return node.circle.pixelRadius * _this.manyBodyStrength;\r\n            }\r\n            return _this.manyBodyStrength;\r\n        }));\r\n    };\r\n    /**\r\n     * @ignore\r\n     * @todo description\r\n     */\r\n    ForceDirectedSeries.prototype.getDistance = function (linkDatum) {\r\n        var source = linkDatum.source;\r\n        var target = linkDatum.target;\r\n        var distance = 0;\r\n        if (target.dataItem && source.dataItem) {\r\n            var link = source.linksWith.getKey(target.uid);\r\n            if (link) {\r\n                distance = link.distance;\r\n            }\r\n            if (!source.isActive) {\r\n                distance = 1;\r\n            }\r\n            if (target.isHidden) {\r\n                return 0;\r\n            }\r\n            return (distance * (source.circle.pixelRadius + target.circle.pixelRadius));\r\n        }\r\n        return distance;\r\n    };\r\n    /**\r\n     * @ignore\r\n     * @todo description\r\n     */\r\n    ForceDirectedSeries.prototype.getStrength = function (linkDatum) {\r\n        var source = linkDatum.source;\r\n        var target = linkDatum.target;\r\n        var strength = 0;\r\n        var link = source.linksWith.getKey(target.uid);\r\n        if (link) {\r\n            strength = link.strength;\r\n        }\r\n        if (target.isHidden) {\r\n            return 0;\r\n        }\r\n        return strength;\r\n    };\r\n    /**\r\n     * Handler for drag end event.\r\n     *\r\n     * @ignore\r\n     */\r\n    ForceDirectedSeries.prototype.nodeDragEnded = function () {\r\n        this.d3forceSimulation.alphaTarget(0);\r\n    };\r\n    /**\r\n     * Handler for drag start event.\r\n     *\r\n     * @ignore\r\n     */\r\n    ForceDirectedSeries.prototype.nodeDragStarted = function () {\r\n        this.d3forceSimulation.alpha(0.1);\r\n        this.d3forceSimulation.restart();\r\n    };\r\n    /**\r\n     * Resets positions of whole tree.\r\n     *\r\n     * @ignore\r\n     */\r\n    ForceDirectedSeries.prototype.restartSimulation = function () {\r\n        if (this.d3forceSimulation.alpha() <= 0.3) {\r\n            this.d3forceSimulation.alpha(0.3);\r\n            this.d3forceSimulation.restart();\r\n        }\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    ForceDirectedSeries.prototype.updateRadiuses = function (dataItems) {\r\n        var _this = this;\r\n        dataItems.each(function (dataItem) {\r\n            _this.updateRadius(dataItem);\r\n            if (dataItem.childrenInited) {\r\n                _this.updateRadiuses(dataItem.children);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    ForceDirectedSeries.prototype.updateRadius = function (dataItem) {\r\n        var node = dataItem.node;\r\n        var minSide = (this.innerWidth + this.innerHeight) / 2;\r\n        var minRadius = $utils.relativeToValue(this.minRadius, minSide);\r\n        var maxRadius = $utils.relativeToValue(this.maxRadius, minSide);\r\n        var radius = minRadius + dataItem.value / this._maxValue * (maxRadius - minRadius);\r\n        if (!$type.isNumber(radius)) {\r\n            radius = minRadius;\r\n        }\r\n        //if(!node.circle.isHidden){\r\n        node.circle.radius = radius;\r\n        //}\r\n        node.outerCircle.radius = radius + 3;\r\n        node.circle.states.getKey(\"active\").properties.radius = radius;\r\n        node.circle.defaultState.properties.radius = radius;\r\n    };\r\n    /**\r\n     * Initializes node.\r\n     *\r\n     * @ignore\r\n     */\r\n    ForceDirectedSeries.prototype.initNode = function (dataItem) {\r\n        var _this = this;\r\n        var node = dataItem.node;\r\n        node.parent = this;\r\n        this.updateRadius(dataItem);\r\n        //let nodeIndex = this.nodes.indexOf(dataItem.node);\r\n        if (!dataItem.children || dataItem.children.length == 0) {\r\n            node.outerCircle.disabled = true;\r\n            node.circle.interactionsEnabled = true;\r\n            node.cursorOverStyle = MouseCursorStyle.default;\r\n        }\r\n        else {\r\n            node.cursorOverStyle = MouseCursorStyle.pointer;\r\n        }\r\n        if (this.dataItemsInvalid && (dataItem.level >= this.maxLevels - 1 || dataItem.collapsed)) {\r\n            node.isActive = false;\r\n            this.updateNodeList();\r\n            return;\r\n        }\r\n        if (!node.isActive) {\r\n            node.hide(0);\r\n        }\r\n        this.handleFixed(dataItem);\r\n        if (dataItem.children) {\r\n            var index_1 = 0;\r\n            dataItem.childrenInited = true;\r\n            if (this.dataItems.length == 1 && dataItem.level == 0) {\r\n                this.colors.next();\r\n            }\r\n            dataItem.children.each(function (child) {\r\n                /*\r\n                let link = this.links.create();\r\n                link.parent = this;\r\n                link.zIndex = -1;\r\n                dataItem.childLinks.push(link);\r\n                link.source = dataItem.node;\r\n                let childIndex = this.nodes.indexOf(child.node);\r\n                link.target = child.node;\r\n                child.parentLink = link;\r\n\r\n                this._forceLinks.push({ source: nodeIndex, target: childIndex });\r\n                */\r\n                var link = node.linkWith(child.node);\r\n                child.parentLink = link;\r\n                var radius = 2 * node.circle.pixelRadius + child.node.circle.pixelRadius;\r\n                var angle = index_1 / dataItem.children.length * 360;\r\n                child.node.x = node.pixelX + radius * $math.cos(angle);\r\n                child.node.y = node.pixelY + radius * $math.sin(angle);\r\n                child.node.circle.radius = 0;\r\n                var color;\r\n                var diColor = child.properties.color;\r\n                if ($type.hasValue(diColor)) {\r\n                    color = diColor;\r\n                }\r\n                else {\r\n                    if (_this.dataItems.length == 1 && dataItem.level == 0) {\r\n                        color = _this.colors.next();\r\n                    }\r\n                    else {\r\n                        color = dataItem.color;\r\n                    }\r\n                }\r\n                child.color = color;\r\n                child.node.fill = color;\r\n                child.node.stroke = color;\r\n                child.parentLink.stroke = color;\r\n                child.node.fill = child.node.fill;\r\n                child.node.stroke = child.node.stroke;\r\n                _this.initNode(child);\r\n                index_1++;\r\n            });\r\n        }\r\n        node.isActive = true;\r\n        node.show();\r\n        this.updateNodeList();\r\n    };\r\n    /**\r\n     * @ignore\r\n     * @todo description\r\n     */\r\n    ForceDirectedSeries.prototype.processLinkWith = function (dataItem) {\r\n        var _this = this;\r\n        if (dataItem.linkWith) {\r\n            $array.each(dataItem.linkWith, function (id, index) {\r\n                var dataItemToConnect = _this.getDataItemById(_this.dataItems, id);\r\n                if (dataItemToConnect) {\r\n                    dataItem.node.linkWith(dataItemToConnect.node, _this.linkWithStrength);\r\n                }\r\n            });\r\n        }\r\n        if (dataItem.children) {\r\n            dataItem.children.each(function (child) {\r\n                _this.processLinkWith(child);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Returns a [[ForceDirectedSeriesDataItem]] related to node by specific id.\r\n     *\r\n     * @param   dataItems  List of data items to search in\r\n     * @param   id         Id to search for\r\n     * @return             Data item\r\n     */\r\n    ForceDirectedSeries.prototype.getDataItemById = function (dataItems, id) {\r\n        for (var i = dataItems.length - 1; i >= 0; i--) {\r\n            var dataItem = dataItems.getIndex(i);\r\n            if (dataItem.id == id) {\r\n                return dataItem;\r\n            }\r\n            if (dataItem.children) {\r\n                var di = this.getDataItemById(dataItem.children, id);\r\n                if (di) {\r\n                    return di;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a new/empty DataItem of the type appropriate for this object.\r\n     *\r\n     * @see {@link DataItem}\r\n     * @return Data Item\r\n     */\r\n    ForceDirectedSeries.prototype.createDataItem = function () {\r\n        return new ForceDirectedSeriesDataItem();\r\n    };\r\n    Object.defineProperty(ForceDirectedSeries.prototype, \"nodes\", {\r\n        /**\r\n         * A list of nodes in series.\r\n         *\r\n         * @return  Node list\r\n         */\r\n        get: function () {\r\n            if (!this._nodes) {\r\n                var node = this.createNode();\r\n                node.applyOnClones = true;\r\n                this._disposers.push(node);\r\n                this._nodes = new ListTemplate(node);\r\n                this._disposers.push(new ListDisposer(this._nodes));\r\n            }\r\n            return this._nodes;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ForceDirectedSeries.prototype, \"links\", {\r\n        /**\r\n         * A list of links between nodes.\r\n         *\r\n         * @return  Link list\r\n         */\r\n        get: function () {\r\n            if (!this._links) {\r\n                var link = this.createLink();\r\n                link.applyOnClones = true;\r\n                this._disposers.push(link);\r\n                this._links = new ListTemplate(link);\r\n                this._disposers.push(new ListDisposer(this._links));\r\n            }\r\n            return this._links;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a new node.\r\n     */\r\n    ForceDirectedSeries.prototype.createNode = function () {\r\n        return new ForceDirectedNode();\r\n    };\r\n    /**\r\n     * Creates a new link.\r\n     */\r\n    ForceDirectedSeries.prototype.createLink = function () {\r\n        return new ForceDirectedLink();\r\n    };\r\n    Object.defineProperty(ForceDirectedSeries.prototype, \"minRadius\", {\r\n        /**\r\n         * @return Minimum radius (px or percent)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"minRadius\");\r\n        },\r\n        /**\r\n         * Smallest possible radius in pixels of the node circle.\r\n         *\r\n         * If set in percent, it radius will be calculated from average width and\r\n         * height of series.\r\n         *\r\n         * @default Percent(1)\r\n         * @param  value  Minimum radius (px or percent)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"minRadius\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ForceDirectedSeries.prototype, \"maxRadius\", {\r\n        /**\r\n         * @return Maximum radius (px or Percent)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"maxRadius\");\r\n        },\r\n        /**\r\n         * Biggest possible radius in pixels of the node circle.\r\n         *\r\n         * If set in percent, it radius will be calculated from average width and\r\n         * height of series.\r\n         *\r\n         * @default Percent(8)\r\n         * @param  value  Maximum radius (px or Percent)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"maxRadius\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ForceDirectedSeries.prototype, \"colors\", {\r\n        /**\r\n         * @return Color set\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"colors\");\r\n        },\r\n        /**\r\n         * A color set to be used for nodes.\r\n         *\r\n         * iIt works like this:\r\n         *\r\n         * The first level with more than one node, assigns different colors to all\r\n         * nodes in this list. Their child nodes inherit the color.\r\n         *\r\n         * For example, if the top level has one node with three children, the top\r\n         * node will get first color, the first child will get second color, etc.\r\n         *\r\n         * If there are two top nodes, the first top node gets first color, the\r\n         * second top node gets the second color. Their subsequent children inherit\r\n         * colors.\r\n         *\r\n         * @param value  Color set\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"colors\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ForceDirectedSeries.prototype, \"maxLevels\", {\r\n        /**\r\n         * @return Number of levels\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"maxLevels\");\r\n        },\r\n        /**\r\n         * Number of levels to be displayed initially.\r\n         *\r\n         * @param  value  Number of levels\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"maxLevels\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ForceDirectedSeries.prototype, \"manyBodyStrength\", {\r\n        /**\r\n         * @return  Body push/attrack strength\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"manyBodyStrength\");\r\n        },\r\n        /**\r\n         * Relative strength each node pushes (or attracts) other nodes (it is\r\n         * multiplied by `node.circle.radius` for big nodes to push stronger).\r\n         *\r\n         * Positive value will make nodes attract each other, while negative will\r\n         * push away each other. The bigger the negative number is, the more\r\n         * scattered nodes will be.\r\n         *\r\n         * Available value range: `-XX` to `XX`.\r\n         *\r\n         * @default -15\r\n         * @param  value  Body push/attrack strength\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"manyBodyStrength\", value)) {\r\n                this.restartSimulation();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ForceDirectedSeries.prototype, \"centerStrength\", {\r\n        /**\r\n         * @return  Stregth of attraction to center\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"centerStrength\");\r\n        },\r\n        /**\r\n         * Relative strength each child node is pushes (or attracted) to the center\r\n         * of the chart.\r\n         *\r\n         * Positive value will make nodes to be attracted to center, while negative\r\n         * will push them away.\r\n         *\r\n         * Available value range: `-50` to `50`.\r\n         *\r\n         * @default 0.8\r\n         * @param  value  Stregth of attraction to center\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"centerStrength\", value)) {\r\n                this.restartSimulation();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ForceDirectedSeries.prototype, \"linkWithStrength\", {\r\n        /**\r\n         * @return Strength\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"linkWithStrength\");\r\n        },\r\n        /**\r\n         * Relative attraction strength between the nodes connected with `linkWith`.\r\n         *\r\n         * @since 4.4.8\r\n         * @param  value  Strength\r\n         * @default undefined\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"linkWithStrength\", value)) {\r\n                this.restartSimulation();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ForceDirectedSeries.prototype, \"velocityDecay\", {\r\n        /**\r\n         * @return Velocity decay\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"velocityDecay\");\r\n        },\r\n        /**\r\n         * The bigger the number the more slowly the nodes will move. Think of it as\r\n         * friction.\r\n         *\r\n         * @since 4.9.2\r\n         * @param  value  Velocity decay\r\n         * @default 0.4\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"velocityDecay\", value)) {\r\n                this.d3forceSimulation.velocityDecay(value);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ForceDirectedSeries.prototype, \"dragFixedNodes\", {\r\n        /**\r\n         * @return Allow drag fixed nodes?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"dragFixedNodes\");\r\n        },\r\n        /**\r\n         * Specifies if user can drag fixed nodes.\r\n         *\r\n         * @since 4.9.0\r\n         * @default false\r\n         * @param  value  Allow drag fixed nodes?\r\n         */\r\n        set: function (value) {\r\n            var _this = this;\r\n            if (this.setPropertyValue(\"dragFixedNodes\", value)) {\r\n                this.dataItems.each(function (dataItem) {\r\n                    _this.handleFixed(dataItem);\r\n                });\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Binds related legend data item's visual settings to this series' visual\r\n     * settings.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param marker    Container\r\n     * @param dataItem  Data item\r\n     */\r\n    ForceDirectedSeries.prototype.createLegendMarker = function (marker, dataItem) {\r\n        marker.children.each(function (child) {\r\n            var node = dataItem.node;\r\n            if (child instanceof RoundedRectangle) {\r\n                child.cornerRadius(40, 40, 40, 40);\r\n            }\r\n            child.defaultState.properties.fill = node.fill;\r\n            child.defaultState.properties.stroke = node.stroke;\r\n            child.defaultState.properties.fillOpacity = node.fillOpacity;\r\n            child.defaultState.properties.strokeOpacity = node.strokeOpacity;\r\n            child.fill = node.fill;\r\n            child.stroke = node.stroke;\r\n            child.fillOpacity = node.fillOpacity;\r\n            child.strokeOpacity = node.strokeOpacity;\r\n            if (child.fill == undefined) {\r\n                child.__disabled = true;\r\n            }\r\n            var legendDataItem = marker.dataItem;\r\n            legendDataItem.color = node.fill;\r\n            legendDataItem.colorOrig = node.fill;\r\n            node.events.on(\"propertychanged\", function (ev) {\r\n                if (ev.property == \"fill\") {\r\n                    child.__disabled = false;\r\n                    if (!child.isActive) {\r\n                        child.fill = node.fill;\r\n                    }\r\n                    child.defaultState.properties.fill = node.fill;\r\n                    legendDataItem.color = node.fill;\r\n                    legendDataItem.colorOrig = node.fill;\r\n                }\r\n                if (ev.property == \"stroke\") {\r\n                    if (!child.isActive) {\r\n                        child.stroke = node.stroke;\r\n                    }\r\n                    child.defaultState.properties.stroke = node.stroke;\r\n                }\r\n            }, undefined, false);\r\n        });\r\n    };\r\n    return ForceDirectedSeries;\r\n}(Series));\r\nexport { ForceDirectedSeries };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ForceDirectedSeries\"] = ForceDirectedSeries;\r\nregistry.registeredClasses[\"ForceDirectedSeriesDataItem\"] = ForceDirectedSeriesDataItem;\r\n//# sourceMappingURL=ForceDirectedSeries.js.map","/**\r\n * ForceDirectedTree chart module.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { SerialChart, SerialChartDataItem } from \"../../charts/types/SerialChart\";\r\nimport { ForceDirectedSeries } from \"./ForceDirectedSeries\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport { color } from \"../../core/utils/Color\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport * as $ease from \"../../core/utils/Ease\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport { ZoomOutButton } from \"../../core/elements/ZoomOutButton\";\r\nimport { getInteraction } from \"../../core/interaction/Interaction\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[ForceDirectedTree]].\r\n *\r\n * @since 4.3.8\r\n * @see {@link DataItem}\r\n */\r\nvar ForceDirectedTreeDataItem = /** @class */ (function (_super) {\r\n    __extends(ForceDirectedTreeDataItem, _super);\r\n    function ForceDirectedTreeDataItem() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return ForceDirectedTreeDataItem;\r\n}(SerialChartDataItem));\r\nexport { ForceDirectedTreeDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * A main class for [[ForceDirectedTree]] chart type.\r\n *\r\n * @see {@link IForceDirectedTreeEvents} for a list of available Events\r\n * @see {@link IForceDirectedTreeAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/force-directed/} For more information\r\n * @since 4.3.8\r\n * @important\r\n */\r\nvar ForceDirectedTree = /** @class */ (function (_super) {\r\n    __extends(ForceDirectedTree, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ForceDirectedTree() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        /**\r\n         * Default duration of zoom animations (ms).\r\n         */\r\n        _this.zoomDuration = 1000;\r\n        /**\r\n         * Default zooming animation easing function.\r\n         */\r\n        _this.zoomEasing = $ease.cubicOut;\r\n        /**\r\n         * Smallest available zoom level. The chart will not allow to zoom out past\r\n         * this setting.\r\n         *\r\n         * NOTE: Should be power of 2.\r\n         *\r\n         * @default 1\r\n         */\r\n        _this.minZoomLevel = 1;\r\n        /**\r\n         * Biggest available zoom level. The chart will not allow to zoom in past\r\n         * this setting.\r\n         *\r\n         * NOTE: Should be power of 2.\r\n         *\r\n         * @default 32\r\n         */\r\n        _this.maxZoomLevel = 16;\r\n        _this.className = \"ForceDirectedTree\";\r\n        _this.seriesContainer.isMeasured = true;\r\n        _this.seriesContainer.layout = \"absolute\";\r\n        _this.mouseWheelBehavior = \"none\";\r\n        _this.zoomStep = 2;\r\n        _this.seriesContainer.background.fillOpacity = 0;\r\n        _this.seriesContainer.background.fill = color(\"#ffffff\");\r\n        var zoomOutButton = _this.createChild(ZoomOutButton);\r\n        zoomOutButton.shouldClone = false;\r\n        zoomOutButton.x = percent(100);\r\n        zoomOutButton.horizontalCenter = \"right\";\r\n        zoomOutButton.valign = \"top\";\r\n        zoomOutButton.zIndex = Number.MAX_SAFE_INTEGER;\r\n        zoomOutButton.marginTop = 5;\r\n        zoomOutButton.marginRight = 5;\r\n        zoomOutButton.isMeasured = false;\r\n        zoomOutButton.adapter.add(\"dx\", function (dx, target) {\r\n            return -zoomOutButton.marginRight;\r\n        });\r\n        zoomOutButton.hide(0);\r\n        _this.zoomOutButton = zoomOutButton;\r\n        _this.addDisposer(_this.seriesContainer.events.on(\"sizechanged\", function () {\r\n            if (_this.seriesContainer.scale != 1) {\r\n                _this.zoomOutButton.show();\r\n            }\r\n            else {\r\n                _this.zoomOutButton.hide();\r\n            }\r\n        }));\r\n        var interaction = getInteraction();\r\n        _this._disposers.push(interaction.body.events.on(\"down\", function (event) {\r\n            if (_this.zoomable) {\r\n                var svgPoint = $utils.documentPointToSvg(event.pointer.point, _this.htmlContainer);\r\n                if (svgPoint.x > 0 && svgPoint.y > 0 && svgPoint.x < _this.svgContainer.width && svgPoint.y < _this.svgContainer.height) {\r\n                    _this.seriesContainer.dragStart(event.pointer);\r\n                }\r\n            }\r\n        }, _this));\r\n        _this._disposers.push(interaction.body.events.on(\"up\", function (event) {\r\n            if (_this.zoomable) {\r\n                _this.seriesContainer.dragStop(event.pointer, true);\r\n            }\r\n        }, _this));\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates and returns a new series of the suitable type.\r\n     *\r\n     * @return New series\r\n     */\r\n    ForceDirectedTree.prototype.createSeries = function () {\r\n        return new ForceDirectedSeries();\r\n    };\r\n    /**\r\n     * Returns a new/empty DataItem of the type appropriate for this object.\r\n     *\r\n     * @see {@link DataItem}\r\n     * @return Data Item\r\n     */\r\n    ForceDirectedTree.prototype.createDataItem = function () {\r\n        return new ForceDirectedTreeDataItem();\r\n    };\r\n    /**\r\n     * Setups the legend to use the chart's data.\r\n     *\r\n     * @ignore\r\n     */\r\n    ForceDirectedTree.prototype.feedLegend = function () {\r\n        var legend = this.legend;\r\n        if (legend) {\r\n            var legendData_1 = [];\r\n            this.series.each(function (series) {\r\n                if (!series.hiddenInLegend) {\r\n                    var dataItems = series.dataItems;\r\n                    if (dataItems.length == 1) {\r\n                        var children = series.dataItems.getIndex(0).children;\r\n                        if (children && children.length > 0) {\r\n                            dataItems = children;\r\n                        }\r\n                    }\r\n                    dataItems.each(function (dataItem) {\r\n                        if (!dataItem.hiddenInLegend) {\r\n                            legendData_1.push(dataItem);\r\n                            var legendSettings = series.legendSettings;\r\n                            if (legendSettings) {\r\n                                if (legendSettings.labelText) {\r\n                                    legend.labels.template.text = legendSettings.labelText;\r\n                                }\r\n                                if (legendSettings.itemLabelText) {\r\n                                    legend.labels.template.text = legendSettings.itemLabelText;\r\n                                }\r\n                                if (legendSettings.valueText) {\r\n                                    legend.valueLabels.template.text = legendSettings.valueText;\r\n                                }\r\n                                if (legendSettings.itemValueText) {\r\n                                    legend.valueLabels.template.text = legendSettings.itemValueText;\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n            legend.data = legendData_1;\r\n            legend.dataFields.name = \"name\";\r\n        }\r\n    };\r\n    /**\r\n     * Sets defaults that instantiate some objects that rely on parent, so they\r\n     * cannot be set in constructor.\r\n     */\r\n    ForceDirectedTree.prototype.applyInternalDefaults = function () {\r\n        _super.prototype.applyInternalDefaults.call(this);\r\n        // Add a default screen reader title for accessibility\r\n        // This will be overridden in screen reader if there are any `titles` set\r\n        if (!$type.hasValue(this.readerTitle)) {\r\n            this.readerTitle = this.language.translate(\"Force directed tree\");\r\n        }\r\n    };\r\n    /**\r\n     * Since this chart uses hierarchical data, we need to remove childrent\r\n     * dataField from export of non-hierarchical formats such as CSV and XSLX.\r\n     *\r\n     * @return Export\r\n     */\r\n    ForceDirectedTree.prototype.getExporting = function () {\r\n        var _this = this;\r\n        var exporting = _super.prototype.getExporting.call(this);\r\n        exporting.adapter.add(\"formatDataFields\", function (info) {\r\n            if (info.format == \"csv\" || info.format == \"xlsx\") {\r\n                _this.series.each(function (series) {\r\n                    if ($type.hasValue(series.dataFields.children)) {\r\n                        delete info.dataFields[series.dataFields.children];\r\n                    }\r\n                });\r\n            }\r\n            return info;\r\n        });\r\n        return exporting;\r\n    };\r\n    /**\r\n     * Handles mouse wheel event, e.g. user rotates mouse wheel while over the\r\n     * map: zooms in or out depending on the direction of the wheel turn.\r\n     *\r\n     * @param event  Original event\r\n     */\r\n    ForceDirectedTree.prototype.handleWheel = function (event) {\r\n        var point = $utils.documentPointToSprite(event.point, this.seriesContainer);\r\n        var zoomLevel = this.seriesContainer.scale;\r\n        if (event.shift.y < 0) {\r\n            zoomLevel *= this.zoomStep;\r\n        }\r\n        else {\r\n            zoomLevel /= this.zoomStep;\r\n        }\r\n        zoomLevel = $math.fitToRange(zoomLevel, this.minZoomLevel, this.maxZoomLevel);\r\n        this.zoomToPoint(point, zoomLevel);\r\n    };\r\n    /**\r\n     * Zooms the chart to particular point.\r\n     *\r\n     * @from 4.10.0\r\n     * @param  point      A point to zoom to\r\n     * @param  zoomLevel  Zoom level\r\n     * @param  center     Should the chart center on the target point?\r\n     */\r\n    ForceDirectedTree.prototype.zoomToPoint = function (point, zoomLevel, center) {\r\n        var container = this.seriesContainer;\r\n        var svgPoint;\r\n        if (center) {\r\n            svgPoint = { x: this.maxWidth / 2, y: this.maxHeight / 2 };\r\n        }\r\n        else {\r\n            svgPoint = $utils.spritePointToSvg(point, container);\r\n        }\r\n        var x = svgPoint.x - point.x * zoomLevel;\r\n        var y = svgPoint.y - point.y * zoomLevel;\r\n        container.animate([{ property: \"scale\", to: zoomLevel }, { property: \"x\", to: x }, { property: \"y\", to: y }], this.zoomDuration, this.zoomEasing);\r\n    };\r\n    /**\r\n     * Zooms the chart to particular data item (node).\r\n     *\r\n     * @from 4.10.0\r\n     * @param  dataItem   A data item to zoom to\r\n     * @param  zoomLevel  Zoom level\r\n     * @param  center     Should the chart center on the target point?\r\n     */\r\n    ForceDirectedTree.prototype.zoomToDataItem = function (dataItem, zoomLevel, center) {\r\n        var x = dataItem.node.pixelX;\r\n        var y = dataItem.node.pixelY;\r\n        if (!$type.isNumber(zoomLevel)) {\r\n            zoomLevel = this.seriesContainer.scale * this.zoomStep;\r\n        }\r\n        this.zoomToPoint({ x: x, y: y }, zoomLevel, center);\r\n    };\r\n    /**\r\n     * Zooms out the chart to initial full view.\r\n     *\r\n     * @from 4.10.0\r\n     */\r\n    ForceDirectedTree.prototype.zoomOut = function () {\r\n        var container = this.seriesContainer;\r\n        this.zoomToPoint({ x: container.pixelWidth / 2, y: container.pixelHeight / 2 }, 1, true);\r\n    };\r\n    Object.defineProperty(ForceDirectedTree.prototype, \"zoomable\", {\r\n        /**\r\n         * @return Zoomable\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"zoomable\");\r\n        },\r\n        /**\r\n         * When user zooms in or out current zoom level is multiplied or divided\r\n         * by value of this setting.\r\n         *\r\n         * @default false\r\n         * @since 4.10.0\r\n         * @see {@link https://www.amcharts.com/docs/v4/chart-types/force-directed/#Zooming} for more information about zooming ForceDirectedTree\r\n         * @param value  Zoomable\r\n         */\r\n        set: function (value) {\r\n            var _this = this;\r\n            if (this.setPropertyValue(\"zoomable\", value)) {\r\n                if (value) {\r\n                    this.seriesContainer.resizable = true;\r\n                    this.seriesContainer.draggable = true;\r\n                    this.seriesContainer.dragWhileResize = true;\r\n                    this.mouseWheelBehavior = \"zoom\";\r\n                    this._backgroundZoomoutDisposer = this.seriesContainer.background.events.on(\"hit\", function () {\r\n                        _this.zoomOut();\r\n                    }, this, false);\r\n                    this._disposers.push(this._backgroundZoomoutDisposer);\r\n                }\r\n                else {\r\n                    this.seriesContainer.resizable = false;\r\n                    this.seriesContainer.draggable = false;\r\n                    this.seriesContainer.dragWhileResize = false;\r\n                    this.mouseWheelBehavior = \"none\";\r\n                    if (this._backgroundZoomoutDisposer) {\r\n                        this._backgroundZoomoutDisposer.dispose();\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ForceDirectedTree.prototype, \"mouseWheelBehavior\", {\r\n        /**\r\n         * @return Mouse wheel behavior\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"mouseWheelBehavior\");\r\n        },\r\n        /**\r\n         * Specifies what should chart do if when mouse wheel is rotated.\r\n         *\r\n         * @param Mouse wheel behavior\r\n         * @since 4.10.0\r\n         * @default none\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"mouseWheelBehavior\", value)) {\r\n                if (value != \"none\") {\r\n                    this._mouseWheelDisposer = this.chartContainer.events.on(\"wheel\", this.handleWheel, this, false);\r\n                    this._disposers.push(this._mouseWheelDisposer);\r\n                }\r\n                else {\r\n                    if (this._mouseWheelDisposer) {\r\n                        this._mouseWheelDisposer.dispose();\r\n                    }\r\n                    this.chartContainer.wheelable = false;\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ForceDirectedTree.prototype, \"zoomStep\", {\r\n        /**\r\n         * @return Zoom factor\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"zoomStep\");\r\n        },\r\n        /**\r\n         * When user zooms in or out current zoom level is multiplied or divided\r\n         * by value of this setting.\r\n         *\r\n         * @since 4.10.0\r\n         * @default 2\r\n         * @param value  Zoom factor\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"zoomStep\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ForceDirectedTree.prototype, \"zoomOutButton\", {\r\n        /**\r\n         * @return Zoom out button\r\n         */\r\n        get: function () {\r\n            return this._zoomOutButton;\r\n        },\r\n        /**\r\n         * A [[Button]] element that is used for zooming out the chart.\r\n         *\r\n         * This button appears only when chart is zoomed in, and disappears\r\n         * autoamatically when it is zoome dout.\r\n         *\r\n         * @param button  Zoom out button\r\n         */\r\n        set: function (button) {\r\n            var _this = this;\r\n            this._zoomOutButton = button;\r\n            if (button) {\r\n                button.events.on(\"hit\", function () {\r\n                    _this.zoomOut();\r\n                }, undefined, false);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ForceDirectedTree;\r\n}(SerialChart));\r\nexport { ForceDirectedTree };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ForceDirectedTree\"] = ForceDirectedTree;\r\nregistry.registeredClasses[\"ForceDirectedTreeDataItem\"] = ForceDirectedTreeDataItem;\r\n//# sourceMappingURL=ForceDirectedTree.js.map","export * from \"../.internal/plugins/forceDirected/ForceDirectedLink\";\r\nexport * from \"../.internal/plugins/forceDirected/ForceDirectedTree\";\r\nexport * from \"../.internal/plugins/forceDirected/ForceDirectedNode\";\r\nexport * from \"../.internal/plugins/forceDirected/ForceDirectedSeries\";\r\n//# sourceMappingURL=forceDirected.js.map","var noop = {value: () => {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _) || /[\\s.]/.test(t)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","export {default as dispatch} from \"./dispatch.js\";\n","export default function(x, y) {\n  var nodes, strength = 1;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = (sx / n - x) * strength, sy = (sy / n - y) * strength, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  return force;\n}\n","import {quadtree} from \"d3-quadtree\";\nimport constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nexport default function(radius) {\n  var nodes,\n      radii,\n      random,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(random), l += x * x;\n            if (y === 0) y = jiggle(random), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  return force;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export {default as forceCenter} from \"./center.js\";\nexport {default as forceCollide} from \"./collide.js\";\nexport {default as forceLink} from \"./link.js\";\nexport {default as forceManyBody} from \"./manyBody.js\";\nexport {default as forceRadial} from \"./radial.js\";\nexport {default as forceSimulation} from \"./simulation.js\";\nexport {default as forceX} from \"./x.js\";\nexport {default as forceY} from \"./y.js\";\n","export default function(random) {\n  return (random() - 0.5) * 1e-6;\n}\n","// https://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use\nconst a = 1664525;\nconst c = 1013904223;\nconst m = 4294967296; // 2^32\n\nexport default function() {\n  let s = 1;\n  return () => (s = (a * s + c) % m) / m;\n}\n","import constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"node not found: \" + nodeId);\n  return node;\n}\n\nexport default function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      random,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle(random);\n        y = target.y + target.vy - source.y - source.vy || jiggle(random);\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = new Map(nodes.map((d, i) => [id(d, i, nodes), d])),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n}\n","import {quadtree} from \"d3-quadtree\";\nimport constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\nimport {x, y} from \"./simulation.js\";\n\nexport default function() {\n  var nodes,\n      node,\n      random,\n      alpha,\n      strength = constant(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x, y).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, weight = 0, x, y, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n      quad.x = x / weight;\n      quad.y = y / weight;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(random), l += x * x;\n        if (y === 0) y = jiggle(random), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(random), l += x * x;\n      if (y === 0) y = jiggle(random), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x * w;\n      node.vy += y * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n}\n","import constant from \"./constant.js\";\n\nexport default function(radius, x, y) {\n  var nodes,\n      strength = constant(0.1),\n      strengths,\n      radiuses;\n\n  if (typeof radius !== \"function\") radius = constant(+radius);\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length; i < n; ++i) {\n      var node = nodes[i],\n          dx = node.x - x || 1e-6,\n          dy = node.y - y || 1e-6,\n          r = Math.sqrt(dx * dx + dy * dy),\n          k = (radiuses[i] - r) * strengths[i] * alpha / r;\n      node.vx += dx * k;\n      node.vy += dy * k;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    radiuses = new Array(n);\n    for (i = 0; i < n; ++i) {\n      radiuses[i] = +radius(nodes[i], i, nodes);\n      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _, initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer} from \"d3-timer\";\nimport lcg from \"./lcg.js\";\n\nexport function x(d) {\n  return d.x;\n}\n\nexport function y(d) {\n  return d.y;\n}\n\nvar initialRadius = 10,\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nexport default function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = new Map(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\"),\n      random = lcg();\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick(iterations) {\n    var i, n = nodes.length, node;\n\n    if (iterations === undefined) iterations = 1;\n\n    for (var k = 0; k < iterations; ++k) {\n      alpha += (alphaTarget - alpha) * alphaDecay;\n\n      forces.forEach(function(force) {\n        force(alpha);\n      });\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        if (node.fx == null) node.x += node.vx *= velocityDecay;\n        else node.x = node.fx, node.vx = 0;\n        if (node.fy == null) node.y += node.vy *= velocityDecay;\n        else node.y = node.fy, node.vy = 0;\n      }\n    }\n\n    return simulation;\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (node.fx != null) node.x = node.fx;\n      if (node.fy != null) node.y = node.fy;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(0.5 + i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes, random);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.forEach(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    randomSource: function(_) {\n      return arguments.length ? (random = _, forces.forEach(initializeForce), simulation) : random;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.delete(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}\n","import constant from \"./constant.js\";\n\nexport default function(x) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : x;\n  };\n\n  return force;\n}\n","import constant from \"./constant.js\";\n\nexport default function(y) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : y;\n  };\n\n  return force;\n}\n","export default function(d) {\n  const x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nexport function addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, abort.\n  if (x0 > x1 || y0 > y1) return this;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n","export default function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else {\n    var z = x1 - x0 || 1,\n        node = this._root,\n        parent,\n        i;\n\n    while (x0 > x || x >= x1 || y0 > y || y >= y1) {\n      i = (y < y0) << 1 | (x < x0);\n      parent = new Array(4), parent[i] = node, node = parent, z *= 2;\n      switch (i) {\n        case 0: x1 = x0 + z, y1 = y0 + z; break;\n        case 1: x0 = x1 - z, y1 = y0 + z; break;\n        case 2: x1 = x0 + z, y0 = y1 - z; break;\n        case 3: x0 = x1 - z, y0 = y1 - z; break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}\n","export default function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n}\n","export default function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}\n","import Quad from \"./quad.js\";\n\nexport default function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n}\n","export {default as quadtree} from \"./quadtree.js\";\n","export default function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}\n","import tree_add, {addAll as tree_addAll} from \"./add.js\";\nimport tree_cover from \"./cover.js\";\nimport tree_data from \"./data.js\";\nimport tree_extent from \"./extent.js\";\nimport tree_find from \"./find.js\";\nimport tree_remove, {removeAll as tree_removeAll} from \"./remove.js\";\nimport tree_root from \"./root.js\";\nimport tree_size from \"./size.js\";\nimport tree_visit from \"./visit.js\";\nimport tree_visitAfter from \"./visitAfter.js\";\nimport tree_x, {defaultX} from \"./x.js\";\nimport tree_y, {defaultY} from \"./y.js\";\n\nexport default function quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = tree_addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = tree_removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n","export default function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n}\n\nexport function removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n","export default function() {\n  return this._root;\n}\n","export default function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n}\n","import Quad from \"./quad.js\";\n\nexport default function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n}\n","import Quad from \"./quad.js\";\n\nexport default function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n}\n","export function defaultX(d) {\n  return d[0];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}\n","export function defaultY(d) {\n  return d[1];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}\n","export {\n  now,\n  timer,\n  timerFlush\n} from \"./timer.js\";\n\nexport {\n  default as timeout\n} from \"./timeout.js\";\n\nexport {\n  default as interval\n} from \"./interval.js\";\n","import {Timer, now} from \"./timer.js\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  t._restart = t.restart;\n  t.restart = function(callback, delay, time) {\n    delay = +delay, time = time == null ? now() : +time;\n    t._restart(function tick(elapsed) {\n      elapsed += total;\n      t._restart(tick, total += delay, time);\n      callback(elapsed);\n    }, delay, time);\n  }\n  t.restart(callback, delay, time);\n  return t;\n}\n","import {Timer} from \"./timer.js\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(elapsed => {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ProjectsChartComponent } from './projects-chart.component';\n\nconst routes: Routes = [{ path: '', component: ProjectsChartComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ProjectsChartRoutingModule { }\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ProjectTypeService } from 'src/app/_Services/project-type.service';\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\nimport * as am4core from '@amcharts/amcharts4/core';\r\nimport * as am4charts from '@amcharts/amcharts4/charts';\r\nimport * as am4plugins_forceDirected from \"@amcharts/amcharts4/plugins/forceDirected\";\r\n//import { LoadingBarService } from '@ngx-loading-bar/core';\r\nimport { ColumnChartDTO } from 'src/app/_Models/column-chart';\r\n//import { stringToKeyValue } from '@angular/flex-layout/extended/typings/style/style-transforms';\r\n@Component({\r\n  selector: 'app-projects-chart',\r\n  templateUrl: './projects-chart.component.html',\r\n  styleUrls: ['./projects-chart.component.css']\r\n})\r\nexport class ProjectsChartComponent implements OnInit {\r\n\r\n  constructor(private service: ProjectTypeService,\r\n    //private loadingBar: LoadingBarService,\r\n  ) { }\r\n  //LoadingBar_state = this.loadingBar.useRef('http');\r\n  //private loadingBar: LoadingBarService\r\n\r\n  @Input() child_ProjectList: any;\r\n\r\n  Current_user_ID: string;\r\n  _ProjectDataList: any;\r\n  totalProjs: number;\r\n  EmpCountInFilter = [];\r\n\r\n  //loadingBar_state = this.loadingBar.useRef('http');\r\n  ngOnInit(): void {\r\n    //this.loadingBar_state.start();\r\n    this.Current_user_ID = localStorage.getItem('EmpNo');\r\n  }\r\n  ngAfterViewInit() {\r\n    this.LoadBarChart();\r\n    this.LoadBarChart2();\r\n    this.DivergentChart();\r\n    this.NetworkChart();\r\n    this.height3DPieChart();\r\n    // this.LoadingBar_state.stop();\r\n  }\r\n\r\n\r\n  ColumnchartData = [];\r\n  LoadBarChart() {\r\n    // alert('ok');\r\n    this.service.ColumnChartData(this.Current_user_ID).subscribe(\r\n      (data) => {\r\n        this.ColumnchartData = data as ColumnChartDTO[];\r\n        if (this.ColumnchartData) {\r\n          //this.loadingBar_state.stop();\r\n        }\r\n        //console.log(\"ColumnchartData\", this.ColumnchartData);\r\n        let chart1 = am4core.create(\"chartdiv\", am4charts.XYChart3D);\r\n        chart1.data = this.ColumnchartData;\r\n       \r\n\r\n        // Create axes\r\n        let categoryAxis = chart1.xAxes.push(new am4charts.CategoryAxis());\r\n        categoryAxis.dataFields.category = \"ProjectType\";\r\n        categoryAxis.renderer.grid.template.location = 0;\r\n        categoryAxis.renderer.minGridDistance = 30;\r\n\r\n        let valueAxis = chart1.yAxes.push(new am4charts.ValueAxis());\r\n        //valueAxis.adjustLabelPrecision = false;\r\n        // valueAxis.numberFormatter.numberFormat = \"#1\"; \r\n        valueAxis.title.text = \"[bold]Projects[/]\";\r\n        valueAxis.renderer.minGridDistance = 30;\r\n        valueAxis.renderer.labels.template.adapter.add(\"text\", function (text) {\r\n          return text;\r\n        });\r\n        //Completed Status\r\n        let series3 = chart1.series.push(new am4charts.ColumnSeries3D());\r\n        series3.columns.template.propertyFields.fill = \"#20c997\";\r\n        series3.dataFields.valueY = \"Completed_Count\";\r\n        series3.dataFields.categoryX = \"ProjectType\";\r\n        series3.name = \"Completed\";\r\n        series3.stroke = am4core.color(\"#20c997\");\r\n        series3.fill = am4core.color(\"#20c997\");\r\n        series3.columns.template.width = am4core.percent(75);\r\n        series3.clustered = false;\r\n        series3.columns.template.tooltipText = \"Completed : [bold]{Completed_Count}[/]\";\r\n        series3.columns.template.fillOpacity = 0.9;\r\n        //Total Projects\r\n        let series4 = chart1.series.push(new am4charts.ColumnSeries3D());\r\n        series4.dataFields.valueY = \"TypeCount\";\r\n        series4.dataFields.categoryX = \"ProjectType\";\r\n        series4.stroke = am4core.color(\"#ffb822\");//#ffb822\r\n        series4.fill = am4core.color(\"#ffb822\"); //34495E\r\n        series4.columns.template.tooltipText = \"Total {ProjectType}  : [bold]{TypeCount}[/]\";\r\n        series4.name = \"Total Types\";\r\n        series4.columns.template.width = am4core.percent(75);\r\n        series4.clustered = false;\r\n\r\n        //legend start\r\n        chart1.legend = new am4charts.Legend();\r\n        chart1.legend.position = \"bottom\";\r\n        chart1.legend.reverseOrder = true;\r\n        //legend Ends\r\n      });\r\n  }\r\n  LoadBarChart2() {\r\n    // alert('ok');\r\n    this.service.ColumnChartData(this.Current_user_ID).subscribe(\r\n      (data) => {\r\n        this.ColumnchartData = data as ColumnChartDTO[];\r\n       // console.log(\"ColumnchartData\", this.ColumnchartData);\r\n        let chart1 = am4core.create(\"chartdiv5\", am4charts.XYChart3D);\r\n        chart1.data = this.ColumnchartData;\r\n        // Create axes\r\n        let categoryAxis = chart1.xAxes.push(new am4charts.CategoryAxis());\r\n        categoryAxis.dataFields.category = \"TotalProject\";\r\n        categoryAxis.renderer.grid.template.location = 0;\r\n        categoryAxis.renderer.minGridDistance = 30;\r\n        let valueAxis = chart1.yAxes.push(new am4charts.ValueAxis());\r\n        //valueAxis.adjustLabelPrecision = false;\r\n        // valueAxis.numberFormatter.numberFormat = \"#1\"; \r\n        valueAxis.title.text = \"[bold]Total Projects[/]\";\r\n        valueAxis.renderer.minGridDistance = 30;\r\n        valueAxis.renderer.labels.template.adapter.add(\"text\", function (text) {\r\n          return text;\r\n        });\r\n        // Create series One\r\n        let series1 = chart1.series.push(new am4charts.ColumnSeries3D());\r\n        //series1.columns.template.propertyFields.fill = \"#20c997\";\r\n        series1.dataFields.valueY = \"TotalComplete_Count\";\r\n        series1.dataFields.categoryX = \"TotalProject\";\r\n        series1.name = \"Total Completed\";\r\n        series1.stroke = am4core.color(\"#20c997\");\r\n        series1.fill = am4core.color(\"#20c997\");\r\n        series1.columns.template.width = am4core.percent(20);\r\n        series1.clustered = false;\r\n        series1.columns.template.tooltipText = \"Total Completed : [bold]{TotalComplete_Count}[/]\";\r\n        series1.columns.template.fillOpacity = 0.9;\r\n        //Series 2\r\n        let series2 = chart1.series.push(new am4charts.ColumnSeries3D());\r\n        series2.columns.template.propertyFields.fill = \"#F7DC6F\";\r\n        series2.dataFields.valueY = \"TotalProjects_Count\";\r\n        series2.dataFields.categoryX = \"TotalProject\";\r\n        series2.name = \"Total Projects\";\r\n        series2.stroke = am4core.color(\"#2980B9\");\r\n        series2.fill = am4core.color(\"#2980B9\");//E59866\r\n        series2.columns.template.width = am4core.percent(20);\r\n        series2.clustered = false;\r\n        series2.columns.template.tooltipText = \"Total Projects : [bold]{TotalProjects_Count}[/]\";\r\n        series2.columns.template.fillOpacity = 0.9;\r\n        //legend start\r\n        chart1.legend = new am4charts.Legend();\r\n        chart1.legend.position = \"bottom\";\r\n        chart1.legend.reverseOrder = true;\r\n        //legend Ends\r\n        // series2.columns.template.tooltipText = \"GDP grow in {category} (2017): [bold]{valueY}[/]\";\r\n      });\r\n  }\r\n\r\n  NetworkChart() {\r\n    am4core.useTheme(am4themes_animated);\r\n    let chart2 = am4core.create(\"chartdiv2\", am4plugins_forceDirected.ForceDirectedTree);\r\n    let networkSeries = chart2.series.push(new am4plugins_forceDirected.ForceDirectedSeries())\r\n    networkSeries.dataFields.linkWith = \"linkWith\";\r\n    networkSeries.dataFields.name = \"name\";\r\n    networkSeries.dataFields.id = \"name\";\r\n    networkSeries.dataFields.value = \"value\";\r\n    networkSeries.dataFields.children = \"children\";\r\n\r\n    networkSeries.nodes.template.label.text = \"{name}\"\r\n    networkSeries.fontSize = 8;\r\n    networkSeries.linkWithStrength = 0;\r\n\r\n    let nodeTemplate = networkSeries.nodes.template;\r\n    nodeTemplate.tooltipText = \"{name}\";\r\n    nodeTemplate.fillOpacity = 1;\r\n    nodeTemplate.label.hideOversized = true;\r\n    nodeTemplate.label.truncate = true;\r\n\r\n    let linkTemplate = networkSeries.links.template;\r\n    linkTemplate.strokeWidth = 1;\r\n    let linkHoverState = linkTemplate.states.create(\"hover\");\r\n    linkHoverState.properties.strokeOpacity = 1;\r\n    linkHoverState.properties.strokeWidth = 2;\r\n\r\n    nodeTemplate.events.on(\"over\", function (event) {\r\n      let dataItem = event.target.dataItem;\r\n      dataItem.childLinks.each(function (link) {\r\n        link.isHover = true;\r\n      })\r\n    })\r\n    nodeTemplate.events.on(\"out\", function (event) {\r\n      let dataItem = event.target.dataItem;\r\n      dataItem.childLinks.each(function (link) {\r\n        link.isHover = false;\r\n      })\r\n    });\r\n    networkSeries.data = [\r\n      {\r\n        \"name\": \"Shaik Mohammed Rafi\",\r\n        \"value\": 40,\r\n        \"linkWith\": [\r\n          \"Syed Syeduddin Hussain\"\r\n        ],\r\n        \"children\": [\r\n          {\r\n            \"name\": \"David\",\r\n            \"value\": 14\r\n          },\r\n          {\r\n            \"name\": \"Roger\",\r\n            \"value\": 1\r\n          },\r\n          {\r\n            \"name\": \"Duncan\",\r\n            \"value\": 1\r\n          },\r\n          {\r\n            \"name\": \"Rob Dohnen\",\r\n            \"value\": 2\r\n          },\r\n          {\r\n            \"name\": \"Ryan\",\r\n            \"value\": 5\r\n          },\r\n          {\r\n            \"name\": \"Malcom\",\r\n            \"value\": 1\r\n          },\r\n          {\r\n            \"name\": \"Robert\",\r\n            \"value\": 1\r\n          },\r\n          {\r\n            \"name\": \"Sergei\",\r\n            \"value\": 1\r\n          },\r\n          {\r\n            \"name\": \"Vince\",\r\n            \"value\": 2\r\n          },\r\n          {\r\n            \"name\": \"Jason\",\r\n            \"value\": 1\r\n          },\r\n          {\r\n            \"name\": \"Rick\",\r\n            \"value\": 2\r\n          },\r\n          {\r\n            \"name\": \"Gary\",\r\n            \"value\": 7\r\n          },\r\n          {\r\n            \"name\": \"Jake\",\r\n            \"value\": 2\r\n          },\r\n          {\r\n            \"name\": \"Eric\",\r\n            \"value\": 3\r\n          },\r\n          {\r\n            \"name\": \"Mike\",\r\n            \"value\": 18\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"name\": \"Syed Syeduddin Hussain\",\r\n        \"value\": 204,\r\n        \"linkWith\": [\r\n          \"Shaik Rafi\",\r\n          \"Ravi Sir\",\r\n          \"Hussain Sir\",\r\n          \"Shujat Sir\",\r\n          \"Shahbaz \"\r\n        ],\r\n        \"children\": [\r\n          {\r\n            \"name\": \"Projects {value}\",\r\n            \"value\": 20\r\n          },\r\n          {\r\n            \"name\": \"Mr Geller\",\r\n            \"value\": 8\r\n          },\r\n          {\r\n            \"name\": \"Mrs Geller\",\r\n            \"value\": 14\r\n          },\r\n          {\r\n            \"name\": \"Aunt Lilian\",\r\n            \"value\": 2\r\n          },\r\n          {\r\n            \"name\": \"Nana\",\r\n            \"value\": 1\r\n          },\r\n          {\r\n            \"name\": \"Young Ethan\",\r\n            \"value\": 5\r\n          },\r\n          {\r\n            \"name\": \"Ben\",\r\n            \"value\": 9\r\n          },\r\n          {\r\n            \"name\": \"Fun Bobby\",\r\n            \"value\": 3\r\n          },\r\n          {\r\n            \"name\": \"Richard\",\r\n            \"value\": 16\r\n          },\r\n          {\r\n            \"name\": \"Mrs Green\",\r\n            \"value\": 4\r\n          },\r\n          {\r\n            \"name\": \"Paolo2\",\r\n            \"value\": 1\r\n          },\r\n          {\r\n            \"name\": \"Pete\",\r\n            \"value\": 10\r\n          },\r\n          {\r\n            \"name\": \"Chip\",\r\n            \"value\": 1\r\n          },\r\n          {\r\n            \"name\": \"Timothy (Burke)\",\r\n            \"value\": 1\r\n          },\r\n          {\r\n            \"name\": \"Emily\",\r\n            \"value\": 17\r\n          },\r\n          {\r\n            \"name\": \"Dr. Roger\",\r\n            \"value\": 3\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"name\": \"Vali Noor\",\r\n        \"value\": 216,\r\n        \"linkWith\": [\r\n          'Syed Sir'\r\n        ],\r\n        \"children\": [\r\n          {\r\n            \"name\": \"Carol\",\r\n            \"value\": 10\r\n          },\r\n          {\r\n            \"name\": \"Celia\",\r\n            \"value\": 2\r\n          },\r\n          {\r\n            \"name\": \"Julie\",\r\n            \"value\": 6\r\n          },\r\n          {\r\n            \"name\": \"Chloe\",\r\n            \"value\": 1\r\n          },\r\n          {\r\n            \"name\": \"Bonnie\",\r\n            \"value\": 4\r\n          },\r\n          {\r\n            \"name\": \"Messy Girl (Cheryl)\",\r\n            \"value\": 5\r\n          },\r\n          {\r\n            \"name\": \"Jill\",\r\n            \"value\": 1\r\n          },\r\n          {\r\n            \"name\": \"Elizabeth\",\r\n            \"value\": 8\r\n          },\r\n          {\r\n            \"name\": \"Aunt Millie\",\r\n            \"value\": 2\r\n          },\r\n          {\r\n            \"name\": \"Mona\",\r\n            \"value\": 11\r\n          },\r\n          {\r\n            \"name\": \"Emma\",\r\n            \"value\": 7\r\n          },\r\n          {\r\n            \"name\": \"Charlie\",\r\n            \"value\": 13\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"name\": \"Hussai Sir\",\r\n        \"value\": 167,\r\n        \"linkWith\": [\r\n          \"Shujat Sir\",\r\n          \"Rafi Sir\"\r\n        ],\r\n        \"children\": [\r\n          {\r\n            \"name\": \"Aurora\",\r\n            \"value\": 2\r\n          },\r\n          {\r\n            \"name\": \"Jill Goodacre\",\r\n            \"value\": 1\r\n          },\r\n          {\r\n            \"name\": \"Janice\",\r\n            \"value\": 12\r\n          },\r\n          {\r\n            \"name\": \"Mrs Bing\",\r\n            \"value\": 6\r\n          },\r\n          {\r\n            \"name\": \"Nina\",\r\n            \"value\": 1\r\n          },\r\n          {\r\n            \"name\": \"Susie\",\r\n            \"value\": 5\r\n          },\r\n          {\r\n            \"name\": \"Mary Theresa\",\r\n            \"value\": 1\r\n          },\r\n          {\r\n            \"name\": \"Ginger\",\r\n            \"value\": 2\r\n          },\r\n          {\r\n            \"name\": \"Joanna\",\r\n            \"value\": 5\r\n          },\r\n          {\r\n            \"name\": \"Kathy\",\r\n            \"value\": 9\r\n          },\r\n          {\r\n            \"name\": \"Mr Bing\",\r\n            \"value\": 1\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"name\": \"Shujat Sir\",\r\n        \"value\": 158,\r\n        \"linkWith\": [\r\n          \"Hussain Sir\",\r\n          \"Syed Sir\"\r\n\r\n        ],\r\n        \"children\": [\r\n          {\r\n            \"name\": \"Paolo\",\r\n            \"value\": 5\r\n          },\r\n          {\r\n            \"name\": \"Barry\",\r\n            \"value\": 1\r\n          },\r\n          {\r\n            \"name\": \"Dr Green\",\r\n            \"value\": 3\r\n          },\r\n          {\r\n            \"name\": \"Mark3\",\r\n            \"value\": 1\r\n          },\r\n          {\r\n            \"name\": \"Josh\",\r\n            \"value\": 2\r\n          },\r\n          {\r\n            \"name\": \"Gunther\",\r\n            \"value\": 2\r\n          },\r\n          {\r\n            \"name\": \"Joshua\",\r\n            \"value\": 3\r\n          },\r\n          {\r\n            \"name\": \"Danny\",\r\n            \"value\": 1\r\n          },\r\n          {\r\n            \"name\": \"Mr. Zelner\",\r\n            \"value\": 1\r\n          },\r\n          {\r\n            \"name\": \"Paul Stevens\",\r\n            \"value\": 3\r\n          },\r\n          {\r\n            \"name\": \"Tag\",\r\n            \"value\": 4\r\n          },\r\n          {\r\n            \"name\": \"Melissa\",\r\n            \"value\": 1\r\n          },\r\n          {\r\n            \"name\": \"Gavin\",\r\n            \"value\": 2\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"name\": \"Sharfu\",\r\n        \"value\": 88,\r\n        \"linkWith\": [\r\n          \"Syed Sir\",\r\n          \"Husain Sir\"\r\n\r\n        ],\r\n        \"children\": [\r\n          {\r\n            \"name\": \"Lorraine\",\r\n            \"value\": 2\r\n          },\r\n          {\r\n            \"name\": \"Melanie\",\r\n            \"value\": 2\r\n          },\r\n          {\r\n            \"name\": \"Erica\",\r\n            \"value\": 2\r\n          },\r\n          {\r\n            \"name\": \"Kate\",\r\n            \"value\": 4\r\n          },\r\n          {\r\n            \"name\": \"Lauren\",\r\n            \"value\": 2\r\n          },\r\n          {\r\n            \"name\": \"Estelle\",\r\n            \"value\": 1\r\n          },\r\n          {\r\n            \"name\": \"Katie\",\r\n            \"value\": 2\r\n          },\r\n          {\r\n            \"name\": \"Janine\",\r\n            \"value\": 9\r\n          },\r\n          {\r\n            \"name\": \"Erin\",\r\n            \"value\": 1\r\n          },\r\n          {\r\n            \"name\": \"Cecilia\",\r\n            \"value\": 3\r\n          }\r\n        ]\r\n      }\r\n    ];\r\n  }\r\n  DivergentChart() {\r\n    let chart3 = am4core.create(\"chartdiv3\", am4charts.XYChart);\r\n    // Title\r\n    let title = chart3.titles.push(new am4core.Label());\r\n    title.text = \"\";\r\n    title.fontSize = 25;\r\n    title.marginBottom = 15;\r\n    // Add data\r\n    chart3.data = [{\r\n      \"category\": \"Syed Syeduddin Hussain\",\r\n      \"negative1\": -0.1,\r\n      \"negative2\": -0.9,\r\n      \"positive1\": 5,\r\n      \"positive2\": 94\r\n    }, {\r\n      \"category\": \"Shaik Mohammed Rafi\",\r\n      \"negative1\": -2,\r\n      \"negative2\": -4,\r\n      \"positive1\": 19,\r\n      \"positive2\": 75\r\n    }, {\r\n      \"category\": \"Hussain Sir\",\r\n      \"negative1\": -2,\r\n      \"negative2\": -10,\r\n      \"positive1\": 46,\r\n      \"positive2\": 42\r\n    }, {\r\n      \"category\": \"Vali Noor\",\r\n      \"negative1\": -2,\r\n      \"negative2\": -13,\r\n      \"positive1\": 33,\r\n      \"positive2\": 52\r\n    }, {\r\n      \"category\": \"Sharfuddin\",\r\n      \"negative1\": -6,\r\n      \"negative2\": -19,\r\n      \"positive1\": 34,\r\n      \"positive2\": 41\r\n    }, {\r\n      \"category\": \"Shujat Sir\",\r\n      \"negative1\": -3,\r\n      \"negative2\": -23,\r\n      \"positive1\": 49,\r\n      \"positive2\": 25\r\n    }, {\r\n      \"category\": \"Shahbaz\",\r\n      \"negative1\": -5,\r\n      \"negative2\": -28,\r\n      \"positive1\": 49,\r\n      \"positive2\": 18\r\n    }, {\r\n      \"category\": \"Nawaz Bahi\",\r\n      \"negative1\": -14,\r\n      \"negative2\": -34,\r\n      \"positive1\": 37,\r\n      \"positive2\": 16\r\n    },];\r\n\r\n    // Create axes\r\n    let categoryAxis = chart3.yAxes.push(new am4charts.CategoryAxis());\r\n    categoryAxis.dataFields.category = \"category\";\r\n    categoryAxis.renderer.grid.template.location = 0;\r\n    categoryAxis.renderer.inversed = true;\r\n    categoryAxis.renderer.minGridDistance = 20;\r\n    categoryAxis.renderer.axisFills.template.disabled = false;\r\n    categoryAxis.renderer.axisFills.template.fillOpacity = 0.05;\r\n\r\n    let valueAxis = chart3.xAxes.push(new am4charts.ValueAxis());\r\n    valueAxis.min = -100;\r\n    valueAxis.max = 100;\r\n    valueAxis.renderer.minGridDistance = 50;\r\n    valueAxis.renderer.ticks.template.length = 5;\r\n    valueAxis.renderer.ticks.template.disabled = false;\r\n    valueAxis.renderer.ticks.template.strokeOpacity = 0.4;\r\n    valueAxis.renderer.labels.template.adapter.add(\"text\", function (text) {\r\n      return text + \"%\";\r\n    })\r\n\r\n    // Legend\r\n    chart3.legend = new am4charts.Legend();\r\n    chart3.legend.position = \"right\";\r\n    // Use only absolute numbers\r\n    chart3.numberFormatter.numberFormat = \"#.#s\";\r\n\r\n    // Create series\r\n    function createSeries(field, name, color) {\r\n      let series = chart3.series.push(new am4charts.ColumnSeries());\r\n      series.dataFields.valueX = field;\r\n      series.dataFields.categoryY = \"category\";\r\n      series.stacked = true;\r\n      series.name = name;\r\n      series.stroke = color;\r\n      series.fill = color;\r\n      let label = series.bullets.push(new am4charts.LabelBullet);\r\n      label.label.text = \"{valueX}%\";\r\n      label.label.fill = am4core.color(\"#fff\");\r\n      label.label.strokeWidth = 0;\r\n      label.label.truncate = false;\r\n      label.label.hideOversized = true;\r\n      label.locationX = 0.5;\r\n      return series;\r\n    }\r\n\r\n    let interfaceColors = new am4core.InterfaceColorSet();\r\n    let positiveColor = interfaceColors.getFor(\"positive\");\r\n    let negativeColor = interfaceColors.getFor(\"negative\");\r\n\r\n    createSeries(\"negative2\", \"Hold\", negativeColor.lighten(0.5));\r\n    createSeries(\"negative1\", \"Delay\", negativeColor);\r\n    createSeries(\"positive1\", \"InProcess\", positiveColor.lighten(0.5));\r\n    createSeries(\"positive2\", \"Completed\", positiveColor);\r\n\r\n    chart3.legend.events.on(\"layoutvalidated\", function (event) {\r\n      // chart.legend.itemContainers.each((container) => {\r\n      //   // if (container.dataItem.dataContext.name == \"Never\") {\r\n      //   //   container.toBack();\r\n      //   // }\r\n      // })\r\n    })\r\n  }\r\n  height3DPieChart() {\r\n    let chart4 = am4core.create(\"chartdiv4\", am4charts.PieChart3D);\r\n    chart4.hiddenState.properties.opacity = 0; // this creates initial fade-in\r\n\r\n    chart4.data = [\r\n      {\r\n        country: \"Total Projects\",\r\n        litres: 501.9\r\n      },\r\n      {\r\n        country: \"Under Approval\",\r\n        litres: 301.9\r\n      },\r\n      {\r\n        country: \"Hold\",\r\n        litres: 201.1\r\n      },\r\n      {\r\n        country: \"Delay\",\r\n        litres: 165.8\r\n      },\r\n      {\r\n        country: \"InProcess\",\r\n        litres: 139.9\r\n      },\r\n      {\r\n        country: \"Completed\",\r\n        litres: 128.3\r\n      }\r\n    ];\r\n\r\n    chart4.innerRadius = am4core.percent(40);\r\n    chart4.depth = 120;\r\n\r\n    chart4.legend = new am4charts.Legend();\r\n\r\n    let series = chart4.series.push(new am4charts.PieSeries3D());\r\n    series.dataFields.value = \"litres\";\r\n    series.dataFields.depthValue = \"litres\";\r\n    series.dataFields.category = \"country\";\r\n    series.slices.template.cornerRadius = 5;\r\n    series.colors.step = 3;\r\n  }\r\n}\r\n","<div class=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n    <div class=\"row\">\n        <div class=\"col-lg-12\">\n            <!--begin:: Widgets/Authors Profit-->\n            <div class=\"kt-portlet kt-portlet--bordered-semi kt-portlet--height-fluid\">\n                <div class=\"kt-portlet__head\">\n                    <div class=\"kt-portlet__head-label\">\n                        <h3 class=\"kt-portlet__head-title\">\n                            Performance Dashboard\n                        </h3>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <!-- Calendar -->\n        <div class=\"col-lg-6\">\n            <!--begin::Portlet-->\n            <div class=\"kt-portlet\" id=\"kt_portlet\">\n                <div class=\"kt-portlet__head\">\n                    <div class=\"kt-portlet__head-label\">\n                        <span class=\"kt-portlet__head-icon\">\n                            <i class=\"flaticon-map-location\"></i>\n                        </span>\n                        <h3 class=\"kt-portlet__head-title\">\n                            Total Projects Vs Total Completed\n                        </h3>\n                    </div>\n                </div>\n                <div class=\"kt-portlet__body\">\n                    <div id=\"chartdiv5\" style=\"width: 100%; height: 500px\">\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-lg-6\">\n            <div class=\"kt-portlet\">\n                <div class=\"kt-portlet__head\">\n                    <div class=\"kt-portlet__head-label\">\n                        <span class=\"kt-portlet__head-icon\">\n                            <i class=\"flaticon-map-location\"></i>\n                        </span>\n                        <h3 class=\"kt-portlet__head-title\">\n                            Project Type vs Completed Projects\n                        </h3>\n                    </div>\n                </div>\n                <div class=\"kt-portlet__body\">\n                    <div id=\"chartdiv\" style=\"width: 100%; height: 500px\">\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-lg-12\">\n            <div class=\"kt-portlet\">\n                <div class=\"kt-portlet__head\">\n                    <div class=\"kt-portlet__head-label\">\n                        <span class=\"kt-portlet__head-icon\">\n                            <i class=\"flaticon-map-location\"></i>\n                        </span>\n                        <h3 class=\"kt-portlet__head-title\">\n                            Status Performance\n                        </h3>\n                    </div>\n                </div>\n                <div class=\"kt-portlet__body\">\n                    <div id=\"chartdiv4\" style=\"width: 100%; height: 500px\"></div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"col-lg-12\">\n            <div class=\"kt-portlet\">\n                <div class=\"kt-portlet__head\">\n                    <div class=\"kt-portlet__head-label\">\n                        <span class=\"kt-portlet__head-icon\">\n                            <i class=\"flaticon-map-location\"></i>\n                        </span>\n                        <h3 class=\"kt-portlet__head-title\">\n                            Team Performance\n                        </h3>\n                    </div>\n                </div>\n                <div class=\"kt-portlet__body\">\n                    <div id=\"chartdiv3\" style=\"width: 100%; height: 500px\"></div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"col-lg-12\">\n            <div class=\"kt-portlet\">\n                <div class=\"kt-portlet__head\">\n                    <div class=\"kt-portlet__head-label\">\n                        <span class=\"kt-portlet__head-icon\">\n                            <i class=\"flaticon-map-location\"></i>\n                        </span>\n                        <h3 class=\"kt-portlet__head-title\">\n                         Portfolio Graph vs Team members\n                        </h3>\n                    </div>\n                </div>\n                <div class=\"kt-portlet__body\">\n                    <div id=\"chartdiv2\" style=\"width: 100%; height: 500px\"></div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ProjectsChartRoutingModule } from './projects-chart-routing.module';\nimport { ProjectsChartComponent } from './projects-chart.component';\n\n\n@NgModule({\n  declarations: [ProjectsChartComponent],\n  imports: [\n    CommonModule,\n    ProjectsChartRoutingModule\n  ]\n})\nexport class ProjectsChartModule { }\n"],"sourceRoot":"webpack:///"}